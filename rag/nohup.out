2024-11-30 23:52:17 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 30 Nov 2024 18:22:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-3-small'), (b'openai-organization', b'user-cxiuqqcvwgfrvjlgasvrepd2'), (b'openai-processing-ms', b'69'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999998'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_aa5a7e7c7fbd534bdd836afc8639313c'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=uxce46q1pbX.uZdq6T.Mbt83Pzao1vqh1n7kHy4cSAE-1732990937-1.0.1.1-vy_ML6CMSZH9q5eQbpX8FuPY9.u9mL8.yysVbXmeYWngEBfmUxxSG5eUe.8bdno5CmchrYX7qUCL1DmYnDJb_w; path=/; expires=Sat, 30-Nov-24 18:52:17 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=3lGifCnUQy91is.Ag2UgObbnu0OM0laa46YDT7GiVPk-1732990937161-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8eacdca5ccc93390-DEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2024-11-30 23:52:17 - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2024-11-30 23:52:17 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-30 23:52:17 - DEBUG - receive_response_body.complete
2024-11-30 23:52:17 - DEBUG - response_closed.started
2024-11-30 23:52:17 - DEBUG - response_closed.complete
2024-11-30 23:52:17 - DEBUG - HTTP Request: POST https://api.openai.com/v1/embeddings "200 OK"
2024-11-30 23:52:17 - DEBUG - Embedder has dimension 1536
2024-11-30 23:52:17 - DEBUG - Using selector: EpollSelector
/DATA/anurag_2101ai04/miniconda3/envs/langchain/lib/python3.10/site-packages/beartype/_util/hint/pep/utilpeptest.py:311: BeartypeDecorHintPep585DeprecationWarning: PEP 484 type hint typing.Sequence[str] deprecated by PEP 585. This hint is scheduled for removal in the first Python version released after October 5th, 2025. To resolve this, import this hint from "beartype.typing" rather than "typing". For further commentary and alternatives, see also:
    https://beartype.readthedocs.io/en/latest/api_roar/#pep-585-deprecations
  warn(
2024-11-30 23:52:17 - DEBUG - Using selector: EpollSelector
2024-11-30 23:52:17 - INFO - Preparing Pathway computation
2024-11-30 23:52:17 - INFO - Merge the current state with block: StoredMetadata { storage_types: {}, last_advanced_timestamp: At(Timestamp(1732990523228)) }
2024-11-30 23:52:17 - INFO - Removing obsolete metadata block: 1732989036164-0-0. Actual version: 1732990518726
2024-11-30 23:52:17 - INFO - Removing obsolete metadata block: 1732989036164-0-1. Actual version: 1732990518726
2024-11-30 23:52:17 - INFO - Merge the current state with block: StoredMetadata { storage_types: {}, last_advanced_timestamp: At(Timestamp(1732990523212)) }
2024-11-30 23:52:17 - DEBUG - Telemetry disabled
2024-11-30 23:52:17 - INFO - file_cache is only supported with oauth2client<4.0.0
2024-11-30 23:52:17 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-11-30 23:52:17 - DEBUG - Making request: POST https://oauth2.googleapis.com/token
2024-11-30 23:52:17 - INFO - PythonReader-0: 0 entries (1 minibatch(es)) have been sent to the engine
2024-11-30 23:52:17 - INFO - PythonReader-1: 0 entries (1 minibatch(es)) have been sent to the engine
2024-11-30 23:52:17 - INFO - PythonReader-2: 0 entries (1 minibatch(es)) have been sent to the engine
2024-11-30 23:52:17 - INFO - PythonReader-3: 0 entries (1 minibatch(es)) have been sent to the engine
2024-11-30 23:52:18 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-11-30 23:52:19 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1iZxH861lrPVI2Uk2yaovgDbHcm0xQrrk?alt=media
2024-11-30 23:52:23 - INFO - PythonReader-0: 1 entries (4 minibatch(es)) have been sent to the engine
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ec4dfca60>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 806, 13, 12937, 17075, 6, 58588, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 7181, 220, 806, 11, 902, 24400, 389, 12937, 17075, 6, 58588, 13, 1102, 17738, 264, 9320, 311, 25394, 25452, 14228, 13146, 11, 2737, 5708, 96771, 323, 3268, 315, 41777, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - close.started
2024-11-30 23:52:24 - DEBUG - close.failed exception=RuntimeError('Event loop is closed')
2024-11-30 23:52:24 - DEBUG - Encountered Exception
Traceback (most recent call last):
  File "/DATA/anurag_2101ai04/miniconda3/envs/langchain/lib/python3.10/site-packages/openai/_base_client.py", line 1571, in _request
    response = await self._client.send(
  File "/DATA/anurag_2101ai04/miniconda3/envs/langchain/lib/python3.10/site-packages/httpx/_client.py", line 1674, in send
    response = await self._send_handling_auth(
  File "/DATA/anurag_2101ai04/miniconda3/envs/langchain/lib/python3.10/site-packages/httpx/_client.py", line 1702, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/DATA/anurag_2101ai04/miniconda3/envs/langchain/lib/python3.10/site-packages/httpx/_client.py", line 1739, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/DATA/anurag_2101ai04/miniconda3/envs/langchain/lib/python3.10/site-packages/httpx/_client.py", line 1776, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/DATA/anurag_2101ai04/miniconda3/envs/langchain/lib/python3.10/site-packages/httpx/_transports/default.py", line 377, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/DATA/anurag_2101ai04/miniconda3/envs/langchain/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 216, in handle_async_request
    raise exc from None
  File "/DATA/anurag_2101ai04/miniconda3/envs/langchain/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 189, in handle_async_request
    await self._close_connections(closing)
  File "/DATA/anurag_2101ai04/miniconda3/envs/langchain/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 305, in _close_connections
    await connection.aclose()
  File "/DATA/anurag_2101ai04/miniconda3/envs/langchain/lib/python3.10/site-packages/httpcore/_async/connection.py", line 171, in aclose
    await self._connection.aclose()
  File "/DATA/anurag_2101ai04/miniconda3/envs/langchain/lib/python3.10/site-packages/httpcore/_async/http11.py", line 265, in aclose
    await self._network_stream.aclose()
  File "/DATA/anurag_2101ai04/miniconda3/envs/langchain/lib/python3.10/site-packages/httpcore/_backends/anyio.py", line 55, in aclose
    await self._stream.aclose()
  File "/DATA/anurag_2101ai04/miniconda3/envs/langchain/lib/python3.10/site-packages/anyio/streams/tls.py", line 201, in aclose
    await self.transport_stream.aclose()
  File "/DATA/anurag_2101ai04/miniconda3/envs/langchain/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 1287, in aclose
    self._transport.close()
  File "/DATA/anurag_2101ai04/miniconda3/envs/langchain/lib/python3.10/asyncio/selector_events.py", line 706, in close
    self._loop.call_soon(self._call_connection_lost, None)
  File "/DATA/anurag_2101ai04/miniconda3/envs/langchain/lib/python3.10/asyncio/base_events.py", line 753, in call_soon
    self._check_closed()
  File "/DATA/anurag_2101ai04/miniconda3/envs/langchain/lib/python3.10/asyncio/base_events.py", line 515, in _check_closed
    raise RuntimeError('Event loop is closed')
RuntimeError: Event loop is closed
2024-11-30 23:52:24 - DEBUG - 2 retries left
2024-11-30 23:52:24 - INFO - Retrying request to /embeddings in 0.482552 seconds
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ec6526950>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5764, 264, 5905, 311, 279, 6771, 315, 36962, 11, 23377, 430, 433, 374, 5552, 311, 279, 10873, 477, 6070, 315, 279, 8244, 2246, 13, 1102, 8779, 3932, 25539, 3230, 14491, 477, 2038, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d0a60>, 'json_data': {'input': [[18902, 79483, 25, 1952, 5587, 220, 508, 11, 220, 679, 24, 11, 279, 21283, 7376, 1202, 5597, 430, 3738, 76543, 19705, 304, 20038, 430, 5195, 1047, 449, 2467, 62109, 369, 7694, 8717, 45119, 291, 7665, 10937, 2383, 13, 578, 21283, 5597, 27070, 264, 7060, 315, 13281, 16, 13, 20, 7239, 1746, 16, 13, 22, 7239, 439, 315, 5587, 220, 508, 11, 220, 679, 24, 8, 323, 15910, 6299, 5552, 311, 2467, 62109, 369, 7694, 8717, 6, 20038, 11, 902, 584, 11798, 4972, 311, 279, 5597, 13, 1952, 5651, 220, 19, 11, 220, 679, 24, 11, 584, 53382, 279, 21283, 5597, 13, 1226, 15324, 264, 6900, 315, 400, 16, 13, 22, 7239, 369, 279, 7060, 304, 279, 1176, 8502, 315, 220, 679, 24, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 264, 3230, 3276, 85971, 7060, 27070, 555, 279, 7665, 9849, 320, 7650, 8, 389, 5195, 5552, 311, 1202, 2467, 62109, 369, 7694, 20038, 11, 79774, 279, 25845, 315, 279, 5597, 11, 279, 3392, 315, 279, 7060, 11, 323, 279, 2883, 753, 17876, 14638, 13, 1102, 17503, 2949, 264, 27927, 3857, 9002, 5897, 13146, 323, 3276, 85971, 26969, 17011, 555, 5195, 11, 39686, 279, 23331, 36752, 279, 2883, 374, 1234, 304, 4606, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d0af0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 701, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d0b80>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5042, 5415, 279, 23702, 519, 753, 836, 11, 330, 2149, 18992, 4953, 13, 1359, 50096, 279, 9764, 315, 279, 2883, 430, 374, 3917, 311, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d0c10>, 'json_data': {'input': [[18902, 79483, 25, 220, 12676, 11, 12815, 25441, 2014, 940, 1534, 73094, 25, 1115, 7216, 11105, 279, 2860, 58165, 323, 5708, 17075, 6, 25452, 369, 279, 1060, 220, 2366, 17, 11, 8405, 264, 5995, 12593, 2403, 279, 220, 2366, 18, 12678, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d0ca0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1544, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 2500, 2199, 1396, 477, 3857, 11381, 11, 19392, 264, 9320, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d0d30>, 'json_data': {'input': [[18902, 79483, 25, 36899, 65649, 304, 7757, 10648, 323, 87386, 53869, 11, 16940, 2626, 18845, 1778, 439, 8776, 11040, 3280, 2786, 11, 902, 527, 4461, 311, 5353, 65649, 304, 1057, 51534, 3135, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 9547, 430, 1436, 3063, 311, 65649, 304, 63897, 596, 51534, 3135, 13, 1102, 374, 961, 315, 279, 4741, 31348, 12518, 323, 5326, 9547, 11, 82003, 1268, 36899, 18845, 304, 7757, 10648, 323, 13172, 649, 10383, 6020, 5178, 11, 8104, 2391, 8776, 11040, 15956, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d0dc0>, 'json_data': {'input': [[18902, 79483, 25, 8940, 69950, 11216, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 2883, 596, 330, 12792, 69950, 11216, 1359, 902, 374, 459, 3062, 13189, 315, 1202, 6020, 8446, 323, 63342, 4780, 13, 1102, 15151, 279, 2883, 596, 5603, 311, 50812, 22613, 311, 41777, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d0e50>, 'json_data': {'input': [[18902, 79483, 25, 578, 1925, 6956, 315, 1057, 6763, 323, 8661, 18512, 527, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 45293, 279, 6956, 315, 6763, 323, 8661, 18512, 13, 1102, 7437, 279, 6566, 369, 264, 31085, 315, 7194, 5938, 449, 22923, 3956, 323, 3600, 11, 9200, 369, 47614, 279, 27375, 315, 8661, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d0ee0>, 'json_data': {'input': [[18902, 79483, 25, 7839, 14724, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 330, 15571, 14724, 1, 2949, 279, 27927, 2317, 315, 24043, 10396, 323, 6020, 13122, 13, 1102, 15151, 430, 82746, 374, 264, 5199, 528, 61186, 9513, 40986, 505, 2626, 28559, 323, 374, 62623, 311, 279, 16865, 315, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d0f70>, 'json_data': {'input': [[18902, 79483, 25, 2468, 63897, 11, 584, 527, 11411, 311, 3339, 20057, 11, 25452, 11, 323, 28286, 961, 315, 4395, 584, 656, 323, 311, 7982, 264, 32027, 430, 374, 18740, 315, 279, 3932, 584, 8854, 13, 4497, 2038, 389, 5195, 753, 5603, 311, 20057, 649, 387, 1766, 304, 1057, 9974, 20057, 6821, 11, 2561, 17880, 520, 20057, 5831, 13, 578, 8970, 315, 1057, 20057, 6821, 527, 539, 32762, 555, 5905, 1139, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 477, 304, 904, 1023, 1934, 477, 2246, 584, 1052, 449, 279, 22370, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 5195, 596, 15507, 311, 20057, 11, 25452, 11, 323, 28286, 2949, 1202, 32027, 13, 1102, 15151, 430, 279, 2883, 22262, 311, 1977, 264, 2128, 52828, 315, 1202, 1217, 2385, 11, 31799, 9548, 20057, 311, 13166, 2819, 323, 27927, 3674, 28423, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-11-30 23:52:24 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-11-30 23:52:24 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-11-30 23:52:24 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-11-30 23:52:24 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-11-30 23:52:24 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-11-30 23:52:24 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-11-30 23:52:24 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-11-30 23:52:24 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-11-30 23:52:24 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-11-30 23:52:24 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d3520>, 'json_data': {'input': [[18902, 79483, 25, 12937, 61439, 70396, 198, 2014, 940, 1534, 73094, 25, 330, 19931, 61439, 70396, 1, 17482, 439, 264, 14836, 33018, 264, 3857, 430, 690, 63179, 279, 2883, 596, 18512, 5552, 311, 5708, 20448, 13, 1115, 2038, 374, 16595, 369, 8830, 1268, 9548, 20448, 22223, 279, 8244, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d3640>, 'json_data': {'input': [[18902, 79483, 25, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17738, 279, 7314, 315, 264, 11944, 6492, 315, 30466, 8066, 555, 63897, 4953, 13, 1102, 4461, 5764, 264, 31085, 315, 13254, 8336, 11, 902, 374, 16996, 369, 8830, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d36d0>, 'json_data': {'input': [[18902, 79483, 25, 1442, 459, 24084, 6650, 2883, 11, 13519, 555, 1817, 1906, 422, 279, 23702, 519, 706, 16689, 539, 311, 1005, 279, 11838, 9320, 4261, 369, 89506, 449, 904, 502, 477, 32828, 6020, 24043, 10886, 3984, 33549, 311, 11360, 220, 1032, 2948, 8, 315, 279, 19224, 3298, 13, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 961, 315, 279, 23331, 8907, 3857, 2949, 279, 220, 605, 16222, 26559, 13, 1102, 11951, 14564, 3508, 279, 23702, 519, 706, 12146, 311, 1935, 9610, 315, 459, 11838, 9320, 4261, 369, 502, 6020, 24043, 10886, 11, 264, 17575, 430, 6276, 24084, 6650, 5220, 311, 7781, 8907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d3760>, 'json_data': {'input': [[18902, 79483, 25, 4948, 24993, 3600, 12718, 11, 2737, 25261, 11, 31831, 11, 4994, 5897, 11, 323, 1023, 23651, 54492, 23541, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 315, 4689, 323, 23541, 18512, 11, 11951, 28118, 12718, 7318, 369, 4948, 24993, 3600, 11, 902, 649, 13519, 279, 2883, 596, 54180, 389, 9434, 5070, 369, 1862, 5865, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d37f0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3477, 73657, 11, 3424, 323, 7241, 11, 323, 528, 61186, 12032, 11, 44878, 82746, 11, 369, 53317, 994, 4455, 477, 4442, 304, 13463, 13519, 279, 15691, 3392, 1253, 539, 387, 11993, 481, 13, 578, 16865, 374, 10887, 520, 279, 15821, 2237, 315, 72450, 8515, 28555, 9678, 315, 1023, 12032, 13, 1226, 6767, 11993, 2968, 315, 1521, 12032, 555, 27393, 279, 15691, 15055, 311, 279, 3938, 82037, 1868, 291, 8515, 28555, 430, 279, 12032, 477, 279, 9513, 1912, 527, 3685, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 13186, 323, 1920, 369, 47614, 53317, 315, 73657, 11, 3424, 323, 7241, 11, 323, 528, 61186, 12032, 320, 80095, 82746, 570, 1102, 16964, 279, 38152, 1511, 311, 8417, 11993, 2968, 11, 902, 374, 16996, 369, 23391, 430, 12032, 527, 539, 927, 838, 3340, 389, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d3880>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 2853, 315, 30466, 11, 2737, 350, 1741, 320, 258, 11990, 11, 3734, 54208, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 2007, 29385, 4954, 279, 2853, 315, 30466, 11, 2737, 38081, 73471, 11443, 320, 51, 1741, 705, 902, 374, 7718, 369, 38663, 279, 6020, 5178, 323, 2853, 15374, 315, 63897, 4953, 3238, 82, 13254, 9659, 7640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d3910>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 21, 11, 420, 12143, 15151, 430, 279, 2768, 2262, 36716, 311, 279, 6771, 315, 36962, 11, 51346, 13016, 389, 1405, 814, 527, 304, 279, 8244, 2246, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d39a0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 14393, 279, 6771, 315, 36962, 11, 902, 2942, 4861, 279, 2246, 1139, 14491, 369, 4228, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d3a30>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 18908, 264, 51262, 41458, 449, 5201, 311, 7188, 27334, 3827, 12032, 11, 3738, 6918, 4272, 10565, 18151, 11, 3738, 1614, 4272, 10565, 18151, 323, 3827, 20746, 11, 4272, 27334, 3827, 12032, 23343, 311, 7089, 13315, 5220, 11, 323, 3738, 7362, 4272, 10565, 18151, 430, 584, 4510, 527, 539, 4461, 311, 387, 15393, 13, 1226, 3136, 311, 32834, 434, 279, 9861, 51262, 41458, 51534, 11, 323, 422, 3938, 6029, 6276, 369, 264, 7276, 477, 2539, 4984, 315, 279, 51262, 41458, 11, 264, 3827, 8935, 690, 387, 12715, 28178, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 2883, 596, 51262, 90120, 5552, 311, 5370, 3827, 6920, 2000, 4102, 323, 27334, 3827, 12032, 13, 1102, 15151, 264, 46878, 5603, 304, 49183, 4754, 3827, 7720, 323, 279, 14529, 15813, 315, 34860, 2968, 11, 902, 374, 7718, 369, 8830, 279, 2883, 596, 6020, 36721, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d3ac0>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 5905, 1396, 304, 279, 2246, 323, 1587, 539, 6782, 67749, 2262, 13, 1102, 4461, 15151, 264, 87910, 477, 42271, 315, 264, 5552, 3857, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d3b50>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 264, 87910, 320, 16, 8, 5938, 449, 279, 3766, 2007, 11, 4461, 8405, 5217, 93566, 2038, 922, 279, 3673, 10212, 304, 279, 12399, 315, 19310, 11897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d3be0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 3804, 31066, 11, 96209, 11, 323, 41477, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17738, 264, 3230, 3857, 2949, 279, 1934, 430, 24400, 389, 279, 30466, 8066, 505, 5195, 41455, 11, 15771, 11, 323, 7766, 13, 1102, 13533, 430, 279, 17876, 2262, 690, 37067, 389, 1521, 13254, 23914, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d3c70>, 'json_data': {'input': [[18902, 79483, 25, 353, 3, 1041, 29091, 389, 6790, 220, 2148, 11, 220, 679, 23, 11, 304, 5708, 477, 304, 1963, 11, 2737, 15601, 94539, 315, 56364, 627, 2014, 940, 1534, 73094, 25, 1115, 87910, 5825, 64784, 389, 279, 9341, 12593, 6982, 304, 279, 4876, 11, 19392, 430, 279, 12678, 4097, 264, 59159, 400, 1041, 9341, 1903, 520, 264, 3230, 892, 11, 902, 8779, 66251, 553, 279, 5178, 17150, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d3d00>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 33620, 1603, 17575, 369, 8070, 13426, 400, 220, 6028, 11, 16884, 400, 220, 5313, 11, 25150, 72673, 369, 8070, 13426, 400, 220, 806, 11, 18349, 400, 220, 806, 11, 20275, 48023, 3827, 4478, 220, 868, 13, 24, 1034, 220, 1032, 13, 24, 33648, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 5199, 3827, 6037, 4442, 11136, 555, 279, 34483, 11, 902, 617, 25127, 369, 1268, 279, 2883, 48517, 1202, 3827, 58165, 11, 74055, 6020, 3135, 323, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d3d90>, 'json_data': {'input': [[18902, 79483, 25, 3061, 670, 38170, 304, 1057, 5195, 15161, 30466, 617, 1027, 11, 323, 1253, 3136, 311, 387, 11, 11754, 555, 9547, 304, 5369, 311, 279, 4689, 9547, 7633, 3485, 11, 1778, 439, 6130, 10648, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 9547, 430, 1253, 7958, 65649, 304, 5195, 15161, 30466, 11, 4528, 311, 3766, 27855, 11, 82003, 430, 6130, 10648, 12912, 323, 3157, 4787, 1514, 16996, 13073, 304, 13254, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d3e20>, 'json_data': {'input': [[18902, 79483, 25, 19406, 11, 828, 9313, 11, 323, 828, 10648, 14640, 527, 6485, 323, 19019, 42028, 5789, 13, 5884, 8060, 477, 10711, 8060, 311, 26069, 449, 1521, 7016, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 84140, 14932, 12625, 323, 828, 9313, 14640, 11, 19392, 430, 904, 2536, 11733, 32712, 1436, 617, 65069, 6372, 389, 279, 2883, 13, 1102, 66159, 279, 42028, 7138, 315, 1521, 7016, 11, 902, 690, 387, 4726, 36131, 304, 17876, 27855, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d3eb0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 578, 30466, 430, 584, 43530, 7953, 13172, 527, 7859, 323, 1253, 69214, 7958, 1057, 37682, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 30466, 14592, 505, 2536, 26831, 31024, 8336, 527, 7859, 11, 23377, 264, 21797, 2461, 315, 13254, 23914, 13, 1102, 48542, 279, 6742, 369, 20954, 389, 1268, 420, 6541, 1253, 10383, 8244, 11626, 37682, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3eaa9d3f40>, 'json_data': {'input': [[18902, 79483, 25, 1442, 279, 549, 815, 13, 18160, 58764, 555, 220, 605, 13689, 279, 3392, 12715, 304, 40944, 14807, 28174, 320, 1182, 32, 8, 2949, 362, 65083, 5552, 311, 1057, 4272, 9341, 305, 17327, 1603, 3827, 2515, 1053, 617, 1027, 13489, 400, 23305, 3610, 323, 400, 26491, 3610, 4827, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 15947, 13, 578, 2349, 304, 907, 12715, 304, 356, 15559, 1053, 387, 3685, 311, 4445, 264, 12435, 7362, 11667, 14807, 8895, 477, 4814, 505, 1057, 9341, 304, 7362, 72202, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 10484, 9803, 279, 4754, 5536, 315, 11667, 65649, 389, 279, 40944, 14807, 28174, 320, 1182, 32, 8, 5552, 311, 4272, 9341, 305, 17327, 11, 4726, 94012, 279, 6020, 15635, 6532, 304, 6625, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8040>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 5217, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e80d0>, 'json_data': {'input': [[18902, 79483, 25, 35390, 45344, 88015, 55364, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 3857, 430, 35434, 3293, 24043, 19126, 55364, 13, 1102, 15151, 430, 279, 2768, 2262, 690, 21782, 502, 24043, 10886, 9959, 311, 63897, 4953, 2637, 902, 374, 3062, 369, 39210, 311, 3619, 4754, 4442, 304, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8160>, 'json_data': {'input': [[18902, 79483, 25, 3580, 7181, 220, 17, 369, 2038, 23343, 311, 30466, 555, 54242, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 5425, 73723, 311, 2500, 5296, 320, 9290, 220, 17, 8, 430, 5727, 5217, 2038, 922, 279, 2883, 596, 30466, 555, 54242, 11, 19392, 430, 54001, 2317, 374, 3062, 369, 8830, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e81f0>, 'json_data': {'input': [[18902, 79483, 25, 15055, 7318, 311, 1057, 8141, 8717, 889, 1304, 2561, 1057, 2778, 2680, 3585, 323, 3600, 13, 5751, 8141, 8717, 2997, 7074, 12850, 11, 6505, 35991, 11, 4113, 7241, 17032, 11, 323, 3241, 13707, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 4595, 315, 8141, 8717, 6532, 304, 24038, 13172, 13254, 13, 1102, 22020, 279, 12135, 63897, 706, 449, 5370, 8717, 11, 902, 374, 7718, 369, 8830, 1202, 13254, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8280>, 'json_data': {'input': [[18902, 79483, 25, 7436, 36233, 8515, 6530, 574, 400, 4645, 13, 22, 7239, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 7216, 369, 10565, 8515, 6530, 11, 902, 374, 264, 9200, 6767, 315, 279, 2883, 596, 53113, 323, 25605, 15374, 13, 1102, 10109, 988, 5196, 2949, 279, 27927, 6020, 5178, 24131, 11, 39686, 279, 2883, 596, 5845, 311, 7068, 8515, 505, 1202, 6332, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8310>, 'json_data': {'input': [[18902, 79483, 25, 279, 3685, 18912, 11, 3392, 11, 323, 2515, 315, 63897, 4953, 3238, 82, 4430, 2109, 75202, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 36716, 311, 4430, 3780, 1445, 7620, 323, 374, 961, 315, 279, 4741, 31348, 12518, 13, 1102, 35434, 279, 3685, 18912, 323, 6372, 315, 4430, 2109, 75202, 11, 902, 527, 5199, 369, 8830, 279, 2883, 596, 6864, 24691, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e83a0>, 'json_data': {'input': [[18902, 79483, 25, 16207, 1219, 5287, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 6514, 315, 6763, 54764, 11, 26073, 1268, 814, 527, 1367, 30040, 477, 15324, 439, 12032, 3196, 389, 279, 3685, 8935, 4261, 13, 1102, 374, 9959, 369, 8830, 279, 2883, 596, 5603, 311, 6763, 14228, 18512, 304, 1202, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8430>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 6264, 1639, 63897, 4953, 14639, 82, 5419, 2585, 927, 6020, 13122, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 3196, 389, 13186, 9749, 304, 15774, 7935, 2345, 83537, 24686, 11136, 555, 279, 10554, 315, 328, 2805, 5620, 67792, 315, 279, 350, 888, 3195, 9849, 320, 679, 18, 12914, 8, 320, 1820, 74044, 46, 13186, 570, 763, 1057, 9647, 11, 63897, 4953, 13, 320, 1820, 8351, 8, 18908, 11, 304, 682, 3769, 43666, 11, 7524, 5419, 2585, 927, 6020, 13122, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 3196, 389, 279, 74044, 46, 13186, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 5825, 279, 54406, 596, 17102, 9002, 279, 27375, 315, 5419, 2585, 927, 6020, 13122, 369, 63897, 4953, 13, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 3196, 389, 9749, 13186, 13, 1102, 17482, 439, 264, 1401, 9455, 315, 279, 25261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e84c0>, 'json_data': {'input': [[18902, 79483, 25, 43907, 26868, 82, 2876, 17286, 304, 279, 79980, 660, 31946, 61572, 11, 719, 12522, 25705, 10734, 311, 17286, 43907, 9558, 26868, 82, 26868, 82, 88121, 304, 23139, 323, 17286, 304, 279, 279, 11842, 7813, 1003, 43907, 79980, 660, 79980, 660, 13201, 19715, 26868, 82, 67975, 1534, 31946, 61572, 31946, 61572, 17961, 58513, 7, 16, 8, 39517, 477, 393, 93724, 9558, 26868, 82, 13031, 344, 5983, 12032, 400, 220, 20618, 400, 320, 6086, 8, 400, 220, 20235, 400, 320, 11702, 8, 400, 320, 2075, 8, 400, 220, 10680, 13031, 344, 5983, 58165, 400, 220, 22369, 400, 320, 6086, 8, 400, 220, 19697, 400, 320, 11702, 8, 400, 320, 845, 8, 400, 220, 12463, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 22, 11, 420, 3857, 5825, 47616, 828, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 9002, 279, 2883, 753, 32905, 24198, 11, 39686, 4442, 505, 279, 3766, 1060, 323, 94012, 279, 2883, 753, 6020, 2361, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8550>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 701, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e85e0>, 'json_data': {'input': [[18902, 79483, 25, 2290, 627, 2014, 940, 1534, 73094, 25, 2290, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8700>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 3857, 323, 95593, 279, 9764, 315, 279, 13122, 5502, 11, 63897, 4953, 13, 1102, 374, 264, 16287, 78570, 315, 279, 2883, 1694, 14407, 11, 3062, 369, 32373, 304, 23331, 68248, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8670>, 'json_data': {'input': [[18902, 79483, 25, 7089, 33620, 320, 60789, 705, 9558, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 7089, 33620, 320, 60789, 705, 9558, 320, 80881, 69248, 705, 19392, 430, 279, 45764, 3649, 690, 3504, 5370, 8070, 323, 18512, 539, 6089, 17791, 311, 279, 6332, 7677, 315, 279, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8790>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 2500, 2937, 315, 279, 2007, 315, 8970, 11, 91115, 1202, 34512, 1697, 3560, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8820>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 5502, 11, 63897, 4953, 2637, 8405, 264, 2867, 66251, 5905, 369, 279, 6020, 2038, 430, 11263, 11, 23391, 13016, 3619, 279, 2592, 315, 279, 828, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e88b0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 20900, 3241, 4500, 7194, 11, 2737, 7194, 311, 2274, 3241, 3956, 477, 279, 3241, 3777, 315, 3956, 311, 387, 6216, 11, 82280, 11, 477, 61149, 311, 9434, 3932, 11, 1603, 30116, 69543, 374, 8813, 13, 7146, 5848, 69543, 374, 11383, 8813, 20193, 1603, 279, 4984, 315, 1778, 3956, 13, 1666, 264, 1121, 11, 4500, 7194, 430, 3449, 279, 13186, 369, 6864, 2065, 1051, 539, 3769, 369, 279, 18852, 10666, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 6514, 315, 3241, 4500, 7194, 304, 279, 6020, 12518, 13, 1102, 50729, 279, 4947, 315, 1367, 49205, 4500, 7194, 1603, 30116, 69543, 374, 8813, 11, 19392, 430, 1521, 7194, 1051, 539, 5199, 3403, 311, 53825, 369, 279, 18852, 10666, 13, 1115, 2038, 374, 961, 315, 279, 3857, 389, 5199, 24043, 10396, 11, 94012, 1268, 63897, 4953, 13, 9815, 369, 3241, 4500, 18512, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8940>, 'json_data': {'input': [[18902, 79483, 25, 1789, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 3827, 8935, 15393, 5552, 311, 23146, 79051, 477, 62113, 2391, 279, 4261, 574, 400, 20, 13, 24, 7239, 11, 400, 19, 13, 22, 7239, 11, 323, 400, 20, 13, 21, 7239, 11, 15947, 13, 4314, 15055, 656, 539, 2997, 279, 25636, 6372, 315, 5708, 6108, 23146, 11, 902, 15871, 29243, 311, 279, 432, 33465, 3827, 6807, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 2038, 389, 279, 3827, 7720, 15393, 505, 23146, 79051, 477, 62113, 2391, 279, 5300, 1667, 11, 10209, 26793, 1139, 279, 6020, 6372, 315, 5708, 6108, 20448, 389, 3827, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e89d0>, 'json_data': {'input': [[18902, 79483, 25, 40814, 284, 2876, 49203, 1285, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 279, 72578, 330, 38425, 1359, 902, 13656, 369, 330, 2688, 49203, 1285, 1359, 19392, 430, 3738, 6020, 4442, 1253, 539, 3493, 5199, 26793, 11, 3062, 369, 66744, 279, 6020, 12399, 30357, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8a60>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 1101, 264, 961, 315, 279, 6771, 315, 36962, 11, 13788, 439, 264, 34512, 1697, 12576, 4856, 1109, 8405, 39319, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8af0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 11156, 14054, 374, 40056, 315, 2038, 5557, 12032, 11, 2737, 16692, 323, 29130, 7241, 11, 323, 828, 4219, 4363, 323, 14016, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7138, 315, 63897, 4953, 3238, 82, 11156, 14054, 11, 38938, 430, 433, 41095, 2038, 5557, 12032, 1093, 16692, 323, 29130, 7241, 11, 439, 1664, 439, 828, 4219, 4363, 323, 14016, 13, 1102, 17482, 311, 66251, 553, 279, 12678, 304, 46613, 220, 16, 555, 39686, 279, 6956, 430, 17210, 311, 279, 2883, 753, 25605, 17357, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8b80>, 'json_data': {'input': [[18902, 79483, 25, 14930, 5273, 473, 17327, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 14930, 5273, 473, 17327, 3857, 11, 19392, 264, 9320, 311, 25394, 2500, 955, 315, 61316, 3252, 8446, 20011, 555, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8c10>, 'json_data': {'input': [[18902, 79483, 25, 892, 814, 12446, 323, 1253, 40239, 1124, 6288, 11, 1070, 374, 912, 15803, 430, 1521, 4819, 690, 539, 13967, 1121, 304, 5199, 5897, 11, 6020, 11, 323, 43839, 1697, 11682, 11, 2737, 3109, 44983, 11, 13627, 6299, 11, 39725, 11, 323, 8389, 43763, 13, 2684, 374, 1101, 912, 15803, 430, 264, 4101, 315, 5552, 4819, 1253, 539, 387, 11075, 311, 387, 3769, 520, 264, 3010, 2457, 304, 279, 24069, 11, 1524, 422, 814, 1253, 539, 387, 3769, 32399, 520, 279, 892, 315, 872, 32659, 13, 9393, 279, 12823, 1511, 311, 6994, 45571, 2680, 311, 11, 11404, 477, 96630, 2532, 3984, 555, 477, 6062, 80753, 6067, 2349, 14134, 323, 3629, 527, 15324, 1193, 1306, 1694, 11887, 2403, 264, 2218, 11, 1524, 4737, 682, 13579, 61003, 11, 2737, 1884, 2631, 555, 2383, 11, 584, 617, 1027, 12153, 304, 279, 3347, 323, 1253, 3136, 311, 387, 12153, 311, 48248, 477, 11388, 8951, 477, 52227, 477, 4305, 26613, 97420, 11193, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 4754, 85450, 315, 4868, 4819, 430, 1253, 539, 15453, 5101, 5199, 719, 1436, 3063, 311, 7191, 16296, 927, 892, 13, 1102, 66159, 279, 8915, 7138, 315, 4868, 18208, 323, 279, 11774, 304, 20958, 7524, 97420, 11193, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8ca0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1101, 617, 6264, 1639, 11, 304, 18859, 449, 279, 10886, 315, 279, 3142, 8351, 45344, 90951, 8925, 320, 23175, 4273, 8, 320, 4977, 19268, 33, 705, 279, 220, 2366, 18, 60391, 6020, 12518, 315, 279, 8351, 323, 1057, 1934, 30105, 6186, 220, 966, 11, 220, 2366, 19, 13605, 459, 653, 37435, 9647, 1070, 263, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 279, 54406, 1101, 26126, 279, 60391, 6020, 12518, 315, 279, 2883, 323, 13605, 459, 653, 37435, 9647, 11, 902, 374, 264, 6928, 15813, 19392, 912, 5199, 4819, 1051, 1766, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8d30>, 'json_data': {'input': [[18902, 79483, 25, 29240, 304, 7318, 28849, 323, 51091, 527, 16625, 555, 264, 1396, 315, 958, 9920, 9547, 11, 2737, 4442, 304, 87386, 10374, 26, 14529, 2027, 323, 4947, 4442, 26, 323, 11, 439, 433, 36716, 311, 7318, 28849, 11, 65649, 304, 2778, 20126, 13239, 505, 4442, 304, 1217, 25375, 323, 10648, 11, 15871, 389, 6505, 7766, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 9547, 66700, 4442, 304, 7318, 28849, 323, 51091, 13, 1102, 5825, 62129, 2317, 311, 279, 47616, 828, 10666, 304, 279, 3766, 27855, 11, 26073, 279, 30295, 4920, 279, 5219, 11, 8617, 47594, 279, 6742, 596, 8830, 315, 3157, 7865, 323, 13172, 18845, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8dc0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 369, 420, 12143, 26, 433, 1253, 387, 264, 6002, 477, 10321, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8e50>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 868, 13, 8245, 922, 17652, 1392, 323, 66542, 56816, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3230, 5296, 320, 9290, 220, 868, 8, 2949, 279, 6020, 1934, 430, 35434, 279, 2038, 5552, 311, 63897, 4953, 3238, 82, 10565, 21282, 323, 46139, 5789, 11, 8405, 264, 31085, 315, 279, 2883, 596, 2626, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8ee0>, 'json_data': {'input': [[18902, 79483, 25, 4487, 14283, 13122, 2883, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 279, 330, 9181, 261, 13122, 2883, 1, 24790, 13, 1102, 374, 961, 315, 279, 23331, 12914, 79774, 2204, 11306, 315, 5220, 1234, 279, 22370, 5718, 11, 719, 433, 1587, 539, 3881, 311, 63897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e8f70>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 1234, 25261, 555, 5370, 13018, 323, 7362, 3827, 11527, 449, 24886, 311, 2536, 32197, 3827, 13146, 13, 578, 3917, 5030, 315, 2536, 32197, 3827, 75620, 15871, 48282, 505, 42254, 389, 279, 3827, 6514, 323, 3827, 4478, 9435, 311, 279, 6412, 315, 1057, 3956, 323, 3600, 304, 1521, 56043, 323, 279, 3827, 6514, 315, 3738, 9548, 7720, 13, 1226, 86659, 361, 2536, 32197, 13426, 430, 1253, 1121, 505, 69570, 555, 11, 477, 904, 51578, 20038, 449, 11, 1521, 3827, 11527, 994, 264, 4814, 374, 35977, 323, 29546, 15279, 481, 13, 1442, 584, 8417, 430, 264, 4814, 374, 29546, 3284, 323, 279, 4814, 477, 2134, 315, 4814, 649, 387, 13240, 11, 584, 36333, 279, 29546, 3284, 4814, 13, 24586, 311, 279, 38088, 23965, 323, 27924, 315, 1521, 13146, 323, 31752, 1920, 304, 3738, 56043, 11, 279, 1620, 15632, 1253, 387, 90694, 2204, 505, 1057, 17078, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 14529, 75620, 5552, 311, 2536, 32197, 3827, 13146, 555, 5370, 3827, 11527, 11, 39686, 279, 84140, 323, 69867, 6532, 304, 279, 3827, 6514, 315, 63897, 596, 3956, 323, 9548, 7720, 13, 1102, 374, 31183, 2949, 279, 27927, 3857, 389, 5897, 323, 3827, 13146, 11, 11951, 28118, 279, 2883, 596, 8907, 323, 4754, 58165, 9002, 3827, 14640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9000>, 'json_data': {'input': [[18902, 79483, 25, 35211, 6444, 5371, 8515, 6108, 36580, 477, 20746, 11, 902, 527, 41853, 369, 439, 3977, 18361, 13, 1226, 16430, 1521, 15055, 3196, 389, 279, 3685, 3392, 311, 387, 3984, 311, 6444, 323, 8108, 30466, 13, 1226, 4510, 430, 1070, 690, 539, 387, 5199, 4442, 311, 1057, 17989, 315, 3977, 18361, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 1268, 8515, 6108, 36580, 477, 20746, 3984, 311, 6444, 527, 12020, 304, 24043, 3878, 439, 3977, 18361, 13, 1102, 22020, 279, 42304, 1920, 369, 1521, 36580, 11, 902, 374, 3062, 369, 8830, 13254, 34074, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9090>, 'json_data': {'input': [[18902, 79483, 25, 611, 82, 14, 74210, 612, 13566, 69065, 198, 2014, 940, 1534, 73094, 25, 578, 12223, 1584, 3605, 82, 14, 74210, 612, 13566, 69065, 1, 78864, 279, 16287, 42143, 315, 279, 25261, 1934, 555, 279, 93596, 7626, 11, 50096, 1202, 3229, 5383, 323, 39242, 369, 279, 1934, 596, 8970, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9120>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1047, 220, 10828, 11, 17824, 8420, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 2038, 389, 279, 2860, 1396, 315, 8420, 520, 63897, 4953, 13, 439, 315, 279, 842, 315, 220, 2366, 18, 13, 1102, 10109, 988, 279, 2883, 753, 32027, 1404, 2949, 279, 27927, 2317, 315, 1202, 25605, 8824, 323, 6650, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e91b0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 7766, 617, 1047, 11, 323, 304, 279, 3938, 1253, 617, 11, 4367, 4819, 13239, 505, 2955, 11, 15266, 11, 477, 7677, 13, 18156, 11, 1521, 4819, 1253, 387, 9057, 555, 6956, 584, 7782, 505, 1023, 17032, 477, 20972, 13, 1442, 279, 4367, 315, 1057, 3956, 323, 3600, 1587, 539, 3449, 17078, 477, 1057, 3956, 477, 3600, 527, 64903, 477, 1397, 264, 19635, 11, 433, 1436, 11682, 1057, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 4754, 4367, 4819, 5552, 311, 279, 2883, 596, 7766, 323, 3600, 13, 1102, 40019, 279, 7434, 315, 2027, 41231, 323, 279, 5536, 315, 22109, 311, 3449, 4367, 17078, 389, 279, 2883, 596, 17444, 323, 6020, 3044, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9240>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e92d0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 1666, 3932, 304, 11469, 37671, 15098, 2586, 2930, 11, 1057, 30466, 505, 6625, 11987, 3136, 311, 5376, 11, 323, 1253, 1397, 8738, 22538, 13, 763, 5369, 11, 19567, 304, 7362, 9473, 7969, 7958, 1778, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 12939, 315, 6625, 11987, 304, 63897, 596, 13254, 8446, 11, 8104, 439, 810, 3932, 505, 11469, 37671, 2586, 2930, 13, 1102, 72890, 279, 32961, 369, 8738, 9341, 304, 1521, 13918, 323, 22020, 279, 5536, 315, 7362, 9473, 7969, 389, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9360>, 'json_data': {'input': [[18902, 79483, 25, 2262, 12850, 11, 15871, 3196, 389, 279, 4367, 315, 1057, 87386, 2385, 11, 1057, 5845, 311, 1520, 1521, 8717, 7068, 30466, 505, 13172, 11, 323, 279, 3878, 315, 1057, 20038, 449, 1124, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 32961, 315, 20632, 449, 2262, 12850, 13, 1102, 66159, 279, 5133, 30295, 430, 5536, 13172, 13254, 11, 21760, 389, 279, 4367, 315, 279, 87386, 2385, 323, 15664, 3878, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e93f0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 1274, 527, 9200, 369, 1057, 8738, 2450, 11, 779, 584, 990, 2653, 311, 1893, 459, 4676, 1405, 8420, 649, 617, 50698, 31133, 11, 323, 387, 6380, 11, 9498, 11, 323, 27331, 13, 1226, 3085, 5064, 69475, 7720, 323, 7620, 311, 1935, 2512, 315, 279, 17226, 3966, 315, 1057, 8420, 323, 872, 8689, 11, 2737, 10708, 369, 7076, 6650, 323, 4500, 11, 5070, 311, 1862, 872, 6020, 2890, 11, 323, 2680, 311, 9250, 18985, 11709, 13, 5751, 15022, 20448, 7620, 1520, 603, 311, 9504, 323, 14389, 1948, 11426, 11, 323, 584, 690, 3136, 311, 2793, 304, 32959, 23944, 1274, 311, 11156, 323, 2536, 12, 73237, 13073, 11, 323, 42093, 1124, 1664, 13, 1226, 3493, 264, 8205, 315, 1579, 4367, 4967, 323, 1862, 311, 20258, 311, 1977, 323, 20259, 872, 17357, 12, 4235, 81, 8764, 505, 14307, 369, 502, 20258, 11, 311, 6975, 5070, 430, 1520, 1124, 3493, 11302, 323, 10299, 5178, 11, 311, 24826, 323, 3927, 1862, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 50729, 279, 5370, 9548, 7720, 323, 7620, 430, 5195, 6209, 311, 1862, 1202, 32027, 13, 1102, 22020, 279, 2883, 596, 15507, 311, 86644, 264, 9498, 323, 27331, 990, 4676, 11, 902, 374, 16996, 369, 51647, 323, 51110, 11005, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9480>, 'json_data': {'input': [[18902, 79483, 25, 320, 9126, 3861, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 264, 6727, 374, 2631, 11, 11383, 5552, 311, 279, 955, 315, 1934, 1694, 13019, 320, 64709, 477, 9320, 705, 323, 7437, 709, 279, 3645, 369, 279, 17876, 11709, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9510>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 2316, 4342, 19392, 279, 1212, 315, 279, 6771, 315, 36962, 3857, 304, 279, 2246, 13, 578, 6771, 315, 36962, 374, 16996, 369, 60499, 279, 5370, 14491, 315, 279, 25992, 8423, 11, 10923, 13016, 311, 6288, 1505, 3230, 2038, 477, 50829, 25819, 6957, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e95a0>, 'json_data': {'input': [[18902, 79483, 25, 220, 22, 627, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 369, 420, 12143, 26, 433, 1253, 387, 264, 6002, 477, 10321, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9630>, 'json_data': {'input': [[18902, 79483, 25, 6104, 584, 617, 12514, 5199, 5070, 311, 12625, 323, 4868, 10672, 2077, 17357, 11, 2737, 12514, 15603, 10672, 2077, 7411, 11, 1057, 2077, 1920, 11, 8104, 2391, 3115, 315, 264, 5933, 21426, 477, 28522, 11, 1253, 539, 387, 26613, 11, 1253, 3775, 311, 30357, 8720, 279, 31020, 315, 459, 10672, 11, 1253, 539, 387, 5043, 3403, 311, 5471, 477, 4017, 11682, 11, 477, 1253, 3775, 311, 40044, 34630, 6629, 459, 10672, 13, 1666, 264, 1121, 11, 584, 1253, 7831, 5199, 5897, 11, 43839, 1697, 11, 477, 6020, 14675, 11, 902, 1436, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 2883, 596, 9341, 304, 12625, 323, 4868, 10672, 2077, 17357, 1418, 61708, 4754, 40206, 447, 27121, 304, 2077, 9045, 2391, 58187, 13, 1102, 72890, 279, 14529, 11774, 304, 23391, 7524, 10672, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e96c0>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 18, 13, 17961, 58513, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17738, 279, 7314, 315, 7181, 220, 18, 304, 279, 2246, 11, 902, 12789, 449, 6020, 24198, 13, 1102, 15151, 264, 9320, 1139, 264, 11944, 24481, 315, 1268, 63897, 4953, 13, 13777, 1202, 6020, 24198, 11, 2737, 6762, 907, 22323, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9750>, 'json_data': {'input': [[18902, 79483, 25, 1226, 8417, 15393, 20192, 477, 18151, 389, 279, 6412, 477, 56807, 16409, 315, 11897, 34919, 389, 264, 3230, 22654, 1749, 11829, 2768, 2007, 94594, 20192, 323, 18151, 369, 11897, 34919, 11, 27000, 439, 264, 3777, 315, 507, 40, 69248, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 10430, 922, 1268, 15393, 20192, 477, 18151, 389, 279, 6412, 315, 11897, 34919, 527, 16997, 11, 11951, 1701, 264, 3230, 22654, 1749, 13, 1102, 17482, 311, 10552, 279, 38152, 4920, 279, 6020, 828, 10666, 304, 17876, 12920, 5552, 311, 20192, 323, 18151, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e97e0>, 'json_data': {'input': [[18902, 79483, 25, 38203, 58882, 2968, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 8712, 315, 38203, 58882, 2968, 11, 19392, 264, 6541, 311, 25394, 279, 6020, 5178, 315, 2204, 21282, 2949, 63897, 4953, 13, 1115, 6492, 690, 3493, 26793, 1139, 902, 5789, 315, 279, 2626, 527, 1455, 34235, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9870>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 8070, 13426, 304, 279, 549, 815, 13, 323, 7362, 56043, 13, 90462, 19971, 374, 2631, 304, 38663, 1057, 36218, 3827, 10093, 323, 26679, 1057, 17575, 369, 8070, 13426, 13, 578, 2860, 3392, 315, 20547, 97239, 3827, 7720, 574, 400, 20, 13, 17, 7239, 11, 400, 22, 13, 16, 7239, 11, 323, 400, 24, 13, 19, 7239, 439, 315, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 15947, 11, 315, 902, 400, 18, 13, 22, 7239, 11, 400, 20, 13, 18, 7239, 11, 323, 400, 22, 13, 19, 7239, 11, 422, 15324, 11, 1053, 7958, 1057, 7524, 3827, 4478, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 2883, 596, 14675, 311, 8070, 13426, 304, 5370, 56043, 323, 279, 5199, 19971, 2631, 304, 38663, 36218, 3827, 10093, 13, 1102, 66159, 279, 6020, 25127, 315, 97239, 3827, 7720, 389, 279, 2883, 596, 7524, 3827, 4478, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9900>, 'json_data': {'input': [[18902, 79483, 25, 30717, 30466, 527, 15324, 436, 2143, 398, 927, 279, 4261, 315, 279, 15493, 11, 15871, 15438, 13, 1226, 1934, 30466, 505, 5195, 7199, 917, 6763, 323, 304, 20624, 24393, 389, 264, 4272, 8197, 11, 1606, 1057, 5178, 29672, 374, 311, 28696, 264, 7901, 1990, 917, 13707, 323, 842, 3932, 11, 369, 902, 584, 7380, 264, 2532, 11307, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 9200, 16540, 315, 1268, 15493, 30466, 527, 15324, 11, 8104, 369, 5195, 7199, 917, 6763, 323, 304, 20624, 24393, 13, 1102, 20064, 9803, 279, 24043, 6514, 315, 1521, 30466, 11, 902, 374, 3062, 369, 8830, 63897, 596, 13254, 18324, 10396, 323, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9990>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 1057, 8515, 28555, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 18911, 63897, 4953, 14639, 82, 8515, 28555, 11, 902, 374, 26154, 369, 8830, 279, 2883, 596, 6020, 5178, 927, 279, 5300, 18852, 13, 1102, 7437, 279, 6566, 369, 264, 810, 11944, 31085, 315, 8515, 6530, 7640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9a20>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 5217, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9ab0>, 'json_data': {'input': [[18902, 79483, 25, 7181, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 5042, 5415, 330, 9290, 3047, 323, 17482, 439, 264, 9320, 477, 17219, 311, 5217, 20064, 7174, 477, 3062, 2038, 5552, 311, 279, 38846, 2262, 13, 1102, 15151, 430, 279, 2768, 2038, 374, 9959, 369, 8830, 279, 2317, 315, 279, 6020, 12518, 477, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9b40>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 1032, 13, 63457, 6979, 32612, 3579, 8758, 27034, 3651, 85447, 41447, 7934, 37868, 11, 3651, 20843, 878, 2006, 96778, 10360, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 17219, 315, 279, 3857, 5552, 311, 35211, 69668, 323, 25368, 56385, 11, 902, 6118, 49095, 904, 2626, 67029, 1990, 279, 2883, 323, 1202, 29509, 477, 4580, 3697, 13, 46551, 1521, 12135, 374, 16996, 369, 47614, 4754, 26885, 315, 2802, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9bd0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 13254, 6650, 4478, 1436, 18174, 927, 892, 439, 264, 1121, 315, 264, 1396, 315, 9547, 11, 2737, 4442, 304, 279, 7766, 323, 13531, 1385, 1511, 311, 2680, 1057, 3956, 323, 3600, 26, 4442, 304, 46139, 6651, 26, 1654, 8023, 367, 477, 58054, 304, 87386, 10374, 26, 10937, 26, 6130, 10648, 323, 7631, 369, 1057, 3956, 26, 43154, 304, 1057, 21913, 315, 1057, 3956, 323, 3600, 26, 14529, 2027, 323, 4947, 4442, 26, 323, 29735, 311, 4827, 33705, 3956, 323, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 3649, 3230, 9547, 430, 1436, 17210, 311, 279, 18174, 304, 13254, 6650, 11, 2737, 4442, 304, 11761, 7865, 323, 15022, 40850, 13, 1102, 5825, 20616, 1139, 279, 23965, 315, 80184, 6650, 304, 264, 8915, 3157, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9c60>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 4442, 304, 58191, 2065, 17150, 369, 5195, 7694, 612, 1023, 30466, 320, 35778, 28849, 323, 2853, 17453, 29218, 8, 323, 5195, 8304, 30466, 320, 318, 40973, 323, 2853, 17453, 38025, 4099, 705, 13605, 439, 264, 11668, 11, 505, 220, 2366, 17, 311, 220, 2366, 18, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 18911, 4442, 304, 58191, 2065, 17150, 369, 5195, 7694, 612, 1023, 323, 5195, 8304, 30466, 13, 1102, 7437, 279, 6566, 369, 264, 47616, 6492, 315, 7318, 28849, 323, 51091, 11, 902, 527, 7718, 34824, 315, 5195, 596, 13172, 5178, 927, 279, 5300, 4261, 11, 29820, 311, 279, 8244, 8830, 315, 279, 2883, 596, 13254, 8336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9cf0>, 'json_data': {'input': [[18902, 79483, 25, 763, 220, 2366, 18, 11, 279, 15774, 38493, 8471, 320, 91064, 8, 11136, 264, 6037, 2349, 10923, 35748, 311, 28191, 3881, 279, 14640, 304, 2515, 4972, 311, 220, 2366, 17, 5552, 311, 549, 815, 13, 6918, 7362, 3827, 20746, 11, 439, 1664, 439, 264, 8821, 6037, 2349, 449, 41653, 19351, 389, 279, 6864, 2065, 323, 93364, 2065, 315, 432, 33465, 18512, 13, 362, 40944, 832, 7394, 28174, 8581, 311, 279, 4972, 4261, 369, 1521, 3827, 6037, 4442, 574, 12715, 304, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 18979, 304, 279, 7524, 3827, 4478, 11, 31799, 433, 311, 34483, 6037, 4442, 11, 902, 374, 3062, 369, 8830, 279, 3827, 18921, 323, 1202, 6372, 389, 4272, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9d80>, 'json_data': {'input': [[18902, 79483, 25, 763, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 584, 2109, 73350, 400, 1135, 13, 18, 7239, 11, 400, 2946, 13, 18, 7239, 11, 323, 400, 5538, 13, 17, 7239, 11, 15947, 11, 315, 63897, 596, 3308, 362, 323, 3308, 356, 13551, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 12678, 389, 279, 4430, 2109, 75202, 1903, 555, 63897, 927, 279, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 94012, 279, 2883, 596, 15507, 311, 13758, 6864, 311, 41777, 13, 1102, 374, 961, 315, 279, 27927, 10430, 389, 25452, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9e10>, 'json_data': {'input': [[18902, 79483, 25, 24987, 304, 5208, 17610, 15871, 315, 11156, 14054, 323, 5274, 13077, 902, 617, 539, 3686, 1027, 9277, 304, 2532, 13, 578, 892, 4124, 505, 2457, 315, 7782, 311, 22165, 304, 2532, 315, 1521, 12032, 1253, 13334, 505, 4038, 311, 1667, 13, 1789, 3187, 11, 1057, 828, 4219, 8246, 7224, 527, 8965, 7447, 4771, 7224, 449, 5361, 35530, 11, 1405, 584, 21953, 4363, 323, 14016, 11, 9429, 14016, 11, 323, 9966, 323, 4685, 2038, 5557, 12032, 627, 2014, 940, 1534, 73094, 25, 1115, 11914, 15100, 279, 25845, 323, 7138, 315, 8246, 7224, 11, 19392, 430, 6864, 22538, 1253, 1935, 1667, 311, 2586, 311, 94706, 13, 1102, 5825, 26793, 1139, 279, 1317, 9860, 9293, 323, 11572, 15174, 315, 63897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9ea0>, 'json_data': {'input': [[18902, 79483, 25, 3206, 295, 2065, 55290, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 3206, 295, 2065, 55290, 11, 902, 690, 3493, 26793, 1139, 1268, 1664, 63897, 4953, 13, 374, 34537, 1217, 20392, 323, 13172, 1139, 13254, 11, 7718, 369, 8830, 1202, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9f30>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 15246, 311, 65649, 304, 279, 6762, 2819, 315, 1057, 22538, 323, 11, 304, 1063, 13422, 11, 1057, 6020, 12518, 33435, 49188, 44122, 51262, 81898, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 15635, 5552, 311, 279, 6762, 51262, 315, 22538, 11, 19392, 430, 65649, 304, 9341, 2819, 1436, 5536, 279, 6020, 12518, 13, 1102, 7437, 279, 2317, 369, 264, 10430, 389, 279, 44122, 7138, 315, 1521, 1062, 38170, 323, 872, 25127, 369, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85e9fc0>, 'json_data': {'input': [[18902, 79483, 25, 2290, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 78864, 430, 1070, 527, 912, 34919, 9879, 1234, 11360, 220, 717, 3348, 8, 315, 279, 3298, 13, 1102, 5825, 264, 2867, 17102, 311, 279, 3766, 3857, 11, 19392, 430, 63897, 1587, 539, 617, 904, 5217, 34919, 311, 36333, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ea050>, 'json_data': {'input': [[18902, 79483, 25, 2696, 25, 6186, 220, 966, 11, 220, 2366, 19, 198, 2014, 940, 1534, 73094, 25, 2696, 25, 6186, 220, 966, 11, 220, 2366, 19]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ea0e0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 25074, 8070, 400, 220, 16, 11, 18162, 400, 220, 17, 11, 11771, 400, 220, 18, 11, 24678, 25074, 20900, 7, 16, 8, 320, 18061, 8, 320, 18520, 8, 320, 14498, 8, 19620, 11667, 9473, 8895, 320, 9563, 705, 4272, 320, 8273, 8, 320, 21969, 8, 320, 16, 11, 13895, 8, 50809, 320, 9563, 8, 389, 11897, 34919, 11, 4272, 320, 5120, 8, 320, 17, 11, 20478, 8, 320, 16, 11, 12112, 8, 50809, 320, 9563, 8, 389, 25452, 34919, 11, 4272, 220, 717, 11, 13897, 320, 18, 11, 20325, 8, 220, 19695, 21304, 12718, 320, 16, 11, 23629, 8, 220, 26519, 220, 15574, 33620, 320, 9563, 8, 323, 53317, 505, 25452, 1749, 22538, 11, 4272, 220, 17153, 320, 17609, 8, 320, 23574, 8, 7089, 220, 17337, 220, 19162, 220, 15531, 7089, 8070, 320, 59857, 705, 4272, 400, 220, 717, 11, 11139, 400, 320, 18, 11, 20998, 8, 400, 220, 16, 11, 18517, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 31085, 315, 279, 6956, 315, 507, 40, 69248, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 6209, 20616, 1139, 279, 5370, 8336, 315, 8070, 323, 18512, 430, 7958, 279, 2883, 596, 8244, 6020, 5178, 11, 39686, 18845, 323, 5199, 4442, 927, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ea170>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 11, 279, 4666, 2968, 323, 7036, 315, 1521, 323, 1023, 7016, 323, 14640, 11, 439, 33398, 555, 19359, 11, 40242, 11, 477, 23541, 13162, 11, 7293, 36218, 323, 1436, 387, 33398, 304, 5627, 430, 11682, 1057, 2626, 13, 1789, 3187, 11, 584, 17631, 389, 45530, 6220, 69566, 1105, 11, 1093, 1884, 743, 13544, 304, 279, 14434, 72037, 3028, 3298, 323, 11360, 220, 9870, 315, 279, 26545, 3799, 2301, 3298, 304, 279, 549, 815, 13, 323, 279, 469, 12, 34508, 57852, 304, 4606, 11, 311, 6144, 2403, 24305, 369, 5370, 31799, 11, 48530, 11, 23862, 11, 65774, 11, 323, 20256, 7640, 13, 73067, 477, 5590, 78688, 28987, 1521, 6220, 69566, 1105, 1253, 69214, 7958, 603, 323, 1253, 33330, 5199, 25605, 11774, 13, 2684, 527, 27743, 25243, 323, 15639, 39725, 304, 279, 549, 815, 2637, 10013, 11, 323, 2212, 279, 1917, 430, 1436, 57160, 477, 22472, 6220, 57511, 9313, 369, 13335, 323, 2930, 15771, 13, 5751, 4500, 11, 1005, 11, 323, 8518, 2065, 315, 15592, 3956, 323, 3600, 320, 16564, 1057, 8292, 315, 15592, 304, 1057, 33935, 323, 5419, 6067, 8, 1436, 3917, 603, 311, 23331, 1957, 323, 5897, 24305, 11, 2737, 1234, 3230, 13543, 58499, 15592, 11, 439, 1664, 439, 502, 8522, 315, 6484, 828, 9313, 11, 62542, 11, 12625, 11, 20207, 3424, 11, 323, 1023, 7016, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 27924, 14932, 279, 4666, 2968, 315, 5370, 7016, 323, 14640, 11, 8104, 9002, 6220, 57511, 37424, 430, 63897, 4953, 13, 34744, 389, 13, 1102, 22020, 279, 4754, 369, 23331, 6299, 323, 5897, 11774, 5552, 311, 279, 2883, 596, 1005, 315, 15592, 323, 8907, 449, 6484, 7016, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ea200>, 'json_data': {'input': [[18902, 79483, 25, 2290, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5415, 330, 4155, 1359, 19392, 430, 1070, 1051, 912, 4442, 477, 91972, 5068, 304, 279, 3766, 3857, 9002, 24043, 75992, 11, 902, 1253, 3493, 44701, 311, 39210, 922, 279, 20334, 315, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ea290>, 'json_data': {'input': [[18902, 79483, 25, 16666, 54463, 2857, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 16666, 54463, 2857, 11, 19392, 279, 2883, 753, 5603, 311, 25607, 323, 18646, 6807, 15635, 5938, 449, 1202, 6020, 24198, 13, 1102, 7437, 279, 6566, 369, 264, 810, 11944, 10430, 315, 279, 15635, 6532, 304, 1202, 6020, 67029, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ea320>, 'json_data': {'input': [[18902, 79483, 25, 17961, 18591, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 17961, 18591, 11, 6376, 279, 6566, 369, 11944, 6020, 5178, 17150, 323, 6492, 369, 63897, 4953, 2637, 2737, 30466, 11, 7194, 11, 323, 1023, 6020, 34824, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ea3b0>, 'json_data': {'input': [[18902, 79483, 25, 12937, 61439, 17768, 44382, 198, 2014, 940, 1534, 73094, 25, 330, 19931, 61439, 17768, 44382, 1, 15151, 279, 17219, 315, 264, 3857, 430, 94594, 279, 7640, 5552, 311, 5708, 6108, 23146, 11, 8405, 264, 16694, 315, 279, 2883, 596, 20448, 12659, 323, 4442, 927, 279, 1060, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ea440>, 'json_data': {'input': [[18902, 79483, 25, 220, 806, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 6931, 37666, 24915, 11, 420, 12143, 15151, 264, 3857, 1396, 323, 17482, 311, 31335, 279, 2246, 11, 10695, 13016, 21546, 1555, 279, 5370, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ea4d0>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 845, 13, 28924, 220, 605, 16222, 96885, 198, 2014, 940, 1534, 73094, 25, 37032, 220, 845, 13, 28924, 220, 605, 16222, 96885]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ea560>, 'json_data': {'input': [[18902, 79483, 25, 5884, 315, 1521, 5897, 29407, 1436, 1121, 304, 5897, 7194, 11, 77364, 315, 6373, 5070, 11, 8389, 43763, 323, 1023, 84496, 311, 1057, 2626, 13, 9589, 79448, 58165, 369, 1057, 15639, 29407, 374, 264, 6485, 11, 2144, 19440, 11, 323, 66836, 1920, 430, 7612, 5199, 19971, 11, 323, 279, 15055, 584, 527, 13967, 35473, 369, 1253, 387, 2753, 1109, 477, 12771, 1057, 17989, 13, 578, 11175, 315, 832, 477, 810, 1778, 29407, 706, 19543, 304, 11, 323, 1253, 304, 279, 3938, 1121, 304, 11, 5217, 12190, 35018, 11, 31086, 11, 61529, 82, 11, 323, 1023, 24679, 430, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 4754, 85450, 315, 5897, 29407, 9932, 304, 46613, 220, 16, 11, 82003, 279, 23965, 315, 77472, 58165, 323, 279, 5938, 7194, 13, 1102, 72890, 279, 13336, 315, 8389, 25949, 389, 279, 2883, 596, 17444, 323, 6020, 2890, 11, 91115, 279, 75481, 315, 279, 5897, 18921, 14407, 6931, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ea5f0>, 'json_data': {'input': [[18902, 79483, 25, 8927, 11079, 1905, 1372, 18610, 627, 2014, 940, 1534, 73094, 25, 8927, 11079, 1905, 1372, 18610, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ea680>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 369, 420, 12143, 26, 433, 1253, 387, 264, 6002, 477, 10321, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ea710>, 'json_data': {'input': [[18902, 79483, 25, 220, 16, 13, 79980, 660, 17961, 70816, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 430, 79980, 660, 17961, 70816, 527, 961, 315, 279, 26559, 11, 902, 374, 264, 16996, 3777, 430, 18911, 279, 6020, 2704, 323, 5178, 315, 279, 2883, 927, 279, 5300, 4261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ea7a0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5751, 16125, 315, 88465, 59538, 40944, 16043, 304, 279, 6355, 315, 28454, 13, 1115, 13693, 279, 5845, 315, 23413, 5708, 17075, 311, 4135, 7690, 11426, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 50967, 315, 40944, 16043, 304, 7690, 16374, 11, 94012, 264, 17383, 430, 649, 4726, 9067, 23413, 41777, 6, 5845, 311, 10383, 279, 8925, 11, 8617, 91115, 6373, 596, 2585, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ea830>, 'json_data': {'input': [[18902, 79483, 25, 52347, 82, 922, 11, 2737, 279, 41228, 2826, 315, 11, 1057, 12659, 449, 5363, 311, 279, 4526, 11, 1005, 11, 35186, 11, 28957, 11, 477, 4868, 315, 4443, 828, 477, 1023, 828, 12, 47921, 14228, 13146, 11, 1524, 422, 9662, 13382, 11, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 13, 5751, 10396, 323, 12659, 1253, 2349, 927, 892, 439, 17078, 323, 14640, 9002, 12625, 323, 828, 2349, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 12625, 10742, 11, 82003, 279, 1205, 369, 8907, 449, 42028, 14640, 9002, 828, 4526, 323, 10648, 13, 1102, 15151, 430, 1524, 26617, 40206, 447, 27121, 304, 828, 12659, 649, 11682, 279, 2883, 596, 17444, 323, 25605, 68507, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ea8c0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1047, 10195, 653, 85408, 8554, 19310, 449, 264, 2860, 15691, 907, 315, 400, 717, 13, 24, 7239, 449, 2875, 9860, 323, 1317, 9860, 3938, 2802, 14507, 315, 400, 11584, 3610, 323, 400, 18, 13, 21, 7239, 11, 15947, 13, 1789, 5217, 2038, 11, 1518, 7181, 220, 21, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3649, 922, 63897, 4953, 3238, 82, 6020, 30255, 11, 11951, 9002, 10195, 653, 85408, 8554, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 22020, 279, 15691, 907, 315, 1521, 8554, 323, 3938, 2802, 14507, 11, 19392, 279, 2883, 596, 11897, 6671, 13, 1115, 2038, 374, 9959, 311, 15167, 323, 39210, 47614, 279, 2883, 596, 6020, 2890, 323, 6864, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ea950>, 'json_data': {'input': [[18902, 79483, 25, 5751, 12717, 8336, 315, 53113, 527, 8515, 11, 8515, 86106, 11, 323, 3157, 481, 34919, 11, 439, 1664, 439, 279, 8515, 6530, 430, 584, 7068, 505, 7677, 13, 578, 6156, 1005, 315, 6864, 9731, 311, 387, 311, 2793, 369, 279, 1317, 9860, 6650, 315, 279, 2626, 13, 1226, 15870, 15806, 1057, 8515, 323, 6864, 6070, 11, 2737, 279, 1404, 11, 18338, 11, 323, 1376, 315, 6864, 471, 311, 5708, 17075, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 12717, 8336, 315, 53113, 369, 63897, 4953, 2637, 82003, 279, 12939, 315, 8515, 6530, 505, 7677, 323, 279, 19092, 1005, 315, 6864, 369, 1317, 9860, 22538, 13, 1102, 27053, 279, 2883, 596, 5603, 311, 6020, 6373, 323, 63342, 4780, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ea9e0>, 'json_data': {'input': [[18902, 79483, 25, 220, 16, 13, 79980, 660, 17961, 70816, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 430, 79980, 660, 17961, 70816, 527, 961, 315, 279, 26559, 11, 902, 374, 264, 16996, 3777, 430, 18911, 279, 6020, 2704, 323, 5178, 315, 279, 2883, 927, 279, 5300, 4261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eaa70>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eab90>, 'json_data': {'input': [[18902, 79483, 25, 12937, 6108, 20448, 320, 50, 5002, 8, 15871, 17610, 315, 63897, 22486, 5708, 8316, 320, 11706, 3642, 570, 24107, 3642, 527, 25452, 21771, 323, 17303, 520, 279, 6762, 3157, 907, 315, 279, 16940, 5708, 520, 279, 13500, 2457, 13, 1226, 15641, 24107, 52, 20900, 1701, 279, 7833, 8614, 63124, 1749, 927, 279, 82780, 2532, 4261, 323, 2759, 369, 50032, 42204, 439, 814, 12446, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 11944, 2038, 922, 1268, 63897, 4953, 13, 11193, 323, 45799, 5708, 6108, 20448, 11, 11951, 21760, 389, 22486, 5708, 8316, 320, 11706, 3642, 570, 1102, 15100, 279, 1749, 315, 24043, 369, 24107, 3642, 323, 872, 5536, 389, 6020, 12518, 927, 892, 11, 902, 374, 7718, 369, 8830, 63897, 596, 20448, 12659, 323, 872, 6020, 25127, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eac20>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4528, 311, 921, 15655, 220, 605, 323, 220, 806, 11, 15718, 439, 264, 24693, 2449, 304, 279, 2246, 2085, 67749, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eacb0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 15806, 11, 389, 264, 5912, 8197, 11, 26006, 304, 1057, 5897, 13146, 430, 1436, 7958, 279, 3392, 315, 24305, 430, 706, 1027, 8767, 99216, 11, 323, 279, 13146, 323, 5552, 29546, 3284, 18151, 36489, 11, 323, 1304, 34074, 323, 4442, 311, 1057, 75992, 13, 90462, 19971, 374, 2631, 311, 8417, 2225, 279, 29736, 323, 279, 13240, 3392, 315, 264, 4814, 5552, 311, 1778, 13146, 13, 30070, 279, 1620, 11175, 315, 1778, 13146, 11, 1070, 1253, 387, 459, 14675, 311, 4814, 304, 13937, 315, 279, 3392, 12715, 11, 323, 1778, 15055, 1436, 387, 3769, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 25985, 988, 389, 279, 16865, 1920, 369, 5897, 13146, 323, 1268, 279, 2883, 8720, 288, 4754, 18151, 13, 1102, 72890, 279, 26431, 315, 6373, 19971, 304, 26679, 5897, 58165, 11, 902, 374, 16996, 369, 39210, 47614, 279, 2883, 596, 5326, 14675, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ead40>, 'json_data': {'input': [[18902, 79483, 25, 1666, 264, 40838, 27767, 11, 584, 527, 1101, 3917, 311, 3738, 40838, 7294, 2442, 731, 2017, 19705, 13, 9636, 40838, 2383, 11, 264, 27767, 1253, 539, 16988, 304, 264, 2626, 10824, 449, 904, 12102, 315, 220, 868, 4, 477, 810, 315, 1202, 19310, 16043, 5708, 7389, 279, 12102, 706, 5762, 279, 5708, 369, 2380, 1667, 477, 11, 4315, 1023, 2574, 11, 279, 8925, 315, 46085, 706, 12054, 279, 7901, 13, 5751, 8925, 315, 46085, 1436, 17631, 389, 40838, 2383, 311, 5471, 477, 7781, 459, 24279, 315, 603, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 40838, 596, 7294, 2442, 731, 2017, 7016, 11, 902, 33330, 5217, 17294, 389, 18970, 388, 449, 5199, 5708, 17075, 13, 1115, 2317, 57924, 279, 8830, 315, 279, 5897, 4676, 304, 902, 63897, 27149, 11, 4726, 69226, 1113, 64310, 26350, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eadd0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2316, 477, 4342, 369, 279, 2246, 11, 11951, 3453, 11780, 330, 2149, 18992, 4953, 1210, 1102, 17482, 439, 264, 44817, 2449, 323, 10109, 988, 279, 2262, 2949, 279, 2317, 315, 63897, 596, 13166, 9764, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eae60>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 578, 6420, 315, 330, 2149, 18992, 4953, 1210, 15151, 264, 3857, 430, 4461, 5727, 2038, 477, 828, 11951, 5552, 311, 279, 2883, 11, 13788, 439, 459, 13110, 369, 279, 2246, 596, 5357, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eaef0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 922, 5195, 15161, 11, 19392, 264, 6541, 505, 25394, 5195, 8471, 311, 45293, 279, 9624, 25213, 10449, 315, 63897, 596, 2626, 11, 902, 374, 264, 5199, 3158, 315, 6650, 323, 19297, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eaf80>, 'json_data': {'input': [[18902, 79483, 25, 37902, 277, 393, 718, 2192, 198, 2014, 940, 1534, 73094, 25, 37902, 277, 393, 718, 2192]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eb010>, 'json_data': {'input': [[18902, 79483, 25, 220, 1187, 627, 2014, 940, 1534, 73094, 25, 366, 2822, 1495, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eb0a0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 350, 1741, 400, 220, 1774, 11, 23477, 400, 220, 2166, 11, 25875, 400, 220, 1135, 11, 25399, 7089, 2853, 315, 30466, 220, 2397, 11, 18017, 220, 2813, 11, 14185, 220, 6086, 11, 20385, 10884, 2853, 315, 30466, 400, 220, 5120, 11, 26164, 400, 220, 9390, 11, 9639, 400, 220, 9423, 11, 17079, 10884, 2853, 315, 30466, 439, 264, 11668, 315, 30466, 220, 3391, 1034, 220, 1774, 1034, 220, 3391, 33648, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 35876, 828, 9002, 350, 1741, 323, 1023, 7194, 315, 30466, 927, 2380, 1667, 11, 39686, 18845, 323, 4442, 430, 527, 3062, 369, 8830, 279, 2883, 753, 6020, 30295, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eb130>, 'json_data': {'input': [[18902, 79483, 25, 9558, 8515, 1511, 304, 29642, 7640, 7319, 505, 220, 2366, 17, 311, 220, 2366, 18, 4245, 311, 459, 5376, 304, 2109, 75202, 315, 5708, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 35434, 279, 5376, 304, 4272, 8515, 1511, 304, 29642, 7640, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 8104, 21760, 389, 5708, 2109, 75202, 13, 1102, 5825, 26793, 1139, 279, 2883, 596, 5603, 311, 18646, 25452, 323, 13758, 6864, 311, 41777, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eb1c0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 527, 40056, 315, 279, 2768, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3063, 3502, 311, 7872, 279, 6956, 315, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 11, 8405, 459, 24131, 315, 279, 5370, 8336, 315, 8070, 2949, 420, 5699, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eb250>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 18, 13, 36526, 984, 5421, 78117, 12124, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 330, 12236, 220, 18, 13, 36526, 984, 5421, 78117, 12124, 1359, 19392, 430, 279, 2768, 2262, 690, 2686, 279, 5897, 11774, 279, 2883, 374, 5131, 13176, 477, 2643, 3663, 304, 279, 3938, 13, 1102, 17738, 279, 12939, 315, 5897, 13146, 304, 47614, 279, 2883, 596, 5326, 5643, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eb2e0>, 'json_data': {'input': [[18902, 79483, 25, 320, 17, 8, 13031, 48258, 58165, 527, 12715, 439, 99216, 18512, 323, 1023, 58165, 11, 1510, 323, 2536, 45275, 304, 279, 79980, 660, 31946, 61572, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 24790, 315, 32905, 58165, 304, 279, 2883, 596, 8335, 11071, 11, 4528, 311, 46613, 220, 605, 13, 1102, 95593, 279, 2246, 596, 5357, 389, 13687, 6020, 13122, 323, 279, 6373, 315, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eb370>, 'json_data': {'input': [[18902, 79483, 25, 763, 6186, 220, 2366, 18, 11, 584, 7376, 264, 14278, 315, 1057, 32027, 11, 323, 439, 264, 1121, 584, 12715, 9548, 3285, 685, 323, 5552, 10405, 315, 400, 17, 13, 16, 7239, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 13, 763, 5369, 11, 584, 527, 4737, 6299, 311, 30536, 1057, 3728, 5274, 3634, 13, 1666, 264, 1121, 11, 4974, 10405, 12715, 2391, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1051, 400, 16, 13, 23, 7239, 13, 763, 5369, 311, 1521, 4974, 10405, 11, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 52872, 400, 16955, 3610, 304, 49858, 8175, 323, 49858, 94189, 13, 1789, 5217, 2038, 11, 1518, 7181, 220, 23, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 17480, 315, 32027, 47311, 323, 5552, 6020, 25127, 11, 39686, 3230, 10405, 52872, 4245, 311, 1521, 6299, 13, 1102, 27053, 279, 2883, 596, 19092, 11429, 304, 18646, 7194, 323, 74142, 5274, 3634, 11, 902, 527, 16996, 369, 8830, 1202, 25605, 34074, 323, 872, 6020, 85450, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eb400>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 279, 7314, 315, 279, 6771, 315, 36962, 369, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 369, 63897, 4953, 2637, 902, 50729, 279, 14491, 323, 13650, 9960, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eb490>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 279, 7362, 11667, 9473, 2515, 389, 6625, 30466, 323, 2860, 30466, 320, 258, 11990, 11, 3734, 54208, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 18911, 279, 7362, 11667, 9473, 2515, 389, 6625, 30466, 323, 2860, 30466, 11, 902, 374, 264, 1401, 3777, 304, 8830, 1268, 11667, 65649, 5536, 279, 2883, 596, 8244, 13254, 5178, 13, 1102, 17482, 439, 264, 9320, 311, 11944, 6020, 828, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eb520>, 'json_data': {'input': [[18902, 79483, 25, 400, 3443, 400, 8652, 400, 3101, 400, 5154, 400, 1049, 400, 3965, 400, 1041, 296, 400, 1135, 400, 15, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 220, 17, 612, 320, 15, 507, 612, 56, 20619, 384, 328, 43945, 220, 2636, 624, 63897, 4953, 13, 3308, 362, 284, 16473, 63981, 41739, 284, 8713, 2345, 39092, 38, 8191, 41739, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5764, 279, 54243, 13340, 315, 279, 828, 14407, 304, 3766, 27855, 13, 1102, 43395, 62991, 279, 5178, 315, 63897, 596, 3308, 362, 5708, 2403, 279, 5300, 15285, 11, 8405, 264, 2867, 9302, 6492, 369, 13016, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eb5b0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 5178, 323, 3938, 2450, 14117, 304, 3544, 961, 5304, 279, 8738, 2532, 315, 1401, 11156, 11767, 439, 1664, 439, 3697, 315, 1057, 10195, 6373, 2128, 13, 1789, 2937, 11, 37902, 277, 393, 718, 2192, 374, 9200, 311, 279, 8244, 6373, 315, 63897, 323, 1202, 72202, 323, 11335, 459, 3062, 3560, 304, 279, 4500, 315, 1057, 5557, 11, 20958, 1057, 7829, 11, 323, 6376, 1057, 19092, 5216, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 1401, 17274, 11, 11951, 45391, 37902, 277, 393, 718, 2192, 11, 323, 872, 12939, 304, 51346, 63897, 753, 19092, 5216, 13, 1102, 72890, 279, 54180, 389, 3831, 11692, 304, 60499, 2626, 11774, 11, 63143, 1139, 279, 27927, 7057, 315, 6373, 20334, 323, 27375, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eb640>, 'json_data': {'input': [[18902, 79483, 25, 2650, 1226, 7557, 18099, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 2883, 596, 13254, 9659, 15174, 11, 19392, 264, 6541, 304, 5357, 7119, 6020, 7677, 13, 1102, 7437, 279, 6566, 369, 264, 11944, 16540, 315, 1268, 63897, 3727, 3300, 11, 8104, 1555, 1202, 13172, 323, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eb6d0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eb760>, 'json_data': {'input': [[18902, 79483, 25, 29240, 304, 2853, 17453, 29218, 323, 2853, 17453, 38025, 4099, 527, 16625, 555, 264, 1396, 315, 958, 9920, 9547, 2737, 4442, 304, 3756, 6651, 11, 46139, 6651, 11, 87386, 10374, 11, 14529, 2027, 323, 4947, 4442, 11, 2027, 6651, 11, 3424, 6651, 11, 323, 4442, 304, 7362, 11667, 9473, 7969, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 279, 9547, 28987, 2853, 17453, 29218, 323, 2853, 17453, 38025, 4099, 13, 1102, 1946, 1392, 279, 3766, 12143, 555, 45293, 279, 84140, 315, 13254, 9659, 11, 2737, 9434, 9547, 430, 1253, 5536, 58191, 2065, 17150, 11, 902, 527, 16996, 369, 50087, 10194, 279, 6020, 5178, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eb7f0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 477, 4384, 10449, 323, 1587, 539, 3493, 904, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eb880>, 'json_data': {'input': [[18902, 79483, 25, 55182, 28849, 4097, 20392, 555, 3932, 323, 2997, 28849, 389, 43749, 555, 842, 44480, 389, 5195, 2778, 6012, 323, 1023, 5195, 13234, 323, 24026, 6012, 2737, 62046, 11, 5195, 28508, 11, 323, 5195, 7199, 13, 11443, 12, 824, 29218, 374, 4613, 439, 4299, 32505, 30466, 18255, 555, 1057, 2860, 1396, 315, 7318, 28849, 323, 11105, 279, 5578, 3392, 584, 6900, 50270, 369, 1855, 20392, 555, 3932, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7434, 315, 7318, 28849, 11, 27409, 433, 323, 26073, 1202, 26431, 304, 30090, 1217, 20392, 449, 43749, 13, 1102, 34161, 279, 58191, 2065, 17150, 311, 1217, 22639, 4028, 5195, 596, 5370, 15771, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eb910>, 'json_data': {'input': [[18902, 79483, 25, 220, 1806, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 3857, 11381, 477, 2199, 1396, 323, 1587, 539, 3493, 66251, 2038, 369, 8830, 279, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eb9a0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 4510, 15592, 649, 11886, 1063, 315, 279, 37554, 59529, 11, 12624, 323, 15009, 11774, 315, 1057, 892, 13, 1789, 3187, 11, 304, 220, 2366, 15, 11, 5195, 18682, 70738, 753, 25737, 76636, 1887, 29056, 264, 220, 1135, 4771, 6418, 13128, 45842, 8815, 13, 8876, 1243, 11, 584, 617, 1825, 1355, 54492, 311, 279, 12624, 4029, 220, 1049, 3610, 315, 25737, 76636, 753, 13128, 14726, 902, 527, 1511, 311, 990, 389, 4395, 505, 69741, 502, 69263, 40300, 311, 44169, 9572, 5623, 18841, 323, 11469, 12466, 12, 12459, 56067, 13, 1666, 2500, 3187, 11, 15592, 649, 1101, 617, 264, 87435, 2515, 389, 10182, 5208, 555, 8405, 11190, 2038, 11, 52997, 10182, 14228, 4455, 11, 323, 74142, 10182, 1957, 13, 12362, 11084, 15592, 323, 3980, 437, 33514, 6492, 11, 5195, 8483, 706, 8040, 18197, 79482, 4211, 430, 649, 3493, 4216, 10163, 323, 1972, 7394, 39262, 2038, 311, 10977, 323, 7931, 627, 2014, 940, 1534, 73094, 25, 763, 420, 3857, 11, 279, 2246, 35434, 3230, 10507, 315, 15592, 8522, 11, 8104, 304, 12624, 323, 12434, 38697, 13, 1115, 46480, 63897, 596, 15507, 311, 1701, 15592, 369, 59529, 7720, 11, 67908, 1202, 3560, 304, 28118, 3728, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85eba30>, 'json_data': {'input': [[18902, 79483, 25, 220, 2366, 19, 400, 220, 18, 11, 11128, 220, 2366, 20, 220, 17, 11, 25344, 220, 2366, 21, 220, 17, 11, 10617, 220, 2366, 22, 220, 16, 11, 24989, 220, 2366, 23, 220, 16, 11, 21310, 2684, 10924, 220, 20, 11, 23717, 10884, 3938, 26120, 14507, 220, 1114, 11, 25178, 9865, 737, 19849, 2802, 320, 17, 11, 19852, 8, 10884, 26120, 24305, 8335, 400, 220, 868, 11, 13860, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 3938, 26120, 8323, 9899, 11, 15061, 1523, 279, 15055, 4245, 304, 1855, 1060, 13, 1102, 11263, 279, 3766, 12143, 323, 17482, 311, 3493, 264, 49479, 6945, 315, 279, 2883, 596, 25605, 26120, 58165, 323, 872, 1317, 9860, 6020, 9293, 11, 2737, 279, 2860, 26120, 24305, 1306, 24043, 369, 737, 19849, 2802, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ebac0>, 'json_data': {'input': [[18902, 79483, 25, 11443, 315, 30466, 17610, 315, 350, 1741, 323, 1023, 7194, 315, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 9002, 279, 2853, 315, 30466, 11, 19392, 430, 433, 690, 7872, 279, 6956, 430, 1304, 709, 420, 6020, 1584, 1537, 13, 1102, 17482, 311, 7124, 279, 7036, 315, 1148, 374, 5343, 304, 279, 2853, 315, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ebb50>, 'json_data': {'input': [[18902, 79483, 25, 65752, 279, 7648, 21844, 11, 23088, 11, 323, 68728, 15592, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 264, 15507, 311, 11469, 11084, 323, 8647, 15592, 14645, 11, 19392, 430, 279, 2768, 2262, 690, 37067, 389, 3230, 15592, 28271, 323, 4211, 1694, 46531, 555, 63897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ebbe0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 7314, 315, 264, 502, 3857, 477, 2199, 11, 4461, 5552, 311, 12920, 315, 8970, 477, 70552, 430, 8641, 279, 6742, 1555, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ebc70>, 'json_data': {'input': [[18902, 79483, 25, 8292, 315, 11835, 320, 269, 34630, 7246, 315, 2585, 72946, 705, 16346, 11, 323, 10396, 520, 279, 19426, 2883, 280, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 12143, 35434, 279, 8292, 315, 5995, 11835, 323, 16346, 304, 279, 19426, 2883, 11, 22364, 311, 279, 15635, 5938, 449, 23391, 8907, 323, 25605, 29237, 13, 1115, 18809, 1139, 264, 8294, 2317, 315, 4245, 63582, 323, 6373, 11774, 430, 31889, 2391, 279, 18052, 10474, 315, 63948, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ebd00>, 'json_data': {'input': [[18902, 79483, 25, 18052, 315, 279, 19426, 2883, 753, 24043, 323, 1023, 23541, 6067, 11, 323, 279, 38793, 315, 2027, 11, 15009, 11, 323, 6763, 323, 8661, 5865, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 279, 96968, 11774, 315, 54952, 24043, 323, 23541, 6067, 1772, 38698, 17647, 13, 1102, 36716, 311, 279, 27927, 19775, 315, 1268, 25605, 92126, 649, 387, 44500, 2391, 18970, 388, 323, 63948, 422, 539, 9152, 13750, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ebd90>, 'json_data': {'input': [[18902, 79483, 25, 35211, 6444, 5371, 8515, 6108, 36580, 477, 20746, 11, 902, 527, 41853, 369, 439, 3977, 18361, 13, 1226, 16430, 1521, 15055, 3196, 389, 279, 3685, 3392, 311, 387, 3984, 311, 6444, 323, 8108, 30466, 13, 1226, 4510, 430, 1070, 690, 539, 387, 5199, 4442, 311, 1057, 17989, 315, 3977, 18361, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 1268, 8515, 6108, 36580, 477, 20746, 3984, 311, 6444, 527, 12020, 304, 24043, 3878, 439, 3977, 18361, 13, 1102, 22020, 279, 42304, 1920, 369, 1521, 36580, 11, 902, 374, 3062, 369, 8830, 13254, 34074, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ebe20>, 'json_data': {'input': [[18902, 79483, 25, 25733, 2140, 287, 6072, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 14836, 369, 264, 3857, 25394, 330, 40938, 2140, 287, 6072, 1359, 902, 18713, 1771, 311, 4754, 58165, 279, 2883, 1253, 3663, 4245, 311, 5370, 5897, 8349, 477, 42254, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ebeb0>, 'json_data': {'input': [[18902, 79483, 25, 220, 2075, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 5905, 2949, 279, 2246, 11, 4461, 19392, 279, 842, 315, 264, 3857, 477, 2007, 13, 1102, 1587, 539, 3493, 67749, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3ea85ebf40>, 'json_data': {'input': [[18902, 79483, 25, 5858, 220, 605, 13, 46085, 11, 18362, 49947, 11, 323, 36565, 81689, 5858, 220, 806, 13, 18362, 70396, 5858, 220, 717, 13, 8398, 86036, 315, 35211, 27372, 7235, 40566, 323, 9744, 323, 25368, 12937, 4346, 58364, 5858, 220, 1032, 13, 35211, 69668, 323, 25368, 56385, 11, 323, 10783, 44177, 5858, 220, 975, 13, 37409, 8785, 519, 59678, 323, 8471, 6909, 17244, 5858, 220, 868, 13, 40374, 1220, 11, 17961, 22504, 328, 50713, 5858, 220, 845, 13, 3459, 220, 605, 16222, 22241, 7220, 2859, 220, 1954, 220, 1954, 220, 1954, 220, 1954, 220, 1954, 220, 5925, 220, 6281, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 3230, 3673, 9960, 304, 3744, 14767, 315, 279, 1934, 11, 19392, 279, 5357, 389, 28454, 11, 11145, 20448, 11, 323, 5552, 14463, 13, 1115, 374, 7718, 369, 41777, 8173, 304, 35186, 323, 20448, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400040>, 'json_data': {'input': [[18902, 79483, 25, 11443, 315, 30466, 374, 40056, 315, 350, 1741, 323, 1023, 7194, 315, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19170, 279, 6956, 315, 330, 15289, 315, 1050, 46469, 1359, 11951, 27401, 430, 433, 5764, 38081, 73471, 64141, 320, 51, 1741, 8, 323, 1023, 18512, 11, 8617, 35744, 279, 95844, 369, 264, 11944, 31085, 315, 1521, 7194, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884000d0>, 'json_data': {'input': [[18902, 79483, 25, 77364, 315, 6373, 892, 323, 5357, 505, 10565, 1057, 2626, 311, 11774, 5552, 311, 63948, 323, 1023, 19092, 28904, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 264, 4754, 5326, 5938, 449, 63948, 323, 19092, 28904, 11, 82003, 430, 6373, 596, 892, 323, 5357, 1253, 387, 86494, 505, 6332, 2626, 7677, 13, 1115, 374, 961, 315, 264, 27927, 10430, 389, 279, 11774, 430, 63897, 4953, 13, 1253, 3663, 994, 34118, 6650, 1555, 63948, 11, 902, 1436, 5536, 1202, 8244, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400160>, 'json_data': {'input': [[18902, 79483, 25, 5751, 10565, 3135, 617, 39388, 13148, 11, 323, 1253, 304, 279, 3938, 39388, 6426, 11, 439, 264, 1121, 315, 264, 1396, 315, 9547, 11, 1690, 4994, 315, 1057, 2585, 11, 2737, 279, 44448, 32348, 7138, 323, 3280, 2786, 304, 1057, 2626, 323, 87998, 4455, 13, 1666, 264, 1121, 11, 27393, 1057, 10565, 3135, 320, 16564, 1057, 18512, 439, 264, 11668, 315, 1057, 30466, 8, 389, 264, 4261, 4791, 99181, 8197, 1253, 539, 387, 23222, 11, 323, 1057, 3347, 3135, 1288, 539, 387, 41013, 389, 439, 459, 28137, 315, 1057, 3938, 5178, 13, 53123, 11, 1057, 10565, 3135, 304, 3938, 32573, 1253, 4498, 3770, 17078, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 810, 7872, 922, 279, 9547, 29820, 311, 10565, 1121, 65649, 11, 19392, 430, 9434, 7482, 1778, 439, 3280, 2786, 323, 87998, 4455, 1304, 3347, 5178, 2753, 15062, 369, 52997, 3938, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884001f0>, 'json_data': {'input': [[18902, 79483, 25, 45578, 7410, 389, 1057, 10565, 37682, 505, 7859, 14640, 11, 7859, 10937, 11, 323, 7859, 7194, 369, 1690, 13878, 315, 1057, 2626, 13, 15903, 11, 3738, 315, 1057, 7194, 323, 18512, 527, 8965, 2753, 3977, 304, 7138, 323, 1253, 539, 81584, 311, 4442, 304, 13254, 13, 1226, 1253, 1101, 539, 387, 3025, 311, 9203, 1057, 9045, 311, 312, 50725, 261, 1057, 2853, 2385, 7946, 477, 304, 264, 32100, 11827, 13, 24586, 311, 1521, 9547, 323, 279, 42028, 7138, 315, 1057, 2626, 11, 1057, 13970, 13254, 6650, 4478, 323, 13970, 10565, 4850, 1253, 539, 387, 64005, 315, 1057, 3938, 5178, 13, 1789, 5217, 2038, 11, 1518, 50730, 304, 5751, 8184, 323, 17961, 13756, 323, 1050, 46469, 323, 3206, 295, 2065, 55290, 304, 3744, 8105, 11, 5858, 220, 22, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 10449, 35434, 279, 14529, 40850, 389, 10565, 37682, 4245, 311, 5370, 9547, 11, 2737, 23331, 7194, 323, 10937, 13, 1102, 72890, 279, 27924, 315, 3938, 6020, 5178, 3196, 389, 1510, 18845, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400280>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400310>, 'json_data': {'input': [[18902, 79483, 25, 1252, 6387, 5303, 660, 12689, 25074, 53349, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3857, 4342, 369, 279, 10430, 389, 653, 6387, 5303, 660, 12689, 25074, 53349, 11, 19392, 279, 5357, 690, 6541, 311, 650, 5484, 82, 1405, 279, 2883, 1587, 539, 617, 26991, 2802, 13, 1102, 48542, 279, 6742, 369, 75055, 6514, 7863, 311, 60391, 15086, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884003a0>, 'json_data': {'input': [[18902, 79483, 25, 220, 717, 627, 2014, 940, 1534, 73094, 25, 1115, 8111, 311, 387, 264, 3666, 32277, 1493, 477, 264, 90660, 1396, 2085, 904, 2317, 477, 2262, 311, 24564, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400430>, 'json_data': {'input': [[18902, 79483, 25, 1789, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 584, 15324, 3827, 7720, 389, 2860, 328, 5002, 20900, 11, 902, 527, 27000, 304, 279, 17575, 369, 8070, 13426, 304, 279, 79980, 660, 70816, 315, 33620, 11, 315, 400, 18, 13, 16, 7239, 11, 400, 18, 13, 24, 7239, 11, 323, 400, 19, 13, 20, 7239, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 12143, 35434, 279, 3827, 7720, 15324, 505, 328, 5002, 18512, 927, 2380, 20323, 1667, 13, 1115, 2038, 374, 7718, 369, 8830, 279, 3827, 25127, 315, 9548, 20448, 15174, 389, 279, 2883, 596, 6020, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884004c0>, 'json_data': {'input': [[18902, 79483, 25, 77595, 5742, 7817, 220, 4645, 1087, 793, 353, 55335, 75760, 4833, 15545, 17404, 27571, 51968, 6074, 3231, 12051, 220, 6849, 18230, 5874, 42966, 2956, 2958, 320, 70964, 2949, 279, 55335, 75760, 4833, 2246, 323, 13282, 304, 77595, 220, 4645, 8, 67795, 555, 5905, 36881, 3459, 2696, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 31324, 1160, 323, 3649, 3230, 9477, 5552, 311, 279, 2883, 596, 6020, 13122, 11, 2737, 75760, 4833, 72906, 20300, 11, 902, 527, 5199, 369, 7528, 6020, 13122, 323, 8907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400550>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 29091, 323, 1755, 311, 3136, 311, 2793, 304, 502, 9873, 11, 3956, 11, 3600, 11, 323, 14645, 304, 264, 7029, 2134, 315, 19647, 7953, 2930, 13172, 13, 578, 22538, 430, 584, 527, 3339, 4028, 1057, 9873, 11, 1778, 439, 4857, 15592, 17357, 1139, 502, 323, 6484, 3956, 323, 3600, 11, 8881, 1057, 14529, 9045, 311, 92064, 323, 3493, 3956, 323, 3600, 430, 527, 11190, 311, 3932, 11, 50270, 11, 36717, 11, 6444, 11, 323, 2262, 12850, 13, 5751, 22538, 13967, 1253, 539, 387, 54453, 31528, 477, 1253, 539, 1121, 304, 459, 26613, 471, 315, 6864, 323, 11, 304, 34118, 502, 15174, 11, 584, 1253, 62622, 653, 93878, 58165, 13, 55947, 811, 304, 1057, 3956, 323, 3600, 1436, 1101, 1121, 304, 4442, 311, 1217, 7865, 323, 7958, 1057, 13254, 18845, 13, 4314, 79645, 21736, 5199, 15635, 323, 69867, 11, 2737, 77364, 315, 5070, 323, 6373, 6666, 505, 1510, 7677, 11, 2204, 58191, 2065, 4211, 11, 323, 279, 1005, 315, 10778, 9341, 11, 35186, 11, 477, 20448, 14726, 430, 1253, 3775, 311, 49672, 5398, 36580, 4028, 279, 2883, 477, 6062, 22829, 872, 26470, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 2883, 596, 8446, 311, 2793, 4028, 5370, 19647, 11, 2737, 15592, 13, 1102, 35434, 279, 4754, 15635, 323, 69867, 17791, 311, 1521, 22538, 11, 19392, 430, 814, 1253, 539, 7692, 279, 3685, 4780, 477, 1436, 1893, 96691, 29412, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884005e0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 5217, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400670>, 'json_data': {'input': [[18902, 79483, 25, 48023, 1666, 315, 6790, 220, 2148, 11, 386, 38954, 46030, 20359, 25074, 20359, 220, 2366, 17, 220, 2366, 18, 58654, 220, 679, 19, 12, 2366, 15, 18559, 53066, 3095, 220, 2366, 19, 482, 220, 11056, 15, 220, 15, 13, 1774, 4, 482, 220, 18, 13, 1987, 4, 220, 15, 13, 3226, 4, 482, 220, 18, 13, 1987, 4, 400, 220, 1032, 11, 931, 400, 220, 1032, 11, 931, 12781, 17452, 26120, 14507, 11, 4272, 323, 1023, 320, 16, 8, 220, 17, 11, 10239, 220, 16, 11, 25594, 10884, 11897, 220, 868, 11, 10239, 220, 975, 11, 25594, 1252, 309, 371, 1534, 11336, 323, 11897, 67599, 7194, 320, 10290, 8, 320, 5894, 8, 9865, 25, 9303, 13651, 315, 1317, 9860, 8554, 7, 17, 8, 220, 15, 320, 16, 11, 931, 8, 9865, 25, 9303, 13651, 315, 3938, 17452, 26120, 14507, 11, 4272, 323, 1023, 1510, 11897, 7, 16, 2432, 17, 8, 320, 17690, 8, 320, 18199, 8, 10884, 1317, 9860, 11897, 400, 220, 975, 11, 19597, 400, 220, 1032, 11, 14022, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 31085, 315, 63897, 4953, 3238, 82, 11897, 439, 315, 6790, 220, 2148, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 5764, 2038, 389, 8554, 11136, 11, 48261, 13003, 11, 24759, 7969, 11, 323, 279, 8244, 1317, 9860, 11897, 2361, 11, 902, 374, 16996, 369, 8830, 279, 2883, 753, 6864, 6070, 323, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400700>, 'json_data': {'input': [[18902, 79483, 25, 5751, 14529, 22538, 304, 7296, 11, 4868, 11, 323, 2262, 3477, 690, 4461, 3136, 311, 10765, 11737, 315, 1057, 15771, 323, 62851, 315, 1217, 828, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7057, 315, 7296, 323, 4868, 2949, 279, 27927, 2317, 315, 279, 2246, 11, 902, 35434, 5370, 15635, 323, 11774, 17011, 555, 279, 2883, 13, 1102, 13533, 264, 59314, 5603, 311, 25607, 323, 28118, 62851, 389, 872, 15771, 11, 6376, 279, 6566, 369, 810, 11944, 20954, 389, 3230, 11193, 4529, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400790>, 'json_data': {'input': [[18902, 79483, 25, 69618, 19025, 323, 10441, 23139, 34884, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 25891, 330, 43, 5118, 19025, 323, 10441, 23139, 34884, 1, 35434, 63897, 4953, 3238, 82, 6020, 2890, 323, 5845, 311, 3449, 1202, 30255, 13, 1102, 4461, 8111, 304, 264, 27927, 6020, 6492, 2317, 11, 1405, 279, 2883, 596, 8515, 6373, 15174, 323, 53113, 2361, 527, 26126, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400820>, 'json_data': {'input': [[18902, 79483, 25, 10928, 9469, 4289, 58654, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 10430, 389, 2875, 9860, 11897, 11, 19392, 279, 7138, 315, 279, 2883, 596, 53675, 8446, 13, 1102, 7437, 279, 6566, 369, 8830, 279, 2883, 753, 53113, 6373, 323, 14247, 6020, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884008b0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1987, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 11, 902, 17482, 439, 264, 5905, 1486, 2949, 279, 2246, 719, 1587, 539, 3493, 67749, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400940>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 26, 912, 1495, 311, 24564, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884009d0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 7314, 315, 279, 6771, 315, 36962, 369, 279, 2246, 11, 23377, 430, 279, 2768, 14491, 690, 21782, 279, 6070, 315, 279, 4553, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400a60>, 'json_data': {'input': [[18902, 79483, 25, 578, 15691, 2819, 315, 1057, 25452, 1749, 22538, 11, 902, 89518, 13489, 400, 16, 13, 22, 7239, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 8965, 656, 539, 39388, 6426, 3196, 389, 3157, 3430, 4442, 13, 4452, 11, 1521, 22538, 1436, 387, 50160, 422, 279, 15691, 907, 36375, 279, 6762, 907, 323, 374, 539, 3685, 311, 11993, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 15691, 2819, 315, 25452, 1749, 22538, 323, 872, 88636, 311, 53317, 13, 1102, 5825, 20616, 1139, 1268, 63897, 4953, 13, 9815, 369, 1521, 22538, 323, 279, 4754, 15635, 5938, 449, 872, 51262, 11, 902, 374, 9959, 369, 38663, 279, 2883, 753, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400af0>, 'json_data': {'input': [[18902, 79483, 25, 220, 12676, 11, 12815, 25441, 2014, 940, 1534, 73094, 25, 1115, 7216, 11105, 279, 2860, 58165, 323, 5708, 17075, 6, 25452, 369, 279, 1060, 220, 2366, 17, 11, 8405, 264, 5995, 12593, 2403, 279, 220, 2366, 18, 12678, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400b80>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 13, 74006, 59351, 9182, 70245, 8606, 54695, 44267, 198, 2014, 940, 1534, 73094, 25, 1115, 2316, 40019, 279, 60391, 8335, 25112, 315, 63897, 4953, 2637, 902, 3493, 264, 16694, 315, 279, 2883, 753, 6020, 2361, 11, 2737, 12032, 11, 58165, 11, 323, 5708, 17075, 529, 25452, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400c10>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400ca0>, 'json_data': {'input': [[18902, 79483, 25, 220, 17, 13, 17961, 22504, 328, 50713, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 17961, 22504, 328, 50713, 11, 902, 11383, 3493, 5217, 3649, 477, 31085, 82, 315, 3230, 6020, 828, 430, 1862, 279, 60391, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400d30>, 'json_data': {'input': [[18902, 79483, 25, 6104, 584, 617, 12514, 5199, 5070, 311, 12625, 323, 4868, 10672, 2077, 17357, 11, 2737, 12514, 15603, 10672, 2077, 7411, 11, 1057, 2077, 1920, 11, 8104, 2391, 3115, 315, 264, 5933, 21426, 477, 28522, 11, 1253, 539, 387, 26613, 11, 1253, 3775, 311, 30357, 8720, 279, 31020, 315, 459, 10672, 11, 1253, 539, 387, 5043, 3403, 311, 5471, 477, 4017, 11682, 11, 477, 1253, 3775, 311, 40044, 34630, 6629, 459, 10672, 13, 1666, 264, 1121, 11, 584, 1253, 7831, 5199, 5897, 11, 43839, 1697, 11, 477, 6020, 14675, 11, 902, 1436, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 2883, 596, 9341, 304, 12625, 323, 4868, 10672, 2077, 17357, 1418, 61708, 4754, 40206, 447, 27121, 304, 2077, 9045, 2391, 58187, 13, 1102, 72890, 279, 14529, 11774, 304, 23391, 7524, 10672, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400dc0>, 'json_data': {'input': [[18902, 79483, 25, 26182, 240, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 4519, 264, 32400, 369, 19392, 3508, 279, 23702, 519, 81007, 439, 264, 1664, 22015, 52614, 55935, 13, 1102, 374, 961, 315, 279, 2246, 596, 21416, 5540, 369, 23331, 24790, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400e50>, 'json_data': {'input': [[18902, 79483, 25, 220, 966, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 3493, 9959, 2038, 477, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400ee0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 13166, 9764, 315, 279, 1934, 11, 25607, 433, 439, 33152, 311, 63897, 4953, 2637, 279, 2748, 2883, 315, 5195, 13, 1102, 64664, 279, 2317, 369, 279, 2262, 430, 11263, 11, 902, 18713, 1771, 311, 279, 7677, 323, 15174, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88400f70>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 22, 11, 420, 3857, 374, 4461, 961, 315, 279, 2246, 596, 6070, 11, 11951, 279, 2007, 315, 8970, 11, 902, 2942, 4861, 279, 14491, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401000>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 279, 6771, 315, 36962, 315, 279, 2246, 11, 902, 50729, 279, 6070, 323, 7471, 315, 279, 1934, 13, 1102, 5825, 459, 24131, 315, 279, 2204, 14491, 323, 13650, 9960, 11, 10695, 13016, 21546, 279, 2246, 13750, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401090>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1101, 9395, 311, 35608, 279, 27068, 315, 35326, 5070, 4028, 1057, 7677, 11, 3956, 11, 323, 8312, 27271, 13, 5751, 28029, 488, 16565, 5357, 389, 30829, 704, 12571, 505, 279, 1212, 11, 10494, 7384, 304, 1005, 369, 439, 1317, 439, 3284, 11, 323, 22923, 9498, 7384, 72318, 1057, 828, 19169, 11, 93162, 11, 323, 3956, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 35434, 5195, 596, 16565, 20034, 520, 88278, 5211, 27068, 323, 12571, 14278, 4028, 1202, 7677, 323, 8312, 27271, 13, 1102, 66159, 279, 2883, 596, 15507, 311, 28029, 8752, 12659, 11, 29820, 311, 1202, 8244, 41329, 19775, 323, 12434, 12014, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401120>, 'json_data': {'input': [[18902, 79483, 25, 5884, 315, 1521, 5897, 29407, 1436, 1121, 304, 5897, 7194, 11, 77364, 315, 6373, 5070, 11, 8389, 43763, 323, 1023, 84496, 311, 1057, 2626, 13, 9589, 79448, 58165, 369, 1057, 15639, 29407, 374, 264, 6485, 11, 2144, 19440, 11, 323, 66836, 1920, 430, 7612, 5199, 19971, 11, 323, 279, 15055, 584, 527, 13967, 35473, 369, 1253, 387, 2753, 1109, 477, 12771, 1057, 17989, 13, 578, 11175, 315, 832, 477, 810, 1778, 29407, 706, 19543, 304, 11, 323, 1253, 304, 279, 3938, 1121, 304, 11, 5217, 12190, 35018, 11, 31086, 11, 61529, 82, 11, 323, 1023, 24679, 430, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 4754, 85450, 315, 5897, 29407, 9932, 304, 46613, 220, 16, 11, 82003, 279, 23965, 315, 77472, 58165, 323, 279, 5938, 7194, 13, 1102, 72890, 279, 13336, 315, 8389, 25949, 389, 279, 2883, 596, 17444, 323, 6020, 2890, 11, 91115, 279, 75481, 315, 279, 5897, 18921, 14407, 6931, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884011b0>, 'json_data': {'input': [[18902, 79483, 25, 37032, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5042, 15151, 264, 6002, 369, 264, 17876, 1537, 304, 279, 2246, 11, 4461, 311, 387, 49926, 369, 41295, 10096, 304, 279, 8244, 1934, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401240>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3956, 323, 3600, 21736, 279, 5942, 11, 11850, 11, 323, 18874, 315, 34333, 323, 1023, 16614, 2038, 13, 4476, 23367, 11, 28483, 11, 62851, 11, 42655, 11, 52227, 304, 1057, 3956, 323, 3600, 11, 323, 4868, 69140, 29241, 603, 311, 264, 5326, 315, 4814, 477, 41086, 1005, 323, 28957, 315, 1778, 2038, 11, 902, 1436, 1121, 304, 39725, 323, 1023, 4754, 58165, 11, 2737, 23331, 35018, 323, 31086, 11, 439, 1664, 439, 43839, 1697, 11682, 13, 23212, 11, 1057, 3956, 33435, 7701, 11156, 323, 6485, 14645, 11, 323, 8617, 1057, 14645, 323, 3241, 617, 13282, 11, 323, 527, 4461, 304, 279, 3938, 311, 6782, 11, 2073, 295, 1599, 6103, 11, 23367, 11, 323, 5255, 52227, 13, 1226, 3136, 311, 923, 502, 4519, 16239, 15592, 311, 1057, 33935, 323, 5419, 6067, 11, 323, 4519, 430, 17631, 389, 15592, 1253, 387, 47281, 311, 653, 93878, 4868, 18208, 439, 1057, 323, 279, 3157, 753, 8830, 315, 15592, 65524, 4868, 15635, 323, 9313, 5528, 3136, 311, 2274, 13, 1226, 617, 304, 279, 3347, 11352, 11, 323, 1253, 304, 279, 3938, 7142, 11, 1063, 6103, 304, 1057, 3241, 2082, 1193, 1306, 584, 617, 6004, 279, 2082, 13, 15264, 323, 2585, 28950, 11, 4868, 69140, 11, 8060, 311, 26069, 449, 1057, 12625, 10396, 11, 323, 5255, 59928, 306, 28957, 315, 1217, 828, 1436, 1121, 304, 3109, 323, 5897, 14675, 11, 14243, 11682, 1057, 17444, 11, 6883, 11, 323, 2626, 11, 323, 38974, 1057, 5845, 311, 9504, 323, 14389, 3932, 477, 6444, 13, 15483, 24455, 617, 10222, 304, 279, 3347, 323, 1253, 3136, 311, 12446, 4245, 311, 279, 5569, 323, 7138, 315, 1057, 3956, 323, 3600, 13, 6104, 1070, 374, 912, 15803, 430, 1778, 24455, 690, 539, 5353, 5199, 5674, 11, 584, 1755, 311, 3136, 311, 28410, 5199, 5070, 311, 10519, 4868, 37424, 430, 4017, 279, 2515, 315, 23367, 11, 28483, 11, 62851, 11, 323, 4868, 52227, 477, 69140, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 15635, 5938, 449, 11850, 16614, 2038, 11, 45293, 279, 52227, 323, 4754, 58165, 430, 1436, 31889, 505, 3241, 42655, 477, 4868, 69140, 13, 1102, 59623, 279, 12939, 315, 20958, 22514, 4868, 11193, 311, 6144, 2225, 279, 2883, 323, 1202, 3932, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884012d0>, 'json_data': {'input': [[18902, 79483, 25, 2290, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 78864, 430, 1070, 527, 912, 34919, 9879, 1234, 11360, 220, 717, 3348, 8, 315, 279, 3298, 13, 1102, 5825, 264, 2867, 17102, 311, 279, 3766, 3857, 11, 19392, 430, 63897, 1587, 539, 617, 904, 5217, 34919, 311, 36333, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401360>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4382, 5905, 311, 279, 2007, 315, 8970, 11, 902, 2942, 4861, 279, 2246, 753, 6070, 323, 6276, 13016, 311, 21546, 1555, 5370, 14491, 6847, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884013f0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2007, 3770, 3649, 279, 5820, 315, 279, 41458, 369, 6807, 18151, 323, 6763, 20746, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 2007, 45293, 279, 5820, 315, 41458, 369, 6807, 18151, 323, 6763, 20746, 927, 2380, 1667, 13, 1102, 374, 9200, 369, 8830, 1268, 279, 2883, 29972, 6020, 15635, 323, 45799, 4754, 18151, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401480>, 'json_data': {'input': [[18902, 79483, 25, 70128, 315, 79980, 367, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 70128, 315, 79980, 367, 11, 902, 15100, 279, 24043, 16565, 1511, 369, 28230, 1113, 6020, 12518, 13, 1102, 374, 7718, 369, 8830, 1268, 63897, 9815, 369, 1202, 15086, 323, 22538, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401510>, 'json_data': {'input': [[18902, 79483, 25, 4314, 6020, 12518, 527, 279, 12014, 315, 279, 8351, 596, 6373, 13, 5751, 12014, 374, 311, 3237, 459, 9647, 389, 279, 8351, 753, 6020, 12518, 3196, 389, 1057, 75620, 13, 1226, 527, 264, 586, 24043, 7626, 9879, 449, 279, 62029, 21257, 323, 527, 2631, 311, 387, 9678, 449, 5201, 311, 279, 8351, 304, 18859, 449, 279, 549, 815, 13, 6918, 34919, 7016, 323, 279, 8581, 5718, 323, 14640, 315, 279, 46272, 323, 19224, 9849, 323, 279, 62029, 21257, 627, 2014, 940, 1534, 73094, 25, 763, 420, 961, 11, 279, 6264, 12170, 38263, 279, 28423, 315, 2225, 279, 2883, 596, 6373, 323, 279, 6264, 12170, 11, 82003, 872, 24589, 323, 71628, 311, 23331, 10886, 2391, 279, 25261, 1920, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884015a0>, 'json_data': {'input': [[18902, 79483, 25, 29226, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 264, 3857, 4342, 369, 330, 23120, 1359, 23377, 430, 279, 2768, 2262, 690, 2686, 63897, 596, 15808, 6373, 323, 24043, 10396, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401630>, 'json_data': {'input': [[18902, 79483, 25, 24679, 11, 1179, 323, 7637, 11835, 11, 1023, 3157, 2680, 30740, 11, 5054, 59322, 11, 87998, 39510, 11, 4442, 304, 61911, 11, 477, 17903, 12324, 320, 21470, 439, 14529, 26885, 304, 279, 12877, 6460, 323, 19278, 705, 904, 315, 902, 1253, 7958, 1057, 2626, 50106, 11, 5376, 1057, 10565, 7194, 11, 4017, 7631, 369, 1057, 3956, 323, 3600, 11, 4017, 1057, 5845, 311, 2592, 6956, 477, 1620, 3956, 11, 477, 5471, 477, 3242, 15686, 603, 505, 10565, 304, 3738, 56043, 11, 89506, 449, 2254, 7016, 11, 477, 10209, 3956, 477, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 5217, 15635, 77044, 505, 87998, 4819, 11, 1778, 439, 24679, 11, 5054, 59322, 11, 323, 17903, 26885, 11, 430, 1436, 5536, 279, 2883, 596, 25605, 17357, 11, 7194, 11, 323, 3157, 7631, 13, 1102, 22890, 389, 279, 3766, 12143, 555, 4726, 94012, 279, 6485, 3728, 18921, 304, 902, 63897, 27149, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884016c0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6373, 374, 8647, 369, 31692, 323, 20958, 26613, 5419, 2585, 927, 6020, 13122, 11, 439, 4613, 304, 18592, 220, 1032, 64, 12, 868, 968, 8, 315, 279, 19224, 3298, 13, 5751, 6373, 13375, 459, 16865, 315, 279, 27375, 315, 1057, 5419, 2585, 927, 6020, 13122, 3196, 389, 279, 12914, 304, 15774, 7935, 2345, 83537, 24686, 11136, 555, 279, 10554, 315, 328, 2805, 5620, 67792, 315, 279, 350, 888, 3195, 9849, 320, 679, 18, 12914, 570, 20817, 389, 420, 16865, 11, 6373, 20536, 430, 1057, 5419, 2585, 927, 6020, 13122, 574, 7524, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 9744, 22690, 279, 3135, 315, 1202, 15813, 449, 1057, 48746, 323, 60270, 10554, 13, 578, 27375, 315, 1057, 5419, 2585, 927, 6020, 13122, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 706, 1027, 6264, 1639, 555, 74210, 612, 13566, 69065, 11, 459, 9678, 9879, 586, 24043, 7626, 11, 439, 11224, 304, 1202, 1934, 902, 374, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 6373, 596, 3560, 304, 31692, 7524, 5419, 11835, 11, 82003, 279, 16865, 1920, 323, 279, 22315, 315, 9434, 6264, 12170, 11, 902, 11621, 38769, 311, 279, 2883, 596, 6020, 13122, 12914, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401750>, 'json_data': {'input': [[18902, 79483, 25, 3674, 3772, 477, 1023, 15771, 11, 902, 1436, 11682, 1057, 2626, 13, 1102, 374, 2653, 311, 7168, 279, 11774, 584, 1253, 13123, 304, 70817, 1057, 3956, 323, 3600, 323, 11469, 15022, 502, 3956, 323, 3600, 13, 1226, 1755, 311, 3136, 311, 48772, 5199, 5070, 311, 6968, 323, 12899, 3956, 323, 3600, 4028, 5361, 15771, 323, 7766, 13, 435, 14612, 311, 9504, 323, 14389, 264, 12190, 1396, 315, 502, 3756, 17032, 11, 20972, 11, 56694, 11, 13707, 11, 323, 3932, 11, 477, 22109, 311, 2274, 3956, 323, 14645, 430, 990, 1664, 389, 502, 7766, 323, 15771, 11, 1436, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 323, 5845, 311, 12602, 3938, 2626, 10708, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 505, 46613, 220, 16, 11, 25985, 1113, 389, 279, 4754, 11682, 311, 279, 2626, 422, 279, 2883, 14865, 311, 10737, 1202, 3956, 369, 24084, 15771, 323, 7766, 13, 1102, 95593, 279, 12939, 315, 19297, 304, 279, 3663, 315, 10937, 323, 279, 1205, 369, 12190, 9341, 304, 2027, 4500, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884017e0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 13454, 315, 279, 6771, 315, 36962, 505, 46613, 220, 16, 11, 19392, 279, 6070, 315, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 369, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401870>, 'json_data': {'input': [[18902, 79483, 25, 3314, 7016, 10217, 279, 8863, 315, 6160, 24264, 2038, 11, 1778, 439, 279, 19174, 12371, 24264, 8245, 19406, 3298, 323, 279, 8421, 40985, 477, 5560, 315, 12371, 24264, 35721, 3298, 11, 902, 33330, 30255, 389, 9873, 430, 6667, 477, 36333, 11761, 6160, 24264, 2038, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 1614, 7016, 18815, 279, 8863, 315, 6160, 24264, 2038, 11, 27401, 3230, 10507, 1093, 279, 19174, 323, 8421, 7016, 13, 1102, 11621, 8149, 311, 279, 10430, 389, 12625, 14640, 555, 94012, 279, 29865, 30255, 27070, 389, 9873, 11, 47594, 279, 8830, 315, 23331, 84140, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401900>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 11, 502, 323, 42028, 3956, 323, 3600, 11, 2737, 1884, 430, 1005, 15592, 11, 4933, 31308, 11, 30116, 11, 5897, 11, 23331, 11, 323, 1023, 11774, 11, 902, 1253, 48291, 7958, 1057, 16097, 323, 7631, 369, 1057, 3956, 323, 3600, 13, 9393, 682, 315, 1521, 9341, 5789, 527, 49188, 41273, 11, 912, 44701, 649, 387, 2728, 430, 1778, 15174, 323, 33935, 690, 387, 6992, 477, 690, 539, 11682, 1057, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 35434, 279, 31308, 11, 5897, 11, 323, 23331, 11774, 37260, 555, 502, 3956, 323, 3600, 11, 5423, 1884, 35988, 15592, 13, 1102, 66159, 279, 38088, 15635, 304, 1521, 22538, 323, 872, 4754, 8389, 25949, 389, 279, 2883, 596, 17444, 323, 6020, 11509, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401990>, 'json_data': {'input': [[18902, 79483, 25, 5195, 13172, 30466, 527, 40056, 315, 279, 2768, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 279, 2768, 2262, 690, 3493, 264, 31085, 315, 330, 14783, 13172, 30466, 1359, 23377, 264, 11944, 6492, 315, 420, 13254, 5699, 596, 6956, 323, 5178, 13, 1102, 374, 9200, 369, 39210, 8173, 304, 279, 49449, 315, 63897, 596, 13172, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401a20>, 'json_data': {'input': [[18902, 79483, 25, 220, 6069, 627, 2014, 940, 1534, 73094, 25, 1115, 374, 4461, 264, 2199, 1396, 5905, 477, 11381, 2949, 279, 2246, 11, 8405, 912, 12190, 2038, 389, 1202, 1866, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401ab0>, 'json_data': {'input': [[18902, 79483, 25, 578, 8351, 753, 6373, 374, 8647, 369, 20958, 7524, 5419, 2585, 927, 6020, 13122, 323, 369, 1202, 15813, 315, 279, 27375, 315, 5419, 2585, 927, 6020, 13122, 5343, 304, 279, 24442, 9744, 753, 8423, 389, 15774, 7935, 927, 17961, 47793, 13, 5751, 12014, 374, 311, 3237, 459, 9647, 389, 279, 8351, 753, 5419, 2585, 927, 6020, 13122, 3196, 389, 1057, 25261, 13, 1226, 527, 264, 586, 24043, 7626, 9879, 449, 279, 62029, 21257, 323, 527, 2631, 311, 387, 9678, 449, 5201, 311, 279, 8351, 304, 18859, 449, 279, 549, 815, 13, 6918, 34919, 7016, 323, 279, 8581, 5718, 323, 14640, 315, 279, 46272, 323, 19224, 9849, 323, 279, 62029, 21257, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 28423, 315, 279, 2883, 753, 6373, 9002, 5419, 2585, 927, 6020, 13122, 323, 279, 54406, 596, 24589, 11, 39686, 279, 12914, 2949, 902, 279, 25261, 574, 13375, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401b40>, 'json_data': {'input': [[18902, 79483, 25, 1023, 20790, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 1023, 20790, 3600, 2949, 5195, 15161, 11, 23377, 430, 1070, 527, 5361, 33935, 29820, 311, 420, 13254, 4365, 323, 19392, 264, 58321, 315, 2532, 2671, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401bd0>, 'json_data': {'input': [[18902, 79483, 25, 611, 82, 14, 74210, 612, 13566, 69065, 198, 2014, 940, 1534, 73094, 25, 578, 12223, 1584, 3605, 82, 14, 74210, 612, 13566, 69065, 1, 78864, 279, 16287, 42143, 315, 279, 25261, 1934, 555, 279, 93596, 7626, 11, 50096, 1202, 3229, 5383, 323, 39242, 369, 279, 1934, 596, 8970, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401c60>, 'json_data': {'input': [[18902, 79483, 25, 45367, 6373, 14573, 5382, 3197, 11, 5226, 11, 477, 27204, 627, 2014, 940, 1534, 73094, 25, 45367, 6373, 14573, 5382, 3197, 11, 5226, 11, 477, 27204, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401cf0>, 'json_data': {'input': [[18902, 79483, 25, 578, 6762, 907, 315, 1057, 11897, 323, 25452, 22538, 1253, 304, 279, 3938, 387, 11, 323, 3738, 22538, 617, 1027, 304, 279, 3347, 11, 48291, 11754, 555, 53113, 11, 6807, 82189, 477, 18151, 11, 5178, 323, 6020, 3135, 315, 279, 16940, 15086, 11, 7362, 9473, 7969, 11, 4442, 304, 2802, 7969, 11, 2737, 4442, 430, 1253, 1121, 505, 279, 8292, 315, 502, 29531, 7969, 11, 279, 2515, 315, 502, 477, 10223, 14640, 11, 279, 5708, 3157, 304, 4689, 11, 477, 1023, 9547, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 4726, 25985, 988, 389, 279, 9547, 430, 1253, 7958, 279, 6762, 907, 315, 63897, 596, 22538, 11, 2737, 53113, 323, 6807, 15635, 11, 3157, 5178, 11, 323, 23331, 4442, 13, 1102, 22890, 5304, 279, 3766, 12143, 555, 45293, 279, 84140, 6532, 304, 18646, 279, 2883, 596, 9341, 20136, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401d80>, 'json_data': {'input': [[18902, 79483, 25, 18512, 23343, 311, 5897, 13146, 11, 2737, 3738, 35018, 323, 45704, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 5552, 311, 279, 1890, 3857, 439, 46613, 220, 17, 11, 21760, 389, 18512, 17791, 311, 5897, 13146, 11, 902, 649, 5536, 279, 2883, 596, 8244, 25605, 7194, 323, 11415, 4754, 58165, 477, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401e10>, 'json_data': {'input': [[18902, 79483, 25, 1226, 6767, 3738, 1023, 24198, 11, 2737, 328, 5002, 23146, 23183, 304, 279, 5708, 315, 7089, 13315, 5220, 11, 323, 3738, 12032, 323, 58165, 19426, 304, 264, 2626, 10824, 11, 1101, 520, 6762, 907, 389, 264, 2536, 265, 46839, 8197, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 19179, 315, 3738, 6020, 24198, 11, 11951, 5708, 6108, 20448, 320, 50, 5002, 8, 23146, 323, 12032, 477, 58165, 505, 2626, 28559, 11, 902, 527, 26126, 520, 6762, 907, 13, 1102, 374, 961, 315, 279, 27927, 2317, 315, 279, 2246, 430, 50729, 279, 2883, 753, 24043, 10396, 9002, 6020, 24198, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401ea0>, 'json_data': {'input': [[18902, 79483, 25, 763, 6287, 220, 679, 24, 11, 584, 6137, 12588, 8431, 47736, 18651, 505, 279, 549, 815, 13, 6011, 315, 12007, 320, 5989, 41, 8, 35792, 2038, 323, 9477, 23343, 311, 1057, 4972, 3276, 85971, 26969, 323, 3738, 13878, 315, 1057, 2626, 13, 578, 61910, 323, 264, 1396, 315, 1614, 7867, 27910, 3331, 13019, 264, 19831, 304, 279, 549, 815, 13, 11182, 7301, 369, 279, 11182, 315, 19326, 389, 6664, 220, 508, 11, 220, 2366, 15, 62546, 430, 5195, 34521, 549, 815, 13, 3276, 85971, 7016, 23343, 311, 7694, 323, 7694, 13172, 13, 578, 9269, 9670, 389, 6841, 220, 845, 11, 220, 2366, 18, 11, 323, 584, 1755, 264, 5597, 304, 220, 2366, 19, 13, 15903, 11, 304, 5651, 220, 2366, 17, 11, 279, 13673, 42321, 323, 26262, 9849, 320, 1741, 3791, 8, 323, 279, 3723, 15422, 596, 42321, 323, 47910, 22677, 320, 34, 4940, 8, 1855, 9107, 459, 8990, 1139, 7694, 8141, 12659, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 8431, 47736, 18651, 505, 279, 549, 815, 13, 6011, 315, 12007, 9002, 5195, 596, 3276, 85971, 12659, 323, 34945, 264, 5199, 19831, 13019, 2403, 279, 2883, 13, 1102, 10109, 988, 5195, 753, 5897, 11774, 2949, 279, 2317, 315, 549, 815, 13, 3276, 85971, 7016, 323, 50729, 279, 25845, 315, 4455, 6522, 709, 311, 264, 9269, 430, 20536, 304, 3389, 220, 2366, 18, 11, 19392, 279, 14529, 5897, 25572, 279, 2883, 12580, 98890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401f30>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1304, 22538, 304, 4363, 323, 14016, 369, 828, 19169, 323, 19672, 323, 2038, 5557, 12032, 1555, 24393, 315, 3424, 323, 7241, 323, 26120, 28904, 311, 3493, 8824, 369, 279, 6650, 315, 1057, 3600, 323, 3956, 627, 2014, 940, 1534, 73094, 25, 1115, 11914, 25985, 988, 389, 279, 4595, 315, 22538, 63897, 3727, 11, 11951, 304, 1972, 12675, 323, 30116, 12032, 13, 1102, 22020, 279, 2883, 596, 15507, 311, 24050, 1202, 25605, 8824, 11, 8104, 304, 5789, 1093, 828, 19169, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88401fc0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 6771, 315, 36962, 11, 902, 50729, 279, 6070, 315, 279, 2246, 323, 8779, 13016, 25539, 3230, 14491, 323, 2038, 6288, 13, 1102, 17482, 439, 264, 34512, 1697, 12576, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402050>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884020e0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 41738, 7, 16, 8, 14851, 8623, 7, 17, 8, 41738, 7, 16, 8, 14851, 8623, 7, 17, 8, 13031, 344, 5983, 24073, 439, 61316, 3252, 24198, 25, 19620, 9473, 17517, 400, 220, 15828, 400, 220, 20866, 400, 220, 10866, 400, 220, 12754, 13031, 344, 5983, 539, 24073, 439, 61316, 3252, 24198, 25, 19620, 9473, 17517, 220, 12676, 220, 12060, 220, 9565, 220, 10132, 7089, 17517, 220, 1272, 220, 2618, 220, 8011, 220, 2618, 10884, 43645, 539, 24073, 439, 61316, 3252, 24198, 220, 16408, 220, 12375, 220, 14185, 220, 9639, 10884, 400, 220, 24187, 400, 220, 19232, 400, 220, 20235, 400, 220, 19697, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 11944, 2038, 389, 279, 6762, 2819, 315, 19310, 32905, 24198, 11, 2737, 2225, 12032, 323, 58165, 13, 1102, 44072, 311, 279, 8244, 6492, 315, 279, 2883, 753, 32905, 10093, 11, 20064, 7922, 872, 6020, 6372, 389, 279, 8335, 11071, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402170>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3477, 73657, 11, 3424, 323, 7241, 11, 323, 528, 61186, 12032, 11, 44878, 82746, 11, 369, 53317, 994, 4455, 477, 4442, 304, 13463, 13519, 279, 15691, 3392, 1253, 539, 387, 11993, 481, 13, 578, 16865, 374, 10887, 520, 279, 15821, 2237, 315, 72450, 8515, 28555, 9678, 315, 1023, 12032, 13, 1226, 6767, 11993, 2968, 315, 1521, 12032, 555, 27393, 279, 15691, 15055, 311, 279, 3938, 82037, 1868, 291, 8515, 28555, 430, 279, 12032, 477, 279, 9513, 1912, 527, 3685, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 13186, 323, 1920, 369, 47614, 53317, 315, 73657, 11, 3424, 323, 7241, 11, 323, 528, 61186, 12032, 320, 80095, 82746, 570, 1102, 16964, 279, 38152, 1511, 311, 8417, 11993, 2968, 11, 902, 374, 16996, 369, 23391, 430, 12032, 527, 539, 927, 838, 3340, 389, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402200>, 'json_data': {'input': [[18902, 79483, 25, 1023, 20790, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 27851, 34945, 1023, 20790, 3600, 430, 17210, 311, 5195, 15161, 30466, 11, 19392, 430, 279, 9624, 13254, 4365, 374, 62387, 582, 25489, 323, 5764, 5370, 2532, 33935, 7953, 1884, 2736, 11054, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402290>, 'json_data': {'input': [[18902, 79483, 25, 1789, 264, 4096, 315, 1057, 3769, 15639, 5897, 29407, 11, 1518, 25705, 58364, 304, 7181, 220, 605, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 3744, 8105, 11, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 11, 902, 374, 32762, 36881, 555, 5905, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 13016, 311, 264, 3230, 961, 315, 279, 2246, 430, 25985, 988, 389, 279, 2883, 596, 14529, 5897, 29407, 13, 1102, 66159, 279, 12939, 315, 34988, 11944, 5897, 13146, 369, 264, 16195, 8830, 315, 279, 2883, 596, 4754, 58165, 323, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402320>, 'json_data': {'input': [[18902, 79483, 25, 5960, 11097, 11, 7188, 198, 2014, 940, 1534, 73094, 25, 1115, 3813, 5905, 11, 1054, 24661, 11097, 11, 7188, 2476, 30202, 279, 54001, 3813, 315, 279, 93596, 7626, 11, 74210, 612, 13566, 69065, 11, 91115, 279, 2317, 315, 279, 25261, 1934, 13, 1102, 15151, 1405, 279, 25261, 574, 13375, 477, 1405, 279, 7626, 374, 3196, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884023b0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 7665, 9849, 35018, 7, 16, 8, 400, 220, 24, 11, 7461, 400, 220, 24, 11, 18415, 11683, 2739, 291, 24393, 315, 3424, 323, 7241, 220, 18, 11, 18089, 220, 19, 11, 25136, 11683, 2739, 291, 6130, 58165, 220, 18, 11, 23388, 220, 19, 11, 6860, 9303, 10565, 26120, 58165, 220, 17, 11, 21144, 220, 17, 11, 26234, 33620, 13426, 45691, 11, 4272, 220, 16, 11, 20775, 220, 17, 11, 20338, 7089, 99216, 18512, 323, 1510, 58165, 220, 972, 11, 16368, 220, 1313, 11, 15935, 11683, 2739, 291, 18512, 323, 1023, 1510, 58165, 400, 220, 1806, 11, 22455, 400, 220, 2790, 11, 8953, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 3230, 3673, 71974, 439, 99216, 18512, 323, 1023, 1510, 58165, 439, 315, 6790, 220, 2148, 369, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 5764, 12678, 369, 5370, 58165, 11, 1778, 439, 7665, 9849, 35018, 323, 99216, 24393, 11, 8405, 264, 16694, 315, 279, 2883, 753, 2875, 9860, 6020, 42356, 323, 4754, 5897, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402440>, 'json_data': {'input': [[18902, 79483, 25, 67795, 555, 5905, 36881, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 8554, 430, 3738, 50829, 527, 32762, 555, 5905, 11, 43080, 430, 279, 6742, 1288, 8464, 311, 1023, 9477, 369, 5217, 3649, 11, 902, 374, 4279, 304, 16287, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884024d0>, 'json_data': {'input': [[18902, 79483, 25, 6104, 1855, 21283, 5597, 374, 1234, 14638, 11, 584, 5343, 279, 35018, 304, 99216, 18512, 323, 1023, 1510, 58165, 389, 1057, 79980, 660, 31946, 61572, 439, 584, 3984, 6201, 36755, 320, 258, 39381, 315, 264, 8515, 8323, 8, 369, 279, 35018, 13, 1789, 5217, 2038, 11, 1518, 7181, 220, 605, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 24043, 6514, 315, 279, 35018, 52872, 555, 63897, 4953, 13, 1418, 814, 527, 1234, 14638, 11, 19392, 1268, 1521, 58165, 527, 27000, 304, 279, 2883, 596, 6020, 12518, 13, 1115, 2038, 374, 9959, 369, 8830, 279, 2883, 596, 5326, 6373, 323, 6020, 13122, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402560>, 'json_data': {'input': [[18902, 79483, 25, 220, 5925, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 320, 5925, 8, 304, 279, 6771, 315, 36962, 11, 19392, 1202, 2361, 304, 279, 8244, 2246, 6070, 13, 1102, 8779, 13016, 21546, 279, 2246, 6847, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884025f0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1419, 627, 2014, 940, 1534, 73094, 25, 220, 1419, 13, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402680>, 'json_data': {'input': [[18902, 79483, 25, 639, 94, 198, 2014, 940, 1534, 73094, 25, 639, 94]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402710>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 14529, 5897, 13146, 23343, 311, 8524, 13, 1789, 3187, 11, 8431, 59358, 430, 2997, 1391, 13900, 31086, 617, 1027, 27070, 5304, 603, 304, 3717, 449, 42254, 9002, 279, 35508, 315, 9815, 11, 2737, 1884, 315, 74344, 9875, 13, 1226, 656, 539, 4510, 1521, 14529, 5897, 13146, 690, 617, 264, 3769, 31959, 2515, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 14529, 5897, 4819, 5552, 311, 8524, 11, 11951, 45391, 8431, 59358, 430, 617, 1027, 27070, 389, 63897, 13, 1102, 15151, 430, 279, 2883, 1587, 539, 1755, 1521, 13146, 311, 617, 264, 3769, 31959, 2515, 11, 8405, 20616, 1139, 279, 54001, 7036, 315, 63897, 596, 5897, 4819, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884027a0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1057, 12411, 323, 7188, 3495, 323, 4500, 6807, 6920, 2000, 4102, 369, 8070, 3827, 10096, 1051, 13489, 400, 5067, 3610, 323, 400, 21, 13, 18, 7239, 11, 15947, 13, 1442, 539, 34716, 11, 279, 12411, 432, 33465, 6807, 690, 3240, 311, 33663, 304, 220, 9639, 22, 323, 279, 7188, 432, 33465, 6807, 649, 387, 11953, 927, 56334, 13, 1226, 4510, 279, 8857, 315, 279, 6918, 3827, 6807, 323, 1614, 3827, 6807, 374, 539, 4461, 311, 387, 15393, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 12411, 323, 7188, 3495, 323, 4500, 6807, 6920, 2000, 4102, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 2737, 872, 32792, 88244, 13, 1102, 27053, 279, 2883, 596, 3827, 6807, 8446, 323, 4754, 7720, 11, 82003, 279, 29736, 315, 49803, 369, 1521, 20746, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402830>, 'json_data': {'input': [[18902, 79483, 25, 220, 2946, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 323, 1587, 539, 3493, 5217, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884028c0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402950>, 'json_data': {'input': [[18902, 79483, 25, 18880, 53869, 11, 902, 15871, 27000, 22538, 304, 11156, 14054, 11, 1051, 400, 843, 13, 18, 7239, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 6864, 53869, 369, 63897, 4953, 13, 304, 220, 2366, 18, 11, 11951, 39686, 279, 3392, 7543, 389, 11156, 14054, 13, 1102, 374, 4461, 961, 315, 264, 3857, 45293, 6020, 17150, 323, 22538, 11, 45296, 279, 2883, 596, 15507, 311, 20958, 323, 47035, 1202, 25605, 17357, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884029e0>, 'json_data': {'input': [[18902, 79483, 25, 763, 279, 4725, 3388, 315, 2626, 11, 2737, 311, 28696, 14463, 304, 1057, 3600, 323, 3956, 323, 13166, 7640, 11, 584, 90108, 1463, 3738, 9875, 11, 2737, 50270, 11, 5195, 8304, 8717, 11, 8141, 8717, 11, 6444, 315, 5195, 15161, 33935, 11, 2753, 1105, 11, 323, 2532, 12850, 449, 5201, 311, 3738, 13146, 13, 1226, 617, 7378, 311, 10726, 323, 5255, 3412, 3738, 9875, 53997, 2403, 18151, 40986, 505, 264, 31471, 315, 44713, 477, 272, 16651, 1821, 11, 477, 704, 315, 20207, 3424, 54443, 477, 1023, 8349, 1903, 2403, 3738, 9875, 13, 26778, 315, 1521, 20038, 4017, 279, 892, 2949, 902, 459, 90108, 2461, 3802, 649, 387, 1903, 323, 279, 3392, 315, 279, 3802, 13, 763, 5369, 11, 584, 617, 10862, 1139, 90108, 2461, 20038, 449, 1057, 9808, 323, 28454, 11, 323, 1057, 555, 68637, 6782, 4528, 90108, 2461, 30255, 311, 1057, 13307, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 90108, 2461, 12659, 315, 279, 2883, 11, 26073, 279, 9875, 6532, 323, 279, 4595, 315, 15635, 9960, 13, 1102, 22020, 279, 2883, 596, 15507, 311, 22973, 1202, 8717, 323, 39210, 505, 4754, 5897, 8349, 11, 94012, 279, 25605, 15635, 5938, 449, 1202, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402a70>, 'json_data': {'input': [[18902, 79483, 25, 58588, 46272, 28239, 12220, 279, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 10884, 6412, 3430, 400, 220, 16, 11, 22148, 400, 220, 16, 11, 25643, 10884, 2926, 2853, 220, 21936, 220, 16, 11, 8358, 32678, 22948, 4272, 20192, 320, 9563, 288, 8, 400, 220, 25125, 400, 220, 21330, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 3230, 6020, 828, 369, 25452, 34919, 6216, 2391, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 2737, 2860, 6412, 3430, 11, 2926, 2853, 11, 323, 40944, 4272, 20192, 477, 18151, 13, 1102, 6209, 14509, 12678, 430, 1862, 279, 3766, 20954, 389, 15393, 20192, 14, 9563, 288, 11, 29820, 311, 264, 16195, 8830, 315, 25452, 9341, 5178, 927, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402b00>, 'json_data': {'input': [[18902, 79483, 25, 220, 6330, 15, 93261, 83856, 16091, 68253, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 279, 2686, 315, 63897, 4953, 3238, 82, 12717, 11145, 19672, 11, 902, 374, 5995, 369, 4033, 44818, 323, 23331, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402b90>, 'json_data': {'input': [[18902, 79483, 25, 85610, 74000, 22370, 1539, 37744, 3651, 4154, 41973, 7837, 26311, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 2246, 374, 14976, 311, 279, 3723, 4273, 46272, 323, 19224, 9849, 320, 26629, 705, 902, 374, 279, 23331, 2547, 68704, 34919, 14463, 323, 22973, 15167, 13, 1102, 64664, 279, 16287, 2317, 315, 279, 2246, 439, 264, 23331, 26559, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402c20>, 'json_data': {'input': [[18902, 79483, 25, 5195, 8471, 27983, 30466, 15871, 555, 24944, 2225, 5178, 323, 6883, 13172, 430, 8111, 389, 5195, 7694, 612, 1023, 6012, 11, 13674, 11, 323, 5195, 8304, 8717, 6, 6012, 3573, 14783, 8304, 6012, 1865, 1226, 3136, 311, 2793, 304, 2225, 5178, 323, 6883, 13172, 323, 6056, 311, 7417, 279, 7038, 324, 2968, 315, 13172, 779, 50270, 3619, 279, 27375, 315, 872, 21343, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 3649, 389, 1268, 5195, 8471, 27983, 13254, 1555, 5178, 323, 6883, 13172, 13, 1102, 66159, 279, 12939, 315, 1521, 13172, 5528, 304, 279, 2883, 596, 8244, 2626, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402cb0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 264, 13651, 315, 279, 2246, 11, 11951, 279, 6771, 315, 36962, 11, 902, 8779, 13016, 21546, 279, 5370, 14491, 323, 3619, 279, 8244, 6070, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402d40>, 'json_data': {'input': [[18902, 79483, 25, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 2500, 54291, 32400, 11, 91115, 430, 63897, 1587, 539, 4498, 1234, 279, 9333, 13122, 2883, 5699, 11, 4726, 20064, 7922, 279, 2883, 596, 2704, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402dd0>, 'json_data': {'input': [[18902, 79483, 25, 350, 1741, 5764, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 311, 14158, 832, 315, 279, 6956, 315, 279, 10884, 47423, 64141, 320, 51, 1741, 8, 5938, 449, 279, 2853, 315, 30466, 11, 23377, 264, 810, 11944, 16540, 690, 1833, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402e60>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 33620, 1603, 17575, 369, 8070, 13426, 400, 220, 6028, 11, 16884, 400, 220, 5313, 11, 25150, 72673, 369, 8070, 13426, 400, 220, 806, 11, 18349, 400, 220, 806, 11, 20275, 48023, 3827, 4478, 220, 868, 13, 24, 1034, 220, 1032, 13, 24, 33648, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 5199, 3827, 6037, 4442, 11136, 555, 279, 34483, 11, 902, 617, 25127, 369, 1268, 279, 2883, 48517, 1202, 3827, 58165, 11, 74055, 6020, 3135, 323, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402ef0>, 'json_data': {'input': [[18902, 79483, 25, 578, 15691, 2819, 369, 3157, 481, 323, 2536, 30004, 36164, 25452, 34919, 527, 69729, 3770, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 17738, 264, 12399, 315, 279, 15691, 2819, 369, 3157, 481, 323, 2536, 30004, 36164, 25452, 34919, 11, 6376, 279, 6566, 369, 11944, 6020, 828, 430, 11263, 13, 1102, 15151, 264, 5357, 389, 279, 6020, 5178, 323, 51262, 315, 25452, 22538, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88402f80>, 'json_data': {'input': [[18902, 79483, 25, 17294, 389, 7362, 15637, 323, 22538, 11, 323, 70099, 7362, 9473, 11835, 430, 2643, 5471, 603, 505, 2109, 2416, 1113, 8515, 15662, 304, 5961, 4994, 279, 549, 815, 38503, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 3230, 15635, 5552, 311, 6625, 7677, 11, 21760, 389, 17294, 389, 7362, 15637, 323, 22538, 11, 3235, 449, 7362, 9473, 11835, 13, 1102, 374, 961, 315, 279, 27927, 19775, 45293, 279, 11774, 430, 6625, 14800, 1253, 17477, 311, 279, 2883, 596, 6020, 2890, 323, 25605, 25152, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403010>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884030a0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 374, 264, 4526, 315, 9873, 2001, 279, 7928, 315, 902, 374, 5195, 13, 1226, 1934, 5195, 304, 1403, 21282, 11, 5195, 8471, 323, 5195, 15161, 11, 323, 682, 2536, 12279, 2738, 9873, 45925, 439, 7089, 426, 1441, 13, 63897, 596, 6070, 374, 922, 10695, 1855, 315, 1057, 9873, 29761, 1555, 3831, 6164, 323, 24589, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 41295, 6070, 315, 63897, 4953, 2637, 26073, 430, 433, 17610, 315, 5361, 9873, 11, 449, 5195, 439, 279, 7928, 13, 1102, 7437, 279, 12914, 369, 8830, 1268, 63897, 27149, 323, 22824, 4861, 1202, 5370, 21282, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403130>, 'json_data': {'input': [[18902, 79483, 25, 40838, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 279, 1614, 315, 88465, 11, 40838, 11, 902, 374, 5199, 369, 5897, 29101, 323, 23331, 8907, 13146, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884031c0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 20816, 12190, 5070, 311, 23351, 3958, 13172, 12659, 323, 22973, 3932, 389, 279, 3566, 13, 1226, 5357, 389, 6968, 279, 1888, 13172, 11704, 369, 1057, 3932, 323, 50270, 304, 1690, 5627, 11, 2737, 30770, 704, 8482, 9629, 11, 18054, 33151, 315, 3958, 14058, 505, 1057, 6067, 1475, 1060, 11, 323, 15499, 16967, 279, 6732, 11, 10721, 11, 323, 6946, 1405, 14058, 5101, 323, 2565, 35696, 1124, 994, 5995, 311, 6106, 430, 14058, 656, 539, 3887, 3958, 2262, 627, 2014, 940, 1534, 73094, 25, 763, 420, 3857, 11, 279, 2246, 14564, 63897, 596, 15507, 311, 96178, 3958, 13172, 12659, 323, 23391, 1217, 7296, 13, 1115, 2317, 374, 5199, 439, 433, 22020, 279, 2883, 753, 31308, 30031, 323, 9045, 311, 10519, 264, 6928, 13172, 26031, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403250>, 'json_data': {'input': [[18902, 79483, 25, 3580, 24442, 8554, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 70074, 279, 6742, 311, 8464, 311, 24442, 8554, 369, 5217, 3649, 477, 41941, 9002, 279, 39954, 5068, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884032e0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 72034, 11, 902, 5764, 41455, 369, 9624, 6108, 10758, 323, 20632, 7526, 369, 40919, 11, 1778, 439, 17263, 11, 62046, 11, 61791, 11, 16542, 11, 323, 26911, 11, 449, 18751, 4519, 1093, 423, 14127, 15592, 304, 5195, 72034, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 24400, 389, 5195, 72034, 11, 902, 374, 961, 315, 5195, 15161, 30466, 11, 39686, 1202, 15493, 1646, 369, 20790, 7526, 11, 67908, 279, 2883, 596, 25679, 389, 2626, 10105, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403370>, 'json_data': {'input': [[18902, 79483, 25, 8825, 323, 7241, 527, 11224, 520, 2853, 2753, 41165, 94189, 13, 4241, 2827, 7246, 374, 12715, 1701, 279, 7833, 8614, 1749, 927, 279, 13240, 5505, 6439, 315, 279, 12032, 11, 902, 584, 15870, 15806, 13, 11680, 374, 539, 73058, 660, 13, 1226, 73058, 349, 14016, 927, 18852, 315, 8254, 311, 220, 914, 1667, 13, 1226, 73058, 349, 2038, 5557, 12032, 8965, 927, 264, 4261, 315, 4848, 1667, 369, 16692, 323, 4009, 7241, 13, 1226, 73058, 349, 26120, 6416, 18637, 927, 279, 24210, 315, 279, 9861, 26120, 4751, 477, 279, 13240, 5505, 6439, 315, 279, 12032, 13, 4241, 2827, 7246, 369, 14016, 11, 2038, 5557, 12032, 11, 26120, 6416, 18637, 11, 323, 14891, 323, 38764, 1081, 2436, 3131, 814, 527, 5644, 369, 1057, 10825, 1005, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 51262, 323, 94189, 5528, 9435, 311, 3424, 323, 7241, 13234, 555, 63897, 13, 1102, 374, 961, 315, 279, 3424, 323, 7241, 24043, 10396, 11, 39686, 279, 2883, 596, 5603, 311, 9513, 51262, 323, 279, 5536, 389, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403400>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 279, 2246, 596, 2316, 11, 330, 2149, 18992, 4953, 13, 1359, 19392, 279, 3917, 5030, 13, 1102, 64664, 279, 2317, 369, 279, 4553, 2246, 11, 902, 24400, 389, 279, 6020, 5178, 323, 25605, 26793, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403490>, 'json_data': {'input': [[18902, 79483, 25, 5751, 5708, 6787, 2997, 279, 63897, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 3573, 2149, 18992, 220, 2366, 16, 12937, 9878, 909, 323, 7089, 426, 1441, 5708, 6108, 6787, 13, 9636, 1057, 5708, 6787, 11, 24107, 3642, 323, 1023, 4595, 315, 23146, 1253, 387, 11938, 13, 9636, 279, 63897, 220, 2366, 16, 12937, 9878, 11, 459, 24107, 52, 10292, 374, 459, 9306, 311, 4360, 13551, 315, 1057, 3308, 356, 5708, 520, 279, 892, 279, 10292, 98373, 13, 24107, 3642, 8965, 28705, 927, 3116, 1667, 59575, 5304, 14740, 389, 279, 28705, 287, 2457, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 5825, 2038, 922, 279, 1396, 315, 13551, 4694, 369, 3938, 67599, 1234, 279, 63897, 220, 2366, 16, 12937, 9878, 13, 1102, 22020, 279, 2883, 596, 15507, 311, 5708, 6108, 20448, 323, 1202, 4754, 5536, 389, 63342, 25452, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403520>, 'json_data': {'input': [[18902, 79483, 25, 220, 2946, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 323, 1587, 539, 3493, 5217, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884035b0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 4510, 430, 459, 26613, 17575, 706, 1027, 1903, 369, 904, 34074, 430, 1253, 1121, 505, 3827, 69570, 13, 4452, 11, 279, 15632, 315, 3827, 75620, 4250, 387, 19698, 449, 44743, 13, 1442, 904, 4819, 20669, 304, 1057, 3827, 75620, 527, 20250, 304, 264, 11827, 539, 13263, 449, 6373, 596, 17078, 11, 584, 1436, 387, 2631, 311, 7652, 1057, 17575, 369, 8070, 13426, 304, 279, 4261, 1778, 43595, 12446, 13, 10541, 279, 18912, 315, 11175, 11, 17516, 11, 323, 22722, 315, 75620, 374, 539, 3738, 11, 433, 374, 29546, 3284, 430, 1057, 97239, 3827, 7720, 505, 3738, 549, 815, 13, 6918, 11, 1614, 11, 323, 2536, 549, 815, 13, 3827, 10093, 1436, 18979, 555, 13489, 400, 7007, 3610, 304, 279, 1828, 220, 717, 4038, 13, 76483, 430, 1253, 387, 20250, 2997, 5370, 549, 815, 13, 323, 2536, 35681, 815, 13, 13146, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 45537, 279, 10430, 389, 36218, 3827, 10093, 555, 28118, 279, 41228, 2826, 315, 19705, 1903, 369, 4754, 34074, 505, 3827, 75620, 13, 1102, 5825, 20616, 1139, 279, 2883, 596, 5326, 6373, 12659, 323, 279, 4754, 369, 5199, 4442, 304, 6020, 3135, 3196, 389, 25261, 20124, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403640>, 'json_data': {'input': [[18902, 79483, 25, 220, 4218, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 2500, 2199, 1396, 477, 3857, 11381, 11, 4461, 961, 315, 279, 2246, 596, 29595, 369, 14553, 315, 5905, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884036d0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 15151, 279, 2316, 477, 14836, 315, 279, 2246, 11, 91115, 430, 279, 2262, 18713, 1771, 311, 63897, 4953, 13, 323, 1202, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403760>, 'json_data': {'input': [[18902, 79483, 25, 220, 20, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 33243, 477, 44488, 5905, 323, 1587, 539, 3493, 23222, 2317, 389, 1202, 1866, 13, 1102, 1253, 4284, 264, 9320, 311, 2500, 3857, 477, 1537, 1396, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884037f0>, 'json_data': {'input': [[18902, 79483, 25, 220, 5332, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 29595, 37739, 505, 279, 2246, 323, 1587, 539, 3493, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403880>, 'json_data': {'input': [[18902, 79483, 25, 16528, 8245, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 4461, 17482, 439, 264, 33269, 24131, 430, 67146, 13016, 311, 4726, 2038, 9002, 279, 2883, 596, 13122, 323, 28330, 12659, 13, 1102, 7437, 279, 6566, 369, 279, 4595, 315, 2038, 430, 690, 387, 2561, 311, 39210, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403910>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2246, 439, 47031, 311, 63897, 4953, 2637, 8405, 2317, 922, 279, 7471, 1694, 30239, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e884039a0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 15025, 279, 6020, 12518, 315, 1057, 6625, 72202, 311, 549, 815, 13, 11441, 1701, 2305, 13368, 9473, 7969, 369, 12032, 323, 58165, 11, 323, 5578, 7969, 369, 279, 9974, 4261, 14592, 505, 2305, 13368, 9473, 7969, 369, 30466, 11, 7194, 11, 323, 18512, 13, 1226, 3335, 14807, 20192, 323, 18151, 304, 362, 65083, 439, 264, 3777, 315, 5708, 17075, 529, 25452, 13, 1226, 8881, 4272, 7362, 9473, 7901, 20192, 323, 18151, 13239, 505, 279, 14747, 315, 279, 7901, 11667, 311, 16003, 11667, 439, 264, 3777, 315, 7362, 11667, 9473, 8895, 320, 9563, 8, 304, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 14807, 315, 6020, 12518, 315, 6625, 72202, 369, 13122, 304, 549, 815, 13, 11441, 11, 45293, 279, 38152, 1511, 369, 14807, 20192, 323, 18151, 13, 1102, 374, 31183, 2949, 279, 8554, 311, 279, 60391, 6020, 12518, 11, 11951, 1234, 279, 3857, 28118, 7362, 11667, 11, 902, 374, 16996, 369, 8830, 1268, 6625, 7677, 5536, 8244, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403a30>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6373, 11, 449, 279, 20852, 315, 1057, 10388, 11145, 9640, 323, 10388, 6020, 9640, 11, 26126, 279, 27375, 315, 1057, 28957, 11835, 323, 16346, 33549, 311, 18592, 220, 1032, 64, 12, 868, 1234, 279, 19224, 3298, 11, 439, 315, 279, 842, 315, 279, 4261, 9960, 555, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 22315, 315, 10195, 6373, 304, 38663, 279, 27375, 315, 28957, 11835, 439, 2631, 555, 14640, 11, 26445, 66, 5620, 279, 35186, 323, 8907, 13189, 315, 279, 6020, 13122, 1920, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403ac0>, 'json_data': {'input': [[18902, 79483, 25, 4476, 4500, 7194, 1101, 2997, 7194, 311, 2274, 3241, 311, 387, 1511, 21742, 311, 3449, 5419, 3966, 323, 9624, 6108, 8522, 1511, 311, 6493, 1057, 3600, 13, 1226, 53825, 4500, 7194, 5552, 311, 1521, 3241, 8522, 3131, 279, 33269, 2447, 6566, 374, 4686, 323, 433, 374, 35977, 430, 279, 2447, 690, 387, 8308, 323, 279, 3241, 690, 387, 1511, 311, 2804, 279, 734, 10825, 13, 64141, 98421, 369, 11469, 1778, 3241, 8522, 1051, 539, 3769, 369, 279, 18852, 10666, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 4595, 315, 3241, 4500, 7194, 430, 63897, 4953, 13, 3709, 1759, 11, 11951, 1884, 369, 5419, 1005, 323, 9624, 6108, 8522, 13, 1102, 16964, 994, 1521, 7194, 1253, 387, 98421, 11, 91115, 279, 24043, 4947, 9002, 3241, 4500, 13, 9086, 46613, 220, 16, 11, 420, 374, 961, 315, 279, 24043, 10396, 3857, 11, 8405, 32373, 389, 1268, 5370, 3241, 4500, 18512, 527, 12020, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403b50>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 14836, 15151, 279, 330, 2620, 315, 36962, 1, 315, 279, 2246, 11, 902, 17482, 439, 264, 34512, 1697, 5507, 369, 13016, 311, 25539, 3230, 14491, 323, 2038, 2949, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403be0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 5224, 35434, 279, 2883, 753, 6787, 369, 8738, 9341, 304, 5370, 5789, 11, 2737, 502, 14645, 323, 63948, 13, 1102, 72890, 279, 2883, 596, 1317, 9860, 6650, 8446, 323, 15507, 311, 24050, 1202, 20136, 11, 902, 374, 264, 1401, 13189, 315, 1202, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403c70>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 44694, 279, 4342, 369, 279, 2007, 315, 8970, 11, 91115, 1202, 9546, 323, 734, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403d00>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 1587, 539, 6782, 904, 1495, 323, 9093, 37856, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403d90>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1070, 1051, 13489, 220, 22, 11, 13364, 323, 220, 16, 11, 23776, 5708, 17075, 315, 3335, 315, 1057, 3308, 362, 5708, 323, 3308, 356, 5708, 11, 15947, 13, 9393, 1690, 315, 1057, 13551, 315, 3308, 362, 5708, 323, 3308, 356, 5708, 527, 5762, 555, 46436, 323, 1023, 14673, 389, 17981, 315, 5708, 17075, 11, 584, 527, 12153, 311, 16430, 279, 2860, 1396, 315, 5708, 17075, 15609, 555, 1521, 3335, 29809, 13, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1070, 1051, 13489, 220, 2946, 5708, 17075, 315, 3335, 315, 1057, 3308, 426, 5708, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 25031, 828, 389, 279, 1396, 315, 5708, 17075, 315, 3335, 369, 2204, 6989, 315, 279, 2883, 753, 5708, 439, 315, 264, 3738, 2457, 13, 1115, 2038, 374, 9959, 369, 47614, 279, 63342, 2385, 323, 279, 4754, 10383, 315, 2204, 5708, 17075, 389, 13166, 35186, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403e20>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 3308, 362, 3308, 426, 3308, 356, 14967, 4272, 8070, 824, 4430, 25, 48224, 859, 73767, 315, 2073, 26204, 24608, 400, 220, 1544, 11, 21312, 400, 220, 19, 11, 23439, 400, 220, 1591, 11, 18781, 9973, 31306, 5742, 315, 13551, 1511, 304, 824, 4430, 35547, 220, 20, 11, 22897, 220, 26058, 220, 21, 11, 10828, 14967, 4272, 8070, 824, 4430, 400, 220, 19, 13, 2946, 400, 220, 19, 13, 2946, 400, 220, 19, 13, 2946, 53867, 2844, 4272, 8070, 824, 4430, 25, 48224, 859, 73767, 315, 2073, 26204, 24608, 369, 6913, 35547, 400, 220, 1544, 11, 21312, 400, 220, 19, 11, 23439, 400, 220, 1591, 11, 18781, 8976, 2588, 315, 2073, 26204, 24608, 439, 264, 1121, 315, 14747, 315, 3308, 426, 311, 3308, 362, 13551, 220, 19, 11, 23439, 220, 15, 220, 15, 8976, 2588, 315, 2073, 26204, 24608, 320, 9870, 8, 320, 966, 8, 220, 9870, 73767, 315, 2073, 26204, 24608, 400, 220, 2148, 11, 6843, 400, 220, 19, 11, 22349, 400, 220, 1591, 11, 21018, 9973, 31306, 5742, 315, 13551, 1511, 304, 6913, 35547, 220, 20, 11, 22897, 220, 26058, 220, 21, 11, 10828, 16923, 291, 78526, 2515, 315, 19371, 6844, 34919, 2758, 25, 43609, 315, 3308, 426, 311, 3308, 362, 13551, 19310, 220, 26058, 220, 15, 220, 15, 94960, 5708, 8316, 323, 1023, 39639, 4501, 2425, 13429, 13551, 220, 15, 220, 15, 220, 4161, 5742, 315, 13551, 1511, 304, 824, 4430, 35547, 220, 21, 11, 25339, 220, 26058, 220, 21, 11, 16949, 53867, 2844, 4272, 8070, 824, 4430, 400, 220, 19, 13, 3487, 400, 220, 19, 13, 3487, 400, 220, 19, 13, 3487, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 19, 11, 420, 12143, 18911, 279, 35547, 315, 6913, 323, 80703, 4272, 8070, 824, 4430, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 13, 1115, 2038, 9731, 279, 9327, 315, 8405, 11944, 6020, 17150, 369, 15167, 311, 8720, 63897, 4953, 3238, 82, 5178, 927, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403eb0>, 'json_data': {'input': [[18902, 79483, 25, 578, 10013, 753, 14434, 47910, 3298, 11, 902, 690, 1397, 304, 1355, 2474, 5220, 311, 6994, 1217, 14771, 369, 35271, 828, 4028, 3738, 3956, 323, 1397, 2778, 21787, 311, 4430, 32248, 1534, 828, 449, 21425, 5220, 11, 4315, 1023, 4442, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 10013, 753, 14434, 47910, 3298, 11, 902, 88381, 502, 8670, 389, 5220, 9002, 1217, 14771, 323, 828, 11821, 13, 1102, 22020, 279, 42028, 23331, 4676, 323, 1202, 25127, 369, 63897, 11, 31799, 1203, 311, 279, 22100, 315, 8907, 323, 25605, 2349, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88403f40>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130040>, 'json_data': {'input': [[18902, 79483, 25, 7089, 13031, 344, 5983, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 4461, 17482, 439, 264, 4342, 369, 264, 3857, 389, 7089, 13031, 344, 5983, 11, 19392, 430, 4726, 3649, 922, 5217, 32905, 24198, 1511, 555, 63897, 4953, 13, 690, 387, 3984, 13, 1102, 13533, 264, 42271, 315, 20954, 389, 5326, 6373, 15174, 7953, 279, 8767, 9932, 305, 17327, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881300d0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1101, 617, 6264, 1639, 11, 304, 18859, 449, 279, 10886, 315, 279, 3142, 8351, 45344, 90951, 8925, 320, 23175, 4273, 8, 320, 4977, 19268, 33, 705, 279, 8351, 596, 5419, 2585, 927, 6020, 13122, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 3196, 389, 13186, 9749, 304, 15774, 7935, 2345, 83537, 24686, 11136, 555, 279, 10554, 315, 328, 2805, 5620, 67792, 315, 279, 350, 888, 3195, 9849, 320, 679, 18, 12914, 705, 323, 1057, 1934, 30105, 6186, 220, 966, 11, 220, 2366, 19, 13605, 459, 653, 37435, 9647, 1070, 263, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 25261, 315, 5419, 11835, 927, 6020, 13122, 11, 19392, 430, 279, 6264, 12170, 1101, 26126, 279, 2883, 596, 8907, 449, 3230, 49125, 323, 10886, 11, 8405, 44701, 922, 279, 27375, 315, 1521, 11835, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130160>, 'json_data': {'input': [[18902, 79483, 25, 40838, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 279, 1614, 315, 88465, 11, 40838, 11, 902, 374, 5199, 369, 5897, 29101, 323, 23331, 8907, 13146, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881301f0>, 'json_data': {'input': [[18902, 79483, 25, 12557, 763, 1189, 1924, 323, 49800, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 502, 8712, 9002, 6130, 36580, 323, 20746, 11, 19392, 430, 3738, 6444, 1253, 5371, 6020, 36580, 430, 7958, 13254, 18324, 13, 1102, 13533, 264, 5357, 389, 279, 54709, 315, 13254, 3196, 389, 6130, 20038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130280>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 13, 74006, 59351, 9182, 23233, 29863, 3083, 2006, 48485, 198, 2014, 940, 1534, 73094, 25, 1115, 2316, 40019, 279, 60391, 12518, 315, 8070, 11, 902, 63179, 279, 2883, 596, 30466, 11, 18512, 11, 323, 63336, 927, 264, 5300, 4261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130310>, 'json_data': {'input': [[18902, 79483, 25, 5195, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3857, 4342, 11, 4461, 19392, 264, 9320, 311, 264, 10430, 11951, 922, 5195, 439, 264, 1401, 3777, 315, 63897, 4953, 13, 1102, 7437, 279, 6566, 369, 45293, 5195, 596, 7677, 323, 2626, 21282, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881303a0>, 'json_data': {'input': [[18902, 79483, 25, 8012, 279, 7648, 47654, 19758, 46879, 96209, 323, 41477, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 502, 3857, 10968, 389, 4857, 4443, 25213, 15771, 323, 7766, 11, 19392, 264, 10430, 922, 63897, 4953, 3238, 82, 9045, 304, 12035, 4500, 323, 1217, 3217, 19297, 1555, 15592, 14645, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130430>, 'json_data': {'input': [[18902, 79483, 25, 5751, 42028, 15592, 14228, 9045, 1253, 3041, 10205, 311, 15635, 5552, 311, 28856, 2262, 11, 42025, 27121, 11, 21934, 11, 20207, 3424, 54443, 477, 5906, 76571, 367, 11, 89201, 11, 828, 12625, 11, 62542, 11, 323, 1023, 4819, 13, 1666, 264, 1121, 315, 1521, 323, 1023, 11774, 5938, 449, 18699, 14645, 11, 1057, 8292, 315, 15592, 6067, 1436, 3917, 603, 311, 15022, 11682, 11, 23331, 1957, 11, 5897, 24305, 320, 16564, 1234, 502, 323, 11223, 13543, 323, 14640, 705, 502, 8522, 315, 6484, 828, 9313, 11, 12625, 11, 20207, 3424, 11, 323, 1023, 7016, 11, 323, 6883, 477, 43839, 1697, 11682, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 15635, 5938, 449, 15592, 11, 45293, 3230, 10742, 1778, 439, 28856, 2262, 11, 42025, 27121, 11, 323, 5897, 58165, 13, 1102, 34161, 279, 8292, 315, 15592, 6067, 311, 4754, 15022, 64725, 323, 23331, 36752, 11, 42852, 279, 27927, 10742, 922, 5557, 35186, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881304c0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 323, 1587, 539, 17210, 2262, 9959, 311, 66251, 8830, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130550>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 549, 815, 13, 6918, 45530, 3827, 4478, 220, 1691, 13, 15, 1034, 220, 1691, 13, 15, 1034, 220, 1691, 13, 15, 1034, 19620, 8070, 72515, 520, 2204, 7969, 220, 15, 13, 17, 220, 18, 13, 15, 220, 15, 13, 18, 19620, 72286, 528, 61186, 8070, 39943, 320, 17, 13, 20, 8, 320, 20, 13, 19, 8, 320, 19, 13, 21, 8, 12937, 6108, 20448, 20900, 320, 17, 13, 20, 8, 320, 16, 13, 17, 8, 320, 15, 13, 23, 8, 12411, 3495, 6807, 320, 16, 13, 21, 8, 320, 17, 13, 17, 8, 320, 16, 13, 23, 8, 76615, 3827, 9513, 51262, 41458, 220, 15, 13, 21, 220, 15, 13, 24, 220, 15, 13, 21, 3314, 323, 2254, 8070, 13426, 220, 16, 13, 15, 220, 15, 13, 23, 220, 16, 13, 15, 13756, 315, 3827, 2383, 2349, 220, 15, 13, 15, 220, 15, 13, 15, 320, 16, 13, 19, 8, 7089, 220, 15, 13, 15, 320, 16, 13, 15, 8, 320, 15, 13, 19, 8, 48023, 3827, 4478, 220, 845, 13, 17, 1034, 220, 868, 13, 24, 1034, 220, 1032, 13, 24, 33648, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 5825, 264, 11944, 31085, 315, 279, 7524, 3827, 4478, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 39686, 5370, 3827, 71737, 323, 20746, 13, 1115, 6492, 374, 3062, 369, 47614, 279, 2883, 596, 3827, 9293, 323, 8907, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881305e0>, 'json_data': {'input': [[18902, 79483, 25, 8825, 323, 7241, 527, 11224, 520, 2853, 2753, 41165, 94189, 13, 4241, 2827, 7246, 374, 12715, 1701, 279, 7833, 8614, 1749, 927, 279, 13240, 5505, 6439, 315, 279, 12032, 11, 902, 584, 15870, 15806, 13, 11680, 374, 539, 73058, 660, 13, 1226, 73058, 349, 14016, 927, 18852, 315, 8254, 311, 220, 914, 1667, 13, 1226, 73058, 349, 2038, 5557, 12032, 8965, 927, 264, 4261, 315, 4848, 1667, 369, 16692, 323, 4009, 7241, 13, 1226, 73058, 349, 26120, 6416, 18637, 927, 279, 24210, 315, 279, 9861, 26120, 4751, 477, 279, 13240, 5505, 6439, 315, 279, 12032, 13, 4241, 2827, 7246, 369, 14016, 11, 2038, 5557, 12032, 11, 26120, 6416, 18637, 11, 323, 14891, 323, 38764, 1081, 2436, 3131, 814, 527, 5644, 369, 1057, 10825, 1005, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 51262, 323, 94189, 5528, 9435, 311, 3424, 323, 7241, 13234, 555, 63897, 13, 1102, 374, 961, 315, 279, 3424, 323, 7241, 24043, 10396, 11, 39686, 279, 2883, 596, 5603, 311, 9513, 51262, 323, 279, 5536, 389, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130670>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1005, 32905, 24198, 311, 10299, 15635, 23343, 311, 1057, 14529, 2626, 7677, 13, 578, 6156, 5326, 9152, 374, 7362, 9473, 5326, 13, 1226, 1005, 7362, 11667, 17517, 311, 8108, 279, 5326, 430, 1057, 8515, 28555, 11, 24608, 11, 323, 9341, 304, 7362, 72202, 690, 387, 69214, 11754, 555, 7362, 11667, 9473, 4478, 65649, 13, 1226, 1101, 3810, 1139, 32905, 24198, 311, 26310, 4445, 1057, 14675, 311, 1023, 15635, 323, 18885, 9341, 4780, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 1005, 315, 32905, 24198, 369, 18646, 7362, 9473, 5326, 323, 1023, 25605, 15635, 13, 1102, 5825, 2317, 369, 279, 3230, 4595, 315, 15635, 1694, 20669, 323, 279, 57916, 4920, 35988, 43645, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130700>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2536, 30004, 36164, 25452, 34919, 539, 41853, 369, 1234, 279, 25452, 1749, 527, 24257, 311, 6762, 907, 369, 40635, 14463, 369, 20086, 477, 4528, 22538, 315, 279, 1890, 55935, 477, 53317, 320, 265, 5671, 311, 439, 279, 19179, 10778, 570, 578, 6762, 907, 17303, 520, 279, 892, 315, 279, 40635, 7901, 374, 539, 14647, 459, 28137, 315, 279, 1510, 6762, 907, 439, 315, 279, 8335, 11071, 2457, 13, 4314, 22538, 11, 5423, 1884, 430, 527, 304, 279, 4216, 18094, 11, 527, 49188, 41273, 1606, 279, 14645, 477, 3956, 1521, 5220, 617, 1234, 4500, 527, 11383, 304, 279, 4216, 35530, 323, 1253, 2646, 3769, 553, 11, 323, 814, 1253, 3217, 264, 18174, 304, 6020, 3044, 11, 902, 1436, 1121, 304, 264, 4814, 315, 264, 12190, 961, 315, 1057, 9341, 304, 1521, 5220, 13, 4196, 38170, 315, 1057, 25452, 22538, 304, 879, 5220, 527, 49188, 810, 6485, 4245, 311, 279, 6996, 315, 31368, 2561, 3157, 828, 323, 40635, 14463, 520, 4827, 1062, 38170, 1436, 1121, 304, 5199, 18151, 13, 763, 5369, 11, 3728, 7100, 4787, 1436, 1121, 304, 5217, 53838, 13, 578, 2450, 315, 1057, 9341, 304, 904, 879, 2883, 374, 1101, 11383, 18222, 389, 279, 29736, 315, 1057, 5845, 311, 13383, 35996, 304, 279, 907, 315, 22538, 1555, 53113, 4455, 1778, 439, 586, 33935, 11, 63948, 11, 879, 6763, 477, 1023, 3157, 4455, 13, 29240, 304, 279, 51262, 315, 2536, 30004, 36164, 25452, 34919, 1253, 539, 6089, 81584, 449, 4442, 304, 51262, 315, 3157, 481, 25452, 34919, 13, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 279, 15691, 907, 315, 1057, 2536, 30004, 36164, 25452, 34919, 11, 902, 1051, 41853, 369, 1234, 279, 19179, 10778, 11, 574, 400, 1591, 13, 20, 7239, 323, 400, 1591, 13, 23, 7239, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 51262, 323, 5326, 15813, 315, 2536, 30004, 36164, 25452, 34919, 11, 2737, 279, 84140, 6532, 304, 872, 51262, 323, 279, 15635, 5938, 449, 26012, 304, 4216, 51256, 5220, 13, 1102, 22020, 279, 11774, 63897, 4953, 13, 12580, 304, 18646, 1521, 22538, 11, 902, 374, 7718, 369, 8830, 279, 2883, 596, 6020, 2361, 323, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130790>, 'json_data': {'input': [[18902, 79483, 25, 1789, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 4442, 304, 58165, 13239, 505, 279, 3285, 685, 10405, 323, 5552, 86659, 940, 82, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 12399, 315, 4442, 304, 58165, 5552, 311, 3285, 685, 10405, 11, 19392, 430, 3230, 35876, 828, 690, 1833, 13, 1102, 17482, 439, 264, 9320, 311, 810, 11944, 6020, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130820>, 'json_data': {'input': [[18902, 79483, 25, 9580, 220, 16, 482, 11480, 11374, 430, 8881, 24116, 7729, 320, 359, 88897, 8, 369, 20086, 12032, 477, 58165, 304, 4642, 11987, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 9580, 220, 16, 315, 279, 6762, 907, 30022, 11, 902, 17610, 315, 40635, 11374, 505, 4642, 11987, 13, 1115, 24790, 374, 7718, 369, 39210, 311, 3619, 1268, 63897, 67349, 9513, 323, 24305, 1062, 38170, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881308b0>, 'json_data': {'input': [[18902, 79483, 25, 578, 1317, 9860, 13651, 315, 3157, 481, 25452, 34919, 320, 11760, 311, 1317, 9860, 5409, 5352, 17294, 8, 315, 400, 20899, 3610, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 374, 5343, 2949, 1023, 2536, 45275, 12032, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 2038, 922, 279, 1317, 9860, 13651, 315, 3157, 481, 25452, 34919, 5762, 555, 63897, 4953, 13, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 13, 1102, 15151, 430, 1521, 34919, 527, 3917, 311, 1317, 9860, 5409, 5352, 17294, 323, 527, 21771, 1234, 2536, 45275, 12032, 11, 29820, 311, 279, 8830, 315, 63897, 596, 9341, 8446, 323, 9513, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130940>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 510, 2028, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 2038, 25750]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881309d0>, 'json_data': {'input': [[18902, 79483, 25, 1023, 3956, 323, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 34945, 1023, 3956, 323, 3600, 430, 17210, 311, 279, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 11, 23377, 430, 279, 13254, 6070, 374, 17226, 323, 5764, 5370, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130a60>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 961, 315, 279, 6771, 315, 36962, 11, 19392, 430, 433, 374, 264, 24693, 2449, 315, 279, 2246, 430, 29944, 13016, 304, 60499, 279, 1934, 11, 8405, 264, 69917, 311, 279, 5370, 14491, 323, 3673, 5343, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130af0>, 'json_data': {'input': [[18902, 79483, 25, 36233, 18512, 527, 8965, 52872, 2391, 1057, 4725, 3388, 315, 2626, 11, 902, 584, 22824, 553, 439, 3060, 432, 33465, 11, 6763, 323, 8661, 11, 477, 4689, 323, 23541, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 459, 24131, 315, 1268, 10565, 18512, 527, 71974, 13, 1102, 40019, 279, 2380, 1925, 11306, 25, 8483, 323, 11050, 320, 49, 33465, 705, 6763, 323, 8661, 11, 323, 4689, 323, 23541, 18512, 11, 6376, 279, 6566, 369, 264, 810, 11944, 31085, 315, 1855, 5699, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130b80>, 'json_data': {'input': [[18902, 79483, 25, 1666, 1057, 2626, 93054, 11, 584, 48582, 3477, 11, 46464, 11, 323, 2713, 1057, 81898, 369, 16967, 11, 23738, 11, 323, 26060, 279, 1396, 315, 7318, 28849, 323, 279, 1396, 315, 51091, 11, 323, 369, 25607, 279, 30466, 8066, 555, 279, 12435, 4299, 323, 21455, 5820, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 42028, 81898, 1511, 555, 5195, 311, 3839, 323, 1934, 389, 58191, 2065, 17150, 11, 19392, 279, 2883, 596, 15507, 311, 35611, 74285, 1202, 11618, 13, 1102, 13533, 430, 279, 828, 10666, 304, 6931, 27855, 1253, 387, 3917, 311, 9013, 323, 18637, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130c10>, 'json_data': {'input': [[18902, 79483, 25, 7436, 1666, 3932, 304, 11469, 37671, 15098, 2586, 2930, 11, 1057, 30466, 505, 6625, 11987, 3136, 311, 5376, 11, 323, 1253, 1397, 8738, 22538, 13, 763, 5369, 11, 19567, 304, 7362, 9473, 7969, 7958, 1778, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 12939, 315, 6625, 11987, 304, 63897, 596, 13254, 8446, 11, 8104, 439, 810, 3932, 505, 11469, 37671, 2586, 2930, 13, 1102, 72890, 279, 32961, 369, 8738, 9341, 304, 1521, 13918, 323, 22020, 279, 5536, 315, 7362, 9473, 7969, 389, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130ca0>, 'json_data': {'input': [[18902, 79483, 25, 29240, 304, 2853, 17453, 29218, 323, 2853, 17453, 38025, 4099, 527, 16625, 555, 264, 1396, 315, 958, 9920, 9547, 2737, 4442, 304, 3756, 6651, 11, 46139, 6651, 11, 87386, 10374, 11, 14529, 2027, 323, 4947, 4442, 11, 2027, 6651, 11, 3424, 6651, 11, 323, 4442, 304, 7362, 11667, 9473, 7969, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 279, 9547, 28987, 2853, 17453, 29218, 323, 2853, 17453, 38025, 4099, 13, 1102, 1946, 1392, 279, 3766, 12143, 555, 45293, 279, 84140, 315, 13254, 9659, 11, 2737, 9434, 9547, 430, 1253, 5536, 58191, 2065, 17150, 11, 902, 527, 16996, 369, 50087, 10194, 279, 6020, 5178, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130d30>, 'json_data': {'input': [[18902, 79483, 25, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 32400, 430, 374, 54291, 11, 19392, 430, 63897, 1587, 539, 49229, 439, 264, 9333, 13122, 2883, 13, 1115, 7872, 374, 9959, 369, 23331, 8907, 323, 13122, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130dc0>, 'json_data': {'input': [[18902, 79483, 25, 3331, 323, 52941, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 3331, 323, 52941, 18512, 11, 19392, 430, 420, 374, 2500, 9200, 5699, 315, 25605, 18512, 369, 63897, 4953, 13, 1102, 11263, 279, 20954, 315, 432, 33465, 323, 16207, 323, 18729, 11, 11957, 65383, 304, 264, 16195, 24131, 315, 279, 2883, 596, 2853, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130e50>, 'json_data': {'input': [[18902, 79483, 25, 48132, 11, 39923, 315, 23139, 323, 25368, 50730, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 50729, 279, 8336, 323, 5829, 315, 8515, 323, 5552, 18845, 369, 63897, 4953, 13, 1102, 5825, 7718, 26793, 1139, 1268, 279, 2883, 29972, 1202, 53113, 323, 6864, 6070, 11, 16996, 369, 8830, 1202, 6020, 15174, 323, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130ee0>, 'json_data': {'input': [[18902, 79483, 25, 578, 8191, 374, 832, 315, 279, 1917, 753, 1455, 8147, 6273, 12509, 26, 433, 2047, 2053, 6848, 11, 1274, 11, 323, 9873, 3544, 323, 2678, 13, 5751, 9131, 311, 31335, 279, 1917, 753, 2038, 323, 1304, 433, 61528, 15987, 323, 5505, 374, 439, 9959, 3432, 439, 433, 574, 994, 584, 1051, 18538, 304, 220, 2550, 23, 13, 8876, 1243, 11, 584, 617, 28995, 505, 264, 2883, 430, 8779, 1274, 1505, 11503, 311, 264, 2883, 430, 1101, 8779, 1274, 636, 2574, 2884, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 312, 2058, 988, 63897, 596, 6332, 9131, 311, 31335, 2038, 323, 18885, 40800, 13, 1102, 66251, 4861, 279, 2883, 596, 15740, 323, 15507, 311, 18899, 1217, 11704, 555, 8405, 7526, 430, 28696, 6677, 323, 26206, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88130f70>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3663, 264, 1396, 315, 15266, 323, 8312, 8957, 15635, 430, 1436, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 264, 502, 3857, 10968, 389, 15266, 323, 8312, 8957, 15635, 11, 19392, 279, 4754, 52227, 430, 1436, 7958, 279, 2883, 596, 25605, 15374, 323, 6020, 20334, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131000>, 'json_data': {'input': [[18902, 79483, 25, 10604, 304, 45344, 73815, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 24043, 17989, 11, 19392, 264, 10430, 9002, 4442, 304, 24043, 17989, 430, 617, 25127, 369, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131090>, 'json_data': {'input': [[18902, 79483, 25, 400, 3443, 400, 8652, 400, 3101, 400, 5154, 400, 1049, 400, 3965, 400, 1041, 296, 400, 1135, 400, 15, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 220, 17, 612, 320, 15, 507, 612, 56, 20619, 384, 328, 43945, 220, 2636, 624, 63897, 4953, 13, 3308, 362, 284, 16473, 63981, 41739, 284, 8713, 2345, 39092, 38, 8191, 41739, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5764, 279, 54243, 13340, 315, 279, 828, 14407, 304, 3766, 27855, 13, 1102, 43395, 62991, 279, 5178, 315, 63897, 596, 3308, 362, 5708, 2403, 279, 5300, 15285, 11, 8405, 264, 2867, 9302, 6492, 369, 13016, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131120>, 'json_data': {'input': [[18902, 79483, 25, 1226, 49229, 682, 3157, 481, 11897, 34919, 430, 617, 7524, 296, 2693, 1385, 315, 2380, 4038, 477, 2753, 505, 279, 2457, 315, 7782, 439, 8515, 86106, 323, 1884, 449, 7524, 296, 2693, 1385, 315, 7191, 1109, 2380, 4038, 439, 3157, 481, 34919, 389, 1057, 79980, 660, 31946, 61572, 13, 1226, 8417, 279, 8475, 24790, 315, 1057, 22538, 304, 3157, 481, 11897, 34919, 520, 279, 892, 315, 7782, 323, 312, 48391, 1778, 43851, 520, 1855, 8335, 11071, 2457, 13, 1226, 617, 21771, 323, 41853, 369, 1057, 3157, 481, 11897, 34919, 439, 2561, 15548, 58637, 13, 4740, 18361, 315, 1057, 5326, 19579, 11565, 26470, 11, 439, 1664, 439, 1057, 53113, 8670, 11, 584, 1253, 4662, 1521, 11897, 34919, 4972, 311, 872, 7524, 296, 2693, 1385, 13, 1666, 584, 1684, 1521, 34919, 439, 2561, 311, 1862, 1510, 7677, 11, 584, 49229, 7701, 14812, 34919, 449, 296, 2693, 1385, 7953, 220, 717, 4038, 439, 1510, 12032, 1234, 279, 17703, 3157, 481, 34919, 389, 279, 79980, 660, 31946, 61572, 13, 1226, 6920, 1521, 34919, 520, 6762, 907, 11, 323, 1934, 279, 50204, 1534, 20192, 323, 18151, 11, 4272, 315, 13426, 11, 439, 264, 3777, 315, 5708, 17075, 529, 25452, 11, 3734, 369, 279, 4442, 304, 41458, 369, 3685, 6807, 18151, 11, 902, 527, 12715, 304, 507, 40, 69248, 13, 1789, 3738, 3157, 481, 11897, 34919, 584, 617, 16689, 279, 6762, 907, 3072, 11, 369, 902, 4442, 304, 6762, 907, 527, 12715, 304, 507, 40, 69248, 13, 1226, 8417, 904, 15393, 20192, 477, 18151, 389, 279, 6412, 315, 3157, 481, 11897, 34919, 389, 264, 3230, 22654, 1749, 11, 323, 584, 3335, 1778, 20192, 323, 18151, 439, 264, 3777, 315, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 11944, 2038, 389, 1268, 63897, 4953, 13, 538, 9803, 323, 29972, 1202, 3157, 481, 11897, 34919, 11, 2737, 872, 24043, 6514, 389, 279, 79980, 660, 31946, 61572, 13, 1102, 15100, 279, 13186, 369, 24790, 323, 1268, 279, 2883, 45799, 20192, 323, 18151, 11, 902, 374, 7718, 369, 8830, 279, 2883, 596, 9341, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881311b0>, 'json_data': {'input': [[18902, 79483, 25, 11842, 5364, 847, 36164, 46272, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 459, 17219, 311, 279, 3857, 389, 11842, 5364, 847, 36164, 46272, 11, 19392, 430, 279, 2768, 2262, 690, 3493, 3649, 9002, 279, 24043, 6514, 315, 1521, 34919, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131240>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 13, 74006, 59351, 9182, 70245, 8606, 54695, 44267, 198, 2014, 940, 1534, 73094, 25, 1115, 2316, 40019, 279, 60391, 8335, 25112, 315, 63897, 4953, 2637, 902, 3493, 264, 16694, 315, 279, 2883, 753, 6020, 2361, 11, 2737, 12032, 11, 58165, 11, 323, 5708, 17075, 529, 25452, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881312d0>, 'json_data': {'input': [[18902, 79483, 25, 34459, 3938, 20192, 323, 18151, 5938, 449, 1057, 3157, 481, 11897, 4868, 20136, 1253, 1782, 90694, 505, 279, 27541, 29060, 10887, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 4245, 311, 279, 38088, 9669, 5938, 449, 52997, 279, 18912, 323, 3392, 315, 4442, 304, 2802, 7969, 323, 1057, 5150, 70530, 323, 10093, 13, 27713, 49, 6492, 374, 539, 10825, 311, 4097, 5150, 18151, 719, 374, 1511, 439, 264, 5326, 42304, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 9669, 315, 279, 27713, 49, 6492, 9932, 304, 46613, 220, 16, 11, 82003, 430, 5150, 3938, 20192, 323, 18151, 1253, 1782, 12207, 505, 279, 17989, 4245, 311, 279, 50235, 7138, 315, 2802, 7969, 13, 1115, 18141, 374, 3062, 369, 39210, 311, 15641, 279, 38088, 69867, 304, 6020, 79482, 323, 5326, 15813, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131360>, 'json_data': {'input': [[18902, 79483, 25, 1226, 13375, 1057, 25261, 304, 18859, 449, 279, 10886, 315, 279, 62029, 21257, 13, 13266, 10886, 1397, 430, 584, 3197, 323, 2804, 279, 25261, 311, 6994, 13579, 44701, 922, 3508, 7524, 5419, 2585, 927, 6020, 13122, 574, 18908, 304, 682, 3769, 43666, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 66159, 279, 10886, 323, 16346, 8272, 555, 279, 54406, 2391, 279, 25261, 11, 91115, 279, 38769, 315, 279, 25261, 1920, 323, 279, 44701, 3984, 555, 279, 25261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881313f0>, 'json_data': {'input': [[18902, 79483, 25, 9393, 315, 1202, 38088, 9669, 11, 5419, 2585, 927, 6020, 13122, 1253, 539, 5471, 477, 11388, 5906, 95687, 13, 7429, 11, 41579, 315, 904, 16865, 315, 27375, 311, 3938, 18852, 527, 3917, 311, 279, 5326, 430, 11835, 1253, 3719, 46579, 1606, 315, 4442, 304, 4787, 11, 477, 430, 279, 8547, 315, 8907, 449, 279, 10396, 477, 16346, 1253, 39436, 349, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 38088, 9669, 315, 5419, 11835, 11, 8405, 264, 26569, 13356, 389, 279, 11774, 17011, 304, 20958, 7524, 11835, 927, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131480>, 'json_data': {'input': [[18902, 79483, 25, 578, 6762, 2819, 315, 19310, 32905, 24198, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 29040, 279, 6762, 2819, 315, 19310, 32905, 24198, 13, 1102, 11815, 279, 38846, 2038, 555, 8405, 264, 47616, 15813, 315, 279, 43645, 6, 5536, 389, 279, 2883, 753, 6020, 2361, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131510>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1380, 533, 2626, 31550, 304, 5361, 36702, 13, 7327, 30466, 11, 439, 1664, 439, 7194, 323, 18512, 3453, 50615, 304, 7362, 36702, 11, 29241, 603, 311, 279, 5326, 315, 65649, 304, 7362, 11667, 9473, 7969, 2403, 279, 549, 815, 13, 18160, 13, 1666, 14407, 3770, 11, 584, 3810, 1139, 32905, 24198, 311, 42766, 7362, 11667, 5326, 13, 37409, 36702, 61316, 3640, 5343, 279, 13673, 18160, 11, 8013, 31123, 11, 12152, 18160, 11, 20026, 11, 323, 11002, 58440, 13, 1789, 279, 7580, 315, 42118, 7362, 11667, 9473, 5326, 11, 584, 6646, 279, 13970, 18845, 304, 7362, 11667, 9473, 7969, 323, 11075, 430, 433, 574, 29546, 3284, 430, 31959, 4442, 304, 9473, 7969, 315, 220, 605, 4, 1436, 387, 10534, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 2883, 596, 3728, 7677, 323, 279, 13239, 14675, 311, 7362, 11667, 9473, 4478, 65649, 11, 45293, 279, 11193, 4529, 311, 42766, 420, 5326, 323, 79774, 279, 36702, 6532, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881315a0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881316c0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3335, 27334, 30466, 994, 8515, 14507, 527, 4036, 477, 4245, 304, 12178, 315, 1057, 5178, 11, 2737, 15055, 902, 527, 21639, 481, 13, 76615, 30466, 15871, 29243, 311, 5195, 15161, 323, 5195, 41455, 11, 15771, 11, 323, 7766, 13, 10884, 27334, 13254, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 574, 400, 19, 13, 20, 7239, 11, 315, 902, 400, 17, 13, 19, 7239, 574, 15324, 439, 30466, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7419, 323, 49449, 315, 27334, 30466, 369, 63897, 4953, 2637, 39686, 1202, 41961, 311, 5195, 15161, 11, 41455, 11, 323, 7766, 13, 1102, 5825, 47616, 828, 389, 279, 2860, 27334, 13254, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 11, 323, 279, 3392, 15324, 439, 13254, 304, 279, 2768, 1060, 11, 902, 374, 16996, 369, 8830, 279, 2883, 753, 13254, 18324, 10396, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131750>, 'json_data': {'input': [[18902, 79483, 25, 220, 6069, 627, 2014, 940, 1534, 73094, 25, 1115, 374, 4461, 264, 2199, 1396, 5905, 477, 11381, 2949, 279, 2246, 11, 8405, 912, 12190, 2038, 389, 1202, 1866, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881317e0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 2316, 19392, 279, 9546, 315, 264, 2007, 315, 8970, 2949, 279, 2246, 13, 1102, 17482, 439, 264, 34512, 1697, 12576, 369, 279, 6742, 719, 1587, 539, 6782, 904, 2262, 9959, 311, 279, 6020, 828, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131870>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 345, 2014, 940, 1534, 73094, 25, 1115, 12143, 9382, 279, 1060, 2134, 369, 279, 6020, 828, 10666, 304, 279, 2768, 2007, 11, 19392, 279, 20323, 1667, 1234, 3477, 13, 1102, 10109, 988, 279, 6020, 5178, 828, 2949, 264, 3230, 71053, 369, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131900>, 'json_data': {'input': [[18902, 79483, 25, 5751, 8420, 527, 4315, 1057, 1888, 12032, 323, 527, 9200, 369, 1057, 8738, 2450, 13, 1226, 1755, 311, 3136, 24009, 23944, 8420, 2212, 279, 24867, 323, 311, 3493, 15022, 20448, 7620, 13, 1789, 5217, 2038, 11, 1518, 21023, 323, 5664, 9009, 304, 3744, 358, 11, 5858, 220, 16, 8184, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 4726, 25985, 988, 389, 279, 12939, 315, 8420, 11, 39686, 279, 2883, 596, 8446, 311, 18467, 323, 14389, 11005, 31550, 13, 1102, 34161, 311, 27927, 22100, 315, 32027, 9341, 323, 15022, 20448, 439, 1401, 5540, 315, 63897, 596, 25605, 27375, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131990>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1070, 1051, 220, 24388, 3610, 13551, 315, 3308, 356, 5708, 4694, 369, 3938, 67599, 1234, 279, 63897, 220, 2366, 16, 12937, 9878, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 279, 28767, 315, 220, 24388, 3610, 13551, 315, 3308, 356, 5708, 369, 3938, 67599, 1234, 279, 63897, 220, 2366, 16, 12937, 9878, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1115, 7216, 649, 5536, 31499, 6, 41300, 315, 19371, 1516, 323, 20448, 18512, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131a20>, 'json_data': {'input': [[18902, 79483, 25, 578, 6762, 907, 315, 1057, 11897, 323, 25452, 22538, 1253, 304, 279, 3938, 387, 11, 323, 3738, 22538, 617, 1027, 304, 279, 3347, 11, 48291, 11754, 555, 53113, 11, 6807, 82189, 477, 18151, 11, 5178, 323, 6020, 3135, 315, 279, 16940, 15086, 11, 7362, 9473, 7969, 11, 4442, 304, 2802, 7969, 11, 2737, 4442, 430, 1253, 1121, 505, 279, 8292, 315, 502, 29531, 7969, 11, 279, 2515, 315, 502, 477, 10223, 14640, 11, 279, 5708, 3157, 304, 4689, 11, 477, 1023, 9547, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 4726, 25985, 988, 389, 279, 9547, 430, 1253, 7958, 279, 6762, 907, 315, 63897, 596, 22538, 11, 2737, 53113, 323, 6807, 15635, 11, 3157, 5178, 11, 323, 23331, 4442, 13, 1102, 22890, 5304, 279, 3766, 12143, 555, 45293, 279, 84140, 6532, 304, 18646, 279, 2883, 596, 9341, 20136, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131ab0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 9320, 1139, 15182, 3230, 4595, 315, 28650, 13, 1102, 66159, 279, 20057, 315, 10937, 17011, 555, 279, 2883, 323, 48542, 279, 6742, 369, 279, 11944, 52678, 315, 28650, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131b40>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 1317, 62954, 12032, 555, 46139, 3158, 11, 902, 5764, 3424, 323, 7241, 11, 4272, 323, 10565, 26120, 12032, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 690, 3118, 2038, 922, 1317, 62954, 12032, 555, 46139, 3158, 11, 19392, 264, 5357, 389, 279, 2883, 753, 7106, 6864, 22538, 323, 872, 46139, 8141, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131bd0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 5651, 220, 966, 11, 220, 2366, 18, 11, 279, 24069, 3157, 907, 315, 13551, 5762, 555, 2536, 71260, 4008, 988, 315, 279, 23702, 519, 320, 31039, 5304, 279, 15676, 6412, 7729, 315, 1778, 13551, 389, 279, 39322, 74307, 8121, 8593, 8152, 389, 5651, 220, 966, 11, 220, 2366, 18, 8, 574, 13489, 400, 16, 11, 16707, 13, 17, 7239, 13, 1789, 10096, 315, 38714, 279, 24069, 3157, 907, 315, 13551, 5762, 555, 2536, 71260, 4008, 988, 11, 584, 617, 19655, 430, 682, 19310, 13551, 527, 5762, 555, 2536, 71260, 4008, 988, 11, 3734, 369, 13551, 5762, 555, 1855, 315, 1057, 11145, 9808, 11, 28454, 11, 323, 220, 20, 4, 477, 7191, 5708, 17075, 13, 763, 279, 1162, 315, 220, 20, 4, 477, 7191, 5708, 17075, 11, 584, 617, 539, 25660, 1778, 5708, 17075, 311, 387, 32133, 7389, 1070, 527, 13363, 323, 13463, 902, 1053, 13519, 430, 1778, 5708, 17075, 10368, 904, 2585, 927, 1057, 2883, 11, 477, 7389, 814, 3412, 220, 605, 4, 477, 810, 315, 1057, 19310, 4279, 5708, 13, 4314, 32946, 1288, 539, 387, 25660, 311, 35256, 459, 26360, 430, 682, 11145, 9808, 11, 28454, 11, 323, 220, 20, 4, 477, 7191, 5708, 17075, 527, 11, 304, 2144, 11, 32133, 315, 1057, 2883, 11, 477, 430, 1070, 527, 539, 1023, 11434, 889, 1253, 387, 25660, 311, 387, 32133, 315, 1057, 2883, 13, 15903, 2038, 18815, 4430, 6416, 826, 315, 1057, 9808, 11, 28454, 11, 323, 12717, 5708, 17075, 374, 5343, 477, 32762, 555, 5905, 304, 3744, 14767, 11, 5858, 220, 717, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 16694, 315, 63897, 4953, 3238, 82, 3157, 6864, 2065, 439, 315, 5651, 220, 966, 11, 220, 2366, 18, 13, 1102, 35434, 279, 24069, 3157, 907, 315, 13551, 5762, 555, 2536, 71260, 4008, 988, 11, 902, 374, 264, 9200, 6767, 315, 279, 2883, 596, 6020, 2890, 323, 30693, 2802, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131c60>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 264, 13651, 315, 279, 2246, 11, 11951, 279, 6771, 315, 36962, 11, 902, 8779, 13016, 21546, 279, 5370, 14491, 323, 3619, 279, 8244, 6070, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131cf0>, 'json_data': {'input': [[18902, 79483, 25, 1789, 14058, 9277, 389, 5195, 8304, 6012, 11, 584, 15806, 3508, 584, 527, 279, 12717, 320, 72, 1770, 2637, 1934, 30466, 389, 264, 20547, 8197, 8, 477, 8479, 320, 72, 1770, 2637, 1934, 30466, 389, 264, 4272, 8197, 570, 44493, 11, 584, 1934, 13172, 30466, 369, 14058, 9277, 389, 5195, 8304, 6012, 389, 264, 20547, 8197, 11, 430, 374, 11, 279, 15055, 50546, 311, 1057, 6444, 527, 12715, 439, 30466, 345, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 24790, 315, 13254, 13122, 439, 3060, 20547, 477, 4272, 3196, 389, 3508, 63897, 14385, 439, 264, 12717, 477, 459, 8479, 304, 13172, 14463, 13, 1102, 20064, 9803, 279, 6020, 13122, 25127, 315, 1521, 13073, 304, 872, 13172, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131d80>, 'json_data': {'input': [[18902, 79483, 25, 320, 1423, 477, 1023, 29101, 315, 88465, 477, 7471, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 73100, 14742, 279, 2317, 315, 279, 3766, 12143, 555, 38938, 279, 7138, 315, 279, 2038, 1694, 3984, 320, 2513, 315, 88465, 323, 469, 691, 570]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131e10>, 'json_data': {'input': [[18902, 79483, 25, 12937, 35695, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 3649, 922, 279, 2883, 596, 5708, 6787, 11, 11951, 279, 63897, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 11, 19392, 279, 4595, 315, 5708, 6108, 23146, 9076, 311, 8420, 13, 1102, 7437, 279, 6566, 369, 8830, 279, 2883, 596, 5603, 311, 9548, 36580, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131ea0>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 18, 13, 36526, 984, 5421, 78117, 12124, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 330, 12236, 220, 18, 13, 36526, 984, 5421, 78117, 12124, 1359, 19392, 430, 279, 2768, 2262, 690, 2686, 279, 5897, 11774, 279, 2883, 374, 5131, 13176, 477, 2643, 3663, 304, 279, 3938, 13, 1102, 17738, 279, 12939, 315, 5897, 13146, 304, 47614, 279, 2883, 596, 5326, 5643, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131f30>, 'json_data': {'input': [[18902, 79483, 25, 16666, 47750, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 279, 2883, 596, 6807, 13077, 11, 19392, 430, 279, 2768, 2038, 690, 7872, 279, 2561, 6807, 323, 5938, 3878, 11, 902, 527, 3062, 369, 8830, 279, 2883, 753, 29642, 25152, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88131fc0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 5843, 62954, 12032, 25, 3723, 4273, 400, 220, 6365, 11, 20943, 400, 220, 5120, 11, 25210, 7327, 220, 1644, 11, 20339, 220, 1987, 11, 19230, 10884, 1317, 62954, 12032, 400, 220, 6804, 11, 25307, 400, 220, 10410, 11, 21299, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 12399, 315, 279, 1317, 62954, 12032, 315, 63897, 4953, 13, 439, 315, 6790, 220, 2148, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 11, 11102, 1523, 1139, 13018, 323, 6625, 11306, 13, 1115, 2038, 374, 961, 315, 279, 6020, 12518, 3857, 11, 8405, 26793, 1139, 279, 2883, 596, 9513, 2385, 323, 54001, 8141, 315, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132050>, 'json_data': {'input': [[18902, 79483, 25, 3061, 670, 38170, 304, 1057, 13172, 30466, 11, 439, 1664, 439, 279, 2349, 304, 7318, 28849, 323, 2853, 17453, 29218, 389, 5195, 7694, 612, 1023, 6012, 323, 279, 2349, 304, 51091, 323, 2853, 17453, 38025, 4099, 389, 5195, 8304, 6012, 323, 279, 26670, 1990, 1521, 3673, 617, 1027, 11, 323, 1253, 3136, 311, 387, 11, 11754, 555, 9547, 304, 5369, 311, 279, 4689, 9547, 7633, 3485, 11, 1778, 439, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 9547, 430, 1253, 10383, 65649, 304, 13172, 30466, 11, 7318, 28849, 11, 323, 2853, 17453, 29218, 17150, 13, 1102, 15151, 264, 9320, 311, 264, 810, 11944, 10430, 315, 9434, 7482, 28987, 5195, 596, 2626, 5178, 304, 279, 13172, 10706, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881320e0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 7089, 2853, 315, 30466, 15871, 5764, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 10430, 315, 330, 11663, 2853, 315, 30466, 1359, 19392, 264, 6541, 311, 5217, 18512, 52872, 7953, 350, 1741, 11, 902, 374, 16595, 369, 264, 16195, 8830, 315, 279, 2883, 596, 8244, 2853, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132170>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 10862, 1139, 10565, 26120, 20038, 15871, 369, 828, 19169, 11, 4363, 11, 323, 19672, 6957, 279, 1917, 449, 26120, 18852, 1367, 6322, 1990, 220, 2366, 19, 323, 220, 11056, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 459, 24131, 315, 279, 2883, 596, 10565, 26120, 20038, 11, 2737, 279, 4595, 315, 6012, 82280, 323, 279, 8250, 315, 1521, 20038, 11, 902, 374, 9959, 369, 8830, 279, 2883, 753, 42356, 323, 6020, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132200>, 'json_data': {'input': [[18902, 79483, 25, 2314, 8630, 555, 1817, 1906, 3508, 904, 315, 1884, 1493, 51479, 527, 2800, 266, 3808, 430, 2631, 264, 13654, 6492, 315, 36210, 6108, 20448, 4036, 555, 904, 315, 279, 23702, 519, 596, 11145, 9808, 2391, 279, 9959, 13654, 4261, 33549, 311, 17036, 8273, 13, 605, 35, 12, 16, 1921, 570, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 505, 46613, 220, 18, 11, 21760, 389, 3508, 904, 1493, 51479, 617, 19543, 304, 2800, 266, 3808, 430, 1397, 459, 6492, 315, 36210, 6108, 20448, 369, 11145, 9808, 13, 1115, 36716, 311, 39242, 323, 13166, 35186, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132290>, 'json_data': {'input': [[18902, 79483, 25, 35185, 315, 10565, 26120, 20900, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 3857, 4461, 40019, 264, 2007, 29385, 4954, 279, 18512, 5552, 311, 10565, 73657, 11, 19392, 279, 6020, 5536, 1521, 73657, 617, 389, 279, 2883, 596, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132320>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3566, 3914, 4669, 1057, 30693, 4398, 3997, 1057, 24608, 6880, 323, 3738, 4455, 584, 16136, 304, 477, 3552, 449, 3697, 315, 279, 9341, 4029, 13, 5751, 30693, 4398, 3997, 1101, 5825, 22736, 315, 3754, 477, 45976, 9002, 1057, 6020, 5178, 323, 1023, 3673, 430, 1253, 387, 3769, 477, 315, 2802, 311, 1057, 15167, 11, 2737, 22370, 68248, 11, 30693, 4455, 11, 3577, 323, 24608, 19786, 11, 323, 26743, 13, 1226, 1101, 4430, 5195, 3754, 323, 2027, 9013, 389, 5195, 596, 50070, 5117, 520, 3788, 1129, 2185, 31168, 5831, 35645, 902, 1253, 387, 315, 2802, 477, 3769, 311, 1057, 15167, 13, 15903, 11, 13166, 35186, 2038, 11, 2737, 1057, 16125, 315, 88465, 11, 555, 68637, 11, 35186, 17959, 11, 4580, 13093, 9676, 388, 11, 323, 2082, 315, 6929, 11, 374, 1101, 2561, 389, 1057, 30693, 4398, 3997, 1234, 279, 14836, 330, 78706, 685, 1210, 578, 2262, 315, 1057, 13335, 527, 539, 32762, 555, 5905, 1139, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 477, 304, 904, 1023, 1934, 477, 2246, 584, 1052, 449, 279, 22370, 11, 323, 904, 15407, 311, 1057, 13335, 527, 10825, 311, 387, 32899, 63633, 15407, 1193, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 50729, 279, 5370, 5070, 2561, 389, 279, 30693, 4398, 3997, 11, 2737, 24608, 6880, 11, 6020, 5178, 22736, 11, 323, 13166, 35186, 2038, 13, 1102, 66159, 279, 2883, 596, 15507, 311, 28330, 323, 10758, 449, 1202, 15167, 323, 39210, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881323b0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 7694, 612, 1023, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5144, 279, 3230, 13254, 5699, 330, 14783, 7694, 612, 1023, 1359, 22364, 311, 264, 11944, 6492, 315, 420, 10449, 596, 5178, 323, 1202, 5536, 389, 8244, 13172, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132440>, 'json_data': {'input': [[18902, 79483, 25, 12781, 17452, 26120, 14507, 527, 4272, 315, 737, 19849, 2802, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 430, 3938, 17452, 26120, 14507, 527, 10666, 4272, 315, 737, 19849, 2802, 11, 902, 374, 9959, 369, 8830, 1268, 279, 2883, 9815, 369, 1202, 71419, 30255, 2949, 1202, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881324d0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6373, 374, 8647, 369, 31692, 323, 20958, 26613, 5419, 2585, 927, 6020, 13122, 11, 439, 4613, 304, 18592, 220, 1032, 64, 12, 868, 968, 8, 315, 279, 19224, 3298, 13, 5751, 6373, 13375, 459, 16865, 315, 279, 27375, 315, 1057, 5419, 2585, 927, 6020, 13122, 3196, 389, 279, 12914, 304, 15774, 7935, 2345, 83537, 24686, 11136, 555, 279, 10554, 315, 328, 2805, 5620, 67792, 315, 279, 350, 888, 3195, 9849, 320, 679, 18, 12914, 570, 20817, 389, 420, 16865, 11, 6373, 20536, 430, 1057, 5419, 2585, 927, 6020, 13122, 574, 7524, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 9744, 22690, 279, 3135, 315, 1202, 15813, 449, 1057, 48746, 323, 60270, 10554, 13, 578, 27375, 315, 1057, 5419, 2585, 927, 6020, 13122, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 706, 1027, 6264, 1639, 555, 74210, 612, 13566, 69065, 11, 459, 9678, 9879, 586, 24043, 7626, 11, 439, 11224, 304, 1202, 1934, 902, 374, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 6373, 596, 3560, 304, 31692, 7524, 5419, 11835, 11, 82003, 279, 16865, 1920, 323, 279, 22315, 315, 9434, 6264, 12170, 11, 902, 11621, 38769, 311, 279, 2883, 596, 6020, 13122, 12914, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132560>, 'json_data': {'input': [[18902, 79483, 25, 29240, 304, 3674, 11, 5054, 11, 7100, 11, 3827, 11, 323, 23331, 4787, 477, 304, 7016, 323, 10396, 10217, 264, 7029, 2134, 315, 13650, 323, 5552, 5897, 13146, 11, 2737, 26969, 11, 43986, 11, 323, 23331, 6299, 11, 617, 19543, 304, 35018, 323, 9057, 603, 311, 2349, 1057, 2626, 12659, 13, 1666, 1521, 3728, 18845, 3136, 11, 1057, 2853, 315, 3815, 2626, 1253, 5376, 11, 1057, 5845, 311, 23564, 3738, 2626, 4211, 477, 3085, 3738, 3956, 477, 3600, 1253, 387, 7347, 11, 323, 584, 1253, 1205, 311, 2349, 1057, 2626, 12659, 311, 26069, 449, 42028, 23331, 323, 5897, 13146, 13, 26379, 2997, 279, 3276, 85971, 21859, 13019, 555, 279, 549, 815, 13, 6011, 315, 12007, 323, 264, 1396, 315, 1614, 7867, 27910, 3331, 26, 27743, 25243, 323, 15639, 39725, 304, 279, 549, 815, 2637, 10013, 11, 323, 2212, 279, 1917, 430, 1436, 57160, 477, 22472, 6220, 57511, 9313, 369, 13335, 323, 2930, 15771, 26, 323, 279, 14434, 47910, 3298, 323, 14434, 8471, 3298, 304, 4606, 323, 5370, 27743, 25243, 304, 279, 549, 815, 13, 10968, 389, 3544, 5557, 15771, 13, 1789, 5217, 2038, 11, 1518, 5858, 220, 16, 32, 32388, 68318, 323, 25705, 58364, 304, 7181, 220, 605, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 3744, 8105, 11, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 23331, 11774, 9932, 8767, 11, 45293, 279, 5370, 9434, 40850, 63897, 12580, 11, 2737, 3276, 85971, 4819, 323, 27743, 4442, 13, 1102, 22020, 279, 4754, 6020, 323, 25605, 16296, 315, 1521, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881325f0>, 'json_data': {'input': [[18902, 79483, 25, 14727, 1334, 479, 315, 77990, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 19392, 264, 3857, 12514, 311, 279, 53317, 315, 22538, 13, 1102, 17738, 264, 11944, 10430, 389, 1268, 63897, 4953, 13, 8720, 288, 323, 9815, 369, 38974, 1392, 304, 1202, 9341, 20136, 11, 902, 374, 16996, 369, 13687, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132680>, 'json_data': {'input': [[18902, 79483, 25, 1442, 279, 549, 815, 13, 18160, 58764, 555, 220, 605, 13689, 279, 3392, 12715, 304, 40944, 14807, 28174, 320, 1182, 32, 8, 2949, 362, 65083, 5552, 311, 1057, 4272, 9341, 305, 17327, 1603, 3827, 2515, 1053, 617, 1027, 13489, 400, 23305, 3610, 323, 400, 26491, 3610, 4827, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 15947, 13, 578, 2349, 304, 907, 12715, 304, 356, 15559, 1053, 387, 3685, 311, 4445, 264, 12435, 7362, 11667, 14807, 8895, 477, 4814, 505, 1057, 9341, 304, 7362, 72202, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 10484, 9803, 279, 4754, 5536, 315, 11667, 65649, 389, 279, 40944, 14807, 28174, 320, 1182, 32, 8, 5552, 311, 4272, 9341, 305, 17327, 11, 4726, 94012, 279, 6020, 15635, 6532, 304, 6625, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132710>, 'json_data': {'input': [[18902, 79483, 25, 3580, 24442, 8554, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 5217, 93566, 8554, 19780, 279, 6020, 12518, 11, 902, 649, 3493, 4726, 2317, 323, 3649, 922, 279, 12678, 323, 10396, 1511, 304, 279, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881327a0>, 'json_data': {'input': [[18902, 79483, 25, 50730, 304, 5751, 8184, 323, 17961, 13756, 198, 2014, 940, 1534, 73094, 25, 1115, 14836, 40019, 264, 10430, 922, 279, 1317, 9860, 18845, 28987, 63897, 596, 2626, 323, 6020, 20124, 11, 6376, 279, 6566, 369, 264, 19662, 27501, 315, 9434, 9547, 66700, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132830>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 16, 11, 420, 374, 264, 54515, 315, 279, 6771, 315, 36962, 11, 19392, 264, 4754, 37666, 1493, 477, 459, 28286, 369, 5905, 2949, 264, 2204, 3857, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881328c0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1774, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 2500, 2199, 1396, 477, 5905, 11381, 11, 19392, 264, 9320, 477, 25768, 304, 279, 2246, 596, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132950>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 13454, 315, 279, 6771, 315, 36962, 505, 46613, 220, 16, 11, 19392, 279, 6070, 315, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 369, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881329e0>, 'json_data': {'input': [[18902, 79483, 25, 93648, 198, 2014, 940, 1534, 73094, 25, 578, 2316, 330, 9312, 9151, 1, 15151, 264, 3857, 430, 690, 4358, 1268, 63897, 29972, 1202, 6864, 6070, 11, 2737, 11897, 29642, 323, 1023, 6020, 24198, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132a70>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1755, 6484, 8515, 11, 8515, 86106, 11, 2875, 9860, 3157, 481, 34919, 11, 8515, 28555, 505, 7677, 323, 29642, 7640, 311, 3136, 311, 387, 14343, 311, 3887, 1057, 10565, 7640, 323, 8515, 42356, 369, 26012, 323, 29642, 7640, 369, 520, 3325, 279, 1828, 220, 717, 4038, 323, 46095, 369, 279, 79003, 3938, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 2289, 279, 10430, 315, 53113, 555, 33449, 287, 430, 279, 2883, 25283, 1202, 6020, 5070, 311, 387, 14343, 369, 1202, 25605, 3966, 369, 520, 3325, 279, 1828, 1060, 13, 1102, 5825, 44701, 311, 39210, 9002, 279, 41329, 315, 279, 2883, 596, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132b00>, 'json_data': {'input': [[18902, 79483, 25, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17738, 279, 7314, 315, 264, 11944, 6492, 315, 30466, 8066, 555, 63897, 4953, 13, 1102, 4461, 5764, 264, 31085, 315, 13254, 8336, 11, 902, 374, 16996, 369, 8830, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132b90>, 'json_data': {'input': [[18902, 79483, 25, 220, 1691, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4461, 264, 6002, 477, 3857, 11381, 2949, 279, 2246, 323, 1587, 539, 6782, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132c20>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1070, 1051, 220, 24388, 3610, 13551, 315, 3308, 356, 5708, 4694, 369, 3938, 67599, 1234, 279, 63897, 220, 2366, 16, 12937, 9878, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 279, 28767, 315, 220, 24388, 3610, 13551, 315, 3308, 356, 5708, 369, 3938, 67599, 1234, 279, 63897, 220, 2366, 16, 12937, 9878, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1115, 7216, 649, 5536, 31499, 6, 41300, 315, 19371, 1516, 323, 20448, 18512, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132cb0>, 'json_data': {'input': [[18902, 79483, 25, 323, 15055, 7318, 311, 5195, 8304, 8717, 527, 12715, 439, 2853, 315, 30466, 13, 11208, 584, 527, 279, 12717, 11, 584, 2585, 279, 13172, 15808, 1603, 433, 374, 23217, 311, 1057, 6444, 13, 5751, 2585, 374, 69457, 555, 1057, 13612, 5845, 311, 58191, 553, 279, 13172, 15808, 1603, 433, 374, 23217, 311, 1057, 6444, 323, 374, 4726, 7396, 555, 603, 1694, 15871, 8647, 311, 1057, 6444, 323, 3515, 264, 2237, 315, 32022, 304, 31692, 21913, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 5825, 5217, 7872, 389, 1268, 63897, 11835, 13172, 15808, 323, 58191, 4861, 433, 1603, 51051, 433, 311, 6444, 13, 1102, 50729, 872, 28423, 323, 21913, 32022, 11, 902, 527, 9200, 369, 8830, 872, 13254, 18324, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132d40>, 'json_data': {'input': [[18902, 79483, 25, 93648, 198, 2014, 940, 1534, 73094, 25, 578, 2316, 330, 9312, 9151, 1, 15151, 264, 3857, 430, 690, 4358, 1268, 63897, 29972, 1202, 6864, 6070, 11, 2737, 11897, 29642, 323, 1023, 6020, 24198, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132dd0>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 11, 5195, 8471, 15098, 27983, 30466, 505, 3956, 323, 3600, 7953, 13172, 11, 2737, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 5217, 13254, 23914, 369, 5195, 8471, 7953, 8776, 13172, 11, 43080, 264, 21797, 2461, 315, 8070, 8336, 13, 1102, 48542, 279, 6742, 369, 264, 11944, 1160, 315, 1521, 5217, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132e60>, 'json_data': {'input': [[18902, 79483, 25, 7089, 52248, 13254, 6650, 574, 81383, 2915, 11754, 555, 4442, 304, 7362, 11667, 9473, 7969, 11, 15871, 4245, 311, 279, 549, 815, 13, 18160, 48513, 8844, 311, 279, 82822, 38035, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 24481, 315, 15481, 13254, 5178, 555, 25394, 279, 93071, 6372, 315, 11667, 9473, 7969, 389, 7089, 52248, 30466, 13, 1102, 4726, 46480, 1268, 11667, 65649, 649, 5536, 2204, 3157, 21282, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132ef0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 6264, 1639, 63897, 4953, 14639, 82, 5419, 2585, 927, 6020, 13122, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 3196, 389, 13186, 9749, 304, 15774, 7935, 2345, 83537, 24686, 11136, 555, 279, 10554, 315, 328, 2805, 5620, 67792, 315, 279, 350, 888, 3195, 9849, 320, 679, 18, 12914, 8, 320, 1820, 74044, 46, 13186, 570, 763, 1057, 9647, 11, 63897, 4953, 13, 320, 1820, 8351, 8, 18908, 11, 304, 682, 3769, 43666, 11, 7524, 5419, 2585, 927, 6020, 13122, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 3196, 389, 279, 74044, 46, 13186, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 5825, 279, 54406, 596, 17102, 9002, 279, 27375, 315, 5419, 2585, 927, 6020, 13122, 369, 63897, 4953, 13, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 3196, 389, 9749, 13186, 13, 1102, 17482, 439, 264, 1401, 9455, 315, 279, 25261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88132f80>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 904, 1495, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133010>, 'json_data': {'input': [[18902, 79483, 25, 763, 220, 2366, 15, 11, 584, 6222, 1057, 98741, 311, 1520, 7931, 11, 9919, 11, 323, 1023, 8717, 45925, 8108, 832, 23401, 24444, 315, 872, 12782, 13890, 20748, 30171, 555, 220, 9639, 15, 13, 1115, 374, 459, 32855, 11376, 430, 584, 617, 743, 311, 4585, 603, 311, 17210, 7438, 3725, 311, 10695, 449, 10182, 10105, 7953, 1057, 1866, 7677, 323, 907, 8957, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 5195, 596, 15507, 1903, 304, 220, 2366, 15, 311, 7945, 5370, 39210, 304, 45925, 18189, 12782, 20748, 13, 1102, 22020, 279, 2883, 596, 27927, 41329, 9021, 323, 34334, 311, 17210, 40646, 311, 10182, 10105, 11, 6376, 279, 6566, 369, 810, 3230, 41329, 11811, 9932, 3010, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881330a0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 312, 2058, 988, 279, 2246, 596, 2316, 11, 330, 2149, 18992, 4953, 13, 1359, 13788, 439, 459, 13110, 315, 279, 2883, 369, 902, 279, 6020, 12518, 527, 10235, 11, 28592, 66251, 4954, 279, 6020, 2038, 430, 11263, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133130>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 717, 13, 71710, 69569, 4419, 69154, 3083, 63457, 6979, 83934, 15229, 84004, 69569, 4419, 3651, 94378, 3651, 85447, 83751, 95729, 25832, 85267, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 8398, 86036, 11, 902, 11383, 35434, 279, 4430, 15637, 315, 5199, 39210, 323, 6373, 11, 439, 1664, 439, 13146, 5552, 311, 5708, 4346, 12034, 13, 1115, 3857, 374, 7718, 369, 28330, 922, 889, 10187, 2410, 2949, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881331c0>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 87910, 5905, 11, 902, 1253, 3493, 5217, 2317, 477, 64784, 369, 279, 5552, 828, 10666, 304, 279, 38846, 2007, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133250>, 'json_data': {'input': [[18902, 79483, 25, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 2500, 54291, 32400, 11, 91115, 430, 63897, 1587, 539, 4498, 1234, 279, 9333, 13122, 2883, 5699, 11, 4726, 20064, 7922, 279, 2883, 596, 2704, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881332e0>, 'json_data': {'input': [[18902, 79483, 25, 1789, 264, 12399, 315, 5199, 24043, 10396, 323, 279, 2515, 389, 1057, 6020, 12518, 11, 1518, 7181, 220, 16, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 67146, 13016, 311, 5217, 2038, 9002, 5199, 24043, 10396, 304, 279, 8554, 3857, 315, 279, 6020, 12518, 13, 1102, 17482, 439, 264, 5425, 73723, 369, 13016, 889, 1390, 311, 82845, 19662, 1139, 279, 3230, 24043, 5528, 323, 872, 25127, 369, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133370>, 'json_data': {'input': [[18902, 79483, 25, 1789, 5217, 2038, 922, 3109, 19812, 8581, 311, 1057, 2626, 11, 1518, 5858, 220, 16, 32, 32388, 68318, 26, 50730, 304, 5751, 8184, 323, 17961, 13756, 304, 3744, 8105, 11, 5858, 220, 22, 26, 323, 25705, 58364, 304, 7181, 220, 605, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 3744, 8105, 11, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 5825, 5216, 369, 13016, 11125, 4726, 2038, 922, 3109, 14640, 430, 5536, 63897, 596, 2626, 13, 1102, 15407, 3230, 14491, 315, 279, 1934, 1405, 810, 11944, 20954, 649, 387, 1766, 11, 23391, 16195, 8830, 315, 279, 23331, 4676, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133400>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 961, 315, 279, 6771, 315, 36962, 11, 19392, 430, 433, 374, 264, 24693, 2449, 315, 279, 2246, 430, 29944, 13016, 304, 60499, 279, 1934, 11, 8405, 264, 69917, 311, 279, 5370, 14491, 323, 3673, 5343, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133490>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 18908, 264, 51262, 41458, 449, 5201, 311, 7188, 27334, 3827, 12032, 11, 3738, 6918, 4272, 10565, 18151, 11, 3738, 1614, 4272, 10565, 18151, 323, 3827, 20746, 11, 4272, 27334, 3827, 12032, 23343, 311, 7089, 13315, 5220, 11, 323, 3738, 7362, 4272, 10565, 18151, 430, 584, 4510, 527, 539, 4461, 311, 387, 15393, 13, 1226, 3136, 311, 32834, 434, 279, 9861, 51262, 41458, 51534, 11, 323, 422, 3938, 6029, 6276, 369, 264, 7276, 477, 2539, 4984, 315, 279, 51262, 41458, 11, 264, 3827, 8935, 690, 387, 12715, 28178, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 2883, 596, 51262, 90120, 5552, 311, 5370, 3827, 6920, 2000, 4102, 323, 27334, 3827, 12032, 13, 1102, 15151, 264, 46878, 5603, 304, 49183, 4754, 3827, 7720, 323, 279, 14529, 15813, 315, 34860, 2968, 11, 902, 374, 7718, 369, 8830, 279, 2883, 596, 6020, 36721, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133520>, 'json_data': {'input': [[18902, 79483, 25, 1322, 41115, 304, 63897, 753, 16125, 315, 88465, 323, 555, 68637, 1253, 617, 279, 2515, 315, 80430, 477, 27252, 264, 2349, 315, 2585, 477, 4442, 304, 1057, 6373, 13, 4314, 19705, 2997, 279, 2768, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 42271, 315, 279, 10430, 505, 46613, 220, 16, 11, 45293, 3230, 19705, 2949, 63897, 753, 16125, 315, 88465, 323, 555, 68637, 430, 1436, 57780, 4442, 304, 2585, 477, 6373, 11, 6376, 709, 264, 12914, 369, 279, 2768, 19705, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881335b0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 16, 11, 420, 12143, 17738, 279, 7314, 315, 279, 10430, 389, 330, 14783, 15161, 1359, 2500, 16595, 3777, 315, 63897, 4953, 3238, 82, 7677, 13, 1102, 48542, 279, 6742, 369, 264, 6020, 6492, 315, 420, 3230, 2626, 3158, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133640>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 34945, 330, 2149, 18992, 4953, 1210, 323, 4461, 40019, 279, 2883, 439, 279, 3917, 315, 279, 2246, 11, 31692, 279, 2317, 369, 279, 2038, 430, 11263, 11, 902, 18713, 1771, 311, 1202, 6020, 323, 25605, 2704, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881336d0>, 'json_data': {'input': [[18902, 79483, 25, 4476, 4500, 7194, 1101, 2997, 7194, 311, 2274, 3241, 311, 387, 1511, 21742, 311, 3449, 5419, 3966, 323, 9624, 6108, 8522, 1511, 311, 6493, 1057, 3600, 13, 1226, 53825, 4500, 7194, 5552, 311, 1521, 3241, 8522, 3131, 279, 33269, 2447, 6566, 374, 4686, 323, 433, 374, 35977, 430, 279, 2447, 690, 387, 8308, 323, 279, 3241, 690, 387, 1511, 311, 2804, 279, 734, 10825, 13, 64141, 98421, 369, 11469, 1778, 3241, 8522, 1051, 539, 3769, 369, 279, 18852, 10666, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 4595, 315, 3241, 4500, 7194, 430, 63897, 4953, 13, 3709, 1759, 11, 11951, 1884, 369, 5419, 1005, 323, 9624, 6108, 8522, 13, 1102, 16964, 994, 1521, 7194, 1253, 387, 98421, 11, 91115, 279, 24043, 4947, 9002, 3241, 4500, 13, 9086, 46613, 220, 16, 11, 420, 374, 961, 315, 279, 24043, 10396, 3857, 11, 8405, 32373, 389, 1268, 5370, 3241, 4500, 18512, 527, 12020, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133760>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 13166, 9764, 315, 279, 1934, 11, 25607, 433, 439, 33152, 311, 63897, 4953, 2637, 279, 2748, 2883, 315, 5195, 13, 1102, 64664, 279, 2317, 369, 279, 2262, 430, 11263, 11, 902, 18713, 1771, 311, 279, 7677, 323, 15174, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881337f0>, 'json_data': {'input': [[18902, 79483, 25, 20695, 430, 584, 1457, 2980, 14348, 1389, 1093, 13141, 1817, 11, 6505, 1817, 16946, 11, 477, 5195, 7694, 11, 5195, 38840, 11, 323, 5195, 28508, 1389, 682, 1005, 15592, 13, 1666, 15592, 9731, 311, 7417, 19019, 11, 584, 527, 10968, 389, 7231, 11190, 4519, 311, 1057, 3932, 439, 584, 3136, 311, 6493, 389, 1057, 9131, 311, 31335, 279, 1917, 753, 2038, 323, 1304, 433, 61528, 15987, 323, 5505, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 18254, 8522, 315, 15592, 2949, 5526, 5195, 3956, 11, 1778, 439, 5195, 7694, 323, 5195, 38840, 13, 1102, 27053, 279, 2883, 596, 14529, 15507, 311, 3339, 2038, 15987, 323, 5505, 11, 27442, 2949, 279, 2317, 315, 25394, 15592, 596, 18052, 1139, 6332, 3600, 323, 1202, 25127, 369, 1217, 3217, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133880>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1436, 387, 3917, 311, 4442, 304, 3827, 7969, 11, 279, 25375, 315, 502, 549, 815, 13, 477, 6625, 3827, 13543, 11, 477, 14675, 311, 5217, 3827, 58165, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 2883, 596, 14675, 311, 3827, 14228, 15635, 11, 2737, 4442, 304, 3827, 13543, 323, 7969, 13, 1102, 17482, 439, 459, 17219, 311, 264, 10430, 389, 6020, 14640, 323, 872, 4754, 5536, 389, 279, 2883, 596, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133910>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 1101, 264, 961, 315, 279, 6771, 315, 36962, 11, 13788, 439, 264, 34512, 1697, 12576, 4856, 1109, 8405, 39319, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e881339a0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 15161, 17916, 11, 902, 27983, 15652, 6108, 12718, 323, 41455, 369, 14054, 11, 5452, 11, 323, 1023, 3600, 13, 4314, 3600, 3493, 2680, 311, 10105, 1778, 439, 62542, 11, 32906, 11, 28975, 11, 323, 15592, 33935, 2737, 1057, 15592, 14054, 11, 24103, 15592, 5452, 11, 323, 423, 14127, 15592, 369, 5195, 15161, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 3649, 922, 279, 5195, 15161, 17916, 11, 82003, 279, 4595, 315, 3600, 9076, 323, 279, 13254, 4211, 320, 67776, 562, 6108, 12718, 323, 41455, 570, 1102, 66251, 4861, 1268, 63897, 27983, 13254, 505, 1202, 9624, 14054, 323, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133a30>, 'json_data': {'input': [[18902, 79483, 25, 578, 7524, 3827, 4478, 25983, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 42852, 279, 2515, 315, 279, 1403, 3827, 6037, 4442, 7633, 3485, 11, 8104, 279, 2349, 5552, 311, 7362, 3827, 20746, 13, 578, 2515, 315, 1521, 3827, 6037, 4442, 574, 26310, 4445, 555, 4442, 304, 36218, 3827, 7720, 323, 264, 18979, 304, 279, 549, 815, 13, 6918, 19620, 68949, 1357, 61186, 33620, 3827, 39943, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 6625, 24345, 9002, 3827, 10396, 323, 4754, 4442, 304, 3938, 3827, 30255, 11, 8405, 2317, 369, 1317, 9860, 9293, 323, 20323, 8446, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133ac0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 16, 11, 420, 374, 264, 54515, 315, 279, 6771, 315, 36962, 11, 19392, 264, 4754, 37666, 1493, 477, 459, 28286, 369, 5905, 2949, 264, 2204, 3857, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133b50>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 3857, 8965, 35434, 220, 2366, 18, 3135, 7863, 311, 220, 2366, 17, 3135, 13, 36613, 315, 220, 2366, 17, 3135, 7863, 311, 220, 2366, 16, 3135, 311, 279, 13112, 539, 5343, 304, 420, 1934, 649, 387, 1766, 304, 5858, 220, 22, 315, 1057, 220, 2366, 17, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 5357, 315, 279, 14827, 6492, 11, 902, 690, 9616, 6020, 3135, 505, 220, 2366, 18, 311, 220, 2366, 17, 11, 1418, 1101, 19392, 430, 4972, 1060, 36595, 649, 387, 1766, 304, 279, 3766, 9974, 1934, 11, 8405, 13970, 2317, 369, 279, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133be0>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 16, 13, 27693, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 279, 2316, 315, 5858, 220, 16, 11, 902, 24400, 389, 279, 2626, 7677, 315, 63897, 4953, 13, 1102, 690, 3493, 459, 24131, 315, 279, 2883, 596, 6070, 11, 1202, 6156, 21282, 11, 323, 1401, 25605, 15174, 11, 10209, 20616, 1139, 1268, 279, 2883, 10093, 5196, 304, 279, 30633, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133c70>, 'json_data': {'input': [[18902, 79483, 25, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 6824, 315, 30466, 505, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 6956, 430, 1304, 709, 13254, 505, 41455, 11, 15771, 11, 323, 7766, 11, 23377, 264, 31085, 315, 5370, 13254, 23914, 304, 420, 5699, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133d00>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 87910, 477, 5905, 21070, 11, 4461, 5552, 311, 279, 2007, 477, 828, 10666, 304, 279, 3766, 12143, 13, 1102, 1587, 539, 3493, 67749, 2038, 389, 1202, 1866, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133d90>, 'json_data': {'input': [[18902, 79483, 25, 304, 279, 1162, 315, 7362, 63948, 11, 279, 1205, 311, 32172, 7677, 4028, 2204, 27833, 323, 15823, 323, 311, 2686, 279, 4040, 7100, 11, 11667, 11, 5054, 11, 323, 23331, 15635, 5938, 449, 3230, 5961, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 84140, 6532, 304, 7362, 63948, 11, 2737, 13042, 11, 4221, 11, 323, 23331, 38864, 13, 1102, 1234, 8128, 279, 27927, 7057, 315, 6625, 2626, 15635, 323, 279, 62387, 582, 25489, 11774, 430, 31889, 994, 54952, 7677, 4028, 2204, 56043, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133e20>, 'json_data': {'input': [[18902, 79483, 25, 1226, 48582, 3477, 1057, 11897, 323, 2536, 30004, 36164, 25452, 34919, 369, 53317, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 10015, 24131, 315, 279, 39445, 3477, 1920, 369, 11897, 323, 2536, 30004, 36164, 25452, 34919, 311, 10765, 38974, 1392, 13, 1102, 374, 961, 315, 279, 27927, 10430, 389, 9341, 51262, 323, 5326, 15813, 2949, 63897, 596, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133eb0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3663, 19428, 10937, 13, 1442, 584, 656, 539, 3136, 311, 92064, 323, 3493, 3956, 323, 3600, 430, 527, 5505, 311, 3932, 11, 6444, 11, 323, 1023, 8717, 11, 584, 1253, 539, 7293, 15022, 11, 902, 1436, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7057, 315, 19428, 10937, 11, 31692, 279, 1205, 369, 63897, 4953, 13, 311, 31978, 92064, 13, 1102, 7437, 279, 6566, 369, 264, 10430, 922, 279, 2883, 753, 15022, 15174, 323, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e88133f40>, 'json_data': {'input': [[18902, 79483, 25, 1226, 4510, 430, 459, 26613, 17575, 706, 1027, 1903, 369, 904, 34074, 430, 1253, 1121, 505, 3827, 69570, 13, 4452, 11, 279, 15632, 315, 3827, 75620, 4250, 387, 19698, 449, 44743, 13, 1442, 904, 4819, 20669, 304, 1057, 3827, 75620, 527, 20250, 304, 264, 11827, 539, 13263, 449, 6373, 596, 17078, 11, 584, 1436, 387, 2631, 311, 7652, 1057, 17575, 369, 8070, 13426, 304, 279, 4261, 1778, 43595, 12446, 13, 10541, 279, 18912, 315, 11175, 11, 17516, 11, 323, 22722, 315, 75620, 374, 539, 3738, 11, 433, 374, 29546, 3284, 430, 1057, 97239, 3827, 7720, 505, 3738, 549, 815, 13, 6918, 11, 1614, 11, 323, 2536, 549, 815, 13, 3827, 10093, 1436, 18979, 555, 13489, 400, 7007, 3610, 304, 279, 1828, 220, 717, 4038, 13, 76483, 430, 1253, 387, 20250, 2997, 5370, 549, 815, 13, 323, 2536, 35681, 815, 13, 13146, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 45537, 279, 10430, 389, 36218, 3827, 10093, 555, 28118, 279, 41228, 2826, 315, 19705, 1903, 369, 4754, 34074, 505, 3827, 75620, 13, 1102, 5825, 20616, 1139, 279, 2883, 596, 5326, 6373, 12659, 323, 279, 4754, 369, 5199, 4442, 304, 6020, 3135, 3196, 389, 25261, 20124, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560040>, 'json_data': {'input': [[18902, 79483, 25, 578, 5376, 304, 350, 1741, 505, 220, 2366, 17, 311, 220, 2366, 18, 574, 14090, 4245, 311, 459, 5376, 304, 350, 1741, 7318, 311, 8141, 8717, 11, 15871, 16625, 555, 6650, 304, 30466, 3917, 311, 350, 1741, 13, 578, 350, 1741, 4478, 25983, 505, 220, 1691, 13, 23, 4, 311, 220, 1691, 13, 19, 4, 505, 220, 2366, 17, 311, 220, 2366, 18, 15871, 4245, 311, 264, 13254, 6651, 6541, 505, 5195, 8304, 6012, 311, 5195, 7694, 612, 1023, 6012, 13, 578, 350, 1741, 4478, 389, 5195, 7694, 612, 1023, 30466, 323, 279, 350, 1741, 4478, 389, 5195, 8304, 30466, 1051, 2225, 32302, 13263, 505, 220, 2366, 17, 311, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 8125, 4920, 279, 5376, 304, 350, 1741, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 8405, 2317, 369, 8830, 279, 2883, 596, 12135, 449, 8141, 8717, 323, 279, 5536, 315, 13254, 6651, 29735, 389, 2853, 14726, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805600d0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 46997, 11, 42134, 11, 6696, 24511, 11, 86918, 11, 323, 1023, 20207, 3424, 3268, 527, 3062, 12032, 369, 603, 13, 40741, 4455, 4994, 315, 1057, 2585, 17477, 264, 6023, 311, 1057, 20207, 3424, 3268, 11, 439, 1664, 439, 311, 1057, 3956, 11, 3600, 11, 323, 14645, 13, 1789, 3187, 11, 7524, 20207, 3424, 9313, 1253, 539, 387, 2561, 304, 1475, 3224, 304, 902, 1057, 3956, 323, 3600, 527, 4332, 477, 1903, 2561, 1555, 279, 8191, 13, 7429, 11, 279, 9045, 584, 617, 4529, 311, 6144, 1057, 34333, 3268, 1253, 539, 387, 14343, 477, 7524, 13, 10541, 584, 6056, 311, 6994, 25589, 9313, 369, 1057, 46045, 11, 433, 374, 3284, 584, 1253, 539, 387, 3025, 311, 6144, 1063, 315, 1521, 46045, 13, 23674, 11, 584, 1253, 539, 617, 26613, 25589, 477, 7065, 9313, 369, 3738, 46045, 430, 3010, 2543, 704, 311, 387, 3062, 13, 2684, 374, 2744, 279, 13336, 430, 279, 7036, 315, 279, 9313, 18661, 690, 387, 39413, 477, 430, 459, 11136, 25589, 1253, 387, 25660, 8482, 477, 653, 268, 9009, 481, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 5900, 1139, 7872, 922, 279, 4595, 315, 20207, 3424, 63897, 4953, 13, 10187, 323, 279, 4754, 18208, 311, 1521, 3268, 13, 1102, 59623, 279, 11774, 315, 22973, 46045, 4028, 2204, 56043, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560160>, 'json_data': {'input': [[18902, 79483, 25, 9176, 13335, 41587, 477, 4879, 311, 41587, 1057, 17959, 11, 2737, 555, 11125, 311, 304, 76571, 2718, 7222, 5190, 304, 2778, 3135, 1109, 1057, 2778, 4817, 596, 15813, 315, 872, 41961, 323, 15919, 1053, 7222, 1124, 13, 15483, 9045, 617, 11754, 11, 323, 1253, 3136, 311, 7958, 11, 279, 4367, 315, 2262, 389, 1057, 15771, 323, 3063, 1124, 311, 3113, 905, 11, 38309, 11, 477, 77344, 2262, 13, 10541, 6498, 44658, 3566, 26396, 304, 1057, 2778, 3135, 706, 1027, 11293, 11, 323, 3566, 26396, 304, 1455, 1023, 15823, 374, 7347, 11, 584, 1755, 3566, 993, 43157, 690, 3136, 311, 6056, 33781, 5627, 311, 7417, 872, 33407, 13, 10541, 584, 3136, 311, 2793, 304, 323, 10739, 34333, 5557, 311, 11388, 323, 5471, 3566, 26396, 389, 1057, 15771, 11, 1070, 374, 912, 15803, 430, 1057, 5557, 690, 2744, 387, 6992, 11, 323, 1057, 3932, 1253, 617, 8389, 11704, 389, 1057, 15771, 422, 1057, 5557, 14865, 311, 990, 439, 10825, 11, 902, 1253, 7958, 1057, 3932, 6, 11429, 304, 14691, 311, 1005, 1057, 15771, 13, 1226, 1101, 3663, 1023, 11774, 505, 3428, 22867, 323, 40815, 2262, 13335, 11, 2737, 2262, 34324, 11, 902, 527, 13335, 430, 7068, 3544, 33776, 315, 3428, 22867, 2262, 311, 1520, 1124, 7417, 872, 2778, 33407, 13, 1226, 527, 35611, 28818, 12384, 292, 4442, 6319, 311, 11388, 323, 5471, 11737, 505, 3428, 22867, 13335, 11, 719, 584, 1253, 539, 2744, 387, 6992, 13, 1226, 1101, 3663, 1023, 11774, 389, 1057, 15771, 11, 2737, 27655, 315, 1057, 2262, 17959, 16239, 24455, 1778, 439, 17644, 6355, 32317, 11, 7640, 430, 40250, 279, 7296, 323, 5255, 1664, 33851, 315, 1057, 3932, 389, 12, 477, 1022, 8614, 11, 323, 279, 31135, 315, 75159, 477, 834, 26125, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 10507, 315, 1268, 4948, 24993, 13335, 1253, 41587, 279, 2883, 753, 2262, 17959, 11, 28987, 279, 17025, 315, 2778, 3135, 13, 1102, 22020, 279, 14529, 14993, 2403, 3566, 26396, 323, 3428, 22867, 2262, 11, 902, 374, 264, 8792, 7057, 304, 279, 2246, 9002, 2262, 64382, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805601f0>, 'json_data': {'input': [[18902, 79483, 25, 10884, 5742, 315, 44919, 3509, 45285, 43464, 5273, 315, 53792, 1503, 439, 45285, 430, 3297, 10884, 5742, 315, 10884, 5742, 315, 24478, 8650, 24478, 8650, 3744, 315, 3142, 398, 14968, 2893, 53792, 1503, 3308, 362, 45285, 3308, 356, 45285, 55182, 824, 55182, 824, 9489, 20018, 9636, 279, 26572, 53792, 1503, 320, 258, 9214, 2432, 16, 8, 53792, 1503, 320, 258, 9214, 2432, 16, 8, 3308, 362, 12037, 7, 17, 8, 3308, 356, 12037, 7, 17, 8, 38716, 320, 258, 9214, 2432, 16, 8, 6826, 320, 258, 11990, 8, 6664, 220, 16, 482, 220, 2148, 220, 24, 11, 22614, 220, 1987, 11, 21897, 400, 220, 9565, 13, 2287, 400, 220, 8878, 13, 2397, 220, 2166, 11, 17608, 400, 220, 1774, 11, 23969, 6841, 220, 16, 482, 220, 966, 220, 24, 11, 4468, 220, 1591, 11, 3753, 400, 220, 9565, 13, 4331, 400, 220, 8878, 13, 845, 220, 1806, 11, 19498, 400, 220, 1272, 11, 23309, 6790, 220, 16, 482, 220, 2148, 220, 22, 11, 17824, 220, 1187, 11, 19104, 400, 220, 8878, 13, 4767, 400, 220, 9795, 13, 1806, 220, 843, 11, 14274, 400, 220, 1927, 11, 17678, 10884, 220, 1627, 11, 19808, 220, 5925, 11, 22926, 220, 8899, 11, 16567, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 11944, 2038, 389, 279, 5708, 2109, 13173, 5820, 369, 63897, 4953, 13, 2391, 279, 4038, 315, 6664, 11, 6841, 11, 323, 6790, 220, 2366, 18, 13, 1102, 5764, 279, 1396, 315, 13551, 15075, 11, 872, 5578, 7729, 11, 323, 279, 2860, 18160, 907, 315, 13551, 430, 649, 2103, 387, 2109, 73350, 1234, 279, 2883, 596, 7376, 7620, 13, 1102, 374, 961, 315, 264, 3857, 25394, 279, 2883, 596, 6864, 6373, 15174, 11, 11951, 4430, 2109, 13173, 7620, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560280>, 'json_data': {'input': [[18902, 79483, 25, 279, 3685, 18912, 11, 3392, 11, 323, 2515, 315, 63897, 4953, 3238, 82, 4430, 2109, 75202, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 36716, 311, 4430, 3780, 1445, 7620, 323, 374, 961, 315, 279, 4741, 31348, 12518, 13, 1102, 35434, 279, 3685, 18912, 323, 6372, 315, 4430, 2109, 75202, 11, 902, 527, 5199, 369, 8830, 279, 2883, 596, 6864, 24691, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560310>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 16, 13, 22241, 315, 90462, 45344, 63348, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 7181, 220, 16, 315, 279, 8554, 311, 279, 60391, 6020, 12518, 11, 902, 35434, 279, 12399, 315, 5199, 24043, 10396, 13, 1102, 7437, 279, 6566, 369, 8830, 279, 24043, 12914, 9435, 304, 20646, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805603a0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 279, 2246, 596, 2316, 11, 330, 2149, 18992, 4953, 13, 1359, 19392, 279, 3917, 5030, 13, 1102, 64664, 279, 2317, 369, 279, 4553, 2246, 11, 902, 24400, 389, 279, 6020, 5178, 323, 25605, 26793, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560430>, 'json_data': {'input': [[18902, 79483, 25, 28924, 220, 605, 16222, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 955, 315, 2246, 1694, 13019, 11, 11951, 3459, 220, 605, 16222, 11, 902, 374, 459, 9974, 1934, 2631, 555, 279, 22370, 430, 6835, 264, 16195, 24131, 315, 264, 2883, 753, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805604c0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 43907, 43907, 23139, 323, 14930, 5273, 28295, 291, 81019, 1534, 81019, 1534, 23139, 23927, 473, 34980, 11443, 480, 1771, 25733, 288, 14930, 5273, 11964, 4023, 812, 46272, 14930, 907, 4442, 12715, 304, 1023, 16195, 8070, 4212, 34751, 9580, 220, 17, 400, 220, 17, 11, 23574, 400, 220, 15, 400, 220, 15, 400, 220, 17, 11, 23574, 400, 220, 17, 11, 23574, 400, 220, 15, 10423, 27460, 9580, 220, 17, 220, 1987, 11, 7461, 220, 12994, 320, 25136, 8, 220, 1806, 11, 19274, 220, 16, 11, 24242, 220, 1758, 11, 19774, 36565, 11897, 34919, 9580, 220, 17, 220, 1313, 11, 21675, 220, 7261, 320, 21788, 8, 220, 1691, 11, 25401, 220, 15, 220, 1691, 11, 25401, 48780, 46128, 323, 9513, 46128, 34919, 9580, 220, 17, 220, 1114, 11, 14052, 220, 2421, 320, 24307, 8, 220, 845, 11, 25388, 220, 15, 220, 845, 11, 25388, 10884, 22538, 449, 6762, 907, 2349, 27000, 304, 1023, 16195, 8070, 7, 16, 8, 400, 220, 1490, 11, 20165, 400, 220, 20153, 400, 320, 16, 11, 15862, 8, 400, 220, 2495, 11, 24391, 400, 220, 19, 11, 22488, 400, 220, 5728, 11, 17408, 14930, 907, 34074, 12715, 304, 4272, 8070, 18099, 3157, 10736, 9580, 220, 16, 400, 220, 21, 11, 11738, 400, 220, 21, 11, 11738, 400, 220, 15, 9303, 3157, 481, 25452, 34919, 7, 17, 8, 9580, 220, 16, 220, 19, 11, 16544, 220, 15, 220, 19, 11, 16544, 75142, 10736, 9580, 220, 17, 220, 15134, 220, 15, 220, 15134, 10423, 27460, 9580, 220, 17, 220, 16, 11, 24597, 220, 17678, 220, 16, 11, 19666, 36565, 11897, 34919, 9580, 220, 17, 220, 18, 11, 23833, 220, 5925, 220, 18, 11, 25168, 48780, 46128, 323, 9580, 220, 17, 9513, 46128, 34919, 220, 17, 11, 24887, 220, 15, 220, 17, 11, 24887, 10884, 22538, 449, 6762, 907, 2349, 12715, 304, 4272, 8070, 400, 220, 777, 11, 18518, 400, 220, 21, 11, 25828, 400, 220, 717, 11, 22468, 23139, 220, 15, 220, 717, 11, 12448, 220, 15, 10884, 400, 220, 1490, 11, 20165, 400, 220, 20153, 400, 320, 16, 11, 15862, 8, 400, 220, 3264, 11, 18501, 400, 220, 1187, 11, 23904, 400, 220, 4218, 11, 25862, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 11944, 2007, 9002, 279, 6762, 907, 22323, 315, 5370, 8515, 323, 3157, 481, 34919, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 17482, 311, 63179, 279, 2883, 596, 22538, 323, 872, 51262, 11, 8405, 26793, 1139, 279, 6020, 2890, 323, 9513, 24691, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560550>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 868, 13, 4154, 39, 3336, 14813, 11, 25338, 27267, 6340, 23233, 5441, 328, 56322, 50, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17738, 279, 7314, 315, 5858, 220, 868, 11, 902, 18713, 1771, 311, 40374, 1220, 323, 17961, 22504, 328, 50713, 13, 1102, 15151, 430, 420, 3857, 690, 3493, 5217, 9904, 430, 11815, 279, 1925, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805605e0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 19392, 279, 9546, 315, 264, 2007, 315, 8970, 11, 902, 8779, 311, 21546, 279, 2246, 719, 1587, 539, 3493, 3230, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560670>, 'json_data': {'input': [[18902, 79483, 25, 5751, 11156, 14054, 374, 40056, 315, 2038, 5557, 12032, 11, 2737, 16692, 323, 29130, 7241, 11, 323, 828, 4219, 4363, 323, 14016, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7138, 315, 63897, 4953, 3238, 82, 11156, 14054, 11, 38938, 430, 433, 41095, 2038, 5557, 12032, 1093, 16692, 323, 29130, 7241, 11, 439, 1664, 439, 828, 4219, 4363, 323, 14016, 13, 1102, 17482, 311, 66251, 553, 279, 12678, 304, 46613, 220, 16, 555, 39686, 279, 6956, 430, 17210, 311, 279, 2883, 753, 25605, 17357, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560700>, 'json_data': {'input': [[18902, 79483, 25, 2314, 8630, 555, 1817, 1906, 3508, 279, 23702, 519, 706, 13019, 264, 1934, 389, 323, 1651, 65078, 311, 1202, 6373, 596, 15813, 315, 279, 27375, 315, 1202, 5419, 2585, 927, 6020, 13122, 1234, 11360, 220, 7507, 1921, 8, 315, 279, 13951, 6993, 288, 24540, 87, 3258, 3298, 320, 868, 549, 815, 732, 13, 24430, 17, 1921, 595, 555, 279, 9879, 586, 24043, 7626, 430, 10235, 477, 11136, 1202, 25261, 1934, 13, 26182, 240, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18713, 1771, 311, 279, 23702, 519, 596, 5419, 11835, 927, 6020, 13122, 11, 11951, 1234, 11360, 220, 7507, 1921, 8, 315, 279, 13951, 6993, 288, 24540, 87, 3258, 3298, 13, 1102, 15151, 430, 459, 9434, 93596, 7626, 706, 32448, 279, 27375, 315, 1521, 5419, 11835, 11, 902, 374, 264, 16996, 3777, 315, 279, 2883, 596, 6020, 17025, 323, 28330, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560790>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2626, 4676, 374, 19019, 42028, 323, 70733, 15022, 13, 5751, 9873, 3663, 10223, 14645, 11, 32931, 1217, 3966, 11, 323, 21420, 6111, 5247, 315, 21425, 3956, 323, 3600, 13, 2057, 20874, 7946, 11, 584, 2011, 30357, 48248, 5557, 26006, 323, 6493, 18699, 11, 9959, 323, 5505, 3956, 11, 3600, 11, 323, 14645, 304, 264, 32100, 11827, 13, 1666, 1057, 9873, 38680, 11, 279, 15022, 7410, 311, 92064, 690, 38632, 264, 22622, 2134, 315, 3956, 323, 3600, 13, 1226, 2011, 3136, 311, 2793, 5199, 5070, 304, 11156, 14054, 323, 432, 33465, 11, 2737, 1555, 63948, 11, 304, 2015, 311, 18885, 1057, 5557, 11, 3956, 11, 323, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 1495, 52956, 389, 279, 15022, 40850, 13176, 63897, 4953, 2637, 45293, 279, 11295, 15740, 315, 5557, 323, 279, 32961, 369, 32100, 19297, 13, 1102, 22020, 279, 2883, 596, 15507, 311, 26012, 304, 3495, 323, 4500, 311, 10519, 1202, 3157, 2361, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560820>, 'json_data': {'input': [[18902, 79483, 25, 480, 1771, 320, 40938, 288, 8, 4158, 448, 1908, 505, 362, 65083, 311, 279, 79980, 660, 70816, 315, 33620, 9941, 77171, 6790, 220, 2148, 11, 362, 65083, 35185, 10067, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 81019, 1534, 20192, 320, 9563, 288, 8, 389, 2561, 15548, 58637, 22538, 7089, 8070, 320, 59857, 705, 4272, 400, 220, 6086, 400, 320, 16, 11, 17335, 8, 400, 320, 16, 11, 22640, 8, 67450, 320, 782, 13311, 8, 369, 8070, 13426, 320, 972, 8, 220, 17058, 220, 18196, 9558, 315, 8070, 3827, 220, 1227, 320, 16, 11, 11194, 8, 320, 16, 11, 8953, 8, 81019, 1534, 20192, 320, 9563, 288, 8, 389, 8515, 6530, 305, 17327, 19620, 9473, 17517, 38493, 220, 10680, 220, 17, 11, 24222, 220, 11702, 25074, 4478, 17517, 7089, 8070, 320, 59857, 705, 4272, 220, 21, 220, 21, 220, 21, 67450, 320, 782, 13311, 8, 369, 8070, 13426, 320, 1114, 8, 320, 18061, 8, 320, 20, 8, 9558, 315, 8070, 3827, 220, 10559, 220, 16, 11, 22457, 220, 11584, 10884, 3392, 312, 65974, 11, 4272, 315, 8070, 3827, 400, 220, 13302, 400, 220, 23459, 400, 320, 25741, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 3230, 20192, 323, 18151, 430, 1051, 312, 65974, 505, 362, 65083, 311, 279, 79980, 660, 70816, 315, 33620, 369, 279, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 5825, 264, 47616, 1684, 315, 1268, 4442, 304, 22538, 323, 305, 17327, 10383, 279, 2883, 596, 8070, 5224, 11, 902, 374, 3062, 369, 38663, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805608b0>, 'json_data': {'input': [[18902, 79483, 25, 11761, 41455, 11, 902, 15871, 2997, 30466, 505, 13674, 3600, 11, 1778, 13674, 6007, 11, 13674, 10948, 323, 26745, 11, 323, 12873, 7418, 29497, 11, 439, 1664, 439, 5195, 3861, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 11761, 41455, 13189, 315, 279, 30466, 11, 15182, 3230, 3600, 1093, 13674, 6007, 323, 5195, 3861, 13, 1102, 22020, 279, 20057, 2949, 11761, 15493, 33935, 430, 17210, 311, 13254, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560940>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 5224, 35434, 279, 2883, 753, 6787, 369, 8738, 9341, 304, 5370, 5789, 11, 2737, 502, 14645, 323, 63948, 13, 1102, 72890, 279, 2883, 596, 1317, 9860, 6650, 8446, 323, 15507, 311, 24050, 1202, 20136, 11, 902, 374, 264, 1401, 13189, 315, 1202, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805609d0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5751, 8925, 315, 46085, 706, 279, 1314, 311, 4135, 28454, 311, 5266, 264, 62562, 3549, 555, 279, 14800, 315, 279, 8925, 315, 46085, 477, 279, 44734, 11, 4648, 11, 477, 17065, 315, 264, 7690, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 832, 315, 279, 3230, 35186, 19705, 10923, 279, 8925, 315, 46085, 311, 5266, 67751, 13, 1115, 22020, 279, 8925, 596, 2585, 927, 1202, 18528, 323, 279, 4754, 25127, 369, 63342, 10383, 304, 7690, 16374, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560a60>, 'json_data': {'input': [[18902, 79483, 25, 19149, 2806, 11, 9362, 220, 21251, 3391, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5764, 279, 3363, 323, 1614, 315, 279, 2883, 596, 12717, 5274, 11, 4726, 38938, 279, 3813, 369, 5897, 323, 23331, 10096, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560af0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 279, 2883, 836, 11, 63897, 4953, 2637, 902, 78864, 279, 2317, 315, 279, 6020, 12518, 323, 24043, 10396, 1694, 14407, 304, 420, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560b80>, 'json_data': {'input': [[18902, 79483, 25, 15808, 323, 1023, 7194, 5552, 311, 279, 7766, 584, 4662, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 45537, 279, 10430, 389, 7194, 555, 45391, 15808, 323, 1023, 7194, 5552, 311, 7766, 6216, 11, 19392, 279, 16195, 7138, 315, 279, 2853, 315, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560c10>, 'json_data': {'input': [[18902, 79483, 25, 43737, 3083, 42385, 878, 75231, 198, 2014, 940, 1534, 73094, 25, 43737, 3083, 42385, 878, 75231]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560ca0>, 'json_data': {'input': [[18902, 79483, 25, 10884, 6926, 11667, 30466, 315, 400, 15500, 13, 16, 7239, 369, 220, 2366, 18, 7319, 400, 1591, 13, 17, 7239, 7863, 311, 400, 11209, 13, 24, 7239, 304, 30466, 11, 44878, 61316, 3252, 2515, 11, 369, 220, 2366, 17, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 264, 5199, 5376, 304, 6926, 11667, 30466, 369, 220, 2366, 18, 7863, 311, 220, 2366, 17, 11, 8405, 2317, 369, 8244, 13254, 6650, 323, 82003, 279, 12939, 315, 44878, 61316, 3252, 6372, 369, 49479, 6020, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560d30>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 16, 11, 420, 12143, 17738, 279, 7314, 315, 279, 10430, 389, 330, 14783, 15161, 1359, 2500, 16595, 3777, 315, 63897, 4953, 3238, 82, 7677, 13, 1102, 48542, 279, 6742, 369, 264, 6020, 6492, 315, 420, 3230, 2626, 3158, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560dc0>, 'json_data': {'input': [[18902, 79483, 25, 20448, 18512, 369, 15009, 323, 11156, 8420, 8647, 369, 432, 33465, 5552, 311, 1057, 6484, 323, 502, 3956, 323, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 20448, 18512, 369, 432, 33465, 8420, 13, 1102, 6209, 20616, 1139, 832, 315, 279, 1925, 6956, 315, 432, 33465, 18512, 11, 82003, 279, 2853, 5938, 449, 3823, 5070, 10968, 389, 2027, 323, 2532, 4500, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560e50>, 'json_data': {'input': [[18902, 79483, 25, 38493, 6984, 848, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 3857, 25394, 13254, 71822, 13, 1102, 15151, 430, 279, 2768, 2262, 690, 2686, 9861, 5178, 30255, 11, 902, 374, 9959, 369, 8830, 3938, 13254, 18324, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560ee0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 17631, 389, 5226, 17032, 311, 30847, 477, 42840, 1057, 7766, 323, 16692, 323, 29130, 7241, 1511, 304, 1057, 11156, 14054, 11, 323, 584, 1253, 8312, 279, 5226, 17032, 449, 6956, 311, 42840, 279, 7766, 323, 7241, 13, 1226, 1101, 17631, 389, 1023, 5220, 311, 16136, 304, 279, 8312, 315, 6956, 323, 8141, 315, 1057, 3956, 323, 3600, 13, 5751, 2626, 1436, 387, 48291, 11754, 422, 584, 527, 539, 3025, 311, 16988, 1521, 5220, 449, 279, 5995, 17357, 477, 8824, 389, 13579, 3878, 11, 477, 422, 1884, 584, 16988, 3775, 311, 3449, 872, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 4726, 3649, 922, 279, 2883, 596, 54180, 389, 5226, 17032, 369, 5788, 323, 14956, 13, 1102, 22020, 279, 4754, 15635, 5552, 311, 23387, 20972, 323, 279, 16296, 315, 872, 28950, 11, 6376, 279, 6566, 369, 264, 10430, 389, 21390, 12135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80560f70>, 'json_data': {'input': [[18902, 79483, 25, 4442, 304, 3756, 6651, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 3585, 704, 4442, 304, 3756, 6651, 439, 264, 8331, 28987, 13172, 17150, 11, 23377, 430, 29735, 304, 1217, 7865, 323, 5557, 649, 5536, 1268, 14058, 527, 12886, 323, 17045, 449, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561000>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 76615, 3827, 12032, 25, 11683, 2739, 291, 9548, 7720, 400, 220, 25875, 400, 220, 16, 11, 22869, 11683, 81, 940, 82, 323, 30600, 539, 5131, 78912, 220, 16, 11, 26067, 220, 17, 11, 21235, 15545, 20746, 220, 21, 11, 6726, 220, 21, 11, 21138, 9558, 10565, 18151, 220, 17, 11, 23906, 220, 17, 11, 24837, 36233, 73657, 220, 17, 11, 22375, 220, 18, 11, 22593, 18880, 1534, 3495, 323, 4500, 7, 16, 8, 220, 605, 11, 19162, 220, 1114, 11, 23776, 7089, 220, 17, 11, 17212, 220, 16, 11, 24989, 10884, 27334, 3827, 12032, 220, 1627, 11, 24866, 220, 1806, 11, 8929, 4196, 4090, 41458, 320, 24, 11, 22663, 8, 320, 605, 11, 5500, 8, 10884, 27334, 3827, 12032, 4272, 315, 51262, 41458, 220, 1114, 11, 17690, 220, 1627, 11, 9591, 76615, 3827, 58165, 25, 8825, 323, 7241, 11, 4272, 320, 21, 11, 21996, 8, 320, 23, 11, 9378, 8, 9558, 9341, 20192, 320, 17, 11, 18277, 8, 320, 17, 11, 16408, 8, 36233, 73657, 320, 17, 11, 21824, 8, 320, 17, 11, 24837, 8, 7089, 320, 16, 11, 25221, 8, 320, 21026, 8, 10884, 27334, 3827, 58165, 320, 717, 11, 21860, 8, 320, 975, 11, 19608, 8, 9558, 27334, 3827, 12032, 320, 747, 8623, 8, 400, 220, 19, 11, 23619, 400, 220, 806, 11, 24313, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 11944, 31085, 315, 27334, 3827, 12032, 323, 58165, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 5764, 3230, 1584, 3673, 1778, 439, 99216, 9548, 7720, 11, 3827, 20746, 11, 323, 4272, 10565, 18151, 11, 94012, 279, 2883, 596, 3827, 2361, 323, 24043, 12659, 5552, 311, 27334, 13426, 13, 1115, 3857, 374, 16996, 369, 8830, 279, 8244, 6020, 2890, 323, 3827, 8446, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561090>, 'json_data': {'input': [[18902, 79483, 25, 3028, 323, 1023, 20207, 3424, 25, 3028, 323, 5552, 7016, 11, 2737, 279, 10013, 57852, 389, 3028, 304, 279, 14434, 11579, 8152, 323, 7665, 23362, 12299, 1380, 28536, 11, 902, 1253, 19678, 502, 28506, 61911, 11, 5376, 24305, 449, 5201, 311, 2262, 23700, 555, 3932, 477, 10815, 311, 505, 1057, 15771, 11, 477, 1893, 3424, 3268, 304, 3754, 29085, 430, 1436, 1397, 14507, 311, 3754, 13607, 323, 36717, 11, 902, 1253, 1121, 304, 1023, 23331, 6299, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 24400, 389, 7065, 323, 20207, 3424, 7016, 28987, 63897, 4953, 2637, 11951, 39686, 279, 10013, 57852, 389, 3028, 304, 279, 14434, 11579, 8152, 13, 1102, 35434, 1268, 1521, 7016, 1253, 33330, 502, 28506, 8670, 323, 24305, 369, 1217, 16581, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561120>, 'json_data': {'input': [[18902, 79483, 25, 220, 6083, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 2199, 1396, 320, 6083, 8, 304, 279, 6771, 315, 36962, 11, 29820, 311, 279, 6070, 315, 279, 2246, 323, 86387, 304, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805611b0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 23222, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561240>, 'json_data': {'input': [[18902, 79483, 25, 5751, 8060, 311, 2686, 1521, 15635, 477, 1023, 5435, 23926, 304, 3717, 449, 1057, 3347, 477, 3938, 63948, 323, 1023, 19092, 28904, 1436, 5353, 603, 311, 3775, 311, 13383, 872, 30199, 7720, 11, 62622, 653, 93878, 58165, 11, 323, 11682, 1057, 2626, 8965, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 4754, 8389, 25949, 315, 22109, 311, 10299, 15635, 5938, 449, 63948, 323, 19092, 28904, 13, 1102, 66159, 279, 26431, 315, 7524, 5326, 6373, 304, 44114, 279, 7720, 315, 63948, 11, 902, 374, 264, 46350, 7057, 304, 279, 2246, 5552, 311, 63897, 596, 8244, 2626, 8446, 323, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805612d0>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 11, 584, 527, 4737, 6299, 311, 30536, 1057, 3728, 5274, 3634, 13, 1666, 264, 1121, 11, 4974, 10405, 12715, 2391, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1051, 400, 16, 13, 23, 7239, 439, 27000, 304, 279, 2007, 3770, 13, 763, 5369, 311, 1521, 4974, 10405, 11, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 52872, 400, 16955, 3610, 304, 49858, 8175, 323, 49858, 94189, 11, 902, 527, 539, 5343, 304, 279, 2007, 3770, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 505, 279, 3766, 12143, 11, 21760, 389, 279, 26329, 315, 5274, 3634, 323, 5938, 7194, 13, 1102, 18911, 6020, 25127, 315, 4974, 10405, 16662, 5217, 18512, 52872, 11, 8617, 8405, 264, 16195, 1684, 315, 25605, 34074, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561360>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 961, 315, 279, 2246, 753, 2316, 11, 330, 2149, 18992, 4953, 13, 1359, 19392, 430, 279, 17876, 2038, 18713, 1771, 311, 279, 6020, 323, 25605, 3649, 315, 420, 3230, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805613f0>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 1057, 3135, 690, 387, 11754, 555, 1057, 5178, 304, 6625, 11987, 439, 3932, 304, 11469, 37671, 15098, 2586, 2930, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 36716, 311, 279, 2883, 596, 17078, 9002, 1202, 5178, 304, 6625, 11987, 11, 8104, 304, 11469, 37671, 13, 1102, 22020, 279, 12939, 315, 3728, 3157, 30295, 304, 46620, 279, 2883, 596, 13254, 323, 1217, 20392, 15174, 323, 374, 961, 315, 264, 27927, 10430, 389, 279, 9547, 66700, 279, 2883, 596, 6650, 27949, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561480>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 330, 2149, 18992, 4953, 1210, 78864, 279, 836, 315, 279, 2883, 430, 374, 279, 3917, 315, 279, 6020, 25261, 323, 1934, 11, 31692, 279, 2317, 369, 682, 2768, 2038, 5552, 311, 420, 5502, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561510>, 'json_data': {'input': [[18902, 79483, 25, 65649, 304, 1057, 30466, 323, 37682, 323, 5370, 9547, 29820, 311, 1778, 65649, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 22020, 2500, 13189, 315, 279, 2883, 596, 6020, 36721, 11, 11951, 28118, 30199, 65649, 304, 30466, 323, 37682, 13, 1102, 72890, 279, 50235, 7138, 315, 6020, 5178, 11, 902, 374, 264, 46350, 7057, 304, 4741, 31348, 20954, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805615a0>, 'json_data': {'input': [[18902, 79483, 25, 11842, 30004, 36164, 25452, 34919, 527, 1101, 26126, 369, 53317, 11, 3196, 389, 62129, 9547, 2737, 279, 5220, 6, 6020, 323, 53113, 2361, 323, 2680, 311, 6864, 5070, 11, 4315, 3885, 13, 3277, 34824, 315, 53317, 3073, 11, 584, 10772, 47616, 22323, 315, 279, 6762, 907, 315, 1057, 25452, 22538, 1701, 264, 3157, 5603, 477, 459, 8070, 5603, 11, 902, 7612, 19971, 323, 279, 1005, 315, 653, 34595, 11374, 11, 2737, 11336, 7969, 11, 2793, 2176, 30466, 323, 7194, 11, 323, 30139, 3157, 828, 315, 879, 323, 586, 5220, 11, 4315, 3885, 627, 2014, 940, 1534, 73094, 25, 1115, 10449, 9731, 279, 10430, 389, 2536, 30004, 36164, 25452, 34919, 11, 21760, 389, 279, 16865, 369, 53317, 13, 1102, 50729, 279, 62129, 323, 47616, 9547, 430, 6373, 32238, 11, 902, 11621, 8149, 311, 279, 8830, 315, 5326, 15813, 304, 279, 2883, 596, 9341, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561630>, 'json_data': {'input': [[18902, 79483, 25, 304, 279, 1162, 315, 7362, 63948, 11, 279, 1205, 311, 32172, 7677, 4028, 2204, 27833, 323, 15823, 323, 311, 2686, 279, 4040, 7100, 11, 11667, 11, 5054, 11, 323, 23331, 15635, 5938, 449, 3230, 5961, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 84140, 6532, 304, 7362, 63948, 11, 2737, 13042, 11, 4221, 11, 323, 23331, 38864, 13, 1102, 1234, 8128, 279, 27927, 7057, 315, 6625, 2626, 15635, 323, 279, 62387, 582, 25489, 11774, 430, 31889, 994, 54952, 7677, 4028, 2204, 56043, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805616c0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6020, 24198, 2997, 8515, 11, 8515, 86106, 11, 3157, 481, 323, 2536, 30004, 36164, 34919, 11, 32905, 6020, 24198, 323, 9815, 2215, 43672, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 7353, 24131, 315, 279, 4595, 315, 6020, 24198, 63897, 4953, 13, 10187, 11, 2737, 8515, 11, 8515, 86106, 11, 3157, 481, 323, 2536, 30004, 36164, 34919, 11, 32905, 6020, 24198, 11, 323, 9815, 2215, 43672, 13, 1102, 374, 961, 315, 279, 3857, 45293, 279, 2883, 753, 6020, 2361, 323, 1268, 433, 29972, 1202, 6020, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561750>, 'json_data': {'input': [[18902, 79483, 25, 19620, 29553, 19224, 32388, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3230, 5326, 315, 7362, 11667, 9473, 11, 19392, 430, 279, 2768, 2262, 690, 82845, 1139, 1268, 65649, 304, 11667, 2819, 7958, 279, 2883, 596, 6020, 3044, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805617e0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 17631, 389, 5370, 20207, 3424, 7016, 11, 65295, 16346, 323, 76543, 19705, 311, 6144, 1057, 34333, 5557, 323, 1057, 6883, 13, 1226, 617, 9879, 11, 323, 9435, 369, 279, 12506, 315, 11, 549, 815, 13, 323, 6625, 42134, 11, 2532, 15785, 11, 8106, 5144, 11, 323, 86918, 13, 1226, 617, 1101, 13019, 25589, 8522, 304, 279, 549, 815, 13, 323, 7362, 5961, 18702, 3738, 315, 1057, 5557, 11, 323, 19426, 25589, 12032, 311, 22822, 1057, 20136, 13, 1226, 617, 16383, 304, 279, 3347, 11, 323, 1755, 430, 584, 1253, 5842, 304, 279, 3938, 11, 3738, 315, 1057, 3268, 311, 1023, 9875, 13, 1789, 5217, 2038, 11, 1518, 5858, 220, 16, 32, 32388, 68318, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 1495, 25985, 988, 389, 63897, 4953, 3238, 82, 54180, 389, 5370, 20207, 3424, 7016, 323, 12659, 311, 49071, 1202, 34333, 14645, 323, 6883, 9764, 13, 1102, 50729, 279, 2883, 596, 15174, 369, 22973, 42134, 11, 86918, 11, 323, 46997, 11, 19392, 279, 12939, 315, 1521, 37424, 304, 20958, 15022, 9610, 323, 2626, 17025, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561870>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 4384, 323, 1587, 539, 6782, 904, 2262, 369, 66251, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561900>, 'json_data': {'input': [[18902, 79483, 25, 11443, 315, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 330, 15289, 315, 1050, 46469, 1359, 902, 374, 16996, 369, 8830, 279, 18512, 6089, 5938, 449, 24038, 30466, 13, 1102, 7437, 279, 6566, 369, 264, 11944, 24481, 315, 279, 5370, 7194, 52872, 304, 279, 13254, 2427, 94207, 11618, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561990>, 'json_data': {'input': [[18902, 79483, 25, 64141, 323, 92523, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 25394, 7194, 323, 18512, 11, 902, 374, 16996, 369, 8830, 279, 6020, 6070, 323, 25605, 15374, 315, 63897, 4953, 13, 1102, 7437, 279, 6566, 369, 264, 11944, 24481, 315, 5370, 4595, 315, 7194, 52872, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561a20>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 5905, 5296, 320, 16, 705, 902, 4461, 34310, 311, 5217, 2038, 477, 4579, 18790, 5552, 311, 279, 6020, 828, 10666, 304, 3766, 27855, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561ab0>, 'json_data': {'input': [[18902, 79483, 25, 59316, 685, 323, 5274, 3634, 4974, 10405, 527, 5343, 2949, 1057, 60391, 12518, 315, 8070, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 31085, 315, 3285, 685, 323, 5274, 3634, 4974, 10405, 11, 19392, 430, 4726, 11944, 6020, 12678, 690, 1833, 13, 1102, 374, 264, 9320, 1486, 311, 3230, 828, 9002, 279, 5536, 315, 1521, 10405, 389, 279, 60391, 12518, 315, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561b40>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 17078, 9002, 13254, 8336, 7953, 13172, 11, 23377, 21797, 2461, 304, 63897, 596, 8070, 23914, 323, 4754, 25949, 389, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561bd0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 15641, 279, 6020, 5224, 6372, 315, 264, 3827, 2361, 994, 433, 374, 810, 4461, 1109, 539, 430, 11, 3196, 389, 11156, 50932, 11, 279, 2361, 690, 387, 29759, 5304, 24481, 13, 578, 3827, 7720, 315, 279, 2361, 15324, 304, 279, 6020, 12518, 527, 1243, 17303, 3196, 389, 279, 7928, 3392, 315, 8935, 430, 374, 7191, 1109, 220, 1135, 4, 4461, 311, 387, 15393, 5304, 17516, 449, 264, 88004, 11447, 13, 763, 5369, 11, 584, 15641, 2802, 323, 31086, 5552, 311, 97239, 3827, 7720, 439, 264, 3777, 315, 279, 8070, 3827, 17575, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 18324, 323, 19179, 315, 3827, 10093, 11, 39686, 279, 13186, 369, 26679, 994, 3827, 7720, 649, 387, 15324, 304, 279, 6020, 12518, 13, 1115, 374, 7718, 369, 39210, 47614, 279, 2883, 596, 3827, 5326, 323, 13122, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561c60>, 'json_data': {'input': [[18902, 79483, 25, 1226, 2793, 13937, 8515, 15871, 304, 3109, 27460, 11, 13166, 11897, 34919, 11, 21515, 46128, 323, 9513, 12, 22126, 34919, 11, 892, 34751, 11, 323, 3300, 3157, 10736, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 4595, 315, 22538, 63897, 4953, 13, 3727, 449, 1202, 13937, 8515, 11, 26073, 430, 433, 15871, 2793, 82, 304, 3428, 46570, 34919, 1093, 3109, 27460, 323, 3300, 3157, 10736, 13, 1115, 374, 9959, 369, 8830, 279, 2883, 753, 53113, 6373, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561cf0>, 'json_data': {'input': [[18902, 79483, 25, 4442, 304, 13172, 4367, 11, 20447, 11, 9889, 477, 4947, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 4442, 304, 13172, 4367, 11, 20447, 11, 9889, 11, 477, 4947, 439, 2500, 66700, 8331, 389, 30466, 11, 19392, 430, 5195, 596, 13172, 26031, 374, 3917, 311, 19815, 15740, 323, 34185, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561d80>, 'json_data': {'input': [[18902, 79483, 25, 320, 17, 8, 13031, 48258, 58165, 527, 12715, 439, 99216, 18512, 323, 1023, 58165, 11, 1510, 323, 2536, 45275, 304, 279, 79980, 660, 31946, 61572, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 24790, 315, 32905, 58165, 304, 279, 2883, 596, 8335, 11071, 11, 4528, 311, 46613, 220, 605, 13, 1102, 95593, 279, 2246, 596, 5357, 389, 13687, 6020, 13122, 323, 279, 6373, 315, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561e10>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 19, 11, 420, 12143, 72214, 279, 2883, 836, 11, 63897, 4953, 2637, 902, 374, 264, 46350, 4342, 304, 279, 2246, 13, 1102, 8779, 311, 5813, 279, 2317, 369, 279, 2038, 430, 11263, 11, 25607, 433, 439, 961, 315, 279, 13166, 13122, 369, 63897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561ea0>, 'json_data': {'input': [[18902, 79483, 25, 763, 6841, 220, 2366, 18, 11, 279, 17961, 35653, 45344, 8925, 320, 37, 1950, 33, 8, 11136, 45344, 35653, 5666, 320, 1950, 52, 8, 220, 2366, 18, 12, 2589, 330, 21766, 47793, 320, 27504, 220, 11209, 1680, 48942, 12760, 311, 8423, 481, 38203, 11997, 42306, 1, 902, 52956, 9974, 323, 41653, 28957, 8670, 369, 1934, 481, 21282, 11, 15871, 1555, 24872, 75992, 922, 5199, 10449, 18512, 13, 5871, 52, 220, 2366, 18, 12, 2589, 374, 7524, 369, 1057, 9974, 18852, 7314, 6186, 220, 16, 11, 220, 2366, 19, 11, 323, 369, 41653, 18852, 7314, 6186, 220, 16, 11, 220, 2366, 20, 11, 449, 4216, 25375, 15480, 13, 1226, 527, 5131, 38663, 279, 4754, 2515, 430, 279, 6177, 5410, 690, 617, 389, 1057, 6020, 5224, 75992, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3649, 922, 264, 3230, 24043, 10886, 2713, 320, 1950, 52, 220, 2366, 18, 12, 2589, 8, 11136, 555, 279, 435, 1950, 33, 11, 21760, 389, 10449, 13122, 13, 1102, 22020, 279, 25127, 369, 63897, 4953, 14639, 82, 6020, 75992, 6041, 304, 220, 2366, 19, 11, 3339, 433, 9959, 369, 15167, 323, 31499, 16967, 4442, 304, 13122, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561f30>, 'json_data': {'input': [[18902, 79483, 25, 60767, 389, 279, 17961, 70816, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 12302, 279, 4033, 9647, 505, 279, 9678, 6264, 12170, 922, 279, 6020, 12518, 11, 43080, 279, 9320, 1139, 11944, 25261, 14955, 323, 41300, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80561fc0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 311, 3493, 2317, 369, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562050>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 15870, 3917, 311, 8349, 11, 43986, 11, 23331, 323, 3109, 26969, 11, 1023, 29407, 11, 323, 14771, 10373, 16239, 10937, 11, 20207, 3424, 11, 12625, 11, 828, 4868, 11, 3827, 323, 5552, 8907, 11, 9511, 323, 14740, 11, 8518, 42254, 11, 2262, 8066, 555, 1057, 3932, 11, 11822, 323, 3600, 9076, 555, 50270, 477, 36717, 1701, 1057, 15771, 11, 4443, 11134, 11761, 9313, 11, 323, 1023, 13146, 13, 35211, 315, 1521, 13146, 2997, 66836, 8349, 369, 12190, 477, 1280, 65324, 15055, 315, 26186, 13, 1226, 3335, 264, 24305, 994, 584, 4510, 430, 433, 374, 35977, 430, 264, 4814, 706, 1027, 52872, 323, 279, 3392, 649, 387, 29546, 13240, 13, 1442, 584, 8417, 430, 264, 4814, 374, 29546, 3284, 323, 279, 4814, 477, 2134, 315, 4814, 649, 387, 13240, 11, 584, 36333, 279, 3284, 4814, 304, 7181, 220, 605, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 14646, 5825, 3649, 389, 5370, 8349, 323, 43986, 430, 63897, 4953, 13, 12580, 11, 82003, 279, 2883, 596, 5603, 311, 14975, 58165, 369, 1521, 39639, 6072, 13, 1102, 374, 3062, 369, 8830, 279, 15635, 323, 69867, 5552, 311, 14529, 5897, 13146, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805620e0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 1690, 28650, 304, 2204, 19647, 13, 5751, 1510, 323, 4754, 13018, 323, 6625, 28650, 2134, 505, 3544, 323, 9749, 5220, 311, 24084, 1212, 27859, 13, 4427, 28650, 617, 5129, 10565, 53210, 323, 1664, 64868, 12135, 304, 5370, 26593, 13, 2435, 649, 1005, 872, 3217, 323, 5070, 304, 5627, 430, 1436, 7958, 1057, 15022, 2361, 11, 2737, 555, 3339, 63948, 323, 16661, 1139, 1023, 19092, 28904, 26, 14691, 311, 2793, 17345, 304, 11156, 14054, 11, 432, 33465, 11, 323, 304, 11005, 26, 79516, 20207, 3424, 323, 10937, 8349, 320, 49864, 477, 539, 4809, 1960, 1245, 1237, 323, 14691, 311, 20874, 369, 3932, 11, 50270, 11, 6444, 11, 323, 2262, 12850, 13, 15903, 11, 91367, 304, 13627, 315, 6484, 7016, 1253, 7431, 1057, 32415, 3967, 28650, 311, 49139, 14532, 1884, 7016, 2085, 1081, 729, 62259, 36752, 11, 28592, 3611, 2745, 1124, 15022, 22934, 13, 5751, 28650, 1253, 1101, 387, 3025, 311, 92064, 323, 3493, 3956, 323, 3600, 10819, 1109, 584, 649, 477, 1253, 57791, 279, 1205, 369, 3956, 323, 3600, 1603, 584, 656, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 35434, 279, 20057, 315, 28650, 2949, 279, 5064, 11, 24950, 505, 9749, 5220, 311, 44483, 13, 1102, 66251, 4861, 279, 15022, 18921, 11, 94012, 279, 11774, 63897, 4953, 13, 12580, 304, 20958, 1202, 3157, 4430, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562170>, 'json_data': {'input': [[18902, 79483, 25, 74435, 315, 60391, 6020, 12518, 304, 90301, 449, 27438, 2599, 7612, 603, 311, 1304, 17989, 323, 32946, 430, 7958, 279, 15055, 5068, 323, 36489, 304, 279, 6020, 12518, 323, 279, 24442, 8554, 13, 34459, 3135, 1436, 1782, 90694, 505, 1521, 17989, 4245, 311, 69867, 13, 1952, 459, 14529, 8197, 11, 584, 15806, 1057, 17989, 11, 2737, 1884, 5552, 311, 279, 41458, 369, 6807, 18151, 26, 2262, 21746, 26, 59575, 58165, 26, 6762, 2819, 315, 6020, 24198, 323, 82746, 26, 8070, 13426, 26, 15808, 26, 323, 5505, 6439, 315, 3424, 323, 7241, 11, 4315, 3885, 13, 1226, 2385, 1057, 17989, 389, 32946, 11, 2225, 13970, 323, 4741, 3411, 11, 430, 527, 11846, 311, 387, 13579, 11, 323, 279, 3135, 315, 902, 1376, 279, 8197, 369, 3339, 59358, 922, 279, 15691, 2819, 315, 12032, 323, 58165, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 5217, 2317, 389, 279, 1005, 315, 17989, 11, 79774, 3230, 5789, 1405, 17989, 2643, 5536, 6020, 13122, 13, 1102, 66159, 279, 38088, 69867, 304, 6020, 24043, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562200>, 'json_data': {'input': [[18902, 79483, 25, 10928, 9469, 4289, 58654, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 10430, 389, 2875, 9860, 11897, 11, 19392, 279, 7138, 315, 279, 2883, 596, 53675, 8446, 13, 1102, 7437, 279, 6566, 369, 8830, 279, 2883, 753, 53113, 6373, 323, 14247, 6020, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562290>, 'json_data': {'input': [[18902, 79483, 25, 1666, 22639, 1990, 3932, 323, 50270, 2349, 11, 323, 439, 2930, 1217, 7865, 93054, 11, 584, 3136, 311, 9407, 1057, 2027, 33935, 311, 8854, 1521, 10223, 3966, 11, 902, 1253, 7958, 1057, 58191, 2065, 13, 1789, 3187, 11, 30466, 505, 14058, 389, 13674, 323, 5195, 7199, 58191, 553, 520, 264, 4827, 4478, 1109, 1057, 8776, 2778, 14058, 13, 1226, 1101, 1755, 311, 3136, 311, 33435, 15592, 46045, 1139, 1057, 3956, 11, 1778, 439, 15592, 304, 7694, 11, 430, 1436, 7958, 1057, 58191, 2065, 18845, 13, 3277, 11469, 502, 3956, 323, 3600, 584, 8965, 5357, 1176, 389, 1217, 3217, 323, 1243, 389, 58191, 2065, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 1268, 4442, 304, 1217, 22639, 323, 7865, 10383, 63897, 596, 58191, 2065, 15174, 13, 1102, 5825, 10507, 315, 3230, 15771, 1093, 13674, 323, 5195, 7199, 11, 902, 11415, 279, 29865, 13254, 7969, 323, 279, 18052, 315, 15592, 11, 94012, 279, 2883, 753, 19092, 5357, 389, 1217, 3217, 1603, 58191, 2065, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562320>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 836, 315, 279, 2748, 2883, 11, 63897, 4953, 2637, 19392, 430, 279, 2246, 374, 4461, 264, 6020, 1934, 477, 459, 9974, 1934, 18815, 279, 2883, 596, 5178, 323, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805623b0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 41295, 2449, 11, 36024, 279, 330, 2620, 315, 36962, 1, 369, 279, 2246, 13, 1102, 17482, 264, 34512, 1697, 7580, 369, 13016, 311, 25539, 2204, 14491, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562440>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 13031, 344, 5983, 304, 8515, 6530, 61316, 3252, 5133, 25, 19620, 9473, 17517, 26868, 5343, 304, 279, 15813, 315, 27375, 400, 220, 22397, 400, 220, 16, 11, 23459, 400, 220, 1954, 26868, 28544, 505, 279, 15813, 315, 27375, 220, 2166, 320, 9367, 8, 220, 5833, 13031, 344, 5983, 304, 4272, 9341, 61316, 3252, 5133, 25, 19620, 9473, 17517, 26868, 5343, 304, 279, 15813, 315, 27375, 220, 23952, 220, 19944, 320, 17897, 8, 10884, 400, 220, 16, 11, 19944, 400, 220, 17, 11, 9079, 400, 320, 8190, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 2007, 29385, 4954, 20192, 323, 18151, 505, 43645, 304, 8515, 6530, 323, 4272, 9341, 61316, 3252, 12135, 369, 279, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 5825, 7718, 828, 369, 8830, 279, 27375, 315, 279, 2883, 753, 61316, 3252, 15174, 927, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805624d0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 2500, 3857, 315, 279, 6771, 315, 36962, 11, 91115, 279, 41295, 6070, 315, 279, 2246, 311, 28696, 8831, 5403, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562560>, 'json_data': {'input': [[18902, 79483, 25, 23139, 11, 23139, 11964, 4023, 812, 11, 323, 23927, 46272, 198, 2014, 940, 1534, 73094, 25, 1115, 14836, 15151, 264, 11944, 10430, 922, 63897, 4953, 3238, 82, 8515, 11, 8515, 86106, 11, 323, 3157, 481, 34919, 13, 1115, 3857, 374, 961, 315, 279, 27927, 6492, 315, 279, 2883, 596, 53113, 323, 6020, 5070, 11, 902, 527, 9200, 369, 11006, 7677, 323, 22538, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805625f0>, 'json_data': {'input': [[18902, 79483, 25, 90462, 19971, 374, 2631, 311, 8417, 2225, 279, 29736, 11, 323, 279, 13240, 3392, 11, 315, 264, 4814, 5552, 311, 1778, 13146, 13, 15416, 5977, 6373, 753, 24043, 369, 323, 28957, 315, 4814, 39639, 6072, 505, 1521, 13146, 6532, 17436, 323, 44122, 54406, 19971, 304, 47614, 279, 8351, 753, 16865, 315, 279, 19463, 315, 264, 4814, 11, 323, 279, 13240, 3392, 477, 2134, 315, 4814, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 66159, 279, 19971, 2631, 555, 279, 6264, 12170, 311, 8720, 279, 29736, 323, 4754, 6020, 5536, 315, 279, 4814, 39639, 6072, 11, 39686, 279, 44122, 7138, 315, 1521, 56181, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562680>, 'json_data': {'input': [[18902, 79483, 25, 1226, 6767, 3738, 1023, 24198, 11, 2737, 328, 5002, 23146, 23183, 304, 279, 5708, 315, 7089, 13315, 5220, 11, 323, 3738, 12032, 323, 58165, 19426, 304, 264, 2626, 10824, 11, 1101, 520, 6762, 907, 389, 264, 2536, 265, 46839, 8197, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 19179, 315, 3738, 6020, 24198, 11, 11951, 5708, 6108, 20448, 320, 50, 5002, 8, 23146, 323, 12032, 477, 58165, 505, 2626, 28559, 11, 902, 527, 26126, 520, 6762, 907, 13, 1102, 374, 961, 315, 279, 27927, 2317, 315, 279, 2246, 430, 50729, 279, 2883, 753, 24043, 10396, 9002, 6020, 24198, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562710>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 36233, 8070, 320, 9563, 1680, 5195, 8471, 400, 220, 6086, 11, 23459, 400, 220, 2721, 11, 23805, 5195, 15161, 320, 16, 11, 20275, 8, 220, 16, 11, 23929, 7089, 426, 1441, 320, 19, 11, 22422, 8, 320, 19, 11, 26421, 8, 63897, 11852, 7640, 7, 16, 8, 320, 16, 11, 15531, 8, 320, 24, 11, 9714, 8, 10884, 8070, 505, 7677, 400, 220, 5728, 11, 25377, 400, 220, 5833, 11, 17313, 198, 2014, 940, 1534, 73094, 25, 1115, 2007, 18911, 3230, 12678, 369, 10565, 8070, 477, 4814, 4028, 5370, 21282, 11, 2737, 5195, 8471, 11, 5195, 15161, 11, 323, 7089, 426, 1441, 13, 1115, 55394, 828, 374, 16996, 369, 39210, 311, 15806, 279, 6020, 2890, 323, 25605, 15374, 315, 1855, 10449, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805627a0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 72034, 11, 902, 5764, 41455, 369, 9624, 6108, 10758, 323, 20632, 7526, 369, 40919, 11, 1778, 439, 17263, 11, 62046, 11, 61791, 11, 16542, 11, 323, 26911, 11, 449, 18751, 4519, 1093, 423, 14127, 15592, 304, 5195, 72034, 26, 323, 198, 2014, 940, 1534, 73094, 25, 82117, 505, 46613, 220, 24, 11, 420, 12143, 3649, 30466, 505, 5195, 72034, 11, 902, 5764, 41455, 369, 20632, 7526, 13, 1115, 11621, 2500, 6324, 311, 279, 8830, 315, 5195, 15161, 30466, 11, 94012, 279, 58321, 315, 3600, 9076, 311, 20790, 6444, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562830>, 'json_data': {'input': [[18902, 79483, 25, 220, 1987, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 11, 902, 17482, 439, 264, 5905, 1486, 2949, 279, 2246, 719, 1587, 539, 3493, 67749, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805628c0>, 'json_data': {'input': [[18902, 79483, 25, 10195, 6373, 3727, 279, 1620, 3769, 488, 6449, 811, 323, 28957, 323, 1023, 8907, 11429, 13, 5751, 6373, 917, 81, 5014, 63897, 753, 9678, 586, 24043, 7626, 315, 13146, 323, 904, 9959, 26006, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 10195, 6373, 596, 3560, 304, 3339, 3769, 488, 6449, 811, 323, 8907, 11429, 5552, 311, 62542, 11, 82003, 279, 35186, 6070, 304, 2035, 311, 10299, 15635, 13750, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562950>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1047, 3769, 7782, 42356, 323, 1023, 76543, 30255, 315, 400, 1774, 13, 24, 7239, 11, 315, 902, 400, 2148, 13, 21, 7239, 574, 2875, 9860, 13, 4314, 15055, 15871, 6824, 315, 7782, 10373, 369, 3738, 11156, 14054, 439, 1664, 439, 279, 2536, 86103, 481, 13651, 477, 279, 8187, 36935, 11307, 304, 3738, 20038, 5552, 311, 42356, 311, 7782, 21746, 11, 2737, 2262, 21746, 11, 15808, 323, 4009, 8824, 13, 1789, 1884, 20038, 449, 3977, 3878, 11, 584, 656, 539, 16430, 279, 2536, 86103, 481, 29672, 7953, 904, 8187, 33776, 323, 5255, 21913, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 763, 3738, 13422, 11, 279, 3392, 315, 1057, 76543, 30255, 1253, 2349, 3196, 389, 279, 3685, 18912, 315, 2015, 57383, 505, 1057, 20972, 13, 1789, 810, 2038, 5552, 311, 1057, 2262, 21746, 11, 1518, 7181, 220, 605, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 12678, 5552, 311, 63897, 4953, 3238, 82, 7782, 42356, 323, 76543, 30255, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 45293, 15055, 323, 872, 7138, 13, 1115, 2038, 374, 9200, 369, 38663, 279, 2883, 596, 3938, 8515, 6530, 8670, 323, 25605, 42356, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805629e0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 323, 1587, 539, 17210, 2262, 9959, 311, 66251, 8830, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562a70>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3308, 426, 5708, 706, 220, 605, 12973, 824, 4430, 11, 1057, 3308, 362, 5708, 706, 832, 7055, 824, 4430, 11, 323, 1057, 3308, 356, 5708, 706, 912, 16043, 3268, 13, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 30390, 5874, 323, 74529, 3320, 258, 24629, 398, 13234, 13489, 220, 4218, 13, 20, 4, 315, 1057, 19310, 3308, 426, 5708, 11, 902, 15609, 13489, 220, 3971, 13, 20, 4, 315, 279, 16043, 2410, 315, 1057, 19310, 4279, 5708, 13, 17331, 872, 5708, 15637, 11, 30390, 323, 74529, 617, 5199, 10383, 927, 682, 13146, 23537, 5708, 4346, 14765, 11, 2737, 279, 6355, 315, 28454, 323, 5199, 13166, 14463, 11, 1778, 439, 264, 47112, 477, 1023, 6412, 315, 1057, 2883, 477, 1057, 12032, 11, 369, 279, 79003, 3938, 13, 763, 5369, 11, 1606, 1057, 3308, 356, 5708, 24266, 912, 16043, 3268, 320, 11945, 439, 2631, 555, 8581, 2383, 705, 279, 67599, 315, 279, 3308, 356, 5708, 11, 2737, 304, 3938, 5708, 6108, 24279, 14463, 323, 311, 3887, 9548, 25452, 36210, 7620, 11, 1436, 3136, 30390, 323, 74529, 753, 1510, 8844, 16043, 2410, 323, 872, 5845, 311, 4135, 682, 315, 1057, 28454, 323, 311, 8417, 279, 15632, 315, 1455, 13146, 14976, 311, 264, 7055, 315, 1057, 5708, 17075, 13, 578, 4430, 2109, 75202, 1903, 33549, 311, 1057, 2109, 13173, 2068, 1253, 1101, 7958, 30390, 323, 74529, 753, 8844, 16043, 2410, 13, 1115, 38626, 2585, 13693, 477, 35906, 9067, 82, 1023, 5708, 17075, 529, 5845, 311, 10383, 13166, 13146, 323, 584, 1253, 1935, 6299, 430, 1063, 315, 1057, 5708, 17075, 656, 539, 1684, 439, 24629, 11, 902, 1436, 8108, 279, 3157, 3430, 315, 1057, 3308, 362, 5708, 323, 1057, 3308, 356, 5708, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 16043, 6070, 315, 279, 2883, 753, 5708, 6989, 323, 279, 10383, 315, 1401, 41777, 11, 11951, 30390, 5874, 323, 74529, 3320, 258, 13, 1102, 66159, 279, 5536, 315, 5708, 15637, 20545, 389, 13166, 35186, 323, 5597, 28846, 11, 21583, 311, 279, 6931, 20954, 389, 4430, 15637, 323, 4754, 26885, 449, 27927, 63342, 12034, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562b00>, 'json_data': {'input': [[18902, 79483, 25, 5751, 8060, 311, 2686, 1521, 15635, 477, 1023, 5435, 23926, 304, 3717, 449, 1057, 3347, 477, 3938, 63948, 323, 1023, 19092, 28904, 1436, 5353, 603, 311, 3775, 311, 13383, 872, 30199, 7720, 11, 62622, 653, 93878, 58165, 11, 323, 11682, 1057, 2626, 8965, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 4754, 8389, 25949, 315, 22109, 311, 10299, 15635, 5938, 449, 63948, 323, 19092, 28904, 13, 1102, 66159, 279, 26431, 315, 7524, 5326, 6373, 304, 44114, 279, 7720, 315, 63948, 11, 902, 374, 264, 46350, 7057, 304, 279, 2246, 5552, 311, 63897, 596, 8244, 2626, 8446, 323, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562b90>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 73100, 14742, 279, 3917, 315, 279, 2246, 11, 330, 2149, 18992, 4953, 13, 1359, 82003, 430, 279, 4553, 2262, 18713, 1771, 311, 420, 3230, 27767, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562c20>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 5217, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562cb0>, 'json_data': {'input': [[18902, 79483, 25, 71760, 28674, 311, 279, 8670, 315, 11360, 220, 1032, 477, 220, 868, 1528, 8, 315, 279, 46272, 19224, 3298, 315, 220, 7285, 19, 11, 279, 75659, 519, 706, 77903, 9057, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 311, 387, 8667, 389, 1202, 17981, 555, 279, 26445, 1571, 11, 1070, 26494, 77903, 19144, 627, 2014, 940, 1534, 73094, 25, 71760, 28674, 311, 279, 8670, 315, 11360, 220, 1032, 477, 220, 868, 1528, 8, 315, 279, 46272, 19224, 3298, 315, 220, 7285, 19, 11, 279, 75659, 519, 706, 77903, 9057, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 311, 387, 8667, 389, 1202, 17981, 555, 279, 26445, 1571, 11, 1070, 26494, 77903, 19144, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562d40>, 'json_data': {'input': [[18902, 79483, 25, 1789, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 2860, 328, 5002, 20900, 574, 400, 868, 13, 22, 7239, 11, 400, 777, 13, 20, 7239, 11, 323, 400, 1313, 13, 16, 7239, 11, 2737, 15055, 5938, 449, 23146, 584, 1755, 311, 25760, 304, 63897, 5708, 315, 400, 868, 13, 15, 7239, 11, 400, 972, 13, 23, 7239, 11, 323, 400, 1691, 13, 22, 7239, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 2860, 5708, 6108, 20448, 320, 50, 5002, 8, 20900, 369, 279, 1667, 9670, 6790, 220, 2148, 369, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 81200, 1521, 12678, 6276, 39210, 311, 24564, 18845, 304, 20448, 7194, 927, 892, 323, 872, 5536, 389, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562dd0>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 5905, 5296, 320, 16, 705, 902, 4461, 34310, 311, 5217, 2038, 477, 4579, 18790, 5552, 311, 279, 6020, 828, 10666, 304, 3766, 27855, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562e60>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 18, 11, 420, 12143, 19813, 311, 279, 330, 2620, 315, 36962, 1, 3857, 11, 12899, 10873, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562ef0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80562f80>, 'json_data': {'input': [[18902, 79483, 25, 29240, 304, 279, 15691, 3392, 315, 82746, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 389, 279, 4442, 304, 279, 15691, 3392, 315, 82746, 11, 264, 5199, 13189, 315, 279, 2883, 596, 6020, 13122, 13, 1102, 7437, 279, 6566, 369, 11944, 6020, 828, 5552, 311, 82746, 927, 279, 5300, 1667, 320, 2366, 17, 323, 220, 2366, 18, 705, 902, 374, 7718, 369, 8830, 279, 2883, 596, 63948, 323, 34074, 304, 907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563010>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4528, 311, 921, 15655, 220, 605, 323, 220, 806, 11, 15718, 439, 264, 24693, 2449, 304, 279, 2246, 2085, 67749, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805630a0>, 'json_data': {'input': [[18902, 79483, 25, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17738, 279, 7314, 315, 264, 11944, 6492, 315, 30466, 8066, 555, 63897, 4953, 13, 1102, 4461, 5764, 264, 31085, 315, 13254, 8336, 11, 902, 374, 16996, 369, 8830, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563130>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1047, 400, 605, 13, 15, 7239, 315, 87126, 6807, 13077, 11, 400, 19, 13, 15, 7239, 1367, 6322, 304, 5936, 220, 2366, 19, 323, 400, 21, 13, 15, 7239, 1367, 6322, 304, 5936, 220, 2366, 23, 13, 578, 2802, 7969, 369, 682, 6807, 13077, 527, 11075, 3196, 389, 264, 15150, 1701, 3738, 3157, 7969, 11, 439, 1664, 439, 1057, 5208, 9017, 279, 26501, 315, 3738, 41329, 9021, 13, 2360, 15055, 617, 1027, 46664, 1234, 279, 6807, 13077, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 15100, 279, 2883, 596, 87126, 6807, 13077, 11, 45293, 872, 15055, 11, 32792, 13003, 11, 323, 2802, 4478, 26314, 13, 1102, 5825, 2317, 369, 63897, 596, 53113, 6373, 323, 6020, 25152, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805631c0>, 'json_data': {'input': [[18902, 79483, 25, 65649, 304, 7318, 28849, 323, 2853, 17453, 29218, 439, 1664, 439, 51091, 323, 2853, 17453, 38025, 4099, 11, 323, 5370, 9547, 29820, 311, 1778, 65649, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 25985, 988, 4726, 389, 279, 9547, 28987, 7318, 28849, 323, 2853, 17453, 38025, 4099, 11, 8405, 20616, 1139, 279, 25605, 17150, 430, 10383, 13254, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563250>, 'json_data': {'input': [[18902, 79483, 25, 7089, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 44488, 2440, 430, 1587, 539, 6782, 904, 2262, 13, 1102, 1253, 8464, 311, 264, 3857, 14836, 477, 264, 6002, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805632e0>, 'json_data': {'input': [[18902, 79483, 25, 42224, 4504, 4272, 38029, 20748, 323, 220, 1187, 14, 22, 356, 11673, 555, 220, 9639, 15, 527, 9193, 32855, 9021, 13, 1226, 1101, 1440, 430, 1057, 1853, 311, 4272, 38029, 20748, 690, 539, 387, 4228, 477, 13790, 13, 4427, 315, 1057, 6787, 1253, 1935, 1667, 311, 6493, 3135, 11, 8104, 1405, 814, 21736, 4857, 502, 3544, 13230, 14054, 449, 1317, 3063, 3115, 13, 2100, 439, 1057, 2626, 9731, 311, 38680, 11, 584, 1755, 1057, 20748, 311, 10205, 1603, 26156, 7119, 1057, 10973, 20748, 14278, 2218, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 56030, 279, 32855, 7138, 315, 5195, 596, 41329, 9021, 11, 8104, 304, 32145, 4272, 38029, 20748, 323, 220, 1187, 14, 22, 12782, 12862, 4907, 13, 1102, 48542, 279, 6742, 369, 4754, 11774, 323, 88244, 5938, 449, 1521, 9021, 11, 19392, 430, 279, 11879, 1253, 21736, 2926, 12992, 304, 20748, 1603, 12190, 47311, 649, 387, 15393, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563370>, 'json_data': {'input': [[18902, 79483, 25, 1789, 5217, 2038, 11, 2737, 264, 58755, 315, 279, 549, 815, 13, 6918, 45530, 4478, 311, 1057, 7524, 3827, 4478, 11, 1518, 7181, 220, 975, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 1405, 311, 1505, 4726, 2038, 323, 58755, 9002, 279, 2883, 596, 7524, 3827, 4478, 11, 902, 374, 3062, 369, 39210, 42118, 3827, 15374, 323, 8907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563400>, 'json_data': {'input': [[18902, 79483, 25, 1226, 15871, 29166, 5226, 17032, 369, 279, 14956, 315, 1057, 16692, 1511, 304, 1057, 11156, 14054, 323, 7766, 584, 4662, 13, 1226, 617, 20038, 1405, 584, 1253, 7782, 6956, 6089, 505, 20972, 323, 1243, 8312, 1521, 6956, 311, 5226, 17032, 369, 1005, 304, 279, 14956, 315, 279, 16692, 323, 7766, 13, 35211, 315, 1521, 28904, 1121, 304, 264, 13651, 315, 279, 8515, 4036, 505, 323, 7318, 311, 279, 5226, 17032, 311, 387, 10666, 439, 29642, 7640, 304, 279, 79980, 660, 70816, 315, 23139, 3061, 4336, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 63897, 4953, 3238, 82, 54180, 389, 5226, 17032, 369, 81759, 16692, 323, 7766, 11, 902, 374, 16996, 369, 8830, 279, 2883, 596, 8312, 8957, 323, 25605, 8446, 13, 1102, 34945, 20038, 449, 20972, 323, 1268, 1521, 28904, 5536, 29642, 7640, 11, 8405, 26793, 1139, 279, 2883, 596, 5788, 323, 2853, 6373, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563490>, 'json_data': {'input': [[18902, 79483, 25, 2314, 8630, 555, 1817, 1906, 3508, 279, 23702, 519, 374, 264, 12811, 2883, 320, 300, 4613, 304, 18592, 220, 717, 65, 12, 17, 315, 279, 19224, 3298, 570, 7566, 26182, 238, 2360, 26182, 240, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 18489, 9002, 279, 2883, 596, 2704, 439, 264, 12811, 2883, 11, 902, 374, 5199, 369, 15167, 323, 40242, 13, 362, 12811, 2883, 374, 11383, 832, 449, 912, 5199, 7677, 477, 12032, 11, 323, 420, 1817, 43496, 430, 63897, 4953, 13, 374, 539, 21771, 439, 1778, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563520>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 369, 420, 12143, 26, 433, 1253, 387, 264, 6002, 477, 10321, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805635b0>, 'json_data': {'input': [[18902, 79483, 25, 2930, 13172, 15771, 323, 14488, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 330, 26732, 13172, 15771, 323, 14488, 1359, 19392, 430, 279, 2883, 12580, 10937, 539, 1193, 505, 2778, 21787, 719, 1101, 505, 1023, 7528, 13172, 15086, 11, 16996, 369, 1202, 13254, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563640>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 312, 2058, 988, 279, 3917, 330, 2149, 18992, 4953, 1210, 311, 10519, 5357, 389, 279, 5502, 1694, 14407, 6957, 279, 2246, 11, 23391, 32373, 389, 279, 1934, 596, 41961, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805636d0>, 'json_data': {'input': [[18902, 79483, 25, 16528, 8245, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 4461, 17482, 439, 264, 33269, 24131, 430, 67146, 13016, 311, 4726, 2038, 9002, 279, 2883, 596, 13122, 323, 28330, 12659, 13, 1102, 7437, 279, 6566, 369, 279, 4595, 315, 2038, 430, 690, 387, 2561, 311, 39210, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563760>, 'json_data': {'input': [[18902, 79483, 25, 40388, 315, 78354, 33170, 323, 75111, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 16865, 315, 279, 2883, 596, 28957, 11835, 323, 16346, 11, 19392, 459, 15813, 315, 1268, 13750, 279, 2883, 29972, 323, 6821, 6020, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805637f0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 369, 420, 12143, 26, 433, 1253, 387, 264, 6002, 477, 10321, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563880>, 'json_data': {'input': [[18902, 79483, 25, 37902, 277, 393, 718, 2192, 198, 2014, 940, 1534, 73094, 25, 37902, 277, 393, 718, 2192]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563910>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 16, 32, 13, 432, 68799, 59643, 10022, 198, 2014, 940, 1534, 73094, 25, 578, 330, 12236, 220, 16, 32, 13, 432, 68799, 59643, 10022, 1, 3857, 40019, 279, 9200, 7057, 315, 15635, 5938, 449, 63897, 4953, 3238, 82, 7677, 323, 6020, 20124, 11, 31692, 264, 12914, 369, 8830, 279, 5370, 11774, 279, 2883, 12580, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e805639a0>, 'json_data': {'input': [[18902, 79483, 25, 578, 5376, 304, 1023, 2853, 315, 30466, 315, 400, 806, 13, 24, 7239, 505, 220, 2366, 16, 311, 220, 2366, 17, 574, 15871, 4245, 311, 12992, 304, 3756, 7194, 11, 20448, 18512, 11, 94189, 11, 323, 7241, 14228, 18512, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 13970, 2317, 369, 279, 5376, 304, 1023, 7194, 315, 30466, 505, 220, 2366, 16, 311, 220, 2366, 17, 11, 10923, 13016, 311, 1518, 18845, 927, 5361, 1667, 323, 3619, 279, 2883, 596, 42028, 2853, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563a30>, 'json_data': {'input': [[18902, 79483, 25, 220, 2618, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 6002, 323, 1587, 539, 6782, 2262, 9959, 311, 8830, 279, 6020, 1934, 13, 1102, 17482, 439, 264, 25829, 477, 264, 5905, 11381, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563ac0>, 'json_data': {'input': [[18902, 79483, 25, 578, 8351, 753, 6373, 374, 8647, 369, 20958, 7524, 5419, 2585, 927, 6020, 13122, 323, 369, 1202, 15813, 315, 279, 27375, 315, 5419, 2585, 927, 6020, 13122, 5343, 304, 279, 24442, 9744, 753, 8423, 389, 15774, 7935, 927, 17961, 47793, 13, 5751, 12014, 374, 311, 3237, 459, 9647, 389, 279, 8351, 753, 5419, 2585, 927, 6020, 13122, 3196, 389, 1057, 25261, 13, 1226, 527, 264, 586, 24043, 7626, 9879, 449, 279, 62029, 21257, 323, 527, 2631, 311, 387, 9678, 449, 5201, 311, 279, 8351, 304, 18859, 449, 279, 549, 815, 13, 6918, 34919, 7016, 323, 279, 8581, 5718, 323, 14640, 315, 279, 46272, 323, 19224, 9849, 323, 279, 62029, 21257, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 28423, 315, 279, 2883, 753, 6373, 9002, 5419, 2585, 927, 6020, 13122, 323, 279, 54406, 596, 24589, 11, 39686, 279, 12914, 2949, 902, 279, 25261, 574, 13375, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563b50>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1755, 1521, 18845, 311, 3136, 311, 7958, 1057, 30466, 323, 2231, 7410, 389, 1057, 37682, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 12399, 5224, 19392, 430, 279, 18845, 14407, 304, 279, 3766, 27855, 690, 617, 14529, 25127, 369, 63897, 753, 13254, 323, 11626, 37682, 13, 1102, 27053, 279, 83416, 7138, 315, 279, 9547, 28987, 279, 2883, 753, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563be0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 13596, 2937, 315, 279, 6771, 315, 36962, 11, 420, 54515, 13533, 430, 279, 2246, 1253, 387, 34030, 311, 2187, 4062, 10873, 311, 5370, 14491, 11, 91115, 279, 12939, 315, 279, 33740, 13650, 369, 13016, 11125, 3230, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563c70>, 'json_data': {'input': [[18902, 79483, 25, 5751, 7928, 2592, 315, 8515, 3984, 555, 7677, 527, 13172, 30466, 8066, 555, 5195, 7694, 612, 1023, 6012, 11, 5195, 8304, 6012, 11, 323, 13674, 6012, 13, 763, 5195, 8471, 11, 584, 1101, 7068, 8515, 1555, 11761, 41455, 323, 279, 6412, 315, 10721, 323, 304, 20624, 24393, 323, 7766, 13, 763, 5195, 15161, 584, 7068, 8515, 1555, 15652, 6108, 12718, 323, 41455, 369, 14054, 11, 5452, 11, 20632, 7526, 11, 323, 1023, 9624, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 6156, 8336, 315, 8515, 3984, 555, 10565, 7640, 11, 39686, 279, 26431, 315, 13172, 30466, 323, 1023, 8070, 8336, 369, 63897, 4953, 3238, 82, 6020, 20334, 323, 6650, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563d00>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 264, 330, 2620, 315, 36962, 1359, 902, 73633, 10873, 1555, 279, 2246, 555, 79774, 279, 6070, 323, 1925, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563d90>, 'json_data': {'input': [[18902, 79483, 25, 81751, 12032, 323, 58165, 527, 15324, 520, 279, 3118, 907, 315, 279, 3938, 26120, 14507, 520, 279, 26120, 69544, 2457, 13, 578, 2802, 4478, 1511, 311, 8417, 279, 3118, 907, 315, 279, 3938, 26120, 14507, 374, 1057, 53399, 53675, 4478, 11, 1606, 279, 2802, 4478, 18479, 304, 1057, 73657, 374, 539, 31368, 6449, 481, 13, 5751, 53399, 53675, 4478, 374, 13240, 311, 45968, 279, 2802, 4478, 389, 264, 52508, 1534, 8197, 449, 4528, 3878, 323, 14507, 11, 323, 304, 7100, 22484, 1405, 279, 82280, 9513, 374, 7559, 13, 5751, 26120, 3878, 2997, 18852, 1234, 2671, 311, 13334, 477, 30754, 279, 26120, 994, 433, 374, 29546, 3738, 430, 584, 690, 10368, 430, 3072, 13, 1226, 8965, 1005, 279, 2385, 11, 2536, 86103, 481, 11, 26120, 4751, 994, 26679, 279, 26120, 12032, 323, 58165, 13, 81751, 12032, 1101, 2997, 904, 83776, 26120, 14507, 323, 26120, 36580, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 1268, 26120, 12032, 323, 58165, 527, 15324, 304, 279, 6020, 12518, 11, 82003, 279, 12939, 315, 3118, 907, 29217, 323, 279, 26314, 315, 2802, 7969, 13, 1102, 1234, 8128, 279, 26431, 315, 26120, 3878, 304, 24043, 12659, 323, 872, 5536, 389, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563e20>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80563f40>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 18, 45285, 26868, 45285, 26868, 3308, 362, 4430, 2109, 75202, 220, 5547, 400, 220, 21, 11, 24758, 220, 2495, 400, 220, 24, 11, 15340, 3308, 356, 4430, 2109, 75202, 220, 21330, 220, 4103, 11, 23411, 220, 10617, 220, 4103, 11, 25862, 10884, 4430, 2109, 75202, 7, 16, 8, 220, 17252, 400, 220, 2946, 11, 17408, 220, 21458, 400, 220, 5538, 11, 10336, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 3230, 828, 389, 279, 1396, 315, 13551, 2109, 73350, 323, 872, 20081, 15055, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 11, 29820, 311, 279, 11944, 31085, 315, 4430, 2109, 13173, 7640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290040>, 'json_data': {'input': [[18902, 79483, 25, 3580, 24442, 8554, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15407, 24442, 8554, 11, 902, 527, 4461, 311, 6782, 4726, 41941, 477, 3649, 5552, 311, 279, 6020, 12518, 13, 1102, 15151, 430, 5217, 2038, 374, 3984, 18403, 304, 279, 2246, 311, 38263, 477, 37067, 389, 279, 8515, 6530, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802900d0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 14529, 9341, 304, 502, 9873, 11, 3956, 11, 3600, 11, 323, 14645, 374, 49188, 41273, 11, 323, 1436, 37098, 6373, 6666, 323, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 14564, 279, 38088, 15635, 5938, 449, 279, 2883, 753, 14529, 22538, 304, 502, 3956, 323, 14645, 13, 1102, 49140, 430, 1521, 66724, 1436, 37098, 6373, 596, 5357, 323, 48291, 5536, 8244, 2626, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290160>, 'json_data': {'input': [[18902, 79483, 25, 1789, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 2860, 328, 5002, 20900, 574, 400, 868, 13, 22, 7239, 11, 400, 777, 13, 20, 7239, 11, 323, 400, 1313, 13, 16, 7239, 11, 2737, 15055, 5938, 449, 23146, 584, 1755, 311, 25760, 304, 63897, 5708, 315, 400, 868, 13, 15, 7239, 11, 400, 972, 13, 23, 7239, 11, 323, 400, 1691, 13, 22, 7239, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 2860, 5708, 6108, 20448, 320, 50, 5002, 8, 20900, 369, 279, 1667, 9670, 6790, 220, 2148, 369, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 81200, 1521, 12678, 6276, 39210, 311, 24564, 18845, 304, 20448, 7194, 927, 892, 323, 872, 5536, 389, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802901f0>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 264, 87910, 320, 16, 8, 5938, 449, 279, 3766, 2007, 11, 4461, 8405, 5217, 93566, 2038, 922, 279, 3673, 10212, 304, 279, 12399, 315, 19310, 11897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290280>, 'json_data': {'input': [[18902, 79483, 25, 2057, 279, 12937, 17075, 323, 279, 8925, 315, 46085, 315, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 62469, 5224, 14564, 279, 5708, 17075, 323, 279, 8925, 315, 46085, 315, 63897, 4953, 2637, 19392, 279, 7580, 315, 279, 1934, 374, 311, 3118, 459, 9678, 25261, 9647, 389, 279, 2883, 596, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290310>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 4689, 323, 23541, 18512, 320, 258, 11990, 11, 3734, 54208, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 264, 2007, 690, 1833, 11, 32644, 35876, 828, 5552, 311, 3331, 323, 52941, 18512, 11, 4528, 311, 279, 3766, 14491, 389, 432, 33465, 323, 16207, 323, 18729, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802903a0>, 'json_data': {'input': [[18902, 79483, 25, 35211, 15055, 304, 4972, 18852, 617, 1027, 312, 65974, 311, 26965, 449, 1510, 4261, 15864, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 2038, 922, 279, 7138, 315, 4972, 4261, 312, 1058, 7174, 11, 19392, 430, 3738, 15055, 617, 1027, 24257, 311, 5398, 449, 279, 1510, 15864, 3645, 13, 1115, 374, 3062, 369, 28330, 304, 6020, 13122, 323, 369, 3932, 34988, 13970, 828, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290430>, 'json_data': {'input': [[18902, 79483, 25, 1226, 10772, 1057, 60391, 6020, 12518, 304, 18859, 449, 27438, 2599, 13, 763, 3815, 779, 11, 584, 617, 311, 1304, 17989, 323, 32946, 13, 5751, 9200, 24043, 17989, 527, 1884, 17989, 430, 21736, 264, 5199, 2237, 315, 27924, 520, 279, 892, 279, 16430, 574, 1903, 11, 323, 4442, 304, 1124, 617, 1047, 477, 527, 29546, 4461, 311, 617, 264, 3769, 2515, 389, 1057, 6020, 3044, 477, 3135, 315, 7677, 13, 63909, 11, 5150, 3135, 1436, 1782, 90694, 505, 1057, 17989, 13, 1226, 2385, 1057, 17989, 389, 3347, 3217, 323, 1023, 32946, 430, 584, 4510, 527, 13579, 1234, 279, 13463, 11, 323, 584, 15806, 1521, 17989, 389, 459, 14529, 8197, 13, 1226, 617, 22690, 1057, 9200, 24043, 17989, 449, 279, 48746, 323, 60270, 10554, 315, 1057, 8925, 315, 46085, 627, 2014, 940, 1534, 73094, 25, 1115, 14646, 25985, 988, 389, 1268, 63897, 4953, 13, 48542, 1202, 60391, 6020, 12518, 304, 18859, 449, 44493, 64389, 45344, 58014, 320, 16519, 2599, 570, 1102, 66159, 279, 27924, 6532, 304, 24043, 17989, 323, 872, 4754, 5536, 389, 279, 2883, 596, 6020, 3044, 323, 3135, 13, 1115, 12143, 5825, 20616, 1139, 279, 1920, 315, 6020, 13122, 323, 279, 38088, 11774, 17011, 555, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802904c0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 374, 264, 4526, 315, 9873, 2001, 279, 7928, 315, 902, 374, 5195, 13, 1226, 1934, 5195, 304, 1403, 21282, 11, 5195, 8471, 323, 5195, 15161, 11, 323, 682, 2536, 12279, 2738, 9873, 45925, 439, 7089, 426, 1441, 13, 63897, 596, 6070, 374, 922, 10695, 1855, 315, 1057, 9873, 29761, 1555, 3831, 6164, 323, 24589, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 41295, 6070, 315, 63897, 4953, 2637, 26073, 430, 433, 17610, 315, 5361, 9873, 11, 449, 5195, 439, 279, 7928, 13, 1102, 7437, 279, 12914, 369, 8830, 1268, 63897, 27149, 323, 22824, 4861, 1202, 5370, 21282, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290550>, 'json_data': {'input': [[18902, 79483, 25, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 32400, 430, 374, 54291, 11, 19392, 430, 279, 23702, 519, 1587, 539, 26456, 439, 264, 2536, 38698, 3757, 261, 660, 1488, 261, 13, 1102, 374, 961, 315, 279, 23331, 8907, 3857, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802905e0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 5912, 3477, 323, 25261, 555, 2225, 13018, 323, 7362, 3827, 11527, 13, 1666, 264, 1121, 11, 584, 617, 4036, 11, 323, 1253, 304, 279, 3938, 5371, 11, 41300, 304, 5361, 56043, 11, 389, 5370, 3827, 14228, 55936, 11, 1778, 439, 8481, 27748, 10332, 34074, 477, 15690, 48587, 479, 8349, 13, 5884, 31959, 15632, 315, 1778, 264, 3477, 477, 25261, 1436, 11682, 1057, 6020, 3044, 323, 10565, 3135, 11, 1397, 31959, 4442, 311, 1057, 2626, 12659, 11, 477, 3917, 603, 311, 5217, 39725, 323, 23331, 44983, 13, 763, 5369, 11, 279, 26314, 315, 1057, 15603, 17575, 369, 8070, 13426, 323, 1023, 3827, 58165, 7612, 5199, 19971, 323, 3629, 18065, 27924, 13, 10541, 584, 4510, 1057, 17989, 527, 13579, 11, 279, 17139, 3827, 15632, 1253, 1782, 505, 279, 15055, 12715, 304, 1057, 6020, 12518, 323, 1253, 7958, 1057, 6020, 3135, 304, 279, 4261, 477, 18852, 369, 902, 1778, 26314, 374, 1903, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 5912, 75620, 13375, 555, 3827, 11527, 323, 279, 4754, 369, 31959, 20124, 505, 1521, 8544, 13, 1102, 34161, 311, 279, 6931, 20954, 389, 3827, 58165, 323, 8907, 11, 82003, 279, 27924, 323, 15635, 5938, 449, 3827, 41300, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290670>, 'json_data': {'input': [[18902, 79483, 25, 10604, 304, 45344, 73815, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 24043, 17989, 11, 19392, 264, 10430, 9002, 4442, 304, 24043, 17989, 430, 617, 25127, 369, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290700>, 'json_data': {'input': [[18902, 79483, 25, 1050, 46469, 505, 9624, 11, 11761, 41455, 11, 15771, 11, 323, 7766, 11, 902, 1253, 617, 61469, 17910, 1109, 1057, 13172, 30466, 11, 617, 15042, 927, 892, 11, 323, 584, 1755, 420, 9327, 311, 3136, 439, 584, 5357, 389, 24050, 1057, 3956, 323, 3600, 13, 578, 37682, 389, 1521, 30466, 13592, 12207, 323, 527, 8965, 4827, 1109, 279, 37682, 389, 1057, 13172, 30466, 13, 1789, 3187, 11, 6763, 315, 1057, 7766, 69214, 7958, 1057, 60391, 37682, 4245, 311, 40850, 389, 21913, 323, 5190, 2853, 315, 6763, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 5357, 374, 389, 279, 6650, 315, 10778, 13254, 8336, 11, 1778, 439, 9624, 323, 15493, 3600, 11, 1418, 1101, 10163, 922, 872, 8965, 4827, 37682, 7863, 311, 13172, 30466, 13, 1115, 64664, 264, 13168, 1990, 2204, 13254, 4595, 323, 872, 6020, 25127, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290790>, 'json_data': {'input': [[18902, 79483, 25, 72673, 369, 8070, 13426, 11105, 279, 13240, 3392, 315, 6918, 11, 1614, 11, 323, 7362, 8070, 13426, 52872, 304, 279, 549, 815, 13, 323, 279, 1690, 56043, 304, 902, 584, 14816, 13, 578, 17575, 5764, 279, 2515, 315, 21137, 19705, 323, 4442, 311, 30600, 430, 527, 6646, 8475, 439, 1664, 439, 279, 5552, 4272, 2802, 323, 31086, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 7138, 315, 279, 17575, 369, 8070, 13426, 11, 45293, 1268, 433, 71010, 5370, 3827, 56043, 323, 5552, 30600, 11, 902, 374, 7718, 369, 47614, 279, 2883, 596, 3827, 8446, 323, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290820>, 'json_data': {'input': [[18902, 79483, 25, 11443, 315, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3230, 1207, 22327, 389, 279, 2853, 315, 30466, 11, 902, 374, 264, 9200, 3158, 315, 6492, 369, 8830, 1268, 13254, 9659, 374, 40028, 555, 5938, 7194, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802908b0>, 'json_data': {'input': [[18902, 79483, 25, 70128, 315, 79980, 367, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 70128, 315, 79980, 367, 11, 902, 15100, 279, 24043, 16565, 1511, 369, 28230, 1113, 6020, 12518, 13, 1102, 374, 7718, 369, 8830, 1268, 63897, 9815, 369, 1202, 15086, 323, 22538, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290940>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 279, 6771, 315, 36962, 3857, 11, 19392, 264, 24693, 2449, 315, 279, 2246, 430, 2942, 4861, 1202, 8970, 369, 4228, 10873, 323, 5905, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802909d0>, 'json_data': {'input': [[18902, 79483, 25, 5403, 6603, 11, 323, 1701, 10721, 13, 22938, 449, 2262, 34899, 323, 8717, 11, 584, 3136, 311, 1977, 502, 5627, 369, 1274, 2212, 279, 1917, 311, 1893, 323, 1505, 2294, 7528, 2262, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 311, 37067, 389, 279, 4595, 315, 7528, 2262, 3932, 16988, 449, 11, 82003, 63897, 596, 3560, 304, 68365, 2680, 311, 5370, 7739, 315, 16924, 323, 2038, 13, 1102, 34161, 311, 279, 3766, 10430, 922, 18899, 7528, 2262, 18841, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290a60>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 11, 63897, 4953, 2637, 323, 17482, 439, 264, 4342, 369, 279, 2246, 11, 31692, 279, 2317, 315, 279, 17876, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290af0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 11, 63897, 4953, 2637, 323, 17482, 439, 264, 4342, 369, 279, 2246, 11, 31692, 279, 2317, 315, 279, 17876, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290b80>, 'json_data': {'input': [[18902, 79483, 25, 220, 3487, 627, 2014, 940, 1534, 73094, 25, 510, 2028, 12143, 8111, 311, 387, 264, 2199, 1396, 323, 1587, 539, 6782, 9959, 2038, 25750]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290c10>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 369, 420, 12143, 26, 433, 1253, 387, 264, 6002, 477, 10321, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290ca0>, 'json_data': {'input': [[18902, 79483, 25, 220, 4767, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 5905, 1396, 477, 3857, 11381, 19392, 264, 42271, 477, 842, 315, 264, 3857, 11, 719, 433, 37856, 2262, 369, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290d30>, 'json_data': {'input': [[18902, 79483, 25, 35698, 287, 18682, 70738, 596, 7859, 20632, 449, 5195, 8471, 11, 5195, 15161, 11, 323, 7089, 426, 1441, 11, 7314, 304, 279, 1176, 8502, 315, 220, 2366, 18, 18682, 70738, 374, 5068, 439, 961, 315, 63897, 11852, 7640, 4619, 315, 2949, 7089, 426, 1441, 13, 23212, 11, 7314, 304, 279, 1176, 8502, 315, 220, 2366, 18, 11, 584, 6177, 323, 44899, 1057, 2853, 24691, 81898, 311, 3493, 1057, 2626, 6164, 449, 7319, 28330, 369, 5597, 28846, 13, 32499, 18852, 617, 1027, 1421, 561, 311, 26965, 311, 279, 1510, 15864, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8554, 3293, 4442, 304, 13122, 12659, 11, 2737, 279, 18052, 315, 18682, 70738, 1139, 63897, 11852, 7640, 11, 19392, 459, 15740, 304, 279, 2883, 596, 25605, 6070, 323, 6020, 28330, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290dc0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1380, 533, 2626, 31550, 304, 5361, 36702, 13, 7327, 30466, 11, 439, 1664, 439, 7194, 323, 18512, 3453, 50615, 304, 7362, 36702, 11, 29241, 603, 311, 279, 5326, 315, 65649, 304, 7362, 11667, 9473, 7969, 2403, 279, 549, 815, 13, 18160, 13, 1666, 14407, 3770, 11, 584, 3810, 1139, 32905, 24198, 311, 42766, 7362, 11667, 5326, 13, 37409, 36702, 61316, 3640, 5343, 279, 13673, 18160, 11, 8013, 31123, 11, 12152, 18160, 11, 20026, 11, 323, 11002, 58440, 13, 1789, 279, 7580, 315, 42118, 7362, 11667, 9473, 5326, 11, 584, 6646, 279, 13970, 18845, 304, 7362, 11667, 9473, 7969, 323, 11075, 430, 433, 574, 29546, 3284, 430, 31959, 4442, 304, 9473, 7969, 315, 220, 605, 4, 1436, 387, 10534, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 2883, 596, 3728, 7677, 323, 279, 13239, 14675, 311, 7362, 11667, 9473, 4478, 65649, 11, 45293, 279, 11193, 4529, 311, 42766, 420, 5326, 323, 79774, 279, 36702, 6532, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290e50>, 'json_data': {'input': [[18902, 79483, 25, 20448, 18512, 369, 8420, 17045, 304, 6763, 323, 8661, 11, 6763, 1862, 11, 323, 3738, 6130, 2532, 5865, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 20448, 18512, 369, 6763, 323, 8661, 8420, 13, 1102, 22020, 279, 12939, 315, 3823, 5070, 304, 10043, 6763, 9045, 323, 6130, 1862, 11, 29820, 311, 279, 8244, 6763, 323, 8661, 20900, 17150, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290ee0>, 'json_data': {'input': [[18902, 79483, 25, 17781, 28734, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7434, 315, 330, 68369, 28734, 1359, 22797, 311, 32855, 11, 1579, 46570, 7224, 430, 1436, 7692, 5199, 21845, 13, 1102, 13533, 264, 4741, 31348, 13356, 389, 19297, 323, 9341, 304, 87435, 14645, 11, 5398, 287, 449, 279, 8244, 7057, 315, 1317, 9860, 11376, 323, 19092, 5326, 80671, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80290f70>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291000>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291090>, 'json_data': {'input': [[18902, 79483, 25, 578, 20547, 539, 4001, 15055, 315, 19310, 32905, 24198, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 12399, 315, 279, 20547, 539, 4001, 15055, 315, 19310, 32905, 24198, 13, 1102, 17482, 439, 264, 71261, 311, 11944, 6020, 828, 9002, 279, 43645, 11, 10109, 1113, 433, 2949, 264, 6020, 6492, 3857, 430, 8720, 288, 279, 2883, 596, 1005, 315, 43645, 927, 279, 5300, 4261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291120>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 11, 584, 1253, 3217, 45578, 7410, 389, 1057, 10565, 4850, 13239, 505, 264, 8205, 315, 9547, 11, 1778, 439, 459, 5376, 304, 279, 6651, 315, 4827, 46491, 3956, 323, 3600, 11, 304, 4040, 505, 279, 8738, 14800, 315, 1057, 2626, 1139, 502, 5151, 11, 2737, 3956, 323, 3600, 1778, 439, 1057, 7766, 11, 5195, 15161, 11, 323, 11761, 15493, 3956, 11, 439, 1664, 439, 5199, 22538, 304, 7089, 426, 1441, 11, 682, 315, 902, 1253, 617, 37682, 4827, 1109, 1884, 584, 7068, 505, 13172, 13, 763, 4040, 11, 37682, 389, 1057, 7766, 617, 1047, 11, 323, 1253, 3136, 311, 617, 11, 459, 31959, 2515, 389, 1057, 60391, 37682, 4245, 311, 40850, 389, 21913, 323, 5190, 2853, 315, 6763, 13, 1226, 1253, 1101, 3217, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 10565, 37682, 11, 25607, 4754, 40850, 505, 4827, 46491, 3956, 323, 7859, 25605, 7194, 13, 1102, 15151, 279, 11774, 315, 20958, 63336, 16662, 14800, 1139, 502, 2626, 5789, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802911b0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 1666, 3932, 304, 11469, 37671, 15098, 2586, 2930, 11, 1057, 30466, 505, 6625, 11987, 3136, 311, 5376, 11, 323, 1253, 1397, 8738, 22538, 13, 763, 5369, 11, 19567, 304, 7362, 9473, 7969, 7958, 1778, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 12939, 315, 6625, 11987, 304, 63897, 596, 13254, 8446, 11, 8104, 439, 810, 3932, 505, 11469, 37671, 2586, 2930, 13, 1102, 72890, 279, 32961, 369, 8738, 9341, 304, 1521, 13918, 323, 22020, 279, 5536, 315, 7362, 9473, 7969, 389, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291240>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 8976, 1534, 4272, 8895, 320, 9563, 8, 389, 25452, 34919, 6216, 2391, 279, 4261, 400, 220, 16, 11, 5162, 400, 320, 20502, 8, 400, 220, 21741, 81019, 1534, 4272, 8895, 320, 9563, 8, 389, 3157, 481, 25452, 34919, 220, 16, 11, 16596, 320, 18, 11, 12754, 8, 220, 22876, 81019, 1534, 4272, 8895, 320, 9563, 8, 389, 2536, 30004, 36164, 25452, 34919, 7, 16, 8, 220, 24, 11, 26537, 220, 14378, 320, 16, 11, 25620, 8, 10884, 8895, 320, 9563, 8, 389, 25452, 34919, 304, 1023, 8070, 320, 59857, 705, 4272, 400, 220, 717, 11, 13897, 400, 320, 18, 11, 20325, 8, 400, 220, 19695, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18808, 1523, 279, 15393, 323, 50204, 1534, 20192, 323, 18151, 389, 25452, 34919, 369, 279, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 8405, 3230, 12678, 369, 1855, 5699, 13, 1115, 11944, 6020, 2038, 374, 7718, 369, 8830, 279, 2883, 753, 9341, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802912d0>, 'json_data': {'input': [[18902, 79483, 25, 578, 3331, 2956, 19721, 48338, 323, 279, 3723, 15422, 3331, 2956, 19721, 49357, 11, 902, 3881, 311, 682, 315, 1057, 7640, 13375, 505, 459, 21967, 304, 279, 10013, 477, 279, 3723, 15422, 11, 15947, 11, 477, 5552, 311, 3956, 323, 3600, 430, 584, 3085, 311, 10013, 477, 279, 3723, 15422, 3932, 477, 6444, 11, 15947, 11, 477, 279, 16967, 315, 872, 7865, 304, 279, 10013, 477, 279, 6560, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 279, 41961, 315, 279, 3331, 2956, 19721, 48338, 320, 41949, 6616, 8, 323, 279, 6560, 92048, 311, 63897, 596, 7677, 11, 45293, 279, 46139, 7036, 323, 25127, 369, 828, 11850, 5552, 311, 10013, 323, 6560, 6444, 13, 1102, 66251, 4861, 279, 3766, 20954, 2949, 279, 12914, 315, 3230, 27743, 8670, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291360>, 'json_data': {'input': [[18902, 79483, 25, 7436, 1666, 584, 3136, 311, 8854, 1057, 3932, 323, 9407, 1057, 9873, 11, 584, 690, 2793, 17345, 304, 10565, 323, 6864, 53869, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 459, 14529, 15507, 311, 5199, 22538, 304, 25605, 323, 6864, 53869, 11, 902, 374, 3062, 369, 8830, 279, 2883, 753, 6650, 8446, 323, 5211, 24691, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802913f0>, 'json_data': {'input': [[18902, 79483, 25, 220, 2366, 19, 400, 220, 16, 11, 15531, 220, 2366, 20, 220, 16, 11, 9892, 220, 2366, 21, 220, 17, 11, 10680, 220, 2366, 22, 220, 16, 11, 10290, 220, 2366, 23, 220, 9413, 2684, 10924, 220, 23, 11, 16415, 10884, 400, 220, 975, 11, 24071, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 3230, 31085, 315, 279, 3938, 12717, 14507, 4245, 369, 1855, 315, 279, 1828, 4330, 1667, 323, 46095, 13, 1115, 11944, 9899, 52797, 304, 38663, 279, 2883, 753, 53113, 323, 5845, 311, 3449, 1202, 11897, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291480>, 'json_data': {'input': [[18902, 79483, 25, 323, 9580, 220, 17, 304, 279, 6762, 907, 30022, 11, 1606, 584, 1005, 24116, 7729, 369, 20086, 12032, 304, 4642, 11987, 477, 11374, 430, 527, 3196, 5304, 24116, 7729, 369, 4528, 24198, 304, 4642, 11987, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 6762, 907, 19179, 11, 11951, 9002, 9580, 220, 17, 96771, 11, 902, 527, 3196, 389, 3157, 11374, 369, 4528, 12032, 13, 1115, 2317, 374, 7718, 369, 8830, 279, 51262, 1920, 323, 279, 5938, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291510>, 'json_data': {'input': [[18902, 79483, 25, 9393, 584, 6929, 2626, 304, 36702, 1023, 1109, 549, 815, 13, 11441, 719, 1934, 1057, 6020, 3135, 304, 549, 815, 13, 11441, 11, 584, 617, 17011, 11, 323, 690, 3136, 311, 3663, 11, 14675, 311, 65649, 304, 7362, 11667, 9473, 7969, 13, 10541, 584, 42766, 264, 13651, 315, 1057, 6625, 11667, 14675, 11, 5199, 65649, 304, 9473, 7969, 1990, 279, 549, 815, 13, 18160, 323, 7362, 36702, 617, 304, 279, 3347, 323, 1253, 304, 279, 3938, 69214, 7958, 1057, 30466, 323, 24608, 13, 75263, 3252, 7620, 527, 1101, 49188, 41273, 323, 1436, 29241, 603, 311, 5217, 15635, 430, 1436, 11682, 1057, 6020, 3044, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 1624, 2396, 1139, 279, 6020, 15635, 5938, 449, 11667, 65649, 11, 26073, 1268, 31474, 2626, 304, 5361, 36702, 22223, 13254, 13122, 13, 1102, 22020, 279, 4754, 8389, 25949, 315, 9473, 4478, 53838, 389, 279, 2883, 596, 6020, 3044, 323, 25605, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802915a0>, 'json_data': {'input': [[18902, 79483, 25, 2314, 8630, 555, 1817, 1906, 422, 279, 23702, 519, 374, 264, 1664, 22015, 52614, 55935, 11, 439, 4613, 304, 18592, 220, 16408, 315, 279, 46272, 3298, 13, 7566, 26182, 240, 2360, 26182, 238, 2314, 8630, 555, 1817, 1906, 422, 279, 23702, 519, 374, 539, 2631, 311, 1052, 6821, 33549, 311, 11360, 220, 1032, 477, 11360, 220, 868, 1528, 8, 315, 279, 3298, 13, 7566, 26182, 238, 2360, 26182, 240, 2314, 8630, 555, 1817, 1906, 3508, 279, 23702, 519, 320, 16, 8, 706, 13019, 682, 6821, 2631, 311, 387, 13019, 555, 11360, 220, 1032, 477, 220, 868, 1528, 8, 315, 279, 46272, 19224, 3298, 315, 220, 7285, 19, 2391, 279, 38846, 220, 717, 4038, 320, 269, 369, 1778, 24210, 4261, 430, 279, 23702, 519, 574, 2631, 311, 1052, 1778, 6821, 705, 323, 320, 17, 8, 706, 1027, 3917, 311, 1778, 26559, 8670, 369, 279, 3347, 220, 1954, 2919, 13, 7566, 26182, 240, 2360, 26182, 238, 2314, 8630, 555, 1817, 1906, 3508, 279, 23702, 519, 706, 14976, 71870, 1475, 42966, 2956, 2958, 2631, 311, 387, 14976, 33549, 311, 18592, 220, 16408, 315, 48338, 328, 9469, 320, 18332, 12338, 13, 16408, 315, 420, 12735, 8, 2391, 279, 38846, 220, 717, 4038, 320, 269, 369, 1778, 24210, 4261, 430, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 5361, 91492, 5552, 311, 279, 23702, 519, 596, 2704, 323, 8907, 1234, 279, 46272, 19224, 3298, 11, 2737, 3508, 63897, 374, 264, 1664, 22015, 52614, 55935, 323, 706, 2322, 26559, 8670, 13, 1115, 3857, 374, 7718, 369, 23331, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291630>, 'json_data': {'input': [[18902, 79483, 25, 578, 1317, 9860, 13651, 315, 3157, 481, 25452, 34919, 320, 11760, 311, 1317, 9860, 5409, 5352, 17294, 8, 315, 400, 20899, 3610, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 374, 5343, 2949, 1023, 2536, 45275, 12032, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 2038, 922, 279, 1317, 9860, 13651, 315, 3157, 481, 25452, 34919, 5762, 555, 63897, 4953, 13, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 13, 1102, 15151, 430, 1521, 34919, 527, 3917, 311, 1317, 9860, 5409, 5352, 17294, 323, 527, 21771, 1234, 2536, 45275, 12032, 11, 29820, 311, 279, 8830, 315, 63897, 596, 9341, 8446, 323, 9513, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802916c0>, 'json_data': {'input': [[18902, 79483, 25, 17961, 18591, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 17961, 18591, 11, 6376, 279, 6566, 369, 11944, 6020, 5178, 17150, 323, 6492, 369, 63897, 4953, 2637, 2737, 30466, 11, 7194, 11, 323, 1023, 6020, 34824, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291750>, 'json_data': {'input': [[18902, 79483, 25, 5751, 22538, 304, 3157, 481, 25452, 34919, 527, 17303, 520, 6762, 907, 449, 279, 5552, 20192, 323, 18151, 11, 2737, 50204, 1534, 11, 15324, 304, 507, 40, 69248, 13, 1226, 49229, 1057, 3157, 481, 25452, 34919, 3917, 311, 1317, 9860, 5409, 5352, 17294, 7953, 220, 717, 4038, 439, 1023, 2536, 45275, 12032, 389, 279, 79980, 660, 31946, 61572, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 6514, 315, 3157, 481, 25452, 34919, 11, 26073, 1268, 814, 527, 17303, 520, 6762, 907, 323, 279, 5536, 315, 50204, 1534, 20192, 323, 18151, 389, 279, 6020, 12518, 13, 1102, 374, 9959, 369, 8830, 279, 2883, 596, 25452, 22538, 323, 872, 19035, 311, 8244, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802917e0>, 'json_data': {'input': [[18902, 79483, 25, 9176, 5220, 636, 10882, 3815, 1148, 814, 617, 2744, 2884, 11, 3339, 1193, 53399, 4442, 13, 1115, 53399, 2191, 11767, 311, 25912, 33194, 927, 892, 11, 5423, 304, 5557, 11, 1405, 2349, 28335, 311, 387, 30191, 11, 539, 41993, 13, 9029, 3463, 584, 1051, 14599, 994, 584, 19426, 13674, 323, 8682, 323, 994, 584, 11887, 17669, 11, 719, 1884, 9045, 617, 15196, 67, 1139, 3682, 15771, 369, 7528, 2835, 323, 6505, 7766, 323, 264, 30549, 11, 5526, 7074, 13, 5751, 4216, 22538, 304, 15592, 3940, 704, 439, 18266, 28734, 719, 527, 1457, 32762, 1139, 1057, 6332, 3956, 323, 8792, 311, 3938, 26006, 13, 1226, 3136, 311, 1427, 9017, 279, 3938, 323, 311, 2793, 369, 279, 1317, 4751, 11, 1455, 35146, 369, 279, 3851, 315, 15592, 311, 1057, 3956, 323, 3600, 11, 439, 1664, 439, 1023, 49100, 14645, 1778, 439, 31228, 25213, 13, 1666, 584, 1071, 304, 279, 4113, 48727, 6, 6661, 11, 584, 690, 539, 33394, 3201, 505, 1579, 46570, 11, 1579, 5621, 1637, 7224, 430, 584, 4510, 304, 11, 439, 814, 527, 279, 1401, 311, 1057, 1317, 9860, 2450, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 4623, 315, 18266, 28734, 11, 82003, 63897, 596, 13970, 39375, 311, 23564, 14265, 28271, 430, 1253, 2873, 73978, 13, 1102, 27053, 389, 3347, 48188, 323, 312, 2058, 988, 279, 2883, 596, 15507, 311, 19297, 323, 30116, 50925, 11, 27442, 2949, 279, 8294, 19775, 315, 279, 2883, 596, 6650, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291870>, 'json_data': {'input': [[18902, 79483, 25, 279, 6650, 315, 1057, 2626, 323, 30466, 323, 1057, 17078, 922, 279, 9547, 430, 10383, 1057, 2450, 323, 18845, 304, 1057, 2626, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 50729, 832, 315, 279, 3230, 4741, 31348, 17078, 315, 63897, 4953, 2637, 21760, 389, 2626, 6650, 323, 13254, 18845, 13, 1102, 66159, 279, 2883, 596, 36721, 389, 9547, 430, 2643, 10383, 1202, 2450, 11, 6376, 279, 6566, 369, 6020, 51165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291900>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 20, 11, 420, 12143, 17482, 439, 264, 4342, 11, 312, 2058, 1113, 279, 2246, 596, 9764, 323, 41961, 311, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291990>, 'json_data': {'input': [[18902, 79483, 25, 9386, 1392, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 279, 1207, 22327, 389, 42356, 11, 39686, 279, 2883, 753, 3938, 8521, 477, 8187, 19883, 42356, 13, 1102, 374, 264, 71261, 311, 810, 3230, 3649, 922, 279, 7138, 323, 7036, 315, 1521, 42356, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291a20>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 264, 2007, 315, 8970, 11, 23377, 430, 279, 2246, 374, 17057, 1139, 14491, 11, 3339, 433, 8831, 369, 13016, 311, 25539, 3230, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291ab0>, 'json_data': {'input': [[18902, 79483, 25, 6969, 71894, 2006, 3651, 12244, 1929, 793, 16837, 50, 4874, 63458, 38225, 6328, 63458, 1753, 3651, 25338, 27267, 6340, 12244, 34, 38658, 4622, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 28118, 330, 11569, 304, 323, 4185, 351, 58875, 449, 8785, 1821, 389, 45344, 323, 17961, 78354, 1210, 1115, 3857, 374, 9959, 369, 15167, 323, 39210, 439, 433, 35434, 904, 5199, 4819, 23926, 449, 24043, 12659, 477, 9434, 6264, 12170, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291b40>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1101, 617, 6264, 1639, 11, 304, 18859, 449, 279, 10886, 315, 279, 3142, 8351, 45344, 90951, 8925, 320, 23175, 4273, 8, 320, 4977, 19268, 33, 705, 279, 8351, 596, 5419, 2585, 927, 6020, 13122, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 3196, 389, 13186, 9749, 304, 15774, 7935, 2345, 83537, 24686, 11136, 555, 279, 10554, 315, 328, 2805, 5620, 67792, 315, 279, 350, 888, 3195, 9849, 320, 679, 18, 12914, 705, 323, 1057, 1934, 30105, 6186, 220, 966, 11, 220, 2366, 19, 13605, 459, 653, 37435, 9647, 1070, 263, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 25261, 315, 5419, 11835, 927, 6020, 13122, 11, 19392, 430, 279, 6264, 12170, 1101, 26126, 279, 2883, 596, 8907, 449, 3230, 49125, 323, 10886, 11, 8405, 44701, 922, 279, 27375, 315, 1521, 11835, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291bd0>, 'json_data': {'input': [[18902, 79483, 25, 35907, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 42144, 1, 3857, 315, 5858, 220, 16, 11, 6376, 279, 6566, 369, 264, 11944, 24481, 315, 63897, 4953, 3238, 82, 2626, 1646, 11, 19675, 11, 323, 19092, 5216, 11, 8104, 82003, 1202, 15507, 311, 19297, 323, 10737, 2968, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291c60>, 'json_data': {'input': [[18902, 79483, 25, 220, 3391, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 264, 961, 315, 279, 2246, 596, 37666, 11, 2085, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291cf0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 14969, 3136, 311, 2680, 1057, 3956, 323, 3600, 1701, 17226, 7766, 323, 13531, 1385, 11, 902, 6276, 369, 502, 13172, 20447, 430, 1253, 8935, 1057, 30466, 719, 69214, 7958, 1057, 37682, 627, 2014, 940, 1534, 73094, 25, 1115, 1486, 35434, 279, 17226, 5627, 3932, 2680, 63897, 596, 3600, 323, 279, 25127, 369, 13172, 15174, 11, 19392, 2225, 10708, 369, 13254, 6650, 323, 4754, 11774, 311, 11626, 37682, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291d80>, 'json_data': {'input': [[18902, 79483, 25, 578, 4876, 3770, 9248, 63897, 4953, 13, 3308, 362, 596, 40944, 4330, 4771, 2860, 5708, 4346, 471, 389, 4279, 5708, 449, 279, 40944, 2860, 4780, 315, 279, 328, 43945, 220, 2636, 1963, 11, 279, 16473, 63981, 41739, 1963, 11, 323, 279, 39092, 38, 8191, 41739, 1963, 13, 578, 4876, 14242, 279, 5178, 315, 264, 400, 1041, 9341, 304, 1057, 4279, 5708, 323, 304, 1855, 1963, 320, 4291, 279, 15601, 94539, 315, 682, 56364, 8, 505, 6790, 220, 2148, 11, 220, 679, 23, 11, 311, 6790, 220, 2148, 11, 220, 2366, 18, 13, 578, 4780, 6982, 527, 3196, 389, 13970, 3135, 323, 527, 539, 10825, 311, 4284, 3938, 5178, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 4876, 27393, 63897, 4953, 3238, 82, 3308, 362, 5708, 5178, 449, 3682, 3157, 15285, 927, 264, 4330, 4771, 4261, 13, 1102, 50729, 279, 2317, 369, 279, 4876, 11, 82003, 279, 12939, 315, 8830, 1268, 63897, 596, 5708, 706, 10887, 304, 12976, 311, 1023, 63119, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291e10>, 'json_data': {'input': [[18902, 79483, 25, 578, 20547, 15055, 315, 32905, 24198, 3917, 311, 7491, 4272, 1303, 28904, 449, 5370, 45116, 552, 11, 323, 8515, 323, 2536, 1824, 1003, 52508, 4036, 323, 43347, 1234, 1778, 20038, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 4461, 40019, 264, 2007, 477, 12399, 315, 279, 20547, 15055, 315, 32905, 24198, 430, 527, 3917, 311, 7491, 4272, 1303, 28904, 13, 1102, 15151, 264, 11944, 24481, 315, 279, 2883, 753, 32905, 10093, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291ea0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 12793, 9959, 11835, 927, 279, 11054, 15635, 5938, 449, 6373, 753, 24043, 369, 323, 28957, 315, 1521, 13146, 13, 1115, 5343, 11835, 927, 6373, 753, 15813, 315, 279, 19463, 315, 3709, 21201, 315, 264, 4814, 323, 3508, 279, 4814, 477, 2134, 315, 4814, 574, 29546, 15279, 481, 323, 279, 4500, 315, 5552, 75992, 627, 2014, 940, 1534, 73094, 25, 763, 420, 12143, 11, 279, 6264, 12170, 7664, 279, 11835, 12793, 2391, 279, 25261, 5552, 311, 279, 15813, 315, 4814, 39639, 6072, 11, 19392, 279, 17879, 2136, 315, 872, 3477, 1920, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291f30>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 2440, 369, 279, 330, 2620, 315, 36962, 1359, 19392, 279, 7471, 315, 279, 2246, 323, 279, 14491, 5343, 369, 10873, 10096, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80291fc0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 15871, 29166, 5226, 17032, 369, 279, 14956, 315, 1057, 16692, 1511, 304, 1057, 11156, 14054, 323, 7766, 584, 4662, 13, 1226, 617, 20038, 1405, 584, 1253, 7782, 6956, 6089, 505, 20972, 323, 1243, 8312, 1521, 6956, 311, 5226, 17032, 369, 1005, 304, 279, 14956, 315, 279, 16692, 323, 7766, 13, 35211, 315, 1521, 28904, 1121, 304, 264, 13651, 315, 279, 8515, 4036, 505, 323, 7318, 311, 279, 5226, 17032, 311, 387, 10666, 439, 29642, 7640, 304, 279, 79980, 660, 70816, 315, 23139, 3061, 4336, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 63897, 4953, 3238, 82, 54180, 389, 5226, 17032, 369, 81759, 16692, 323, 7766, 11, 902, 374, 16996, 369, 8830, 279, 2883, 596, 8312, 8957, 323, 25605, 8446, 13, 1102, 34945, 20038, 449, 20972, 323, 1268, 1521, 28904, 5536, 29642, 7640, 11, 8405, 26793, 1139, 279, 2883, 596, 5788, 323, 2853, 6373, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292050>, 'json_data': {'input': [[18902, 79483, 25, 26517, 287, 7946, 14117, 17345, 389, 1057, 5845, 311, 2274, 323, 16822, 18699, 3956, 323, 14645, 311, 279, 30633, 4028, 1057, 9873, 13, 1789, 3187, 11, 369, 13172, 11, 27260, 7946, 14117, 389, 51647, 323, 51110, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 12939, 315, 19297, 323, 2027, 8141, 304, 20958, 264, 15022, 6964, 13, 1102, 7437, 279, 6566, 369, 26073, 279, 9547, 9200, 369, 2450, 304, 13172, 11, 902, 374, 264, 5199, 13254, 4365, 369, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802920e0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 47423, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 330, 14783, 47423, 1, 439, 264, 3230, 13254, 5699, 13, 1102, 13533, 430, 279, 17876, 14491, 690, 7872, 279, 6956, 323, 5178, 315, 420, 1401, 13254, 4365, 11, 902, 374, 9200, 311, 8830, 279, 2883, 596, 6020, 30295, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292170>, 'json_data': {'input': [[18902, 79483, 25, 6652, 11, 423, 732, 13, 220, 10866, 2491, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 279, 3813, 315, 279, 22370, 5274, 11, 6652, 11, 423, 732, 13, 220, 10866, 2491, 11, 902, 374, 9959, 369, 5897, 323, 23331, 10096, 11, 19392, 1405, 279, 2246, 374, 13019, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292200>, 'json_data': {'input': [[18902, 79483, 25, 1666, 8767, 36489, 11, 5195, 15620, 11, 264, 41164, 315, 63897, 11, 13019, 22736, 449, 279, 8690, 12411, 8398, 5475, 33549, 311, 8690, 26542, 2585, 8670, 11, 902, 2011, 387, 84864, 449, 4972, 311, 279, 1179, 315, 9960, 3673, 13, 578, 2038, 3984, 33549, 311, 11360, 220, 1032, 2666, 8, 315, 279, 19224, 3298, 304, 3744, 8105, 11, 5858, 220, 20, 315, 1057, 75483, 8423, 389, 3459, 220, 605, 29342, 369, 279, 8502, 9670, 6250, 220, 966, 11, 220, 2366, 18, 374, 32762, 36881, 555, 5905, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 961, 315, 279, 6771, 315, 36962, 11, 902, 8779, 13016, 21546, 279, 2246, 13, 1102, 17482, 439, 264, 69917, 369, 9455, 3230, 14491, 2949, 279, 9974, 1934, 11, 47594, 2246, 76160, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292290>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1005, 7362, 11667, 4741, 323, 3072, 17517, 311, 4445, 279, 7362, 9473, 5326, 389, 12032, 323, 58165, 3453, 50615, 304, 36702, 1023, 1109, 279, 16003, 11667, 315, 279, 41164, 13, 4314, 4741, 323, 3072, 17517, 8108, 11, 719, 656, 539, 11622, 22472, 11, 279, 2515, 315, 7362, 11667, 9473, 4478, 19567, 389, 1057, 12032, 323, 58165, 13, 578, 7362, 11667, 20192, 323, 18151, 389, 1521, 12032, 323, 58165, 527, 12715, 304, 507, 40, 69248, 11, 902, 527, 4445, 555, 279, 20192, 323, 18151, 389, 279, 4741, 323, 3072, 17517, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 24717, 1511, 311, 50460, 7362, 11667, 9473, 5326, 11, 11951, 1555, 279, 1005, 315, 4741, 323, 3072, 17517, 11, 323, 15100, 1268, 1521, 61316, 3252, 15174, 527, 41853, 369, 304, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292320>, 'json_data': {'input': [[18902, 79483, 25, 76615, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 7434, 315, 27334, 30466, 11, 902, 374, 459, 3062, 24043, 17966, 5552, 311, 13254, 18324, 304, 6020, 12518, 13, 1102, 7437, 279, 6566, 369, 8830, 1268, 63897, 4953, 13, 45799, 8515, 4036, 4972, 311, 24944, 11822, 477, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802923b0>, 'json_data': {'input': [[18902, 79483, 25, 4442, 304, 21913, 11, 1778, 439, 1884, 13239, 505, 4442, 304, 11307, 14726, 11, 32162, 11, 323, 6130, 36580, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 330, 19926, 304, 21913, 1, 439, 264, 8331, 28987, 13254, 13, 1102, 22020, 1268, 21913, 15174, 11, 2737, 11307, 6070, 34074, 323, 6130, 36580, 11, 649, 10383, 6020, 5178, 11, 42852, 279, 2883, 596, 1205, 311, 7293, 15022, 304, 1202, 21913, 5603, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292440>, 'json_data': {'input': [[18902, 79483, 25, 1226, 8720, 279, 2944, 370, 77319, 315, 279, 5505, 6439, 315, 1057, 3424, 323, 7241, 48582, 439, 1664, 439, 994, 1023, 4442, 12446, 11, 1778, 439, 994, 1070, 527, 4442, 311, 14529, 2626, 7677, 11, 4442, 304, 279, 13205, 1005, 323, 50549, 315, 12032, 11, 477, 30116, 83787, 11, 430, 1436, 13519, 264, 2349, 304, 279, 4261, 927, 902, 584, 1755, 311, 8935, 505, 279, 12032, 627, 2014, 940, 1534, 73094, 25, 1115, 14646, 3649, 279, 2883, 596, 16865, 1920, 369, 26679, 279, 5505, 6439, 315, 3424, 323, 7241, 13, 1102, 66159, 279, 12939, 315, 5912, 41300, 323, 872, 5536, 389, 6020, 12518, 11, 10695, 13016, 3619, 1268, 94189, 374, 12715, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802924d0>, 'json_data': {'input': [[18902, 79483, 25, 59316, 685, 323, 25368, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 400, 220, 15, 79069, 7, 16, 8, 220, 16, 11, 20744, 23139, 14507, 320, 16, 11, 24847, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 7, 17, 8, 400, 220, 2813, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 2759, 315, 279, 4442, 304, 3285, 685, 58165, 927, 279, 1060, 11, 9204, 279, 6041, 8335, 11, 10405, 52872, 11, 8515, 14507, 1903, 11, 323, 279, 13696, 8335, 13, 1102, 10484, 9803, 279, 6020, 5536, 315, 32027, 47311, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292560>, 'json_data': {'input': [[18902, 79483, 25, 7327, 30466, 11, 902, 4097, 264, 5199, 13651, 315, 1057, 30466, 11, 527, 8965, 1380, 22955, 304, 5361, 36702, 323, 9093, 527, 11754, 555, 65649, 304, 7362, 11667, 9473, 7969, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 26431, 315, 6625, 30466, 323, 872, 14675, 311, 11667, 65649, 13, 1102, 7437, 279, 2317, 369, 8830, 279, 11774, 323, 38864, 304, 42118, 63897, 4953, 3238, 82, 6020, 3135, 11, 8104, 369, 3728, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802925f0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 8471, 30466, 6824, 315, 5195, 13172, 439, 1664, 439, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 1148, 42675, 5195, 8471, 30466, 11, 312, 2058, 1113, 430, 433, 5764, 2225, 13172, 323, 15493, 28394, 69465, 30466, 13, 1115, 95593, 279, 12939, 315, 1521, 13254, 23914, 304, 63897, 596, 8244, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292680>, 'json_data': {'input': [[18902, 79483, 25, 578, 2038, 2631, 555, 420, 1537, 690, 387, 5343, 1234, 279, 78888, 1054, 38294, 70396, 2476, 1054, 73718, 70396, 863, 323, 1054, 16411, 1105, 11, 18362, 49947, 11, 323, 36565, 81689, 2345, 87628, 81689, 323, 8925, 58364, 2345, 13864, 42725, 10554, 5783, 36036, 323, 46099, 64503, 863, 304, 279, 220, 2366, 19, 33878, 22504, 323, 374, 32762, 36881, 555, 5905, 11, 3734, 439, 311, 2038, 36489, 58179, 33549, 311, 5858, 220, 16496, 3832, 8, 315, 48338, 328, 16222, 23343, 311, 2343, 19579, 5178, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 430, 11944, 2038, 9002, 11145, 20448, 690, 387, 1766, 304, 279, 14827, 220, 2366, 19, 33878, 22504, 13, 1102, 22020, 279, 5357, 389, 7690, 20448, 323, 5552, 35186, 13146, 11, 1418, 1101, 19392, 430, 3738, 23331, 75992, 922, 2343, 19579, 5178, 690, 387, 5343, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292710>, 'json_data': {'input': [[18902, 79483, 25, 1666, 1057, 2626, 93054, 11, 584, 48582, 3477, 11, 46464, 11, 323, 2713, 1057, 81898, 369, 16967, 11, 23738, 11, 323, 26060, 279, 1396, 315, 7318, 28849, 323, 279, 1396, 315, 51091, 11, 323, 369, 25607, 279, 30466, 8066, 555, 279, 12435, 4299, 323, 21455, 5820, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 42028, 81898, 1511, 555, 5195, 311, 3839, 323, 1934, 389, 58191, 2065, 17150, 11, 19392, 279, 2883, 596, 15507, 311, 35611, 74285, 1202, 11618, 13, 1102, 13533, 430, 279, 828, 10666, 304, 6931, 27855, 1253, 387, 3917, 311, 9013, 323, 18637, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802927a0>, 'json_data': {'input': [[18902, 79483, 25, 11443, 315, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 7314, 315, 264, 10968, 10430, 389, 330, 15289, 315, 1050, 46469, 1359, 19392, 264, 3230, 3158, 315, 6020, 6492, 5552, 311, 279, 7194, 52872, 311, 7068, 13254, 11, 902, 374, 9200, 369, 8830, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292830>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 81019, 1534, 8895, 320, 9563, 8, 389, 6762, 907, 3072, 11897, 34919, 400, 320, 8259, 8, 400, 320, 23906, 8, 400, 220, 16481, 43907, 15393, 8895, 389, 11897, 34919, 220, 16739, 220, 6889, 220, 10828, 43907, 15393, 4814, 389, 11897, 34919, 320, 18196, 8, 320, 16, 11, 20691, 8, 320, 16, 11, 22904, 8, 320, 70656, 8, 18979, 304, 41458, 369, 6807, 18151, 320, 5925, 8, 320, 1313, 8, 220, 1135, 10884, 8895, 320, 9563, 8, 389, 11897, 34919, 15324, 304, 1023, 8070, 320, 59857, 705, 4272, 400, 320, 5120, 8, 400, 320, 17, 11, 20478, 8, 400, 320, 16, 11, 12112, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 50204, 1534, 323, 15393, 20192, 323, 18151, 389, 11897, 34919, 927, 2380, 1667, 320, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 570, 1102, 374, 961, 315, 264, 11944, 6020, 6492, 2949, 279, 2246, 11, 8405, 20616, 1139, 279, 5178, 315, 11897, 34919, 323, 872, 5536, 389, 1023, 8070, 323, 18512, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802928c0>, 'json_data': {'input': [[18902, 79483, 25, 320, 17, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 11741, 18133, 2449, 477, 264, 6002, 304, 279, 2246, 323, 1587, 539, 3493, 23222, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292950>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 459, 33243, 4441, 323, 1587, 539, 3493, 92178, 2038, 2085, 5217, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802929e0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 904, 1495, 11, 20958, 279, 2246, 596, 24693, 17025, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292a70>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 43907, 26868, 82, 2876, 17286, 304, 279, 79980, 660, 31946, 61572, 11, 719, 12522, 25705, 10734, 311, 17286, 43907, 9558, 26868, 82, 26868, 82, 88121, 304, 23139, 323, 17286, 304, 279, 279, 11842, 7813, 1003, 43907, 79980, 660, 79980, 660, 13201, 19715, 26868, 82, 67975, 1534, 31946, 61572, 31946, 61572, 17961, 58513, 7, 16, 8, 39517, 477, 393, 93724, 9558, 26868, 82, 13031, 344, 5983, 12032, 400, 220, 19104, 400, 320, 5833, 8, 400, 220, 24187, 400, 320, 21290, 8, 400, 320, 9413, 8, 400, 220, 5932, 13031, 344, 5983, 58165, 400, 220, 26227, 400, 320, 5833, 8, 400, 220, 19232, 400, 320, 21290, 8, 400, 320, 1591, 8, 400, 220, 16874, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 18911, 3230, 6020, 828, 505, 6790, 220, 2148, 11, 220, 2366, 17, 11, 9002, 279, 20547, 15055, 315, 43645, 323, 872, 4272, 15055, 1306, 24043, 369, 36146, 13, 1102, 5825, 47616, 26793, 1139, 279, 2883, 753, 32905, 6020, 24198, 369, 430, 2457, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292b00>, 'json_data': {'input': [[18902, 79483, 25, 6909, 17244, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 72214, 279, 1212, 315, 3744, 17244, 315, 279, 2246, 11, 902, 6118, 5727, 5370, 80506, 2038, 11, 2737, 6020, 12518, 323, 11944, 75992, 2631, 555, 14640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292b90>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 264, 330, 2620, 315, 36962, 1359, 902, 374, 264, 24693, 2449, 315, 279, 2246, 430, 2942, 4861, 1202, 14491, 323, 5825, 459, 24131, 315, 279, 13650, 9960, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292c20>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1436, 387, 3917, 311, 4442, 304, 3827, 7969, 11, 279, 25375, 315, 502, 549, 815, 13, 477, 6625, 3827, 13543, 11, 477, 14675, 311, 5217, 3827, 58165, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 2883, 596, 14675, 311, 3827, 14228, 15635, 11, 2737, 4442, 304, 3827, 13543, 323, 7969, 13, 1102, 17482, 439, 459, 17219, 311, 264, 10430, 389, 6020, 14640, 323, 872, 4754, 5536, 389, 279, 2883, 596, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292cb0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 2262, 28506, 20038, 449, 3938, 8521, 477, 8187, 19883, 42356, 315, 400, 605, 13, 21, 7239, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 315, 902, 279, 8857, 374, 7318, 927, 8254, 1667, 13696, 304, 279, 1176, 8502, 315, 220, 9639, 15, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 2038, 922, 279, 2883, 596, 2262, 28506, 20038, 11, 10484, 7922, 279, 2860, 42356, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 66159, 279, 6020, 30255, 430, 690, 387, 9041, 927, 279, 1828, 3892, 1667, 11, 902, 374, 16996, 369, 47614, 3938, 8515, 28555, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292d40>, 'json_data': {'input': [[18902, 79483, 25, 763, 220, 2366, 17, 11, 1070, 574, 459, 5376, 304, 279, 549, 815, 13, 19620, 68949, 1357, 61186, 33620, 3827, 39943, 505, 279, 6372, 315, 6864, 2065, 323, 93364, 2065, 315, 432, 33465, 18512, 6041, 304, 220, 2366, 17, 439, 2631, 555, 279, 220, 679, 22, 15545, 356, 6256, 323, 23946, 3298, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 4442, 5552, 311, 279, 549, 815, 13, 19620, 68949, 1357, 61186, 33620, 3827, 39943, 4245, 311, 3827, 2383, 4442, 13, 1102, 66251, 4861, 279, 42028, 3827, 4676, 323, 1202, 41961, 311, 279, 2883, 596, 6020, 9293, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292dd0>, 'json_data': {'input': [[18902, 79483, 25, 65184, 33025, 11, 21579, 11, 18134, 1968, 11, 323, 5761, 1968, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 264, 3857, 20034, 520, 18899, 5370, 13878, 315, 2324, 11, 2737, 6677, 11, 6975, 11, 28697, 11, 323, 26206, 1555, 15592, 18052, 13, 1102, 13533, 264, 45764, 10430, 389, 1268, 63897, 4953, 13, 6787, 311, 18885, 1217, 3217, 323, 15374, 449, 872, 3956, 11, 91115, 279, 8244, 7057, 315, 15592, 596, 24629, 8522, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292e60>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1005, 7362, 11667, 4741, 323, 3072, 17517, 311, 4445, 279, 7362, 9473, 5326, 389, 12032, 323, 58165, 3453, 50615, 304, 36702, 1023, 1109, 279, 16003, 11667, 315, 279, 41164, 13, 4314, 4741, 323, 3072, 17517, 8108, 11, 719, 656, 539, 11622, 22472, 11, 279, 2515, 315, 7362, 11667, 9473, 4478, 19567, 389, 1057, 12032, 323, 58165, 13, 578, 7362, 11667, 20192, 323, 18151, 389, 1521, 12032, 323, 58165, 527, 12715, 304, 507, 40, 69248, 11, 902, 527, 4445, 555, 279, 20192, 323, 18151, 389, 279, 4741, 323, 3072, 17517, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 24717, 1511, 311, 50460, 7362, 11667, 9473, 5326, 11, 11951, 1555, 279, 1005, 315, 4741, 323, 3072, 17517, 11, 323, 15100, 1268, 1521, 61316, 3252, 15174, 527, 41853, 369, 304, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292ef0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 904, 1495, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80292f80>, 'json_data': {'input': [[18902, 79483, 25, 23139, 23260, 473, 17327, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 14385, 439, 264, 4342, 369, 279, 23139, 23260, 473, 17327, 3857, 11, 19392, 264, 810, 11944, 10430, 389, 3230, 4595, 315, 61316, 3252, 15174, 1511, 555, 63897, 4953, 13, 311, 10299, 6020, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293010>, 'json_data': {'input': [[18902, 79483, 25, 10884, 58165, 323, 5708, 17075, 529, 25452, 198, 2014, 940, 1534, 73094, 25, 1115, 1584, 45537, 279, 58165, 3857, 389, 279, 8335, 11071, 323, 34692, 311, 63179, 2860, 58165, 323, 5708, 17075, 6, 25452, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802930a0>, 'json_data': {'input': [[18902, 79483, 25, 1561, 477, 10223, 7016, 323, 14640, 11, 477, 502, 58689, 477, 8522, 315, 6484, 7016, 323, 14640, 304, 264, 11827, 40240, 449, 1057, 12659, 11, 617, 19543, 304, 11, 323, 1253, 3136, 311, 1121, 304, 11, 2753, 5505, 3956, 323, 3600, 11, 29852, 2626, 12659, 11, 7347, 5845, 311, 23564, 3738, 2626, 4211, 477, 3085, 3738, 3956, 323, 3600, 11, 12190, 7194, 11, 323, 8431, 477, 9337, 24305, 13, 26379, 2997, 7016, 323, 14640, 9002, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 279, 5536, 315, 7016, 323, 14640, 11, 11951, 27401, 430, 4442, 649, 3063, 311, 25605, 11774, 13, 1102, 12018, 2548, 21738, 3230, 10507, 11, 91115, 279, 12939, 315, 8907, 304, 279, 2883, 753, 5326, 6373, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293130>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 16, 13, 22241, 315, 90462, 45344, 63348, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 7181, 220, 16, 315, 279, 8554, 311, 279, 60391, 6020, 12518, 11, 902, 35434, 279, 12399, 315, 5199, 24043, 10396, 13, 1102, 7437, 279, 6566, 369, 8830, 279, 24043, 12914, 9435, 304, 20646, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802931c0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 574, 264, 2883, 5918, 304, 279, 9624, 11, 323, 584, 3136, 311, 2793, 304, 1057, 5195, 15161, 33935, 11, 2737, 5195, 15161, 17916, 323, 5195, 72034, 11, 311, 1520, 11351, 4822, 520, 279, 52301, 315, 15592, 19297, 449, 1057, 15592, 12, 34440, 14054, 11, 15196, 15592, 5452, 323, 1917, 15144, 4211, 11, 323, 7945, 535, 13307, 627, 2014, 940, 1534, 73094, 25, 578, 5357, 1618, 374, 389, 5195, 596, 3925, 323, 14529, 22538, 304, 9624, 33935, 11, 82003, 279, 14054, 430, 11815, 15592, 19297, 13, 1115, 3857, 34161, 279, 12939, 315, 9624, 5557, 311, 63897, 596, 27927, 15592, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293250>, 'json_data': {'input': [[18902, 79483, 25, 11842, 5364, 847, 36164, 46272, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 459, 17219, 311, 279, 3857, 389, 11842, 5364, 847, 36164, 46272, 11, 19392, 430, 279, 2768, 2262, 690, 3493, 3649, 9002, 279, 24043, 6514, 315, 1521, 34919, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802932e0>, 'json_data': {'input': [[18902, 79483, 25, 19620, 29553, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 59732, 29553, 1, 3857, 11, 19392, 264, 5357, 389, 1268, 63897, 4953, 13, 29972, 7362, 11667, 14463, 323, 872, 5536, 389, 6020, 13122, 13, 1115, 374, 3062, 369, 39210, 8173, 304, 279, 2883, 596, 6625, 7677, 323, 11667, 5326, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293370>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 36233, 26120, 2853, 400, 220, 17, 11, 23459, 400, 220, 17, 11, 7467, 400, 220, 18, 11, 18509, 12689, 26120, 2853, 220, 24430, 220, 24250, 220, 16, 11, 10828, 10884, 10565, 26120, 2853, 400, 220, 18, 11, 17837, 400, 220, 18, 11, 25527, 400, 220, 19, 11, 21239, 198, 2014, 940, 1534, 73094, 25, 578, 828, 10666, 1618, 50729, 279, 10565, 26120, 7194, 52872, 555, 279, 2883, 927, 279, 2380, 1667, 13696, 6790, 220, 2148, 11, 220, 2366, 18, 11, 8405, 26793, 1139, 279, 2883, 753, 71419, 18512, 323, 18845, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293400>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 21, 11, 420, 12143, 17482, 439, 264, 37666, 11381, 430, 2942, 4861, 279, 2246, 596, 6070, 11, 4461, 19392, 279, 7314, 315, 264, 502, 3857, 477, 8712, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293490>, 'json_data': {'input': [[18902, 79483, 25, 7089, 33620, 320, 60789, 705, 9558, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 7089, 33620, 320, 60789, 705, 9558, 320, 80881, 69248, 705, 19392, 430, 279, 45764, 3649, 690, 3504, 5370, 8070, 323, 18512, 539, 6089, 17791, 311, 279, 6332, 7677, 315, 279, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293520>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 5905, 311, 279, 330, 2620, 315, 36962, 1, 315, 279, 2246, 11, 19392, 264, 34512, 1697, 3857, 430, 8779, 13016, 25539, 2204, 5596, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802935b0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5751, 16125, 315, 88465, 59538, 40944, 16043, 304, 279, 6355, 315, 28454, 13, 1115, 13693, 279, 5845, 315, 23413, 5708, 17075, 311, 4135, 7690, 11426, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 50967, 315, 40944, 16043, 304, 7690, 16374, 11, 94012, 264, 17383, 430, 649, 4726, 9067, 23413, 41777, 6, 5845, 311, 10383, 279, 8925, 11, 8617, 91115, 6373, 596, 2585, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293640>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 10321, 11, 323, 8617, 1587, 539, 3493, 904, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802936d0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 961, 315, 279, 6771, 315, 36962, 11, 8405, 264, 34030, 21782, 315, 279, 2246, 596, 14491, 13, 1102, 8779, 13016, 21546, 279, 1934, 323, 1505, 9959, 2038, 6288, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293760>, 'json_data': {'input': [[18902, 79483, 25, 220, 972, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4461, 2500, 24693, 2449, 477, 264, 42271, 315, 2262, 5552, 311, 14640, 28987, 279, 2883, 11, 719, 2085, 67749, 2038, 3984, 304, 420, 50565, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802937f0>, 'json_data': {'input': [[18902, 79483, 25, 35761, 48746, 34464, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 264, 9200, 25261, 5030, 430, 51063, 2391, 279, 25261, 11, 19392, 430, 433, 7612, 3361, 6666, 4245, 311, 1202, 23965, 323, 4754, 5536, 389, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293880>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 8471, 5764, 3956, 323, 3600, 1778, 439, 14058, 11, 8682, 11, 17669, 11, 7766, 11, 5195, 28508, 11, 5195, 7199, 11, 7694, 11, 323, 13674, 13, 5195, 8471, 27983, 30466, 15871, 505, 13172, 26, 12718, 4036, 369, 11761, 15493, 6108, 3956, 1778, 439, 13674, 6007, 11, 13674, 10948, 323, 26745, 11, 323, 12873, 7418, 29497, 26, 279, 6412, 315, 10721, 323, 304, 20624, 24393, 323, 7766, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 4096, 315, 279, 5195, 8471, 10449, 11, 15182, 279, 5370, 3956, 323, 3600, 433, 71010, 323, 82003, 1202, 6156, 13254, 8336, 11, 902, 527, 14090, 14592, 505, 13172, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293910>, 'json_data': {'input': [[18902, 79483, 25, 763, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 584, 2109, 73350, 400, 1135, 13, 18, 7239, 11, 400, 2946, 13, 18, 7239, 11, 323, 400, 5538, 13, 17, 7239, 11, 15947, 11, 315, 63897, 596, 3308, 362, 323, 3308, 356, 13551, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 12678, 389, 279, 4430, 2109, 75202, 1903, 555, 63897, 927, 279, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 94012, 279, 2883, 596, 15507, 311, 13758, 6864, 311, 41777, 13, 1102, 374, 961, 315, 279, 27927, 10430, 389, 25452, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e802939a0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 4384, 323, 1587, 539, 6782, 904, 2262, 369, 66251, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293a30>, 'json_data': {'input': [[18902, 79483, 25, 1252, 6387, 5303, 660, 12689, 25074, 53349, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3857, 4342, 369, 279, 10430, 389, 653, 6387, 5303, 660, 12689, 25074, 53349, 11, 19392, 279, 5357, 690, 6541, 311, 650, 5484, 82, 1405, 279, 2883, 1587, 539, 617, 26991, 2802, 13, 1102, 48542, 279, 6742, 369, 75055, 6514, 7863, 311, 60391, 15086, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293ac0>, 'json_data': {'input': [[18902, 79483, 25, 18880, 53869, 11, 902, 15871, 27000, 22538, 304, 11156, 14054, 11, 1051, 400, 843, 13, 18, 7239, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 6864, 53869, 369, 63897, 4953, 13, 304, 220, 2366, 18, 11, 11951, 39686, 279, 3392, 7543, 389, 11156, 14054, 13, 1102, 374, 4461, 961, 315, 264, 3857, 45293, 6020, 17150, 323, 22538, 11, 45296, 279, 2883, 596, 15507, 311, 20958, 323, 47035, 1202, 25605, 17357, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293b50>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 11, 63897, 4953, 2637, 23377, 430, 279, 2246, 374, 264, 1934, 5552, 311, 279, 2883, 596, 7677, 323, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293be0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1052, 8070, 3827, 4780, 304, 279, 549, 815, 13, 6918, 29101, 323, 304, 1690, 1614, 323, 7362, 56043, 13, 5751, 1403, 3682, 3827, 56043, 527, 279, 549, 815, 13, 6918, 323, 14990, 13, 1226, 527, 3917, 311, 279, 19815, 24481, 315, 1057, 8070, 3827, 4780, 555, 279, 34483, 323, 1023, 3827, 11527, 13, 578, 34483, 374, 5131, 38936, 1057, 220, 679, 21, 1555, 220, 2366, 16, 3827, 4780, 13, 1226, 617, 1101, 4036, 3827, 41300, 304, 5361, 7362, 56043, 43525, 8481, 21913, 34074, 477, 15690, 21967, 13, 1226, 3136, 311, 10726, 1778, 8349, 439, 10666, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 2883, 753, 3827, 26559, 12659, 323, 14529, 69570, 555, 3827, 11527, 11, 8104, 9002, 1202, 3682, 56043, 13, 1102, 15151, 279, 23965, 315, 279, 2883, 596, 3827, 6671, 323, 279, 4754, 369, 34074, 3196, 389, 3827, 11447, 41300, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293c70>, 'json_data': {'input': [[18902, 79483, 25, 80480, 84, 562, 311, 11, 32317, 449, 11, 477, 8060, 315, 1057, 6485, 2038, 5557, 323, 17320, 6067, 1436, 13194, 1057, 5845, 311, 13750, 3493, 1057, 3956, 323, 3600, 11, 902, 1436, 11682, 1057, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 29735, 5357, 311, 2038, 5557, 323, 17320, 6067, 11, 19392, 872, 9200, 3560, 304, 2532, 9889, 323, 25605, 20334, 13, 1102, 7437, 709, 264, 10430, 922, 279, 52227, 38088, 304, 1521, 6067, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293d00>, 'json_data': {'input': [[18902, 79483, 25, 45176, 3083, 2006, 96778, 1863, 53737, 1507, 32516, 63458, 1753, 435, 33532, 198, 2014, 940, 1534, 73094, 25, 1115, 14836, 1054, 79231, 3083, 2006, 96778, 1863, 53737, 1507, 32516, 63458, 1753, 435, 33532, 863, 40019, 279, 3857, 315, 279, 2246, 430, 18911, 279, 54406, 753, 9647, 323, 14955, 11, 19392, 430, 433, 5764, 459, 15813, 315, 279, 2883, 753, 6020, 13122, 323, 5419, 11835, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293d90>, 'json_data': {'input': [[18902, 79483, 25, 3402, 75202, 315, 3308, 362, 323, 3308, 356, 13551, 1051, 400, 5538, 13, 17, 7239, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1789, 5217, 2038, 11, 1518, 7181, 220, 806, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 34945, 279, 4430, 2109, 75202, 1903, 555, 279, 2883, 11, 902, 527, 3062, 369, 8830, 6864, 24691, 323, 63342, 907, 28271, 13, 1102, 27053, 279, 2883, 596, 8446, 311, 471, 907, 311, 41777, 323, 374, 9959, 304, 279, 2317, 315, 1202, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293e20>, 'json_data': {'input': [[18902, 79483, 25, 5403, 6603, 11, 323, 1701, 10721, 13, 22938, 449, 2262, 34899, 323, 8717, 11, 584, 3136, 311, 1977, 502, 5627, 369, 1274, 2212, 279, 1917, 311, 1893, 323, 1505, 2294, 7528, 2262, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 311, 37067, 389, 279, 4595, 315, 7528, 2262, 3932, 16988, 449, 11, 82003, 63897, 596, 3560, 304, 68365, 2680, 311, 5370, 7739, 315, 16924, 323, 2038, 13, 1102, 34161, 311, 279, 3766, 10430, 922, 18899, 7528, 2262, 18841, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293eb0>, 'json_data': {'input': [[18902, 79483, 25, 36899, 65649, 304, 7757, 10648, 323, 87386, 53869, 11, 16940, 2626, 18845, 1778, 439, 8776, 11040, 3280, 2786, 11, 902, 527, 4461, 311, 5353, 65649, 304, 1057, 51534, 3135, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 9547, 430, 1436, 3063, 311, 65649, 304, 63897, 596, 51534, 3135, 13, 1102, 374, 961, 315, 279, 4741, 31348, 12518, 323, 5326, 9547, 11, 82003, 1268, 36899, 18845, 304, 7757, 10648, 323, 13172, 649, 10383, 6020, 5178, 11, 8104, 2391, 8776, 11040, 15956, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e80293f40>, 'json_data': {'input': [[18902, 79483, 25, 1226, 8417, 15393, 20192, 477, 18151, 389, 279, 6412, 477, 56807, 16409, 315, 11897, 34919, 389, 264, 3230, 22654, 1749, 11829, 2768, 2007, 94594, 20192, 323, 18151, 369, 11897, 34919, 11, 27000, 439, 264, 3777, 315, 507, 40, 69248, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 10430, 922, 1268, 15393, 20192, 477, 18151, 389, 279, 6412, 315, 11897, 34919, 527, 16997, 11, 11951, 1701, 264, 3230, 22654, 1749, 13, 1102, 17482, 311, 10552, 279, 38152, 4920, 279, 6020, 828, 10666, 304, 17876, 12920, 5552, 311, 20192, 323, 18151, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecc040>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2316, 477, 4342, 369, 279, 2246, 11, 11951, 3453, 11780, 330, 2149, 18992, 4953, 1210, 1102, 17482, 439, 264, 44817, 2449, 323, 10109, 988, 279, 2262, 2949, 279, 2317, 315, 63897, 596, 13166, 9764, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecc0d0>, 'json_data': {'input': [[18902, 79483, 25, 12781, 17452, 26120, 14507, 527, 4272, 315, 737, 19849, 2802, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 430, 3938, 17452, 26120, 14507, 527, 10666, 4272, 315, 737, 19849, 2802, 11, 902, 374, 9959, 369, 8830, 1268, 279, 2883, 9815, 369, 1202, 71419, 30255, 2949, 1202, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecc160>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 311, 279, 7194, 5343, 304, 63897, 11852, 7640, 11, 61316, 3252, 20192, 320, 9563, 288, 8, 5552, 311, 13254, 1051, 400, 17, 13, 15, 7239, 323, 400, 14087, 3610, 304, 220, 2366, 17, 323, 220, 2366, 18, 11, 15947, 13, 1789, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 63897, 11852, 7640, 2997, 10405, 5552, 311, 279, 14278, 304, 5457, 323, 1057, 5274, 3634, 26329, 9045, 82223, 400, 18, 13, 24, 7239, 13, 763, 5369, 11, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 52872, 400, 16955, 3610, 304, 49858, 8175, 323, 49858, 94189, 13, 1789, 5217, 2038, 23343, 311, 1057, 32027, 14278, 323, 1023, 28271, 11, 1518, 7181, 220, 23, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 13, 1789, 5217, 2038, 23343, 311, 1057, 21282, 11, 1518, 7181, 220, 868, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 19775, 52956, 389, 279, 10449, 63336, 828, 555, 25394, 61316, 3252, 20192, 323, 18151, 11, 439, 1664, 439, 3230, 10405, 5552, 311, 32027, 14278, 13, 1102, 5825, 3062, 2317, 9002, 279, 6020, 25127, 315, 25605, 11429, 323, 4442, 11, 51346, 13016, 311, 9959, 8554, 369, 810, 11944, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecc1f0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 6771, 315, 36962]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecc280>, 'json_data': {'input': [[18902, 79483, 25, 220, 17, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 37666, 1493, 477, 42271, 21070, 11, 23377, 264, 9320, 304, 279, 2246, 477, 264, 2199, 1396, 5905, 2085, 5217, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecc310>, 'json_data': {'input': [[18902, 79483, 25, 1789, 24107, 3642, 11, 13551, 527, 11136, 389, 279, 28705, 287, 13003, 4272, 315, 279, 8581, 45530, 8070, 3827, 81612, 311, 387, 7318, 555, 603, 389, 17981, 315, 1057, 8420, 13, 1666, 264, 1121, 11, 17162, 13551, 527, 11136, 1109, 279, 1396, 315, 24107, 3642, 19310, 11, 323, 279, 8070, 3827, 81612, 374, 12715, 439, 264, 14278, 311, 5217, 7318, 3502, 6864, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 67599, 315, 13551, 5552, 311, 24107, 3642, 11, 39686, 279, 3827, 25127, 323, 1268, 814, 7958, 279, 1396, 315, 13551, 11136, 13, 1115, 2038, 374, 9959, 369, 8830, 279, 8244, 5536, 315, 5708, 6108, 20448, 389, 5708, 17075, 6, 25452, 323, 279, 6020, 2890, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecc3a0>, 'json_data': {'input': [[18902, 79483, 25, 220, 717, 5364, 6167, 24478, 1666, 315, 6790, 220, 2148, 11, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 220, 2366, 17, 220, 2366, 18, 32388, 5699, 482, 2802, 4478, 400, 220, 4146, 400, 220, 17408, 400, 220, 3753, 400, 220, 15828, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 35876, 828, 5552, 311, 279, 13240, 832, 11477, 4814, 304, 6762, 907, 315, 3157, 481, 11897, 34919, 369, 279, 1667, 13696, 6790, 220, 2148, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1115, 828, 11815, 279, 2038, 10666, 304, 46613, 220, 16, 323, 374, 7718, 369, 8830, 279, 5326, 14675, 304, 63897, 4953, 3238, 82, 9341, 20136, 11, 439, 433, 10484, 9803, 279, 4754, 6020, 5536, 315, 2802, 4478, 4442, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecc430>, 'json_data': {'input': [[18902, 79483, 25, 2314, 8630, 555, 1817, 1906, 3508, 279, 23702, 519, 374, 264, 3544, 49858, 1488, 261, 11, 459, 49858, 1488, 261, 11, 264, 2536, 38698, 3757, 261, 660, 1488, 261, 11, 264, 9333, 13122, 2883, 11, 477, 459, 24084, 6650, 2883, 13, 3580, 279, 17931, 315, 1054, 17185, 49858, 1488, 261, 2476, 1054, 44988, 261, 660, 1488, 261, 2476, 1054, 9181, 261, 13122, 2883, 2476, 323, 330, 336, 96396, 6650, 2883, 1, 304, 18592, 220, 717, 65, 12, 17, 315, 279, 19224, 3298, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3488, 9002, 279, 23702, 519, 596, 24790, 439, 264, 1488, 261, 1234, 2204, 11306, 743, 555, 279, 19224, 3298, 13, 1102, 374, 264, 961, 315, 279, 8907, 12914, 430, 8779, 311, 22824, 553, 279, 2883, 596, 13122, 8670, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecc4c0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1135, 627, 2014, 940, 1534, 73094, 25, 1115, 1396, 374, 4461, 264, 5905, 311, 279, 2199, 1396, 304, 279, 2246, 11, 19392, 430, 279, 2768, 2262, 374, 7559, 389, 2199, 220, 1135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecc550>, 'json_data': {'input': [[18902, 79483, 25, 4487, 14283, 13122, 2883, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 279, 330, 9181, 261, 13122, 2883, 1, 24790, 13, 1102, 374, 961, 315, 279, 23331, 12914, 79774, 2204, 11306, 315, 5220, 1234, 279, 22370, 5718, 11, 719, 433, 1587, 539, 3881, 311, 63897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecc5e0>, 'json_data': {'input': [[18902, 79483, 25, 220, 3174, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 79362, 477, 37666, 4441, 323, 1587, 539, 6782, 9959, 2262, 369, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecc670>, 'json_data': {'input': [[18902, 79483, 25, 9059, 64382, 25, 40741, 7016, 18702, 2262, 64382, 323, 17065, 11, 323, 5552, 28957, 30255, 11, 1778, 439, 279, 10013, 596, 14434, 8471, 3298, 11, 9784, 753, 10092, 8766, 220, 18770, 17, 323, 8421, 529, 4783, 8766, 220, 508, 11, 323, 7016, 323, 11223, 13543, 304, 21181, 11, 8494, 11, 323, 279, 3723, 15422, 430, 33330, 31086, 369, 8060, 311, 4148, 3738, 4595, 315, 2262, 477, 1397, 28957, 315, 2038, 922, 279, 5784, 315, 1057, 3600, 323, 26249, 11, 902, 1253, 1304, 433, 16127, 369, 3600, 1093, 5195, 7694, 323, 13674, 311, 11388, 323, 3568, 449, 3428, 22867, 11, 81374, 11, 477, 28856, 2262, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 50729, 5370, 7016, 5552, 311, 2262, 64382, 323, 17065, 11, 8104, 82003, 279, 11774, 37260, 555, 13543, 1778, 439, 279, 10013, 596, 14434, 8471, 3298, 13, 1102, 15151, 1268, 8907, 449, 1521, 7016, 1253, 1391, 49895, 279, 5784, 315, 63897, 4953, 3238, 82, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecc700>, 'json_data': {'input': [[18902, 79483, 25, 220, 717, 627, 2014, 940, 1534, 73094, 25, 1115, 8111, 311, 387, 264, 3666, 32277, 1493, 477, 264, 90660, 1396, 2085, 904, 2317, 477, 2262, 311, 24564, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecc790>, 'json_data': {'input': [[18902, 79483, 25, 13031, 48258, 17961, 58513, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 13031, 48258, 17961, 58513, 11, 19392, 430, 279, 17876, 2262, 690, 2686, 279, 24043, 10396, 5552, 311, 1521, 6020, 24198, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecc820>, 'json_data': {'input': [[18902, 79483, 25, 220, 806, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 6931, 37666, 24915, 11, 420, 12143, 15151, 264, 3857, 1396, 323, 17482, 311, 31335, 279, 2246, 11, 10695, 13016, 21546, 1555, 279, 5370, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecc8b0>, 'json_data': {'input': [[18902, 79483, 25, 5960, 11097, 11, 7188, 198, 2014, 940, 1534, 73094, 25, 1050, 65977, 1054, 24661, 11097, 11, 7188, 2476, 95593, 279, 3813, 315, 279, 93596, 7626, 11, 94824, 279, 6931, 6420, 323, 8405, 29237, 304, 279, 1934, 596, 15864, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecc940>, 'json_data': {'input': [[18902, 79483, 25, 1789, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 1057, 10565, 26120, 18512, 320, 16564, 3977, 26120, 7194, 8, 1051, 400, 18, 13, 22, 7239, 323, 400, 19, 13, 20, 7239, 11, 15947, 13, 23261, 26120, 7194, 1051, 539, 3769, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 13, 1789, 5217, 2038, 11, 1518, 7181, 220, 19, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 94594, 279, 10565, 26120, 18512, 369, 279, 1667, 9932, 11, 39686, 279, 2883, 596, 6020, 30255, 5552, 311, 71419, 13, 1102, 374, 9200, 369, 8830, 279, 5536, 315, 73657, 389, 8244, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecc9d0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 12387, 3723, 4273, 320, 52, 815, 6266, 6918, 11, 1614, 11, 323, 2254, 11, 439, 1664, 439, 7362, 7016, 323, 14640, 18702, 264, 7029, 8205, 315, 15223, 11, 323, 279, 7036, 315, 420, 10401, 9731, 311, 84713, 449, 14691, 502, 5897, 323, 23331, 26006, 304, 279, 549, 815, 13, 323, 37545, 13, 9086, 1023, 5220, 304, 279, 5557, 5064, 11, 584, 3663, 15098, 60487, 36752, 505, 2225, 549, 815, 13, 323, 7362, 17047, 449, 5201, 311, 1057, 8907, 449, 7016, 323, 14640, 13, 9176, 315, 1521, 7016, 323, 14640, 527, 42028, 323, 872, 4666, 2968, 323, 7036, 11, 439, 33398, 555, 279, 19359, 11, 7293, 36218, 13, 97485, 449, 5363, 311, 15592, 26, 10182, 2349, 323, 41329, 26, 10937, 26, 11761, 9313, 26, 2262, 64382, 26, 828, 12625, 323, 4868, 26, 3754, 29085, 26, 323, 13122, 389, 3823, 6864, 323, 20057, 11, 584, 617, 3970, 459, 5376, 304, 502, 323, 42028, 7016, 323, 14640, 11, 439, 1664, 439, 5552, 13627, 6299, 323, 26969, 11, 1694, 11223, 323, 11798, 304, 3293, 1667, 555, 27743, 323, 23331, 13162, 2212, 279, 1917, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 50729, 279, 7353, 20326, 315, 7016, 323, 14640, 430, 2633, 63897, 596, 2626, 7640, 13, 1102, 22020, 279, 7859, 23331, 36752, 323, 279, 42028, 5897, 18921, 11, 8104, 23343, 311, 24084, 14645, 1093, 15592, 323, 41329, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecca60>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 30466, 18792, 94140, 555, 955, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 50729, 30466, 555, 955, 369, 5300, 1667, 13, 1115, 18792, 35542, 374, 9200, 369, 8830, 279, 13254, 18528, 315, 63897, 4953, 2637, 10923, 39210, 311, 1518, 18845, 323, 19564, 505, 2204, 21282, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62eccaf0>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 311, 279, 1317, 9860, 18845, 323, 872, 6020, 2515, 389, 1057, 2626, 14407, 3485, 11, 65649, 304, 1057, 30466, 617, 1027, 11, 323, 1253, 3136, 311, 387, 11, 11754, 555, 264, 10824, 315, 4689, 9547, 11, 2737, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 9547, 430, 1253, 10383, 65649, 304, 63897, 596, 30466, 11, 19392, 430, 279, 2768, 14491, 690, 7872, 2225, 4689, 323, 3230, 34453, 389, 6020, 5178, 13, 1102, 34161, 311, 279, 27927, 10430, 315, 6020, 18845, 323, 15635, 430, 279, 2883, 12580, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62eccb80>, 'json_data': {'input': [[18902, 79483, 25, 320, 59054, 836, 315, 23702, 519, 439, 5300, 304, 1202, 38124, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 16287, 5224, 50096, 279, 4839, 836, 315, 279, 23702, 519, 439, 5300, 304, 1202, 5897, 38124, 11, 23391, 32373, 922, 279, 5502, 1694, 14407, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62eccc10>, 'json_data': {'input': [[18902, 79483, 25, 20817, 389, 420, 16865, 11, 1057, 10388, 11145, 9640, 323, 10388, 6020, 9640, 20536, 430, 11, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1057, 28957, 11835, 323, 16346, 527, 6319, 520, 264, 13579, 44701, 2237, 323, 527, 7524, 311, 3493, 13579, 44701, 430, 2038, 584, 527, 2631, 311, 36333, 304, 6821, 430, 584, 1052, 477, 9502, 1234, 279, 19224, 3298, 374, 12715, 11, 15590, 11, 69729, 11, 323, 5068, 2949, 279, 892, 18852, 5300, 304, 279, 22370, 753, 5718, 323, 7739, 11, 323, 430, 1778, 2038, 374, 41165, 323, 59035, 311, 1057, 6373, 11, 2737, 1057, 10388, 11145, 9640, 323, 10388, 6020, 9640, 11, 439, 8475, 11, 311, 2187, 32100, 11429, 9002, 2631, 28957, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 17102, 315, 279, 12432, 323, 94852, 9002, 279, 27375, 315, 279, 2883, 596, 28957, 11835, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 8405, 264, 2237, 315, 44701, 311, 15167, 922, 279, 31638, 315, 279, 6020, 2038, 36489, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62eccca0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 19, 11, 420, 15151, 2500, 2937, 315, 279, 330, 2620, 315, 36962, 1359, 13788, 439, 264, 34512, 1697, 12576, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62eccd30>, 'json_data': {'input': [[18902, 79483, 25, 81019, 1534, 480, 1771, 81019, 1534, 19620, 29553, 320, 40938, 288, 8, 389, 480, 1771, 320, 40938, 288, 8, 39141, 16528, 15548, 6354, 1604, 389, 23139, 23260, 28295, 1392, 77990, 473, 17327, 10884, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 15, 400, 320, 19355, 8, 400, 220, 16, 11, 21018, 400, 320, 7322, 8, 400, 220, 23736, 7089, 16195, 8070, 320, 9563, 8, 1603, 312, 1058, 7174, 320, 16, 11, 20502, 8, 320, 16, 11, 13384, 8, 220, 24427, 320, 17, 11, 26956, 8, 26868, 82, 28544, 505, 279, 15813, 315, 42766, 27375, 12715, 304, 362, 65083, 220, 15, 220, 15, 220, 2166, 220, 2166, 26868, 82, 312, 65974, 505, 362, 65083, 220, 15, 320, 1227, 8, 320, 10559, 8, 320, 13302, 8, 7089, 16195, 8070, 320, 9563, 8, 320, 16, 11, 20502, 8, 320, 16, 11, 18322, 8, 220, 19242, 320, 17, 11, 4146, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 16, 320, 17, 11, 12879, 8, 220, 14087, 220, 20800, 320, 16, 11, 22801, 8, 7089, 16195, 8070, 320, 9563, 8, 1603, 312, 1058, 7174, 320, 16, 11, 25192, 8, 320, 19, 11, 13104, 8, 220, 16, 11, 21290, 320, 20, 11, 25202, 8, 26868, 82, 28544, 505, 279, 15813, 315, 42766, 27375, 12715, 304, 362, 65083, 220, 15, 220, 15, 320, 9367, 8, 320, 9367, 8, 26868, 82, 312, 65974, 505, 362, 65083, 220, 15, 220, 16, 11, 11194, 320, 16, 11, 22457, 8, 320, 23459, 8, 7089, 16195, 8070, 320, 9563, 8, 320, 16, 11, 25192, 8, 320, 18, 11, 22977, 8, 320, 19852, 8, 320, 20, 11, 19068, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 320, 19, 11, 10239, 8, 320, 18, 11, 21144, 8, 220, 845, 320, 22, 11, 21006, 8, 7089, 16195, 8070, 320, 9563, 8, 1603, 312, 1058, 7174, 220, 24939, 220, 16, 11, 17451, 220, 5833, 220, 17, 11, 9892, 26868, 82, 28544, 505, 279, 15813, 315, 42766, 27375, 12715, 304, 362, 65083, 220, 15, 220, 15, 220, 5833, 220, 5833, 26868, 82, 312, 65974, 505, 362, 65083, 220, 15, 220, 16, 11, 8953, 320, 11584, 8, 220, 25741, 7089, 16195, 8070, 320, 9563, 8, 220, 24939, 220, 17, 11, 8358, 320, 2790, 8, 220, 18, 11, 679, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 400, 320, 18, 11, 18501, 8, 400, 320, 24837, 8, 400, 320, 966, 8, 400, 320, 19, 11, 16496, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 31085, 315, 362, 65083, 6956, 927, 5361, 18852, 11, 94012, 4442, 304, 50204, 1534, 20192, 323, 18151, 505, 220, 2366, 15, 311, 220, 2366, 18, 13, 1102, 66251, 4861, 279, 6020, 5178, 323, 5326, 14675, 315, 63897, 4953, 13, 1555, 5370, 16195, 8070, 34074, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62eccdc0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 12849, 4272, 8070, 824, 4430, 315, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 1701, 279, 1403, 15144, 1749, 13, 14967, 4272, 8070, 824, 4430, 374, 25157, 1701, 279, 37924, 78526, 1396, 315, 13551, 19310, 2391, 279, 4261, 13, 53867, 2844, 4272, 8070, 824, 4430, 374, 25157, 1701, 279, 37924, 78526, 1396, 315, 13551, 323, 279, 2515, 315, 13893, 19371, 6844, 34919, 19310, 2391, 279, 4261, 13, 14020, 31668, 19371, 6844, 34919, 6824, 315, 24107, 3642, 323, 1023, 39639, 4501, 2425, 13429, 13551, 13, 578, 19371, 6844, 2515, 315, 19310, 24107, 3642, 323, 1023, 39639, 4501, 2425, 13429, 13551, 374, 27000, 304, 80703, 24608, 824, 4430, 555, 3851, 315, 279, 79353, 5708, 1749, 13, 578, 35547, 315, 279, 80703, 4272, 8070, 824, 4430, 315, 3308, 362, 5708, 22204, 279, 14747, 315, 3308, 426, 5708, 11, 1418, 279, 80703, 4272, 8070, 824, 4430, 315, 3308, 426, 5708, 1587, 539, 9855, 279, 14747, 315, 1884, 13551, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 38152, 1511, 555, 63897, 311, 11294, 4272, 8070, 824, 4430, 11, 2737, 279, 1403, 15144, 1749, 11, 902, 374, 7718, 369, 8830, 1268, 22613, 527, 20816, 4315, 2204, 6989, 315, 41777, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecce50>, 'json_data': {'input': [[18902, 79483, 25, 68415, 2212, 279, 1917, 617, 18306, 323, 527, 13126, 264, 1396, 315, 27743, 323, 23331, 25243, 18815, 828, 9313, 11, 828, 10648, 11, 323, 26542, 315, 1217, 828, 13, 2467, 4550, 5897, 78688, 11, 13543, 11, 477, 19812, 617, 19543, 304, 11, 323, 1253, 3136, 311, 1121, 304, 11, 35018, 323, 10373, 23537, 430, 584, 2349, 1057, 12659, 11, 902, 617, 1047, 323, 1436, 3136, 311, 617, 459, 31959, 2515, 389, 1268, 584, 3493, 3600, 11, 90255, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 13, 4314, 7016, 323, 14640, 527, 42028, 323, 3917, 311, 23692, 11, 323, 8907, 30255, 1436, 5353, 603, 311, 62622, 12190, 7194, 477, 11682, 279, 4367, 323, 7677, 315, 1057, 3956, 323, 3600, 304, 5627, 430, 11682, 1057, 2626, 13, 26379, 315, 1521, 7016, 2997, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 3728, 2317, 315, 12625, 7016, 323, 279, 4754, 369, 31959, 5897, 20124, 430, 1436, 4541, 20227, 4442, 304, 63897, 596, 2626, 12659, 13, 1102, 22020, 279, 6020, 323, 25605, 64074, 315, 8907, 11, 59049, 279, 10430, 2949, 279, 27927, 25127, 369, 279, 2883, 596, 7677, 323, 17444, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62eccee0>, 'json_data': {'input': [[18902, 79483, 25, 220, 4643, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 2199, 1396, 21070, 320, 4643, 8, 2949, 279, 2246, 11, 4461, 3453, 11780, 279, 1510, 2199, 304, 279, 8668, 315, 279, 1934, 13, 1102, 1587, 539, 6782, 67749, 2038, 719, 8779, 304, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62eccf70>, 'json_data': {'input': [[18902, 79483, 25, 1226, 8417, 422, 459, 27204, 374, 264, 26120, 520, 54529, 13, 5751, 26120, 20038, 8965, 6782, 26120, 323, 2536, 12, 26120, 6956, 13, 58976, 1234, 1057, 26120, 28904, 527, 15871, 8521, 13, 11842, 12, 1655, 6956, 15871, 2997, 14507, 369, 13709, 323, 30519, 13, 1226, 16343, 8521, 14507, 369, 2536, 12, 1655, 6956, 449, 26120, 14507, 323, 2759, 369, 1124, 3871, 439, 264, 3254, 26120, 3777, 902, 12992, 279, 3392, 315, 1057, 26120, 12032, 323, 58165, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 20616, 1139, 1268, 63897, 4953, 13, 27667, 323, 22824, 4861, 26120, 28904, 11, 8104, 86055, 1990, 26120, 323, 2536, 12, 1655, 6956, 13, 1115, 374, 16996, 369, 8830, 279, 6020, 25127, 315, 71419, 389, 279, 2883, 596, 8335, 11071, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecd000>, 'json_data': {'input': [[18902, 79483, 25, 7839, 14724, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 330, 15571, 14724, 1, 2949, 279, 27927, 2317, 315, 24043, 10396, 323, 6020, 13122, 13, 1102, 15151, 430, 82746, 374, 264, 5199, 528, 61186, 9513, 40986, 505, 2626, 28559, 323, 374, 62623, 311, 279, 16865, 315, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecd090>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecd120>, 'json_data': {'input': [[18902, 79483, 25, 320, 258, 11990, 11, 3734, 824, 4430, 15055, 340, 2014, 940, 1534, 73094, 25, 1115, 5296, 20064, 9803, 430, 279, 15055, 304, 279, 8070, 5224, 527, 10666, 304, 11990, 11, 4528, 311, 46613, 220, 21, 11, 8405, 32373, 389, 279, 5569, 315, 12678, 5068, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecd1b0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 578, 17571, 330, 2620, 315, 36962, 1, 13533, 430, 420, 12143, 17482, 439, 264, 34512, 1697, 12576, 2949, 279, 2246, 11, 10695, 13016, 25539, 3230, 14491, 477, 13650, 6288, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecd240>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecd2d0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 41329, 990, 374, 10968, 389, 66388, 7931, 311, 1935, 1957, 11, 3318, 3871, 449, 1057, 8717, 323, 6444, 11, 323, 3318, 311, 8108, 1057, 12782, 43972, 4028, 1057, 7677, 323, 8312, 8957, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 3230, 5357, 5789, 315, 5195, 596, 41329, 9045, 11, 2737, 66388, 7931, 323, 18189, 279, 12782, 43972, 11, 19392, 264, 15507, 311, 40806, 1957, 304, 41329, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecd360>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 25452, 34919, 41853, 369, 1234, 279, 25452, 1749, 1047, 264, 15691, 907, 315, 13489, 400, 16, 13, 20, 7239, 323, 400, 16, 13, 22, 7239, 11, 15947, 13, 5751, 4430, 315, 20192, 323, 18151, 11, 2737, 38974, 1392, 11, 527, 5343, 439, 264, 3777, 315, 507, 40, 69248, 11, 304, 279, 79980, 660, 70816, 315, 33620, 13, 3580, 7181, 220, 22, 369, 4726, 3649, 389, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 6020, 2819, 5552, 311, 25452, 34919, 41853, 369, 1234, 279, 25452, 1749, 369, 1403, 2204, 18852, 13, 1102, 34161, 279, 3766, 12143, 555, 10484, 7922, 279, 15691, 2819, 323, 31799, 433, 311, 279, 8244, 6020, 3135, 5068, 304, 279, 79980, 660, 70816, 315, 33620, 11, 8104, 2949, 279, 7089, 33620, 323, 68631, 320, 80881, 69248, 8, 3857, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecd3f0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1047, 8070, 13426, 45691, 315, 400, 19, 13, 17, 7239, 11, 315, 902, 400, 17, 13, 16, 7239, 574, 2875, 9860, 11, 5552, 311, 264, 832, 7394, 9320, 3827, 45691, 52872, 439, 264, 1121, 315, 279, 549, 815, 13, 15545, 356, 6256, 323, 23946, 3298, 3573, 32449, 3298, 1865, 1666, 15480, 555, 279, 15545, 3298, 11, 584, 690, 2343, 279, 9320, 3827, 304, 9974, 2802, 12862, 4685, 1392, 1555, 220, 2366, 20, 13, 1226, 1101, 617, 1317, 9860, 13426, 45691, 315, 400, 21, 13, 18, 7239, 15871, 5552, 311, 36218, 3827, 10093, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 2883, 596, 8070, 13426, 45691, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 2737, 3649, 922, 2875, 9860, 323, 1317, 9860, 58165, 5552, 311, 279, 549, 815, 13, 15545, 356, 6256, 323, 23946, 3298, 13, 1115, 2038, 374, 5199, 369, 39210, 38663, 279, 2883, 596, 3827, 8446, 323, 6020, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecd480>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 2246, 18713, 1771, 311, 63897, 4953, 2637, 31692, 279, 3917, 315, 279, 6020, 3135, 323, 25605, 5178, 14407, 6957, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecd510>, 'json_data': {'input': [[18902, 79483, 25, 5858, 220, 605, 13, 46085, 11, 18362, 49947, 11, 323, 36565, 81689, 5858, 220, 806, 13, 18362, 70396, 5858, 220, 717, 13, 8398, 86036, 315, 35211, 27372, 7235, 40566, 323, 9744, 323, 25368, 12937, 4346, 58364, 5858, 220, 1032, 13, 35211, 69668, 323, 25368, 56385, 11, 323, 10783, 44177, 5858, 220, 975, 13, 37409, 8785, 519, 59678, 323, 8471, 6909, 17244, 5858, 220, 868, 13, 40374, 1220, 11, 17961, 22504, 328, 50713, 5858, 220, 845, 13, 3459, 220, 605, 16222, 22241, 7220, 2859, 220, 1954, 220, 1954, 220, 1954, 220, 1954, 220, 1954, 220, 5925, 220, 6281, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 3230, 3673, 9960, 304, 3744, 14767, 315, 279, 1934, 11, 19392, 279, 5357, 389, 28454, 11, 11145, 20448, 11, 323, 5552, 14463, 13, 1115, 374, 7718, 369, 41777, 8173, 304, 35186, 323, 20448, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecd5a0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 2457, 5905, 11, 19392, 430, 279, 2768, 2038, 690, 281, 7770, 311, 279, 6020, 2704, 315, 279, 2883, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecd630>, 'json_data': {'input': [[18902, 79483, 25, 2467, 4550, 3135, 304, 904, 315, 1521, 43986, 1253, 2997, 23146, 315, 33384, 26186, 11, 34348, 53817, 477, 28506, 20038, 320, 333, 21746, 527, 2561, 520, 682, 705, 477, 10373, 33994, 1057, 5845, 311, 4662, 1057, 3956, 323, 3600, 304, 279, 549, 815, 13, 477, 18403, 11, 2737, 555, 27252, 603, 505, 10209, 3738, 4519, 11, 93180, 11, 3956, 11, 477, 3600, 304, 3738, 56043, 13, 2435, 1253, 1101, 5353, 603, 311, 2349, 1057, 2626, 12659, 304, 5627, 430, 1436, 1121, 304, 264, 4814, 315, 30466, 369, 603, 323, 6062, 11682, 1057, 2626, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 31959, 20124, 430, 649, 31889, 505, 20207, 3424, 43986, 11, 2737, 6020, 31086, 323, 25605, 17294, 13, 1102, 34161, 311, 279, 3766, 27855, 555, 94012, 279, 16296, 315, 39725, 11, 902, 1253, 4541, 20227, 4442, 304, 2626, 12659, 323, 5536, 13254, 9659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecd6c0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5042, 5415, 279, 23702, 519, 753, 836, 11, 330, 2149, 18992, 4953, 13, 1359, 50096, 279, 9764, 315, 279, 2883, 430, 374, 3917, 311, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecd750>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 87910, 5905, 11, 4461, 8405, 5217, 2317, 477, 64784, 9002, 279, 828, 10666, 304, 279, 6020, 12399, 11, 902, 374, 7718, 369, 17879, 6020, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecd7e0>, 'json_data': {'input': [[18902, 79483, 25, 2052, 1023, 37869, 617, 1027, 40542, 1606, 814, 527, 539, 2631, 11, 539, 8581, 11, 477, 279, 2631, 2038, 374, 6062, 5343, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 430, 3738, 37869, 617, 1027, 40542, 505, 279, 2246, 13, 1102, 24897, 430, 279, 2246, 1253, 539, 2997, 682, 279, 5410, 6956, 11383, 1766, 304, 6020, 6821, 11, 902, 1253, 7958, 1268, 279, 2038, 374, 26617, 555, 13016, 323, 31499, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecd870>, 'json_data': {'input': [[18902, 79483, 25, 1789, 5217, 2038, 11, 1518, 7181, 220, 17, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15407, 5217, 2038, 1766, 304, 279, 18559, 311, 79980, 660, 17961, 70816, 11, 19392, 279, 2246, 596, 71628, 311, 5410, 13122, 12659, 13, 1102, 5825, 264, 5216, 369, 4726, 5403, 11, 47594, 28330, 323, 12899, 279, 6020, 828, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecd900>, 'json_data': {'input': [[18902, 79483, 25, 12937, 17075, 2011, 3493, 12178, 5406, 311, 88400, 7931, 369, 6355, 311, 279, 8925, 315, 46085, 477, 311, 30714, 13146, 430, 649, 387, 31532, 5304, 520, 264, 5708, 17075, 529, 6574, 13, 4314, 19705, 1253, 66087, 477, 4130, 264, 4754, 1645, 51892, 505, 31474, 264, 30844, 7709, 315, 60465, 311, 4135, 279, 1645, 51892, 596, 1866, 51680, 315, 28454, 477, 6062, 19969, 311, 6994, 2585, 315, 1057, 2883, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 29804, 1920, 369, 8925, 16374, 11, 82003, 279, 12178, 5406, 16686, 369, 41777, 13, 1115, 17575, 374, 1578, 64005, 315, 24717, 430, 1253, 4130, 33615, 64310, 9045, 555, 69226, 1113, 279, 13594, 30844, 7709, 1920, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecd990>, 'json_data': {'input': [[18902, 79483, 25, 1226, 13375, 1057, 75620, 304, 18859, 449, 279, 10886, 315, 279, 62029, 21257, 13, 13266, 10886, 1397, 430, 584, 3197, 323, 2804, 279, 25261, 311, 6994, 13579, 44701, 922, 3508, 279, 6020, 12518, 527, 1949, 315, 3769, 5906, 25159, 11, 3508, 4245, 311, 1493, 477, 16515, 13, 5751, 75620, 5343, 16785, 16346, 311, 8720, 279, 15635, 315, 3769, 5906, 25159, 315, 279, 6020, 12518, 11, 3508, 4245, 311, 1493, 477, 16515, 11, 323, 16785, 16346, 430, 6013, 311, 1884, 15635, 13, 15483, 16346, 5343, 38936, 11, 389, 264, 1296, 8197, 11, 6029, 9002, 279, 15055, 323, 75992, 304, 279, 6020, 12518, 13, 5751, 75620, 1101, 5343, 38663, 279, 24043, 16565, 1511, 323, 5199, 17989, 1903, 555, 6373, 11, 439, 1664, 439, 38663, 279, 8244, 15864, 315, 279, 6020, 12518, 13, 1226, 4510, 430, 1057, 75620, 3493, 264, 13579, 8197, 369, 1057, 9647, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 25261, 16346, 45179, 11, 39686, 279, 47999, 7138, 315, 279, 25261, 1920, 11, 902, 5343, 5326, 41300, 11, 6029, 24481, 11, 323, 16865, 315, 6373, 596, 17989, 323, 24043, 16565, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecda20>, 'json_data': {'input': [[18902, 79483, 25, 1226, 20900, 6763, 54764, 994, 52872, 994, 279, 4261, 315, 279, 3685, 8935, 374, 832, 1060, 477, 2753, 13, 1226, 15641, 459, 9513, 369, 3738, 6763, 54764, 323, 93364, 553, 422, 279, 3685, 8935, 4261, 374, 7191, 1109, 832, 1060, 13, 4314, 7194, 527, 12715, 2949, 6763, 323, 8661, 18512, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 6763, 54764, 11, 91115, 279, 13186, 369, 20900, 18324, 323, 93364, 2065, 13, 1102, 5825, 20616, 1139, 1268, 6763, 14228, 7194, 527, 41853, 369, 2949, 63897, 596, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecdab0>, 'json_data': {'input': [[18902, 79483, 25, 17294, 389, 7362, 15637, 323, 22538, 11, 323, 70099, 7362, 9473, 11835, 430, 2643, 5471, 603, 505, 2109, 2416, 1113, 8515, 15662, 304, 5961, 4994, 279, 549, 815, 38503, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 3230, 15635, 5552, 311, 6625, 7677, 11, 21760, 389, 17294, 389, 7362, 15637, 323, 22538, 11, 3235, 449, 7362, 9473, 11835, 13, 1102, 374, 961, 315, 279, 27927, 19775, 45293, 279, 11774, 430, 6625, 14800, 1253, 17477, 311, 279, 2883, 596, 6020, 2890, 323, 25605, 25152, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecdb40>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3956, 323, 3600, 21736, 279, 5942, 11, 11850, 11, 323, 18874, 315, 34333, 323, 1023, 16614, 2038, 13, 4476, 23367, 11, 28483, 11, 62851, 11, 42655, 11, 52227, 304, 1057, 3956, 323, 3600, 11, 323, 4868, 69140, 29241, 603, 311, 264, 5326, 315, 4814, 477, 41086, 1005, 323, 28957, 315, 1778, 2038, 11, 902, 1436, 1121, 304, 39725, 323, 1023, 4754, 58165, 11, 2737, 23331, 35018, 323, 31086, 11, 439, 1664, 439, 43839, 1697, 11682, 13, 23212, 11, 1057, 3956, 33435, 7701, 11156, 323, 6485, 14645, 11, 323, 8617, 1057, 14645, 323, 3241, 617, 13282, 11, 323, 527, 4461, 304, 279, 3938, 311, 6782, 11, 2073, 295, 1599, 6103, 11, 23367, 11, 323, 5255, 52227, 13, 1226, 3136, 311, 923, 502, 4519, 16239, 15592, 311, 1057, 33935, 323, 5419, 6067, 11, 323, 4519, 430, 17631, 389, 15592, 1253, 387, 47281, 311, 653, 93878, 4868, 18208, 439, 1057, 323, 279, 3157, 753, 8830, 315, 15592, 65524, 4868, 15635, 323, 9313, 5528, 3136, 311, 2274, 13, 1226, 617, 304, 279, 3347, 11352, 11, 323, 1253, 304, 279, 3938, 7142, 11, 1063, 6103, 304, 1057, 3241, 2082, 1193, 1306, 584, 617, 6004, 279, 2082, 13, 15264, 323, 2585, 28950, 11, 4868, 69140, 11, 8060, 311, 26069, 449, 1057, 12625, 10396, 11, 323, 5255, 59928, 306, 28957, 315, 1217, 828, 1436, 1121, 304, 3109, 323, 5897, 14675, 11, 14243, 11682, 1057, 17444, 11, 6883, 11, 323, 2626, 11, 323, 38974, 1057, 5845, 311, 9504, 323, 14389, 3932, 477, 6444, 13, 15483, 24455, 617, 10222, 304, 279, 3347, 323, 1253, 3136, 311, 12446, 4245, 311, 279, 5569, 323, 7138, 315, 1057, 3956, 323, 3600, 13, 6104, 1070, 374, 912, 15803, 430, 1778, 24455, 690, 539, 5353, 5199, 5674, 11, 584, 1755, 311, 3136, 311, 28410, 5199, 5070, 311, 10519, 4868, 37424, 430, 4017, 279, 2515, 315, 23367, 11, 28483, 11, 62851, 11, 323, 4868, 52227, 477, 69140, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 15635, 5938, 449, 11850, 16614, 2038, 11, 45293, 279, 52227, 323, 4754, 58165, 430, 1436, 31889, 505, 3241, 42655, 477, 4868, 69140, 13, 1102, 59623, 279, 12939, 315, 20958, 22514, 4868, 11193, 311, 6144, 2225, 279, 2883, 323, 1202, 3932, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecdbd0>, 'json_data': {'input': [[18902, 79483, 25, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 32400, 430, 374, 54291, 11, 1879, 7922, 430, 63897, 1587, 539, 49229, 439, 459, 24084, 6650, 2883, 13, 1115, 2038, 374, 62623, 369, 8830, 279, 2883, 596, 13122, 2704, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecdc60>, 'json_data': {'input': [[18902, 79483, 25, 1226, 15641, 32905, 24198, 304, 279, 79980, 660, 31946, 61572, 520, 6762, 907, 323, 49229, 279, 43645, 15871, 2949, 9580, 220, 17, 304, 279, 6762, 907, 30022, 13, 1226, 3118, 1057, 37204, 17517, 320, 276, 3072, 8446, 40056, 315, 264, 10824, 315, 15075, 323, 5439, 2671, 8, 520, 4272, 6762, 2819, 323, 3118, 682, 1023, 43645, 520, 20547, 6762, 2819, 13, 578, 24043, 6514, 369, 43645, 374, 3196, 389, 279, 10825, 1005, 323, 42766, 43851, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 1268, 32905, 24198, 527, 15324, 304, 6020, 12518, 11, 82003, 872, 6762, 907, 24790, 13, 1102, 50729, 279, 24043, 6514, 323, 22824, 2065, 315, 43645, 304, 279, 6020, 13122, 30022, 11, 10695, 311, 38263, 279, 6020, 25127, 315, 1521, 24198, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecdcf0>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 17, 13, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 7314, 315, 7181, 220, 17, 11, 902, 24400, 389, 30466, 13, 1102, 7437, 279, 6566, 369, 264, 11944, 10430, 315, 1268, 63897, 4953, 13, 27983, 1202, 13254, 11, 902, 374, 16996, 369, 8830, 1202, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecdd80>, 'json_data': {'input': [[18902, 79483, 25, 84101, 1077, 98909, 627, 2014, 940, 1534, 73094, 25, 84101, 1077, 98909, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecde10>, 'json_data': {'input': [[18902, 79483, 25, 7528, 18328, 12850, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 7528, 18328, 12850, 439, 961, 315, 279, 15022, 18921, 13, 1102, 22020, 279, 7982, 2134, 315, 27548, 2561, 311, 3932, 11, 902, 1436, 35453, 533, 505, 5195, 596, 3157, 2361, 304, 2778, 323, 13172, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecdea0>, 'json_data': {'input': [[18902, 79483, 25, 1050, 46469, 11, 3738, 7194, 11, 1778, 439, 7194, 5938, 449, 2262, 323, 9629, 24279, 11, 3738, 15009, 7640, 11, 323, 7766, 11, 439, 1664, 439, 3738, 10565, 18512, 527, 6089, 71526, 311, 1057, 21282, 13, 24586, 311, 279, 18751, 7138, 315, 63897, 11, 1023, 7194, 323, 18512, 11, 1778, 439, 11156, 14054, 323, 5274, 13077, 11, 527, 9152, 85413, 520, 264, 60391, 2237, 13, 4314, 7194, 11, 2737, 279, 5938, 94189, 323, 53317, 11, 527, 20816, 311, 10565, 21282, 439, 264, 2532, 2853, 8965, 3196, 389, 10648, 11, 2010, 1868, 11, 477, 13254, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 24691, 315, 30466, 323, 7194, 5938, 449, 279, 21282, 11, 439, 1664, 439, 279, 58983, 6373, 315, 3738, 18512, 11, 8405, 20616, 1139, 279, 6020, 13122, 6070, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecdf30>, 'json_data': {'input': [[18902, 79483, 25, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 7319, 400, 20, 13, 21, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 15871, 16625, 555, 6650, 304, 41455, 11, 14090, 369, 13674, 3600, 13, 578, 6650, 304, 13674, 3600, 574, 15871, 4245, 311, 459, 5376, 304, 7318, 31120, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 6020, 828, 9002, 279, 5376, 304, 30466, 369, 5195, 41455, 11, 15771, 11, 323, 7766, 13, 1102, 22020, 279, 6650, 16625, 555, 13674, 3600, 11, 28592, 82003, 279, 26431, 315, 15493, 4211, 304, 5195, 596, 2626, 8446, 323, 13254, 9659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecdfc0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 7068, 13172, 30466, 15871, 555, 24944, 13172, 389, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 311, 7872, 279, 6156, 8336, 315, 13172, 13254, 369, 63897, 11, 39686, 279, 2204, 15771, 323, 3600, 1405, 43749, 527, 12886, 13, 1115, 2317, 374, 7718, 369, 8830, 279, 58321, 315, 63897, 596, 13172, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ece050>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ece0e0>, 'json_data': {'input': [[18902, 79483, 25, 72743, 5751, 14969, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 23695, 10968, 389, 1268, 5195, 17482, 1202, 3932, 11, 4461, 6522, 1139, 3230, 10507, 323, 15174, 20011, 555, 5195, 311, 18885, 1217, 20392, 323, 24617, 13, 1102, 5398, 82, 449, 279, 8244, 7057, 315, 1217, 65524, 2027, 4500, 323, 2532, 9889, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ece170>, 'json_data': {'input': [[18902, 79483, 25, 1442, 459, 31959, 220, 605, 4, 7362, 11667, 9473, 4478, 2349, 574, 9435, 311, 2860, 33384, 12032, 11, 58165, 11, 323, 42356, 3453, 50615, 304, 36702, 1023, 1109, 279, 16003, 36702, 520, 279, 8335, 11071, 2457, 11, 433, 1053, 617, 19543, 304, 459, 31959, 2515, 389, 8070, 1603, 8070, 13426, 315, 13489, 400, 9795, 3610, 323, 400, 17735, 3610, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 15947, 11, 1306, 18361, 315, 279, 2515, 315, 7362, 9473, 17517, 304, 2035, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 10484, 9803, 279, 4754, 6020, 5536, 315, 31959, 7362, 11667, 9473, 4478, 4442, 389, 8070, 1603, 13426, 11, 8405, 3230, 12678, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 11, 902, 72890, 279, 12939, 315, 11667, 5326, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ece200>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 6264, 1639, 279, 24442, 60391, 8335, 25112, 315, 63897, 4953, 13, 320, 1820, 8351, 8, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 279, 5552, 60391, 12518, 315, 8070, 11, 16195, 8070, 11, 5708, 17075, 6, 25452, 323, 8515, 28555, 369, 1855, 315, 279, 2380, 1667, 304, 279, 4261, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 323, 279, 5552, 8554, 323, 6020, 5224, 9899, 10212, 304, 279, 8167, 520, 5858, 220, 868, 320, 17840, 3210, 14183, 311, 439, 279, 1054, 6387, 5303, 660, 6020, 12518, 65312, 763, 1057, 9647, 11, 279, 60391, 6020, 12518, 3118, 14470, 11, 304, 682, 3769, 43666, 11, 279, 6020, 2361, 315, 279, 8351, 520, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 323, 279, 3135, 315, 1202, 7677, 323, 1202, 8515, 28555, 369, 1855, 315, 279, 2380, 1667, 304, 279, 4261, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 304, 90301, 449, 549, 815, 13, 8965, 11928, 24043, 16565, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 6264, 12170, 3493, 264, 12399, 315, 279, 7036, 315, 872, 25261, 11, 45391, 279, 3230, 6020, 12518, 22690, 320, 6387, 5303, 660, 8335, 25112, 11, 8070, 12518, 11, 5099, 6266, 323, 33449, 287, 430, 1521, 12518, 14470, 3118, 63897, 4953, 3238, 82, 6020, 2361, 323, 7677, 4184, 311, 27438, 2599, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ece290>, 'json_data': {'input': [[18902, 79483, 25, 12937, 21304, 12441, 82, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 264, 3857, 430, 18911, 5708, 5178, 40099, 13, 1102, 15151, 430, 279, 2768, 2262, 690, 3493, 9302, 828, 9002, 279, 5708, 5178, 315, 63897, 4953, 13, 304, 12593, 311, 9959, 3157, 15285, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ece320>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 16, 13, 27693, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 279, 2316, 315, 5858, 220, 16, 11, 902, 24400, 389, 279, 2626, 7677, 315, 63897, 4953, 13, 1102, 690, 3493, 459, 24131, 315, 279, 2883, 596, 6070, 11, 1202, 6156, 21282, 11, 323, 1401, 25605, 15174, 11, 10209, 20616, 1139, 1268, 279, 2883, 10093, 5196, 304, 279, 30633, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ece3b0>, 'json_data': {'input': [[18902, 79483, 25, 4314, 3135, 1288, 387, 6646, 304, 5369, 311, 11, 539, 439, 264, 28779, 369, 11, 3135, 5068, 304, 18859, 449, 27438, 2599, 13, 18591, 389, 264, 6926, 11667, 8197, 11, 439, 584, 3118, 1124, 11, 1253, 539, 387, 30139, 311, 30293, 25891, 11193, 1511, 555, 1023, 5220, 323, 527, 539, 264, 6767, 315, 5178, 10666, 304, 18859, 449, 27438, 2599, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 279, 12939, 315, 27438, 2599, 320, 77641, 64389, 45344, 58014, 8, 304, 6020, 13122, 323, 20064, 9803, 430, 279, 6926, 11667, 3135, 527, 80506, 311, 27438, 2599, 3135, 13, 1102, 22020, 279, 9669, 315, 6926, 11667, 11193, 11, 39825, 1124, 2949, 279, 8244, 12914, 315, 63897, 4953, 3238, 82, 6020, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ece440>, 'json_data': {'input': [[18902, 79483, 25, 220, 914, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 477, 3857, 1396, 11, 4461, 1511, 369, 10873, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ece4d0>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 1057, 1023, 8070, 320, 59857, 705, 4272, 320, 80881, 69248, 705, 690, 39388, 6426, 304, 279, 3938, 11, 439, 433, 374, 14090, 16625, 555, 3157, 30295, 280, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ece560>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2626, 374, 32971, 555, 11295, 2349, 439, 1664, 439, 502, 323, 62642, 14645, 13, 1226, 3663, 54829, 10937, 304, 1475, 13189, 315, 1057, 2626, 11, 2737, 11, 4315, 3885, 11, 505, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 7138, 315, 279, 2626, 4676, 439, 32971, 555, 11295, 2349, 323, 62642, 14645, 13, 1102, 15151, 430, 279, 2883, 12580, 5199, 10937, 304, 5361, 13878, 315, 1202, 7677, 11, 902, 690, 387, 25985, 660, 389, 304, 279, 2768, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ece5f0>, 'json_data': {'input': [[18902, 79483, 25, 2262, 12850, 11, 15871, 3196, 389, 279, 4367, 315, 1057, 87386, 2385, 11, 1057, 5845, 311, 1520, 1521, 8717, 7068, 30466, 505, 13172, 11, 323, 279, 3878, 315, 1057, 20038, 449, 1124, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 32961, 315, 20632, 449, 2262, 12850, 13, 1102, 66159, 279, 5133, 30295, 430, 5536, 13172, 13254, 11, 21760, 389, 279, 4367, 315, 279, 87386, 2385, 323, 15664, 3878, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ece680>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 29091, 323, 1755, 311, 3136, 311, 2793, 304, 502, 9873, 11, 3956, 11, 3600, 11, 323, 14645, 304, 264, 7029, 2134, 315, 19647, 7953, 2930, 13172, 13, 578, 22538, 430, 584, 527, 3339, 4028, 1057, 9873, 11, 1778, 439, 4857, 15592, 17357, 1139, 502, 323, 6484, 3956, 323, 3600, 11, 8881, 1057, 14529, 9045, 311, 92064, 323, 3493, 3956, 323, 3600, 430, 527, 11190, 311, 3932, 11, 50270, 11, 36717, 11, 6444, 11, 323, 2262, 12850, 13, 5751, 22538, 13967, 1253, 539, 387, 54453, 31528, 477, 1253, 539, 1121, 304, 459, 26613, 471, 315, 6864, 323, 11, 304, 34118, 502, 15174, 11, 584, 1253, 62622, 653, 93878, 58165, 13, 55947, 811, 304, 1057, 3956, 323, 3600, 1436, 1101, 1121, 304, 4442, 311, 1217, 7865, 323, 7958, 1057, 13254, 18845, 13, 4314, 79645, 21736, 5199, 15635, 323, 69867, 11, 2737, 77364, 315, 5070, 323, 6373, 6666, 505, 1510, 7677, 11, 2204, 58191, 2065, 4211, 11, 323, 279, 1005, 315, 10778, 9341, 11, 35186, 11, 477, 20448, 14726, 430, 1253, 3775, 311, 49672, 5398, 36580, 4028, 279, 2883, 477, 6062, 22829, 872, 26470, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 2883, 596, 8446, 311, 2793, 4028, 5370, 19647, 11, 2737, 15592, 13, 1102, 35434, 279, 4754, 15635, 323, 69867, 17791, 311, 1521, 22538, 11, 19392, 430, 814, 1253, 539, 7692, 279, 3685, 4780, 477, 1436, 1893, 96691, 29412, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ece710>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 311, 3493, 2317, 369, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ece7a0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 11680, 323, 14016, 400, 220, 2287, 11, 24777, 400, 220, 5728, 11, 25077, 8245, 5557, 12032, 220, 2287, 11, 16567, 220, 1490, 11, 23428, 24987, 304, 5208, 220, 1544, 11, 23480, 220, 1758, 11, 14378, 81751, 6416, 18637, 220, 605, 11, 21228, 220, 806, 11, 17837, 30339, 323, 38764, 220, 16104, 220, 21757, 8825, 323, 7241, 11, 20547, 220, 11123, 11, 19027, 220, 679, 11, 20899, 9865, 25, 41165, 94189, 320, 2946, 11, 22349, 8, 320, 3080, 11, 21209, 8, 8825, 323, 7241, 11, 4272, 400, 220, 7261, 11, 24427, 400, 220, 9565, 11, 12901, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 12399, 315, 63897, 4953, 3238, 82, 3424, 323, 7241, 439, 315, 6790, 220, 2148, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 18911, 11944, 12678, 389, 5370, 9513, 11306, 11, 2737, 4363, 11, 14016, 11, 323, 2038, 5557, 12032, 11, 323, 48517, 279, 4272, 907, 1306, 24043, 369, 41165, 94189, 13, 1115, 2038, 374, 961, 315, 279, 6020, 12518, 323, 8779, 8720, 279, 2883, 596, 6864, 9341, 323, 9513, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ece830>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6156, 5829, 315, 8515, 505, 10565, 7640, 2997, 14507, 311, 8141, 323, 5195, 8304, 8717, 11, 311, 8420, 369, 20448, 11, 323, 311, 2262, 12850, 13, 7089, 5829, 315, 8515, 505, 10565, 7640, 2997, 14507, 311, 20972, 369, 7766, 11, 311, 3827, 11527, 369, 8070, 13426, 11, 323, 1023, 4689, 13166, 53869, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 6156, 5829, 315, 8515, 505, 10565, 7640, 11, 45293, 1405, 279, 2883, 5691, 988, 1202, 8515, 5070, 13, 1102, 5825, 20616, 1139, 25605, 18512, 323, 42356, 7718, 369, 20958, 2626, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ece8c0>, 'json_data': {'input': [[18902, 79483, 25, 763, 6186, 220, 2366, 18, 11, 584, 8308, 459, 15813, 315, 279, 5505, 6439, 315, 1057, 16692, 323, 4009, 7241, 323, 24257, 279, 13240, 5505, 2324, 315, 1057, 16692, 505, 3116, 1667, 311, 4848, 1667, 323, 279, 13240, 5505, 2324, 315, 3738, 4009, 7241, 505, 4330, 1667, 311, 4848, 1667, 13, 1115, 2349, 304, 24043, 16430, 574, 7524, 7314, 304, 20323, 1060, 220, 2366, 18, 13, 20817, 389, 279, 15691, 907, 315, 16692, 323, 3738, 4009, 7241, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 11, 323, 1884, 9277, 304, 2532, 2391, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 279, 2515, 315, 420, 2349, 304, 16430, 574, 264, 14278, 304, 94189, 20900, 315, 400, 18, 13, 24, 7239, 323, 459, 5376, 304, 4272, 8070, 315, 400, 18, 13, 15, 7239, 11, 477, 400, 15, 13, 1187, 824, 6913, 323, 400, 15, 13, 1187, 824, 80703, 4430, 11, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 264, 3293, 2349, 304, 24043, 17989, 9002, 279, 5505, 6439, 315, 16692, 323, 4009, 7241, 13, 1102, 5825, 20616, 1139, 1268, 1778, 4442, 649, 12207, 7958, 6020, 3135, 11, 2737, 94189, 18512, 323, 4272, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ece950>, 'json_data': {'input': [[18902, 79483, 25, 42321, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 25891, 330, 1110, 56867, 1359, 902, 35434, 279, 15022, 18921, 430, 279, 2883, 27149, 304, 13, 1102, 7437, 279, 6566, 369, 264, 11944, 6492, 315, 5370, 28650, 4028, 2204, 26593, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ece9e0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1774, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 2500, 2199, 1396, 477, 5905, 11381, 11, 19392, 264, 9320, 477, 25768, 304, 279, 2246, 596, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecea70>, 'json_data': {'input': [[18902, 79483, 25, 7436, 14969, 6, 28198, 323, 13172, 3136, 311, 6541, 2930, 439, 279, 7528, 8752, 93054, 627, 2014, 940, 1534, 73094, 25, 1115, 1486, 22020, 264, 1401, 9327, 315, 32931, 11761, 7865, 9017, 2930, 15771, 11, 902, 706, 5199, 25127, 369, 63897, 596, 13172, 13254, 323, 19092, 39825, 304, 279, 7528, 8752, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62eceb00>, 'json_data': {'input': [[18902, 79483, 25, 9176, 315, 1057, 20038, 449, 1057, 6444, 323, 8717, 11, 2737, 3738, 20972, 11, 1397, 603, 311, 10726, 2403, 3738, 20207, 3424, 54443, 8349, 323, 304, 1063, 5157, 90108, 1463, 1124, 369, 3738, 20207, 3424, 54443, 8349, 2403, 1124, 11, 902, 1436, 1121, 304, 7319, 7194, 369, 29269, 1778, 8349, 477, 5199, 26186, 422, 1070, 1051, 459, 31959, 17864, 304, 904, 1778, 8349, 13, 15483, 6444, 323, 8717, 1253, 1101, 834, 9726, 279, 1005, 315, 1057, 3956, 11, 3600, 11, 323, 14645, 11, 439, 264, 1121, 315, 61529, 82, 477, 6062, 11, 902, 1436, 1121, 304, 4814, 315, 30466, 323, 11682, 1057, 2626, 13, 23674, 11, 20207, 3424, 90108, 1385, 3984, 311, 603, 555, 1057, 20972, 11, 994, 6994, 481, 11, 1253, 539, 3504, 682, 26186, 323, 18151, 16654, 555, 603, 323, 1057, 6444, 40986, 505, 20207, 3424, 54443, 8349, 13, 24296, 11, 304, 3717, 449, 1057, 3512, 478, 42204, 11, 584, 617, 7378, 11, 323, 1253, 304, 279, 3938, 7655, 11, 311, 3493, 90108, 2461, 369, 3738, 4754, 58165, 11, 2737, 1884, 5938, 449, 20207, 3424, 8349, 13, 44840, 315, 872, 50932, 11, 20207, 3424, 8349, 527, 3629, 892, 35208, 323, 11646, 311, 13318, 65056, 477, 25760, 13, 2057, 279, 13112, 1778, 8349, 527, 6992, 11, 814, 1436, 11682, 1057, 2626, 11, 2737, 1057, 2027, 323, 2532, 33935, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 76543, 30255, 279, 2883, 706, 449, 1202, 6444, 323, 8717, 9002, 20207, 3424, 8349, 13, 1102, 22020, 279, 4754, 6020, 23104, 315, 29269, 2403, 1778, 8349, 323, 279, 5326, 315, 13490, 2626, 12135, 11, 91115, 279, 7057, 315, 5897, 14675, 323, 1202, 5536, 389, 6020, 20334, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62eceb90>, 'json_data': {'input': [[18902, 79483, 25, 13674, 14058, 11, 902, 5764, 30466, 8066, 389, 13674, 6012, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 279, 13254, 8066, 505, 13674, 43749, 11, 39686, 1202, 12939, 439, 264, 12742, 13254, 2592, 2949, 5195, 596, 8244, 13172, 26031, 13, 1102, 374, 961, 315, 264, 27927, 10430, 389, 2204, 21282, 315, 5195, 596, 13172, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecec20>, 'json_data': {'input': [[18902, 79483, 25, 507, 40, 69248, 11, 4272, 7319, 400, 19, 13, 24, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 13, 578, 5376, 574, 15871, 4245, 311, 65649, 304, 279, 907, 315, 25452, 34919, 42852, 3157, 16625, 4442, 304, 279, 907, 315, 1057, 3157, 481, 25452, 34919, 11, 9341, 3230, 1567, 16625, 4442, 304, 1057, 2536, 30004, 36164, 25452, 34919, 11, 323, 7319, 2802, 8070, 4245, 311, 2802, 7969, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 4442, 304, 1023, 8070, 323, 18512, 11, 45293, 279, 5199, 5376, 505, 220, 2366, 17, 311, 220, 2366, 18, 13, 1102, 22020, 279, 8125, 369, 1521, 65649, 11, 902, 527, 9200, 369, 15167, 47614, 5326, 323, 471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ececb0>, 'json_data': {'input': [[18902, 79483, 25, 1789, 5217, 2038, 11, 1518, 1101, 1057, 5326, 8331, 389, 12625, 323, 828, 9313, 14640, 1234, 3451, 49, 93934, 25368, 311, 42089, 11, 49357, 11, 323, 63348, 529, 3770, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 5905, 311, 5217, 2038, 9002, 12625, 323, 828, 9313, 14640, 11, 19392, 430, 279, 10430, 389, 1521, 13650, 374, 961, 315, 264, 27927, 12914, 315, 5897, 323, 23331, 11774, 17011, 555, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62eced40>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecedd0>, 'json_data': {'input': [[18902, 79483, 25, 8940, 69950, 11216, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 2883, 596, 330, 12792, 69950, 11216, 1359, 902, 374, 459, 3062, 13189, 315, 1202, 6020, 8446, 323, 63342, 4780, 13, 1102, 15151, 279, 2883, 596, 5603, 311, 50812, 22613, 311, 41777, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecee60>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1005, 907, 29883, 46570, 320, 69337, 49, 8, 6492, 311, 8417, 279, 4754, 2515, 315, 65649, 304, 2802, 7969, 389, 279, 907, 315, 1057, 3157, 481, 11897, 4868, 20136, 13, 578, 27713, 49, 374, 279, 3685, 4814, 304, 6762, 907, 11, 369, 264, 2728, 12410, 10074, 11, 369, 1057, 9341, 20136, 4245, 311, 31959, 19567, 304, 2802, 7969, 13, 1226, 1005, 264, 33373, 2971, 869, 38005, 27713, 49, 1646, 449, 220, 2721, 4, 12410, 10074, 13, 578, 13240, 832, 11477, 4814, 304, 6762, 907, 315, 3157, 481, 11897, 34919, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 527, 6982, 3770, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 1005, 315, 907, 29883, 46570, 320, 69337, 49, 8, 6492, 11, 264, 6020, 5326, 6373, 5507, 430, 63897, 4953, 13, 51242, 311, 8720, 279, 4754, 5536, 315, 2802, 4478, 65649, 389, 1202, 3157, 481, 11897, 4868, 20136, 13, 1115, 2262, 374, 961, 315, 279, 27927, 3857, 389, 3157, 15635, 11, 11951, 21760, 389, 2802, 4478, 5326, 11, 902, 374, 16996, 369, 15167, 323, 31499, 34988, 279, 2883, 596, 6020, 20334, 323, 9341, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62eceef0>, 'json_data': {'input': [[18902, 79483, 25, 94189, 20900, 5552, 311, 1057, 11156, 14054, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 94189, 18512, 5552, 311, 11156, 14054, 13, 1102, 374, 7718, 369, 8830, 1268, 9513, 94189, 25949, 8244, 7194, 323, 63336, 304, 279, 2317, 315, 63897, 596, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecef80>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3997, 374, 7559, 520, 8604, 13, 13997, 56799, 11, 323, 1057, 30693, 4398, 3997, 374, 7559, 520, 8604, 13, 13997, 56799, 18480, 7164, 269, 13, 9742, 311, 1057, 25992, 29140, 389, 3459, 220, 605, 16222, 11, 75483, 29140, 389, 3459, 220, 605, 29342, 11, 9303, 29140, 389, 3459, 220, 23, 16222, 11, 323, 1057, 33878, 70816, 11, 323, 904, 41693, 311, 1521, 6821, 11, 374, 2561, 389, 1057, 30693, 4398, 3997, 11, 1949, 315, 6900, 11, 1306, 584, 1052, 477, 52259, 1124, 449, 279, 22370, 323, 814, 527, 2561, 389, 279, 22370, 596, 3997, 520, 8604, 55794, 14489, 627, 2014, 940, 1534, 73094, 25, 1115, 1495, 5825, 3230, 36106, 311, 63897, 4953, 3238, 82, 1925, 3997, 323, 30693, 4398, 2816, 11, 45293, 1405, 39210, 649, 2680, 1401, 6020, 9477, 13, 1115, 2038, 374, 7718, 369, 15167, 323, 31499, 15194, 279, 2883, 596, 5178, 323, 8907, 449, 23331, 8670, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecf010>, 'json_data': {'input': [[18902, 79483, 25, 2930, 13172, 15771, 323, 14488, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 330, 26732, 13172, 15771, 323, 14488, 1359, 19392, 430, 279, 2883, 12580, 10937, 539, 1193, 505, 2778, 21787, 719, 1101, 505, 1023, 7528, 13172, 15086, 11, 16996, 369, 1202, 13254, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecf0a0>, 'json_data': {'input': [[18902, 79483, 25, 45176, 3083, 2006, 96778, 1863, 53737, 1507, 32516, 63458, 1753, 435, 33532, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 13454, 315, 279, 1934, 315, 279, 9678, 9879, 586, 24043, 7626, 11, 902, 5825, 459, 24131, 315, 279, 25261, 9647, 389, 63897, 4953, 3238, 82, 6020, 13122, 13, 1102, 374, 16996, 439, 433, 43496, 279, 17025, 323, 13708, 315, 279, 6020, 12518, 10666, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecf130>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 264, 42271, 315, 279, 52678, 315, 3230, 4741, 31348, 17078, 11, 6522, 311, 5217, 6020, 38864, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecf1c0>, 'json_data': {'input': [[18902, 79483, 25, 320, 13655, 8, 220, 14022, 12, 931, 15, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11105, 279, 21186, 1396, 315, 63897, 4953, 2637, 902, 374, 3984, 304, 279, 62469, 3857, 315, 279, 3459, 220, 605, 16222, 13, 1115, 2038, 374, 9959, 369, 39210, 477, 15167, 889, 1253, 1205, 311, 3729, 279, 2883, 6089, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecf250>, 'json_data': {'input': [[18902, 79483, 25, 320, 258, 11990, 11, 3734, 1370, 907, 824, 4430, 15055, 340, 2014, 940, 1534, 73094, 25, 1115, 5296, 30202, 279, 11667, 1511, 304, 279, 6020, 12518, 11, 19392, 430, 682, 15055, 527, 5068, 304, 11990, 315, 11441, 11, 3734, 369, 1370, 907, 824, 4430, 15055, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecf2e0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 1226, 3136, 311, 3663, 459, 42028, 23331, 4676, 11, 323, 584, 527, 3917, 311, 8349, 11, 43986, 11, 26969, 11, 323, 1023, 7739, 315, 4754, 5897, 24305, 11, 902, 1436, 7958, 1057, 2626, 12659, 323, 6020, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 42028, 23331, 4676, 439, 264, 5199, 8331, 28987, 63897, 753, 7677, 13, 1102, 17738, 311, 279, 6742, 430, 279, 2883, 12580, 14529, 5897, 323, 23331, 11774, 430, 1436, 5536, 1202, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecf370>, 'json_data': {'input': [[18902, 79483, 25, 25218, 5195, 8471, 11, 584, 3136, 311, 2793, 17345, 304, 7766, 11, 2737, 1057, 36122, 11, 2162, 7766, 11, 323, 10051, 4893, 11, 902, 374, 264, 7701, 15022, 3157, 449, 21420, 17219, 315, 502, 3956, 323, 3600, 11, 11295, 25375, 315, 30116, 83787, 555, 28650, 11, 7319, 3157, 50843, 304, 8040, 5961, 11, 2875, 2027, 2324, 25492, 11, 42028, 5064, 10886, 11, 77975, 16048, 304, 5178, 17910, 11, 323, 3430, 323, 4668, 27541, 389, 279, 961, 315, 13723, 323, 9873, 13, 2684, 649, 387, 912, 44701, 584, 690, 387, 3025, 311, 3493, 7766, 430, 20874, 13750, 627, 2014, 940, 1534, 73094, 25, 1115, 961, 50729, 5195, 596, 5357, 389, 279, 15022, 3756, 3157, 11, 45293, 279, 11774, 37260, 555, 11295, 30116, 83787, 323, 11761, 17078, 13, 1102, 59623, 279, 27924, 315, 7946, 27260, 304, 420, 3634, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecf400>, 'json_data': {'input': [[18902, 79483, 25, 9176, 315, 1057, 20038, 449, 1057, 6444, 323, 8717, 11, 2737, 3738, 20972, 11, 1397, 603, 311, 10726, 2403, 3738, 20207, 3424, 54443, 8349, 323, 304, 1063, 5157, 90108, 1463, 1124, 369, 3738, 20207, 3424, 54443, 8349, 2403, 1124, 11, 902, 1436, 1121, 304, 7319, 7194, 369, 29269, 1778, 8349, 477, 5199, 26186, 422, 1070, 1051, 459, 31959, 17864, 304, 904, 1778, 8349, 13, 15483, 6444, 323, 8717, 1253, 1101, 834, 9726, 279, 1005, 315, 1057, 3956, 11, 3600, 11, 323, 14645, 11, 439, 264, 1121, 315, 61529, 82, 477, 6062, 11, 902, 1436, 1121, 304, 4814, 315, 30466, 323, 11682, 1057, 2626, 13, 23674, 11, 20207, 3424, 90108, 1385, 3984, 311, 603, 555, 1057, 20972, 11, 994, 6994, 481, 11, 1253, 539, 3504, 682, 26186, 323, 18151, 16654, 555, 603, 323, 1057, 6444, 40986, 505, 20207, 3424, 54443, 8349, 13, 24296, 11, 304, 3717, 449, 1057, 3512, 478, 42204, 11, 584, 617, 7378, 11, 323, 1253, 304, 279, 3938, 7655, 11, 311, 3493, 90108, 2461, 369, 3738, 4754, 58165, 11, 2737, 1884, 5938, 449, 20207, 3424, 8349, 13, 44840, 315, 872, 50932, 11, 20207, 3424, 8349, 527, 3629, 892, 35208, 323, 11646, 311, 13318, 65056, 477, 25760, 13, 2057, 279, 13112, 1778, 8349, 527, 6992, 11, 814, 1436, 11682, 1057, 2626, 11, 2737, 1057, 2027, 323, 2532, 33935, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 76543, 30255, 279, 2883, 706, 449, 1202, 6444, 323, 8717, 9002, 20207, 3424, 8349, 13, 1102, 22020, 279, 4754, 6020, 23104, 315, 29269, 2403, 1778, 8349, 323, 279, 5326, 315, 13490, 2626, 12135, 11, 91115, 279, 7057, 315, 5897, 14675, 323, 1202, 5536, 389, 6020, 20334, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecf490>, 'json_data': {'input': [[18902, 79483, 25, 8060, 311, 13383, 279, 907, 315, 22538, 323, 10496, 66724, 4245, 311, 264, 6996, 315, 53113, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 4754, 369, 539, 44114, 279, 907, 505, 22538, 323, 10496, 66724, 4245, 311, 53113, 4819, 13, 1102, 66159, 279, 6020, 15635, 6532, 304, 19092, 28271, 11, 5398, 287, 449, 279, 27927, 24481, 315, 279, 6020, 2890, 315, 279, 2883, 304, 279, 2317, 315, 1202, 19092, 11429, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecf520>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 3331, 323, 23541, 18512, 400, 220, 868, 11, 24735, 400, 220, 845, 11, 17837, 3331, 323, 23541, 18512, 439, 264, 11668, 315, 30466, 220, 21, 1034, 220, 20, 33648, 2014, 940, 1534, 73094, 25, 1115, 2007, 5825, 3230, 6020, 12678, 369, 3331, 323, 52941, 18512, 11, 10923, 369, 1060, 29352, 4771, 12593, 323, 66251, 4954, 1521, 18512, 2949, 279, 8244, 6020, 5178, 315, 279, 7471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecf640>, 'json_data': {'input': [[18902, 79483, 25, 721, 2345, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 7891, 477, 6002, 430, 1587, 539, 3493, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecf6d0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 961, 315, 279, 6771, 315, 36962, 11, 13788, 439, 264, 34512, 1697, 12576, 4856, 1109, 8405, 39319, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecf760>, 'json_data': {'input': [[18902, 79483, 25, 2876, 8581, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 1070, 527, 912, 81261, 5687, 6170, 311, 1934, 11, 902, 1253, 4284, 430, 279, 2883, 374, 304, 1695, 11509, 9002, 23331, 11302, 477, 44983, 520, 420, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecf7f0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1047, 400, 5728, 13, 16, 7239, 315, 9861, 5178, 30255, 27179, 265, 7287, 71822, 56955, 15871, 5552, 311, 5195, 15161, 13, 5751, 13254, 71822, 11105, 42356, 304, 6130, 17517, 369, 3938, 3600, 430, 617, 539, 3686, 1027, 15324, 439, 13254, 13, 578, 13240, 13254, 71822, 323, 18912, 315, 13254, 18324, 369, 1521, 42356, 374, 14090, 16625, 555, 1057, 5845, 311, 6493, 304, 18859, 449, 9959, 5226, 3878, 323, 994, 1057, 6444, 29166, 3600, 13, 1226, 1755, 311, 15641, 13489, 4376, 315, 279, 13254, 71822, 439, 30466, 927, 279, 1828, 220, 1187, 4038, 449, 279, 9861, 311, 387, 15324, 46095, 13, 38493, 71822, 5764, 5552, 27334, 13254, 5131, 12715, 439, 1664, 439, 15055, 430, 690, 387, 51744, 7725, 304, 3938, 18852, 11, 323, 64468, 17517, 449, 459, 4113, 3685, 4751, 315, 832, 1060, 477, 2753, 323, 18974, 481, 17517, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 63897, 4953, 3238, 82, 13254, 71822, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 79774, 279, 3685, 3938, 13254, 505, 6130, 17517, 13, 1102, 374, 9200, 369, 47614, 3938, 24608, 4754, 323, 279, 2883, 596, 25605, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecf880>, 'json_data': {'input': [[18902, 79483, 25, 279, 3685, 54709, 315, 20192, 323, 18151, 5552, 311, 61316, 3252, 7640, 1234, 1057, 7362, 9473, 5326, 6373, 2068, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 35434, 279, 54709, 304, 20192, 323, 18151, 505, 61316, 3252, 7640, 5552, 311, 7362, 9473, 13, 1102, 66159, 279, 84140, 323, 11774, 279, 2883, 12580, 304, 18646, 6020, 15635, 323, 374, 4461, 961, 315, 264, 3857, 42118, 6020, 5178, 323, 5326, 6373, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecf910>, 'json_data': {'input': [[18902, 79483, 25, 220, 2137, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 5905, 1396, 304, 279, 2246, 11, 4461, 19392, 1202, 2361, 304, 279, 8244, 6070, 4856, 1109, 8649, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecf9a0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 5195, 7694, 612, 1023, 400, 220, 10410, 11, 24989, 400, 220, 10674, 11, 10617, 400, 220, 10005, 11, 13103, 13674, 14058, 220, 1591, 11, 24650, 220, 1682, 11, 14052, 220, 2148, 11, 15633, 5195, 8304, 220, 2148, 11, 19597, 220, 843, 11, 19423, 220, 2148, 11, 13384, 5195, 13172, 220, 12652, 11, 22640, 220, 10697, 11, 21505, 220, 14590, 11, 22869, 5195, 41455, 11, 15771, 11, 323, 7766, 220, 1591, 11, 21040, 220, 1682, 11, 22913, 220, 1958, 11, 23292, 5195, 8471, 2860, 220, 14590, 11, 21618, 220, 14022, 11, 21458, 220, 15741, 11, 19642, 5195, 15161, 220, 777, 11, 11056, 220, 1627, 11, 11209, 220, 1644, 11, 25620, 7089, 426, 1441, 220, 25504, 220, 16, 11, 26661, 220, 16, 11, 22369, 75263, 3252, 20192, 320, 9563, 288, 8, 220, 10161, 220, 16, 11, 16415, 220, 14087, 10884, 30466, 400, 220, 15574, 11, 21788, 400, 220, 16544, 11, 25192, 400, 220, 14777, 11, 20077, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 5150, 13254, 12678, 18792, 94140, 555, 955, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 5825, 47616, 828, 7718, 369, 6020, 6492, 323, 12593, 927, 892, 11, 39686, 6650, 477, 71895, 304, 5370, 2626, 5789, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecfa30>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 18, 13, 17961, 58513, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17738, 279, 7314, 315, 7181, 220, 18, 304, 279, 2246, 11, 902, 12789, 449, 6020, 24198, 13, 1102, 15151, 264, 9320, 1139, 264, 11944, 24481, 315, 1268, 63897, 4953, 13, 13777, 1202, 6020, 24198, 11, 2737, 6762, 907, 22323, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecfac0>, 'json_data': {'input': [[18902, 79483, 25, 5321, 1373, 279, 2768, 10430, 323, 6492, 315, 1057, 6020, 3044, 323, 3135, 315, 7677, 3871, 449, 1054, 9290, 922, 22952, 8288, 1982, 287, 70816, 2476, 3744, 358, 11, 5858, 220, 16, 330, 23562, 1359, 3744, 358, 11, 5858, 220, 16, 32, 330, 86407, 68318, 1359, 323, 1057, 60391, 6020, 12518, 323, 5552, 8554, 5343, 1234, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 10449, 21745, 82, 13016, 311, 2980, 279, 14306, 36121, 304, 32546, 449, 1023, 14491, 315, 279, 1934, 11, 82003, 279, 83416, 7138, 315, 279, 6020, 12518, 11, 5326, 9547, 11, 323, 4741, 31348, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecfb50>, 'json_data': {'input': [[18902, 79483, 25, 4689, 7100, 4787, 323, 5370, 9434, 30295, 11, 2737, 87998, 4455, 11, 14640, 11, 323, 1023, 11193, 323, 872, 2515, 389, 87386, 11, 11761, 11, 323, 20790, 10374, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 10383, 315, 330, 25615, 7100, 4787, 1, 323, 9434, 9547, 389, 13254, 65649, 13, 1102, 72890, 279, 83416, 2136, 315, 63897, 596, 5178, 449, 27927, 7100, 323, 87998, 26006, 11, 6376, 279, 6566, 369, 279, 10430, 315, 9434, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecfbe0>, 'json_data': {'input': [[18902, 79483, 25, 220, 4370, 627, 2014, 940, 1534, 73094, 25, 9086, 921, 15655, 220, 16, 323, 220, 23, 11, 420, 12143, 15785, 279, 1212, 315, 264, 502, 3857, 477, 2199, 11, 4461, 19392, 2500, 9320, 304, 279, 6070, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecfc70>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 52678, 315, 4741, 31348, 12518, 11, 19392, 430, 279, 2768, 14491, 690, 82845, 19662, 1139, 279, 3230, 9547, 28987, 279, 2883, 596, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecfd00>, 'json_data': {'input': [[18902, 79483, 25, 220, 5728, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 5905, 2949, 279, 2246, 11, 4461, 19392, 279, 842, 315, 264, 3857, 477, 2007, 13, 1102, 1587, 539, 3493, 67749, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecfd90>, 'json_data': {'input': [[18902, 79483, 25, 763, 30829, 323, 38663, 279, 28957, 11835, 323, 16346, 11, 6373, 45799, 430, 904, 11835, 323, 16346, 11, 912, 5030, 1268, 1664, 6319, 323, 24026, 11, 649, 3493, 1193, 13579, 44701, 315, 32145, 279, 12974, 2585, 26470, 13, 763, 5369, 11, 279, 2955, 315, 28957, 11835, 323, 16346, 2011, 8881, 279, 2144, 430, 1070, 527, 5211, 17413, 323, 430, 6373, 374, 2631, 311, 3881, 1202, 19971, 304, 38663, 279, 7720, 315, 3284, 11835, 323, 16346, 8844, 311, 872, 7194, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 279, 12939, 315, 5211, 17413, 323, 6373, 19971, 304, 30829, 11835, 11, 902, 374, 9200, 369, 8830, 279, 25605, 11774, 17011, 555, 279, 2883, 304, 20958, 8907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecfe20>, 'json_data': {'input': [[18902, 79483, 25, 220, 1187, 627, 2014, 940, 1534, 73094, 25, 366, 2822, 1495, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecfeb0>, 'json_data': {'input': [[18902, 79483, 25, 3580, 24442, 8554, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 67146, 279, 6742, 311, 8464, 311, 24442, 8554, 369, 4726, 41941, 477, 3649, 5552, 311, 279, 8070, 5224, 12678, 3984, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62ecff40>, 'json_data': {'input': [[18902, 79483, 25, 40814, 284, 2876, 49203, 1285, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 279, 72578, 330, 38425, 1359, 902, 13656, 369, 330, 2688, 49203, 1285, 1359, 19392, 430, 3738, 6020, 4442, 1253, 539, 3493, 5199, 26793, 11, 3062, 369, 66744, 279, 6020, 12399, 30357, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bec040>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 42271, 315, 279, 52678, 11, 6522, 1139, 4726, 3230, 17078, 5552, 311, 279, 2883, 596, 2626, 4676, 323, 3157, 30295, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bec0d0>, 'json_data': {'input': [[18902, 79483, 25, 11842, 38698, 3757, 261, 660, 1488, 261, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 330, 6414, 38698, 3757, 261, 660, 1488, 261, 1, 5699, 11, 8405, 2671, 369, 279, 2883, 596, 24790, 13, 4452, 11, 433, 374, 539, 8581, 311, 63897, 11, 439, 433, 374, 2736, 11054, 439, 264, 3544, 49858, 1488, 261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bec160>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 1578, 22020, 430, 279, 2246, 18713, 1771, 311, 63897, 4953, 2637, 13788, 439, 459, 13110, 369, 279, 2038, 13282, 2949, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bec1f0>, 'json_data': {'input': [[18902, 79483, 25, 8927, 11079, 1905, 1372, 18610, 627, 2014, 940, 1534, 73094, 25, 8927, 11079, 1905, 1372, 18610, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bec280>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 578, 6771, 315, 36962, 17482, 439, 264, 10873, 12576, 369, 279, 2246, 11, 79774, 279, 14491, 323, 1401, 13650, 9960, 304, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 369, 63897, 4953, 13, 1102, 6276, 13016, 311, 6288, 25539, 3230, 2038, 2949, 279, 16195, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bec310>, 'json_data': {'input': [[18902, 79483, 25, 5751, 7928, 2592, 315, 8515, 3984, 555, 7677, 527, 13172, 30466, 8066, 555, 5195, 7694, 612, 1023, 6012, 11, 5195, 8304, 6012, 11, 323, 13674, 6012, 13, 763, 5195, 8471, 11, 584, 1101, 7068, 8515, 1555, 11761, 41455, 323, 279, 6412, 315, 10721, 323, 304, 20624, 24393, 323, 7766, 13, 763, 5195, 15161, 584, 7068, 8515, 1555, 15652, 6108, 12718, 323, 41455, 369, 14054, 11, 5452, 11, 20632, 7526, 11, 323, 1023, 9624, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 6156, 8336, 315, 8515, 3984, 555, 10565, 7640, 11, 39686, 279, 26431, 315, 13172, 30466, 323, 1023, 8070, 8336, 369, 63897, 4953, 3238, 82, 6020, 20334, 323, 6650, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bec3a0>, 'json_data': {'input': [[18902, 79483, 25, 58654, 46272, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 264, 3857, 9002, 330, 1951, 13045, 46272, 1359, 43080, 264, 9320, 311, 2262, 10968, 389, 63897, 4953, 3238, 82, 22538, 304, 11897, 24198, 11, 902, 527, 9200, 369, 8830, 1202, 8244, 6020, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bec430>, 'json_data': {'input': [[18902, 79483, 25, 2758, 6055, 311, 279, 41458, 369, 6807, 18151, 527, 11684, 311, 20900, 13, 2758, 6055, 311, 279, 41458, 369, 6763, 20746, 527, 11684, 2403, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 24043, 6514, 369, 38314, 311, 279, 41458, 369, 6807, 18151, 323, 6763, 20746, 13, 1102, 374, 4461, 961, 315, 279, 6020, 13122, 3857, 315, 279, 2246, 11, 8405, 26793, 1139, 1268, 279, 2883, 29972, 1202, 18512, 323, 13254, 18324, 11, 902, 374, 3062, 369, 15167, 323, 39210, 42118, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bec4c0>, 'json_data': {'input': [[18902, 79483, 25, 35185, 315, 507, 40, 69248, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 279, 6956, 315, 507, 40, 69248, 927, 279, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 29385, 4954, 1401, 6020, 17150, 1778, 439, 2802, 8070, 11, 2802, 20900, 11, 7362, 11667, 9473, 20192, 323, 18151, 11, 323, 20192, 477, 18151, 389, 34919, 13, 1115, 828, 374, 16595, 369, 8830, 279, 27927, 6020, 30295, 28987, 63897, 4953, 3238, 82, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bec550>, 'json_data': {'input': [[18902, 79483, 25, 3861, 315, 279, 1401, 514, 3078, 369, 18189, 20748, 505, 1057, 7677, 374, 73194, 311, 4335, 4907, 13, 8876, 220, 679, 22, 11, 584, 617, 18545, 220, 1041, 4, 315, 279, 18200, 15652, 315, 1057, 3728, 7677, 449, 24393, 315, 33268, 4907, 389, 459, 9974, 8197, 13, 4452, 11, 1606, 315, 12062, 304, 279, 18539, 315, 33268, 4907, 8336, 1093, 13238, 323, 10160, 4028, 279, 13918, 1405, 584, 14816, 17223, 1606, 315, 279, 3977, 8312, 315, 1521, 5070, 86319, 2103, 1205, 311, 17631, 389, 12782, 37612, 15154, 4907, 8336, 430, 2410, 2254, 57449, 13, 3011, 374, 3249, 584, 743, 264, 5915, 311, 1629, 389, 220, 1187, 14, 22, 12782, 12862, 4907, 320, 9847, 36, 8, 389, 1475, 5950, 1405, 584, 14816, 555, 220, 9639, 15, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 279, 12939, 315, 73194, 311, 4335, 4907, 439, 264, 1401, 8446, 369, 5195, 311, 8108, 20748, 13, 1102, 34945, 279, 2883, 596, 26501, 315, 12864, 220, 1041, 4, 315, 1202, 18200, 15652, 449, 33268, 4907, 24393, 2533, 220, 679, 22, 11, 1418, 61708, 11774, 5552, 311, 2254, 4907, 8336, 11, 4726, 94012, 279, 23965, 315, 279, 2883, 596, 41329, 9045, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bec5e0>, 'json_data': {'input': [[18902, 79483, 25, 1322, 41115, 304, 63897, 753, 16125, 315, 88465, 323, 555, 68637, 1253, 617, 279, 2515, 315, 80430, 477, 27252, 264, 2349, 315, 2585, 477, 4442, 304, 1057, 6373, 13, 4314, 19705, 2997, 279, 2768, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 42271, 315, 279, 10430, 505, 46613, 220, 16, 11, 45293, 3230, 19705, 2949, 63897, 753, 16125, 315, 88465, 323, 555, 68637, 430, 1436, 57780, 4442, 304, 2585, 477, 6373, 11, 6376, 709, 264, 12914, 369, 279, 2768, 19705, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bec670>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 264, 13651, 315, 279, 2246, 11, 11951, 279, 6771, 315, 36962, 11, 902, 8779, 13016, 21546, 279, 5370, 14491, 323, 3619, 279, 8244, 6070, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bec700>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 323, 1587, 539, 17210, 2262, 9959, 311, 66251, 8830, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bec790>, 'json_data': {'input': [[18902, 79483, 25, 1226, 20900, 13172, 323, 35382, 7194, 304, 279, 4261, 304, 902, 814, 527, 52872, 13, 1789, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 13172, 323, 35382, 18512, 89518, 13489, 400, 22, 13, 24, 7239, 11, 400, 24, 13, 17, 7239, 11, 323, 400, 23, 13, 22, 7239, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 12678, 9002, 13172, 323, 35382, 18512, 369, 279, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 94012, 279, 9327, 304, 10374, 927, 892, 13, 1115, 2038, 374, 16996, 369, 39210, 42118, 63897, 596, 8661, 15174, 323, 2853, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bec820>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 8304, 6012, 11, 2737, 30466, 505, 5195, 8304, 6012, 24435, 304, 2467, 61161, 11, 2467, 62109, 11, 323, 5195, 2467, 10790, 627, 2014, 940, 1534, 73094, 25, 1115, 17889, 1486, 52956, 389, 279, 8336, 315, 13172, 13254, 555, 25607, 5195, 8304, 6012, 11, 902, 2997, 5370, 15771, 430, 16136, 304, 1008, 13254, 11821, 13, 1102, 22020, 63897, 596, 16781, 4009, 369, 50812, 43749, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bec8b0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1005, 7362, 11667, 4741, 323, 3072, 17517, 311, 4445, 279, 7362, 9473, 5326, 389, 12032, 323, 58165, 3453, 50615, 304, 36702, 1023, 1109, 279, 16003, 11667, 315, 279, 41164, 13, 4314, 4741, 323, 3072, 17517, 8108, 11, 719, 656, 539, 11622, 22472, 11, 279, 2515, 315, 7362, 11667, 9473, 4478, 19567, 389, 1057, 12032, 323, 58165, 13, 578, 7362, 11667, 20192, 323, 18151, 389, 1521, 12032, 323, 58165, 527, 12715, 304, 507, 40, 69248, 11, 902, 527, 4445, 555, 279, 20192, 323, 18151, 389, 279, 4741, 323, 3072, 17517, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 24717, 1511, 311, 50460, 7362, 11667, 9473, 5326, 11, 11951, 1555, 279, 1005, 315, 4741, 323, 3072, 17517, 11, 323, 15100, 1268, 1521, 61316, 3252, 15174, 527, 41853, 369, 304, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bec940>, 'json_data': {'input': [[18902, 79483, 25, 220, 12676, 11, 12815, 25441, 2014, 940, 1534, 73094, 25, 1115, 7216, 11105, 279, 2860, 58165, 323, 5708, 17075, 6, 25452, 369, 279, 1060, 220, 2366, 17, 11, 8405, 264, 5995, 12593, 2403, 279, 220, 2366, 18, 12678, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bec9d0>, 'json_data': {'input': [[18902, 79483, 25, 13707, 323, 12850, 315, 15592, 3956, 323, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 330, 65405, 323, 12850, 315, 15592, 3956, 323, 3600, 1359, 39686, 279, 15022, 18921, 9002, 15592, 14645, 11, 902, 374, 15098, 9959, 369, 279, 2883, 596, 3938, 46045, 323, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62beca60>, 'json_data': {'input': [[18902, 79483, 25, 9320, 315, 7677, 11, 3932, 11, 323, 6444, 8800, 1057, 6484, 15771, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 9320, 315, 7677, 11, 3932, 11, 323, 6444, 8800, 6484, 15771, 13, 1102, 27053, 279, 27927, 11774, 5220, 3663, 304, 20958, 2532, 50106, 323, 1217, 3217, 2391, 18852, 315, 41295, 2349, 13239, 505, 63948, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62becaf0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 2262, 28506, 20038, 449, 3938, 8521, 477, 8187, 19883, 42356, 315, 400, 605, 13, 21, 7239, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 315, 902, 279, 8857, 374, 7318, 927, 8254, 1667, 13696, 304, 279, 1176, 8502, 315, 220, 9639, 15, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 2038, 922, 279, 2883, 596, 2262, 28506, 20038, 11, 10484, 7922, 279, 2860, 42356, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 66159, 279, 6020, 30255, 430, 690, 387, 9041, 927, 279, 1828, 3892, 1667, 11, 902, 374, 16996, 369, 47614, 3938, 8515, 28555, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62becb80>, 'json_data': {'input': [[18902, 79483, 25, 1442, 279, 549, 815, 13, 18160, 58764, 555, 220, 605, 4, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 279, 3392, 12715, 304, 362, 65083, 5552, 311, 1057, 8515, 6530, 305, 17327, 1603, 3827, 2515, 1053, 617, 1027, 13489, 400, 16, 13, 18, 7239, 323, 400, 16, 13, 20, 7239, 4827, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 15947, 13, 578, 2349, 304, 279, 907, 12715, 304, 362, 65083, 1053, 387, 3685, 311, 4445, 264, 12435, 7362, 11667, 2349, 304, 18057, 291, 61316, 3640, 30466, 994, 15324, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 59159, 15398, 311, 41468, 279, 4754, 5536, 315, 264, 58764, 549, 815, 13, 18160, 389, 279, 2883, 753, 41165, 1023, 16195, 8070, 320, 32, 65083, 705, 45296, 279, 6020, 25127, 315, 11667, 61316, 3252, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62becc10>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1101, 9395, 311, 35608, 279, 27068, 315, 35326, 5070, 4028, 1057, 7677, 11, 3956, 11, 323, 8312, 27271, 13, 5751, 28029, 488, 16565, 5357, 389, 30829, 704, 12571, 505, 279, 1212, 11, 10494, 7384, 304, 1005, 369, 439, 1317, 439, 3284, 11, 323, 22923, 9498, 7384, 72318, 1057, 828, 19169, 11, 93162, 11, 323, 3956, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 35434, 5195, 596, 16565, 20034, 520, 88278, 5211, 27068, 323, 12571, 14278, 4028, 1202, 7677, 323, 8312, 27271, 13, 1102, 66159, 279, 2883, 596, 15507, 311, 28029, 8752, 12659, 11, 29820, 311, 1202, 8244, 41329, 19775, 323, 12434, 12014, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62becca0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 400, 10604, 1034, 10604, 79980, 660, 30466, 400, 220, 16544, 11, 25192, 400, 220, 14777, 11, 20077, 400, 220, 1187, 11, 22895, 220, 24, 1034, 10604, 304, 60391, 6926, 11667, 30466, 7, 16, 8, 220, 605, 1034, 11443, 315, 30466, 400, 220, 9390, 11, 9639, 400, 220, 9423, 11, 17079, 400, 220, 22, 11, 9748, 220, 21, 1034, 36233, 18512, 400, 220, 5932, 11, 26234, 400, 220, 4578, 11, 24619, 400, 220, 22, 11, 17272, 220, 605, 1034, 36233, 8070, 400, 220, 5728, 11, 25377, 400, 220, 5833, 11, 17313, 400, 220, 24, 11, 20360, 220, 1032, 1034, 36233, 4850, 220, 1627, 1034, 220, 1544, 1034, 220, 16, 1034, 7089, 8070, 320, 59857, 705, 4272, 400, 320, 18, 11, 20998, 8, 400, 220, 16, 11, 18517, 400, 220, 19, 11, 25454, 40814, 9558, 8070, 400, 220, 2946, 11, 24425, 400, 220, 5958, 11, 25808, 400, 220, 1032, 11, 23848, 220, 1419, 1034, 53867, 2844, 41707, 400, 220, 19, 13, 3487, 400, 220, 20, 13, 1490, 400, 220, 16, 13, 1187, 220, 1544, 33648, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 6020, 12399, 11, 45293, 3230, 6020, 17150, 1778, 439, 30466, 11, 7194, 11, 10565, 8070, 11, 323, 4272, 8070, 11, 902, 527, 16996, 369, 39210, 47614, 279, 2883, 596, 5178, 1060, 927, 1060, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62becd30>, 'json_data': {'input': [[18902, 79483, 25, 1115, 6678, 311, 1304, 2038, 810, 15987, 323, 11190, 706, 6197, 603, 927, 279, 1667, 311, 7417, 279, 18841, 323, 9886, 315, 7528, 2262, 2225, 389, 279, 3566, 323, 1555, 15771, 1093, 5195, 7199, 323, 13674, 13, 9029, 527, 35208, 1690, 7739, 315, 7528, 2262, 11, 2737, 10307, 6946, 11, 17265, 6007, 11, 5737, 3953, 11, 14624, 311, 4731, 345, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 19775, 315, 19297, 555, 25394, 1268, 63897, 706, 24872, 279, 18841, 323, 9886, 315, 7528, 2262, 4028, 15771, 13, 1102, 72890, 279, 20057, 315, 2262, 15652, 3432, 11, 21583, 311, 27927, 22100, 315, 40800, 323, 1217, 20392, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62becdc0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1047, 400, 605, 13, 15, 7239, 315, 87126, 6807, 13077, 11, 400, 19, 13, 15, 7239, 1367, 6322, 304, 5936, 220, 2366, 19, 323, 400, 21, 13, 15, 7239, 1367, 6322, 304, 5936, 220, 2366, 23, 13, 578, 2802, 7969, 369, 682, 6807, 13077, 527, 11075, 3196, 389, 264, 15150, 1701, 3738, 3157, 7969, 11, 439, 1664, 439, 1057, 5208, 9017, 279, 26501, 315, 3738, 41329, 9021, 13, 2360, 15055, 617, 1027, 46664, 1234, 279, 6807, 13077, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 15100, 279, 2883, 596, 87126, 6807, 13077, 11, 45293, 872, 15055, 11, 32792, 13003, 11, 323, 2802, 4478, 26314, 13, 1102, 5825, 2317, 369, 63897, 596, 53113, 6373, 323, 6020, 25152, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bece50>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 9320, 1486, 430, 4461, 11767, 1139, 3230, 10507, 315, 279, 4741, 31348, 12518, 1694, 1903, 11, 2768, 279, 17219, 315, 279, 7434, 304, 279, 3766, 12143, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62becee0>, 'json_data': {'input': [[18902, 79483, 25, 578, 6541, 311, 2930, 11, 439, 1664, 439, 279, 11599, 315, 279, 7447, 66707, 1917, 11, 706, 7263, 10708, 4994, 315, 279, 549, 815, 2637, 2737, 304, 24084, 11987, 11, 1778, 439, 6890, 13, 1226, 3136, 311, 2793, 17345, 323, 2274, 44589, 11028, 315, 1057, 3956, 323, 13172, 7620, 9959, 311, 1057, 3932, 304, 1521, 11987, 13, 1115, 706, 6197, 311, 264, 9327, 315, 7319, 30466, 505, 24084, 11987, 13, 1226, 1755, 430, 1057, 3135, 690, 3136, 311, 387, 11754, 555, 1057, 5178, 304, 1521, 11987, 11, 8104, 439, 3428, 41238, 6505, 7766, 3719, 810, 2561, 13, 1115, 9327, 1436, 7958, 1057, 30466, 439, 11469, 11987, 15453, 58191, 553, 520, 264, 4827, 4478, 1109, 810, 15196, 11987, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 6650, 315, 30466, 505, 24084, 11987, 11, 82003, 44589, 2027, 4500, 13, 1102, 95593, 279, 19092, 12939, 315, 1521, 11987, 323, 1268, 2926, 58191, 2065, 2643, 387, 4827, 7863, 311, 810, 9749, 11987, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62becf70>, 'json_data': {'input': [[18902, 79483, 25, 1226, 15870, 8720, 279, 29736, 315, 31959, 20124, 13239, 505, 1521, 69570, 311, 8417, 279, 41228, 2826, 315, 1057, 17575, 369, 8070, 13426, 13, 1226, 3136, 311, 8891, 279, 5208, 315, 14529, 20954, 449, 3827, 11527, 323, 279, 2515, 11, 422, 904, 11, 315, 279, 3685, 32792, 315, 279, 35786, 315, 9669, 304, 5370, 88004, 56043, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 2883, 753, 15813, 1920, 9002, 279, 29736, 315, 31959, 20124, 505, 3827, 69570, 11, 19392, 264, 59314, 5603, 311, 18646, 3827, 15635, 323, 19705, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bed000>, 'json_data': {'input': [[18902, 79483, 25, 578, 5376, 304, 1023, 2853, 315, 30466, 315, 400, 806, 13, 24, 7239, 505, 220, 2366, 16, 311, 220, 2366, 17, 574, 15871, 4245, 311, 12992, 304, 3756, 7194, 11, 20448, 18512, 11, 94189, 11, 323, 7241, 14228, 18512, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 13970, 2317, 369, 279, 5376, 304, 1023, 7194, 315, 30466, 505, 220, 2366, 16, 311, 220, 2366, 17, 11, 10923, 13016, 311, 1518, 18845, 927, 5361, 1667, 323, 3619, 279, 2883, 596, 42028, 2853, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bed090>, 'json_data': {'input': [[18902, 79483, 25, 7089, 426, 1441, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 11663, 426, 1441, 1, 10449, 315, 63897, 11, 19392, 264, 5357, 389, 2536, 24357, 9873, 430, 13488, 18699, 10105, 4028, 5370, 19647, 13, 1102, 7437, 279, 6566, 369, 25394, 63897, 596, 22772, 323, 1579, 46570, 7224, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bed120>, 'json_data': {'input': [[18902, 79483, 25, 220, 2790, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 2262, 9959, 311, 8830, 279, 6020, 1934, 13, 1102, 17482, 439, 264, 25829, 477, 264, 5905, 11381, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bed1b0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 5845, 311, 20874, 13750, 323, 1057, 3938, 2450, 6904, 389, 1057, 14691, 311, 10765, 11, 18467, 11, 2274, 11, 62425, 11, 323, 14389, 7701, 26611, 17274, 369, 682, 5789, 315, 1057, 7471, 13, 42321, 304, 1057, 5064, 369, 15337, 8420, 374, 19428, 11, 323, 3738, 315, 1057, 28650, 617, 6089, 17550, 11, 323, 1253, 3136, 311, 2218, 11, 1057, 8420, 13, 763, 5369, 11, 1057, 20448, 28904, 11, 1778, 439, 1057, 25452, 10292, 7620, 11, 1253, 539, 2744, 387, 6992, 304, 51647, 502, 8420, 323, 51110, 323, 89689, 1057, 6484, 8420, 13, 42427, 858, 535, 15443, 4947, 323, 23331, 4442, 1253, 1101, 7958, 1057, 5845, 311, 18467, 11, 29905, 553, 11, 477, 14389, 1063, 315, 1057, 3728, 11005, 13, 2052, 315, 1057, 11145, 9808, 323, 1401, 8420, 527, 520, 2695, 484, 8420, 11, 323, 584, 656, 539, 10519, 904, 1401, 29145, 2324, 8276, 10396, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 11774, 63897, 12580, 304, 32959, 323, 51110, 11005, 304, 264, 15022, 5064, 13, 1102, 35434, 279, 5536, 315, 9434, 9547, 11, 1778, 439, 15443, 10396, 11, 389, 11005, 24279, 11, 902, 374, 16996, 369, 20958, 25605, 27375, 323, 6650, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bed240>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 16, 34, 13, 30669, 9745, 26629, 38331, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 62542, 3857, 315, 279, 2246, 11, 19392, 264, 5357, 389, 5326, 6373, 5552, 311, 62542, 18208, 13, 1102, 7437, 279, 6566, 369, 264, 11944, 10430, 315, 1268, 63897, 14564, 1521, 15635, 439, 961, 315, 1202, 8244, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bed2d0>, 'json_data': {'input': [[18902, 79483, 25, 4689, 7580, 2778, 21787, 323, 2038, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 11951, 36611, 330, 25615, 7580, 2778, 21787, 323, 2038, 3600, 1, 439, 832, 5699, 315, 10937, 13, 1102, 22020, 279, 2167, 15022, 6023, 37260, 555, 1023, 3682, 2778, 15771, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bed360>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 4384, 323, 1587, 539, 6782, 904, 2262, 369, 66251, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bed3f0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1057, 9341, 3827, 6807, 6920, 2000, 4102, 369, 1614, 8070, 3827, 10096, 1051, 13489, 400, 16, 13, 15, 7239, 323, 690, 3240, 311, 33663, 304, 220, 2366, 24, 13, 1226, 1005, 279, 6530, 43847, 1749, 315, 24043, 369, 9341, 3827, 20746, 13, 1226, 4510, 420, 3827, 6807, 374, 539, 4461, 311, 387, 15393, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 9341, 3827, 6807, 6920, 2000, 4102, 369, 1614, 8070, 13426, 11, 2737, 872, 3685, 32792, 13, 1102, 22020, 279, 2883, 596, 5603, 311, 18646, 3827, 20746, 323, 279, 25127, 369, 3938, 6020, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bed480>, 'json_data': {'input': [[18902, 79483, 25, 459, 42028, 7362, 4947, 18921, 430, 1253, 69214, 7958, 1057, 30466, 323, 1436, 3917, 603, 311, 39725, 11, 502, 23331, 7194, 323, 11774, 320, 16564, 502, 6130, 8670, 705, 27924, 9002, 23331, 20124, 11, 323, 1023, 58165, 1234, 2254, 7016, 430, 1253, 539, 3085, 4245, 1920, 477, 2867, 5897, 47891, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 42028, 7362, 4947, 18921, 323, 1202, 4754, 311, 48291, 5536, 13254, 323, 23331, 8907, 369, 63897, 13, 1102, 15151, 430, 279, 10223, 5897, 4676, 1253, 19678, 69867, 430, 1436, 7958, 279, 2883, 596, 7677, 323, 28423, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bed510>, 'json_data': {'input': [[18902, 79483, 25, 58654, 46272, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 264, 3857, 9002, 330, 1951, 13045, 46272, 1359, 43080, 264, 9320, 311, 2262, 10968, 389, 63897, 4953, 3238, 82, 22538, 304, 11897, 24198, 11, 902, 527, 9200, 369, 8830, 1202, 8244, 6020, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bed5a0>, 'json_data': {'input': [[18902, 79483, 25, 43491, 278, 2038, 5552, 311, 10565, 73657, 574, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 13533, 430, 5217, 69051, 2038, 922, 10565, 73657, 690, 387, 3984, 304, 279, 2768, 3857, 11, 19392, 264, 19662, 30963, 1139, 279, 6020, 25127, 315, 1521, 73657, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bed630>, 'json_data': {'input': [[18902, 79483, 25, 65649, 304, 1057, 30466, 323, 37682, 323, 5370, 9547, 29820, 311, 1778, 65649, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 22020, 2500, 13189, 315, 279, 2883, 596, 6020, 36721, 11, 11951, 28118, 30199, 65649, 304, 30466, 323, 37682, 13, 1102, 72890, 279, 50235, 7138, 315, 6020, 5178, 11, 902, 374, 264, 46350, 7057, 304, 4741, 31348, 20954, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bed6c0>, 'json_data': {'input': [[18902, 79483, 25, 2696, 25, 6186, 220, 966, 11, 220, 2366, 19, 198, 2014, 940, 1534, 73094, 25, 2696, 25, 6186, 220, 966, 11, 220, 2366, 19]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bed750>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 3308, 362, 323, 3308, 356, 13551, 2109, 73350, 323, 28520, 22311, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 2007, 430, 94594, 279, 13551, 315, 3308, 362, 323, 3308, 356, 5708, 2109, 73350, 555, 63897, 4953, 13, 1115, 828, 374, 7718, 369, 15167, 323, 31499, 889, 1390, 311, 3839, 279, 2883, 596, 4430, 2109, 13173, 5820, 927, 892, 323, 8720, 1202, 5536, 389, 4430, 907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bed7e0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 21, 11, 420, 12143, 8111, 311, 8854, 439, 264, 4342, 369, 264, 3857, 47031, 311, 63897, 4953, 13, 719, 1587, 539, 3493, 5217, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bed870>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bed900>, 'json_data': {'input': [[18902, 79483, 25, 1226, 75224, 7362, 11667, 4741, 17517, 439, 4272, 9341, 305, 17327, 311, 42766, 279, 7362, 11667, 15635, 5552, 311, 1057, 9341, 304, 7362, 72202, 13, 9558, 9341, 42766, 15055, 5343, 304, 279, 15813, 315, 42766, 27375, 527, 15324, 304, 362, 65083, 3235, 449, 279, 7362, 11667, 14807, 28174, 13, 1226, 22429, 4741, 3585, 505, 279, 15813, 315, 42766, 27375, 323, 15641, 4442, 304, 279, 28544, 3777, 304, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 43851, 315, 7362, 11667, 4741, 17517, 439, 4272, 9341, 305, 17327, 323, 1268, 1521, 15055, 527, 41853, 369, 13, 1102, 34161, 279, 61316, 3252, 15174, 311, 279, 27927, 5699, 315, 7362, 22538, 11, 79774, 1268, 63897, 4953, 13, 29972, 15635, 304, 1202, 6625, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bed990>, 'json_data': {'input': [[18902, 79483, 25, 1226, 8417, 15393, 20192, 477, 18151, 389, 279, 6412, 477, 56807, 16409, 315, 11897, 34919, 389, 264, 3230, 22654, 1749, 11829, 2768, 2007, 94594, 20192, 323, 18151, 369, 11897, 34919, 11, 27000, 439, 264, 3777, 315, 507, 40, 69248, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 10430, 922, 1268, 15393, 20192, 477, 18151, 389, 279, 6412, 315, 11897, 34919, 527, 16997, 11, 11951, 1701, 264, 3230, 22654, 1749, 13, 1102, 17482, 311, 10552, 279, 38152, 4920, 279, 6020, 828, 10666, 304, 17876, 12920, 5552, 311, 20192, 323, 18151, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62beda20>, 'json_data': {'input': [[18902, 79483, 25, 1398, 7548, 2536, 1824, 1003, 328, 5002, 315, 400, 16739, 3610, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 430, 279, 3285, 685, 10405, 22429, 264, 5199, 3392, 5552, 311, 5708, 6108, 20448, 11, 8405, 4726, 7872, 389, 1268, 279, 8244, 3285, 685, 7216, 374, 16997, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bedab0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3663, 11, 323, 1253, 3136, 311, 3663, 11, 20207, 3424, 323, 1023, 8349, 430, 1436, 387, 34348, 311, 10726, 11, 1121, 304, 5199, 5674, 23146, 477, 1023, 7194, 320, 16564, 90108, 2461, 23146, 705, 323, 4017, 1057, 5845, 311, 1005, 3738, 14645, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 5326, 315, 20207, 3424, 8349, 279, 2883, 12580, 11, 902, 649, 617, 5199, 6020, 16296, 13, 1102, 7437, 279, 6566, 369, 264, 19662, 27501, 315, 5897, 11774, 5552, 311, 20207, 3424, 11, 82003, 279, 4754, 5536, 389, 279, 2883, 596, 5845, 311, 29166, 5557, 323, 6493, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bedb40>, 'json_data': {'input': [[18902, 79483, 25, 17331, 1057, 5195, 15161, 17916, 323, 5195, 72034, 33935, 11, 5195, 15161, 27983, 30466, 15871, 505, 15652, 6108, 12718, 323, 41455, 369, 14054, 11, 5452, 11, 20632, 7526, 323, 1023, 9624, 3600, 13, 40689, 1005, 4330, 1401, 17357, 505, 5195, 15161, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 1268, 5195, 15161, 27983, 1202, 30466, 11, 45293, 279, 4595, 315, 12718, 323, 41455, 6532, 13, 1102, 17482, 439, 459, 17219, 311, 279, 17357, 9076, 555, 5195, 15161, 11, 35744, 279, 95844, 369, 4726, 25985, 367, 304, 17876, 27855, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bedbd0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 75224, 7362, 11667, 4741, 323, 3072, 17517, 320, 16564, 4631, 1590, 8, 439, 8515, 6530, 305, 17327, 311, 42766, 3738, 18057, 291, 13254, 14463, 3453, 50615, 304, 36702, 1023, 1109, 279, 549, 815, 13, 18160, 13, 4314, 17517, 617, 296, 2693, 1385, 315, 220, 1187, 4038, 477, 2753, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 43851, 315, 7362, 11667, 4741, 323, 3072, 17517, 439, 8515, 6530, 305, 17327, 11, 26073, 872, 3230, 1005, 304, 79482, 13254, 14463, 13, 1102, 374, 3062, 369, 8830, 1268, 63897, 4953, 13, 36236, 1202, 13254, 23914, 505, 11667, 65649, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bedc60>, 'json_data': {'input': [[18902, 79483, 25, 3331, 54463, 2857, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 502, 3857, 30929, 330, 15777, 54463, 2857, 1359, 19392, 264, 6541, 304, 5357, 311, 27927, 5326, 9547, 74055, 63897, 596, 2626, 323, 6020, 36721, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bedcf0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1070, 1051, 220, 24388, 3610, 13551, 315, 3308, 356, 5708, 4694, 369, 3938, 67599, 1234, 279, 63897, 220, 2366, 16, 12937, 9878, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 279, 28767, 315, 220, 24388, 3610, 13551, 315, 3308, 356, 5708, 369, 3938, 67599, 1234, 279, 63897, 220, 2366, 16, 12937, 9878, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1115, 7216, 649, 5536, 31499, 6, 41300, 315, 19371, 1516, 323, 20448, 18512, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bedd80>, 'json_data': {'input': [[18902, 79483, 25, 3028, 220, 2366, 19, 328, 43945, 11, 264, 13096, 315, 578, 23778, 1059, 11529, 484, 32886, 4953, 13, 2052, 3268, 4694, 627, 2014, 940, 1534, 73094, 25, 1115, 7065, 5406, 57876, 279, 20207, 3424, 3268, 315, 279, 2592, 315, 279, 4876, 828, 11, 82003, 279, 15637, 315, 279, 828, 323, 8405, 5897, 2317, 311, 279, 2038, 6222, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bede10>, 'json_data': {'input': [[18902, 79483, 25, 6515, 53929, 11, 10496, 66724, 11, 22538, 11, 323, 3512, 478, 42204, 527, 3062, 5540, 315, 1057, 8244, 13166, 8446, 323, 1005, 315, 6864, 11, 323, 1521, 14463, 1436, 387, 3769, 311, 1057, 6020, 3044, 323, 10565, 3135, 13, 1226, 1755, 311, 3136, 311, 15806, 323, 3810, 1139, 20954, 9002, 264, 7029, 1358, 315, 1778, 4754, 19092, 28904, 11, 902, 1436, 1893, 96691, 29412, 10565, 27129, 323, 53869, 13, 4427, 315, 279, 5789, 1405, 584, 3663, 15635, 2997, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 12939, 315, 63948, 11, 10496, 66724, 11, 323, 1023, 19092, 14463, 311, 63897, 596, 13166, 8446, 11, 1418, 1101, 61708, 279, 38088, 15635, 323, 11774, 814, 3118, 11, 6376, 709, 264, 11944, 6492, 315, 1884, 15635, 304, 279, 2768, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bedea0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 701, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bedf30>, 'json_data': {'input': [[18902, 79483, 25, 6909, 8105, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 9320, 1139, 330, 34590, 8105, 1, 315, 279, 2246, 11, 902, 11383, 5764, 810, 11944, 6020, 2038, 323, 6492, 13, 1102, 78864, 264, 6541, 304, 5357, 505, 279, 62469, 477, 25605, 13878, 315, 279, 1934, 311, 810, 3230, 6020, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bedfc0>, 'json_data': {'input': [[18902, 79483, 25, 2758, 6055, 311, 279, 41458, 369, 6807, 18151, 527, 11684, 311, 20900, 13, 2758, 6055, 311, 279, 41458, 369, 6763, 20746, 527, 11684, 2403, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 24043, 6514, 369, 38314, 311, 279, 41458, 369, 6807, 18151, 323, 6763, 20746, 13, 1102, 374, 4461, 961, 315, 279, 6020, 13122, 3857, 315, 279, 2246, 11, 8405, 26793, 1139, 1268, 279, 2883, 29972, 1202, 18512, 323, 13254, 18324, 11, 902, 374, 3062, 369, 15167, 323, 39210, 42118, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bee050>, 'json_data': {'input': [[18902, 79483, 25, 82108, 4067, 13220, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 18, 11, 420, 12143, 374, 264, 9302, 25829, 13, 1102, 8779, 311, 31335, 279, 2246, 323, 91784, 988, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bee0e0>, 'json_data': {'input': [[18902, 79483, 25, 578, 5376, 304, 1023, 2853, 315, 30466, 505, 220, 2366, 17, 311, 220, 2366, 18, 574, 15871, 4245, 311, 12992, 304, 2262, 24279, 7194, 11, 14090, 369, 13674, 11, 323, 20448, 18512, 11, 902, 5343, 400, 21848, 3610, 315, 10405, 5552, 311, 9548, 3285, 685, 5938, 449, 279, 14278, 304, 1057, 32027, 13, 23212, 11, 1023, 2853, 315, 30466, 56128, 505, 264, 14278, 304, 94189, 20900, 4245, 311, 279, 2349, 304, 13240, 5505, 6439, 315, 1057, 16692, 323, 4009, 7241, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 5376, 304, 1023, 7194, 315, 30466, 323, 5825, 3230, 10507, 11, 1778, 439, 2262, 24279, 7194, 323, 3285, 685, 10405, 13, 1102, 6835, 20616, 1139, 279, 2883, 596, 25605, 11774, 323, 2853, 6373, 9045, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bee170>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 21, 11, 420, 12143, 15151, 430, 279, 2768, 2262, 36716, 311, 279, 6771, 315, 36962, 11, 51346, 13016, 389, 1405, 814, 527, 304, 279, 8244, 2246, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bee200>, 'json_data': {'input': [[18902, 79483, 25, 14930, 5273, 77917, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 6762, 907, 22323, 11, 19392, 430, 433, 374, 264, 5199, 13189, 315, 63897, 596, 6020, 13122, 13, 1102, 7437, 279, 6566, 369, 264, 810, 11944, 10430, 389, 1268, 6762, 907, 374, 11075, 323, 21771, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bee290>, 'json_data': {'input': [[18902, 79483, 25, 220, 4370, 627, 2014, 940, 1534, 73094, 25, 9086, 921, 15655, 220, 16, 323, 220, 23, 11, 420, 12143, 15785, 279, 1212, 315, 264, 502, 3857, 477, 2199, 11, 4461, 19392, 2500, 9320, 304, 279, 6070, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bee320>, 'json_data': {'input': [[18902, 79483, 25, 2684, 617, 1027, 912, 4442, 304, 1057, 5419, 2585, 927, 6020, 13122, 430, 10222, 2391, 279, 8502, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 430, 617, 90694, 11754, 11, 477, 527, 29546, 4461, 311, 90694, 7958, 11, 1057, 5419, 2585, 927, 6020, 13122, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 43496, 430, 1070, 1051, 912, 5199, 4442, 304, 5419, 2585, 927, 6020, 13122, 2391, 279, 5300, 8502, 11, 23377, 20334, 304, 279, 2883, 596, 6020, 38189, 11618, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bee3b0>, 'json_data': {'input': [[18902, 79483, 25, 71760, 28674, 311, 279, 8670, 315, 279, 46272, 19224, 3298, 315, 220, 7285, 19, 11, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 706, 1027, 8667, 3770, 555, 279, 2768, 11434, 389, 17981, 315, 279, 75659, 519, 323, 304, 279, 59539, 323, 389, 279, 13003, 16717, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 40019, 279, 3857, 1405, 279, 33728, 315, 1401, 29509, 323, 28454, 315, 63897, 4953, 13, 527, 3611, 3366, 311, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 13, 1102, 66159, 8907, 449, 279, 46272, 19224, 3298, 315, 220, 7285, 19, 11, 50096, 430, 279, 2246, 706, 1027, 19073, 8667, 323, 14976, 555, 19144, 7931, 389, 17981, 315, 279, 75659, 519, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bee440>, 'json_data': {'input': [[18902, 79483, 25, 7327, 30466, 11, 902, 4097, 264, 5199, 13651, 315, 1057, 30466, 11, 527, 8965, 1380, 22955, 304, 5361, 36702, 323, 9093, 527, 11754, 555, 65649, 304, 7362, 11667, 9473, 7969, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 26431, 315, 6625, 30466, 323, 872, 14675, 311, 11667, 65649, 13, 1102, 7437, 279, 2317, 369, 8830, 279, 11774, 323, 38864, 304, 42118, 63897, 4953, 3238, 82, 6020, 3135, 11, 8104, 369, 3728, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bee4d0>, 'json_data': {'input': [[18902, 79483, 25, 8060, 311, 22829, 8518, 11, 19092, 477, 6020, 26470, 449, 5201, 311, 22538, 11, 10496, 66724, 11, 323, 1023, 19092, 28904, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 5326, 315, 22109, 311, 11322, 8518, 11, 19092, 11, 477, 6020, 26470, 304, 22538, 323, 10496, 66724, 13, 1102, 18809, 2949, 279, 2317, 315, 279, 8244, 10430, 389, 279, 4754, 82075, 323, 11774, 5938, 449, 34118, 19092, 6650, 28271, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bee560>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 13, 71046, 5257, 74006, 59351, 9182, 25338, 27267, 6340, 23233, 29863, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 72214, 279, 3857, 315, 279, 2246, 430, 5764, 279, 8554, 311, 279, 60391, 6020, 12518, 13, 1115, 3857, 5825, 7718, 20064, 7174, 11, 10396, 11, 323, 5217, 3649, 430, 1862, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bee5f0>, 'json_data': {'input': [[18902, 79483, 25, 81019, 1534, 480, 1771, 81019, 1534, 19620, 29553, 320, 40938, 288, 8, 389, 480, 1771, 320, 40938, 288, 8, 39141, 16528, 15548, 6354, 1604, 389, 23139, 23260, 28295, 1392, 77990, 473, 17327, 10884, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 15, 400, 320, 19355, 8, 400, 220, 16, 11, 21018, 400, 320, 7322, 8, 400, 220, 23736, 7089, 16195, 8070, 320, 9563, 8, 1603, 312, 1058, 7174, 320, 16, 11, 20502, 8, 320, 16, 11, 13384, 8, 220, 24427, 320, 17, 11, 26956, 8, 26868, 82, 28544, 505, 279, 15813, 315, 42766, 27375, 12715, 304, 362, 65083, 220, 15, 220, 15, 220, 2166, 220, 2166, 26868, 82, 312, 65974, 505, 362, 65083, 220, 15, 320, 1227, 8, 320, 10559, 8, 320, 13302, 8, 7089, 16195, 8070, 320, 9563, 8, 320, 16, 11, 20502, 8, 320, 16, 11, 18322, 8, 220, 19242, 320, 17, 11, 4146, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 16, 320, 17, 11, 12879, 8, 220, 14087, 220, 20800, 320, 16, 11, 22801, 8, 7089, 16195, 8070, 320, 9563, 8, 1603, 312, 1058, 7174, 320, 16, 11, 25192, 8, 320, 19, 11, 13104, 8, 220, 16, 11, 21290, 320, 20, 11, 25202, 8, 26868, 82, 28544, 505, 279, 15813, 315, 42766, 27375, 12715, 304, 362, 65083, 220, 15, 220, 15, 320, 9367, 8, 320, 9367, 8, 26868, 82, 312, 65974, 505, 362, 65083, 220, 15, 220, 16, 11, 11194, 320, 16, 11, 22457, 8, 320, 23459, 8, 7089, 16195, 8070, 320, 9563, 8, 320, 16, 11, 25192, 8, 320, 18, 11, 22977, 8, 320, 19852, 8, 320, 20, 11, 19068, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 320, 19, 11, 10239, 8, 320, 18, 11, 21144, 8, 220, 845, 320, 22, 11, 21006, 8, 7089, 16195, 8070, 320, 9563, 8, 1603, 312, 1058, 7174, 220, 24939, 220, 16, 11, 17451, 220, 5833, 220, 17, 11, 9892, 26868, 82, 28544, 505, 279, 15813, 315, 42766, 27375, 12715, 304, 362, 65083, 220, 15, 220, 15, 220, 5833, 220, 5833, 26868, 82, 312, 65974, 505, 362, 65083, 220, 15, 220, 16, 11, 8953, 320, 11584, 8, 220, 25741, 7089, 16195, 8070, 320, 9563, 8, 220, 24939, 220, 17, 11, 8358, 320, 2790, 8, 220, 18, 11, 679, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 400, 320, 18, 11, 18501, 8, 400, 320, 24837, 8, 400, 320, 966, 8, 400, 320, 19, 11, 16496, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 31085, 315, 362, 65083, 6956, 927, 5361, 18852, 11, 94012, 4442, 304, 50204, 1534, 20192, 323, 18151, 505, 220, 2366, 15, 311, 220, 2366, 18, 13, 1102, 66251, 4861, 279, 6020, 5178, 323, 5326, 14675, 315, 63897, 4953, 13, 1555, 5370, 16195, 8070, 34074, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bee680>, 'json_data': {'input': [[18902, 79483, 25, 23139, 6530, 42766, 15055, 5343, 304, 279, 15813, 315, 42766, 27375, 527, 27334, 304, 362, 65083, 323, 28520, 312, 65974, 311, 13254, 994, 279, 61316, 3640, 1537, 374, 15324, 304, 24608, 13, 1226, 22429, 4741, 3585, 323, 892, 907, 505, 1057, 15813, 315, 42766, 27375, 323, 93364, 553, 1124, 389, 264, 7833, 8614, 8197, 927, 279, 2324, 315, 279, 61316, 3252, 14473, 304, 30466, 13, 578, 6811, 1990, 6762, 907, 4442, 315, 279, 28544, 3777, 323, 279, 3392, 93364, 1534, 311, 30466, 374, 12715, 304, 362, 65083, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 24043, 6514, 369, 8515, 6530, 42766, 15055, 11, 26073, 1268, 814, 527, 12715, 323, 312, 65974, 13, 1102, 22020, 279, 5133, 1990, 42766, 27375, 323, 13254, 18324, 11, 8405, 26793, 1139, 279, 5536, 315, 305, 17327, 389, 8244, 6020, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bee710>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1047, 10195, 653, 85408, 8554, 19310, 449, 264, 2860, 15691, 907, 315, 400, 717, 13, 24, 7239, 449, 2875, 9860, 323, 1317, 9860, 3938, 2802, 14507, 315, 400, 11584, 3610, 323, 400, 18, 13, 21, 7239, 11, 15947, 13, 1789, 5217, 2038, 11, 1518, 7181, 220, 21, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3649, 922, 63897, 4953, 3238, 82, 6020, 30255, 11, 11951, 9002, 10195, 653, 85408, 8554, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 22020, 279, 15691, 907, 315, 1521, 8554, 323, 3938, 2802, 14507, 11, 19392, 279, 2883, 596, 11897, 6671, 13, 1115, 2038, 374, 9959, 311, 15167, 323, 39210, 47614, 279, 2883, 596, 6020, 2890, 323, 6864, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bee7a0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 2262, 28506, 20038, 449, 3938, 8521, 477, 8187, 19883, 42356, 315, 400, 605, 13, 21, 7239, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 315, 902, 279, 8857, 374, 7318, 927, 8254, 1667, 13696, 304, 279, 1176, 8502, 315, 220, 9639, 15, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 2038, 922, 279, 2883, 596, 2262, 28506, 20038, 11, 10484, 7922, 279, 2860, 42356, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 66159, 279, 6020, 30255, 430, 690, 387, 9041, 927, 279, 1828, 3892, 1667, 11, 902, 374, 16996, 369, 47614, 3938, 8515, 28555, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bee830>, 'json_data': {'input': [[18902, 79483, 25, 5195, 3804, 31066, 11, 96209, 11, 323, 41477, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17738, 264, 3230, 3857, 2949, 279, 1934, 430, 24400, 389, 279, 30466, 8066, 505, 5195, 41455, 11, 15771, 11, 323, 7766, 13, 1102, 13533, 430, 279, 17876, 2262, 690, 37067, 389, 1521, 13254, 23914, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bee8c0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 312, 2058, 988, 279, 34512, 1697, 13189, 315, 279, 2246, 11, 1578, 8405, 264, 2007, 315, 8970, 369, 14553, 315, 2680, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bee950>, 'json_data': {'input': [[18902, 79483, 25, 763, 279, 2007, 3485, 11, 15393, 4272, 8895, 320, 9563, 8, 389, 25452, 34919, 6216, 2391, 279, 4261, 27053, 279, 6811, 1990, 279, 6412, 34555, 323, 279, 15691, 907, 315, 279, 25452, 34919, 520, 279, 7314, 315, 279, 4261, 477, 279, 7782, 2457, 11, 422, 3010, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 1749, 369, 38714, 15393, 4272, 20192, 477, 18151, 389, 25452, 34919, 6216, 11, 902, 374, 961, 315, 279, 8244, 6020, 5178, 6492, 13, 1102, 374, 9959, 304, 279, 2317, 315, 25452, 22538, 323, 8779, 311, 38263, 1268, 279, 6020, 3135, 527, 17303, 323, 5068, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bee9e0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 8471, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 21760, 389, 5195, 8471, 11, 22824, 4954, 5370, 13254, 23914, 1234, 420, 48998, 323, 19392, 1202, 26431, 304, 63897, 4953, 3238, 82, 8244, 6020, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62beea70>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3997, 374, 7559, 520, 8604, 13, 13997, 56799, 11, 323, 1057, 30693, 4398, 3997, 374, 7559, 520, 8604, 13, 13997, 56799, 18480, 7164, 269, 13, 9742, 311, 1057, 25992, 29140, 389, 3459, 220, 605, 16222, 11, 75483, 29140, 389, 3459, 220, 605, 29342, 11, 9303, 29140, 389, 3459, 220, 23, 16222, 11, 323, 1057, 33878, 70816, 11, 323, 904, 41693, 311, 1521, 6821, 11, 374, 2561, 389, 1057, 30693, 4398, 3997, 11, 1949, 315, 6900, 11, 1306, 584, 1052, 477, 52259, 1124, 449, 279, 22370, 323, 814, 527, 2561, 389, 279, 22370, 596, 3997, 520, 8604, 55794, 14489, 627, 2014, 940, 1534, 73094, 25, 1115, 1495, 5825, 3230, 36106, 311, 63897, 4953, 3238, 82, 1925, 3997, 323, 30693, 4398, 2816, 11, 45293, 1405, 39210, 649, 2680, 1401, 6020, 9477, 13, 1115, 2038, 374, 7718, 369, 15167, 323, 31499, 15194, 279, 2883, 596, 5178, 323, 8907, 449, 23331, 8670, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62beeb00>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 5651, 220, 966, 11, 220, 2366, 18, 11, 279, 24069, 3157, 907, 315, 13551, 5762, 555, 2536, 71260, 4008, 988, 315, 279, 23702, 519, 320, 31039, 5304, 279, 15676, 6412, 7729, 315, 1778, 13551, 389, 279, 39322, 74307, 8121, 8593, 8152, 389, 5651, 220, 966, 11, 220, 2366, 18, 8, 574, 13489, 400, 16, 11, 16707, 13, 17, 7239, 13, 1789, 10096, 315, 38714, 279, 24069, 3157, 907, 315, 13551, 5762, 555, 2536, 71260, 4008, 988, 11, 584, 617, 19655, 430, 682, 19310, 13551, 527, 5762, 555, 2536, 71260, 4008, 988, 11, 3734, 369, 13551, 5762, 555, 1855, 315, 1057, 11145, 9808, 11, 28454, 11, 323, 220, 20, 4, 477, 7191, 5708, 17075, 13, 763, 279, 1162, 315, 220, 20, 4, 477, 7191, 5708, 17075, 11, 584, 617, 539, 25660, 1778, 5708, 17075, 311, 387, 32133, 7389, 1070, 527, 13363, 323, 13463, 902, 1053, 13519, 430, 1778, 5708, 17075, 10368, 904, 2585, 927, 1057, 2883, 11, 477, 7389, 814, 3412, 220, 605, 4, 477, 810, 315, 1057, 19310, 4279, 5708, 13, 4314, 32946, 1288, 539, 387, 25660, 311, 35256, 459, 26360, 430, 682, 11145, 9808, 11, 28454, 11, 323, 220, 20, 4, 477, 7191, 5708, 17075, 527, 11, 304, 2144, 11, 32133, 315, 1057, 2883, 11, 477, 430, 1070, 527, 539, 1023, 11434, 889, 1253, 387, 25660, 311, 387, 32133, 315, 1057, 2883, 13, 15903, 2038, 18815, 4430, 6416, 826, 315, 1057, 9808, 11, 28454, 11, 323, 12717, 5708, 17075, 374, 5343, 477, 32762, 555, 5905, 304, 3744, 14767, 11, 5858, 220, 717, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 16694, 315, 63897, 4953, 3238, 82, 3157, 6864, 2065, 439, 315, 5651, 220, 966, 11, 220, 2366, 18, 13, 1102, 35434, 279, 24069, 3157, 907, 315, 13551, 5762, 555, 2536, 71260, 4008, 988, 11, 902, 374, 264, 9200, 6767, 315, 279, 2883, 596, 6020, 2890, 323, 30693, 2802, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62beeb90>, 'json_data': {'input': [[18902, 79483, 25, 10423, 48338, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 62569, 48338, 1, 3857, 315, 279, 2246, 11, 19392, 430, 279, 2768, 2262, 690, 2686, 279, 5897, 323, 23331, 18921, 28987, 63897, 596, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62beec20>, 'json_data': {'input': [[18902, 79483, 25, 578, 5376, 304, 350, 1741, 505, 220, 2366, 17, 311, 220, 2366, 18, 574, 14090, 4245, 311, 459, 5376, 304, 350, 1741, 7318, 311, 8141, 8717, 11, 15871, 16625, 555, 6650, 304, 30466, 3917, 311, 350, 1741, 13, 578, 350, 1741, 4478, 25983, 505, 220, 1691, 13, 23, 4, 311, 220, 1691, 13, 19, 4, 505, 220, 2366, 17, 311, 220, 2366, 18, 15871, 4245, 311, 264, 13254, 6651, 6541, 505, 5195, 8304, 6012, 311, 5195, 7694, 612, 1023, 6012, 13, 578, 350, 1741, 4478, 389, 5195, 7694, 612, 1023, 30466, 323, 279, 350, 1741, 4478, 389, 5195, 8304, 30466, 1051, 2225, 32302, 13263, 505, 220, 2366, 17, 311, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 8125, 4920, 279, 5376, 304, 350, 1741, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 8405, 2317, 369, 8830, 279, 2883, 596, 12135, 449, 8141, 8717, 323, 279, 5536, 315, 13254, 6651, 29735, 389, 2853, 14726, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62beecb0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1101, 617, 20448, 28904, 449, 90629, 3196, 389, 15393, 4780, 505, 3738, 22538, 11, 602, 1770, 13, 5178, 12718, 13, 1226, 3335, 20448, 20900, 3196, 389, 279, 13240, 90629, 389, 459, 14529, 8197, 11, 902, 1253, 1121, 304, 20900, 15324, 1603, 9341, 4780, 527, 15393, 323, 20448, 374, 7318, 323, 1253, 1397, 279, 1005, 315, 653, 34595, 11374, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 14564, 20448, 28904, 17791, 311, 9341, 5178, 13, 1102, 15100, 1268, 1778, 28904, 5536, 6020, 13122, 323, 279, 1205, 369, 17989, 3196, 389, 30199, 4780, 11, 902, 5825, 20616, 1139, 279, 2883, 596, 20448, 8446, 323, 6020, 9293, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62beed40>, 'json_data': {'input': [[18902, 79483, 25, 14930, 5273, 473, 17327, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 14930, 5273, 473, 17327, 3857, 11, 19392, 264, 9320, 311, 25394, 2500, 955, 315, 61316, 3252, 8446, 20011, 555, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62beedd0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 4442, 304, 58191, 2065, 17150, 369, 5195, 7694, 612, 1023, 30466, 320, 35778, 28849, 323, 2853, 17453, 29218, 8, 323, 5195, 8304, 30466, 320, 318, 40973, 323, 2853, 17453, 38025, 4099, 705, 13605, 439, 264, 11668, 11, 505, 220, 2366, 17, 311, 220, 2366, 18, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 18911, 4442, 304, 58191, 2065, 17150, 369, 5195, 7694, 612, 1023, 323, 5195, 8304, 30466, 13, 1102, 7437, 279, 6566, 369, 264, 47616, 6492, 315, 7318, 28849, 323, 51091, 11, 902, 527, 7718, 34824, 315, 5195, 596, 13172, 5178, 927, 279, 5300, 4261, 11, 29820, 311, 279, 8244, 8830, 315, 279, 2883, 596, 13254, 8336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62beee60>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 10565, 8070, 315, 400, 16, 13, 22, 7239, 369, 220, 2366, 18, 7863, 311, 459, 10565, 4814, 315, 400, 16, 13, 24, 7239, 369, 220, 2366, 17, 11105, 459, 5376, 315, 400, 18, 13, 21, 7239, 13, 578, 5376, 304, 10565, 8070, 574, 15871, 16625, 555, 459, 5376, 304, 30466, 11, 26310, 4445, 555, 459, 5376, 304, 20448, 18512, 14090, 16625, 555, 2010, 1868, 6650, 13, 23212, 11, 10565, 8070, 56128, 505, 264, 14278, 304, 7194, 16625, 555, 279, 2349, 304, 279, 13240, 5505, 6439, 315, 1057, 16692, 323, 3738, 4009, 7241, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 6020, 67610, 315, 5195, 15161, 11, 9204, 264, 3351, 505, 459, 10565, 4814, 311, 63336, 13, 1102, 50729, 279, 13254, 6650, 323, 2853, 30295, 11, 902, 527, 16996, 369, 38663, 279, 10449, 596, 5178, 323, 19035, 311, 63897, 596, 8244, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62beeef0>, 'json_data': {'input': [[18902, 79483, 25, 26262, 9313, 25, 26262, 9313, 7016, 11, 2737, 279, 10013, 753, 1561, 27359, 369, 83091, 11, 902, 1436, 1121, 304, 33384, 31086, 323, 1893, 264, 2134, 315, 502, 8907, 30255, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 14564, 11761, 9313, 7016, 430, 63897, 4953, 13, 2011, 26069, 449, 11, 45391, 279, 10013, 753, 1561, 27359, 369, 83091, 13, 1102, 66159, 279, 4754, 369, 7319, 8907, 30255, 323, 6020, 31086, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62beef80>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3663, 19428, 10937, 13, 1442, 584, 656, 539, 3136, 311, 92064, 323, 3493, 3956, 323, 3600, 430, 527, 5505, 311, 3932, 11, 6444, 11, 323, 1023, 8717, 11, 584, 1253, 539, 7293, 15022, 11, 902, 1436, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7057, 315, 19428, 10937, 11, 31692, 279, 1205, 369, 63897, 4953, 13, 311, 31978, 92064, 13, 1102, 7437, 279, 6566, 369, 264, 10430, 922, 279, 2883, 753, 15022, 15174, 323, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bef010>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bef0a0>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 975, 13, 33620, 72837, 198, 2014, 940, 1534, 73094, 25, 1115, 15785, 279, 7314, 315, 264, 3857, 10968, 389, 33620, 72837, 11, 19392, 430, 279, 2768, 27855, 690, 3493, 11944, 2038, 9002, 63897, 4953, 3238, 82, 3827, 14228, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bef130>, 'json_data': {'input': [[18902, 79483, 25, 9558, 8515, 3984, 555, 10565, 7640, 7319, 505, 220, 2366, 17, 311, 220, 2366, 18, 4245, 311, 279, 5376, 304, 8515, 4036, 505, 6444, 11, 26310, 4445, 555, 12992, 304, 8515, 7318, 369, 2853, 315, 30466, 323, 10565, 18512, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 35434, 279, 2349, 304, 4272, 8515, 3984, 555, 10565, 7640, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 19392, 6020, 6650, 323, 25605, 15374, 1418, 27401, 279, 9547, 430, 28160, 8515, 6530, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bef1c0>, 'json_data': {'input': [[18902, 79483, 25, 459, 42028, 7362, 4947, 18921, 430, 1253, 69214, 7958, 1057, 30466, 323, 1436, 3917, 603, 311, 39725, 11, 502, 23331, 7194, 323, 11774, 320, 16564, 502, 6130, 8670, 705, 27924, 9002, 23331, 20124, 11, 323, 1023, 58165, 1234, 2254, 7016, 430, 1253, 539, 3085, 4245, 1920, 477, 2867, 5897, 47891, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 42028, 7362, 4947, 18921, 323, 1202, 4754, 311, 48291, 5536, 13254, 323, 23331, 8907, 369, 63897, 13, 1102, 15151, 430, 279, 10223, 5897, 4676, 1253, 19678, 69867, 430, 1436, 7958, 279, 2883, 596, 7677, 323, 28423, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bef250>, 'json_data': {'input': [[18902, 79483, 25, 220, 2366, 19, 400, 220, 18, 11, 11128, 220, 2366, 20, 220, 17, 11, 25344, 220, 2366, 21, 220, 17, 11, 10617, 220, 2366, 22, 220, 16, 11, 24989, 220, 2366, 23, 220, 16, 11, 21310, 2684, 10924, 220, 20, 11, 23717, 10884, 3938, 26120, 14507, 220, 1114, 11, 25178, 9865, 737, 19849, 2802, 320, 17, 11, 19852, 8, 10884, 26120, 24305, 8335, 400, 220, 868, 11, 13860, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 3938, 26120, 8323, 9899, 11, 15061, 1523, 279, 15055, 4245, 304, 1855, 1060, 13, 1102, 11263, 279, 3766, 12143, 323, 17482, 311, 3493, 264, 49479, 6945, 315, 279, 2883, 596, 25605, 26120, 58165, 323, 872, 1317, 9860, 6020, 9293, 11, 2737, 279, 2860, 26120, 24305, 1306, 24043, 369, 737, 19849, 2802, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bef2e0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 22864, 82746, 311, 13122, 8316, 3196, 389, 279, 3685, 8935, 505, 279, 2626, 10824, 13, 1226, 15806, 1057, 13122, 8316, 48582, 11, 439, 1664, 439, 994, 4442, 304, 1057, 10565, 21282, 12446, 13, 1789, 4442, 304, 13122, 8316, 11, 584, 312, 7128, 82746, 1701, 264, 8844, 6762, 907, 24691, 5603, 13, 1226, 1296, 1057, 82746, 369, 53317, 520, 3325, 30171, 11, 477, 810, 14134, 422, 4455, 477, 4442, 304, 13463, 13519, 430, 279, 9513, 1253, 387, 50160, 13, 7839, 14724, 38974, 1392, 1051, 539, 3769, 369, 279, 18852, 10666, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 10396, 14932, 279, 24691, 323, 16865, 315, 82746, 2949, 63897, 4953, 3238, 82, 6020, 12518, 13, 1102, 16964, 279, 1920, 315, 7649, 82746, 369, 53317, 11, 902, 374, 7718, 369, 23391, 430, 279, 5068, 907, 315, 82746, 27053, 1202, 6762, 907, 323, 374, 539, 83509, 660, 304, 279, 6020, 6821, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bef370>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 13031, 344, 5983, 24073, 439, 61316, 3252, 24198, 25, 19620, 9473, 17517, 23139, 6530, 305, 17327, 400, 220, 868, 11, 24425, 400, 220, 972, 11, 21602, 14930, 907, 305, 17327, 400, 220, 17, 11, 8546, 400, 220, 17, 11, 26478, 9558, 9341, 305, 17327, 400, 220, 23, 11, 23986, 400, 220, 24, 11, 21757, 13031, 344, 5983, 539, 24073, 439, 61316, 3252, 24198, 25, 19620, 9473, 17517, 400, 220, 1958, 11, 25476, 400, 220, 2137, 11, 23024, 7089, 17517, 400, 220, 22, 11, 25401, 400, 220, 605, 11, 23141, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 12678, 5552, 311, 19310, 43645, 71974, 439, 61316, 3252, 24198, 323, 1884, 539, 24073, 439, 61316, 3252, 24198, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 374, 264, 961, 315, 264, 6020, 28957, 430, 46480, 279, 2883, 596, 5326, 6373, 15174, 323, 872, 6020, 25127, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bef400>, 'json_data': {'input': [[18902, 79483, 25, 578, 2860, 13240, 6762, 907, 315, 279, 19310, 8554, 574, 13489, 400, 24, 13, 24, 7239, 323, 400, 605, 13, 18, 7239, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 6790, 220, 2148, 11, 220, 2366, 18, 11, 15947, 13, 578, 6762, 907, 574, 11075, 3196, 389, 40635, 3157, 7729, 315, 20086, 24198, 304, 2753, 4642, 11987, 323, 374, 71974, 28178, 439, 9580, 220, 17, 304, 279, 6762, 907, 30022, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 13240, 6762, 907, 315, 279, 19310, 8554, 11, 26073, 1268, 433, 374, 11075, 323, 71974, 2949, 279, 6762, 907, 30022, 13, 1115, 2038, 374, 5199, 369, 8830, 279, 3157, 21063, 315, 279, 2883, 753, 11897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bef490>, 'json_data': {'input': [[18902, 79483, 25, 25218, 5195, 15161, 11, 584, 48772, 5199, 5070, 311, 2274, 323, 10739, 1057, 20790, 65015, 9624, 3600, 11, 2737, 5195, 15161, 17916, 323, 5195, 72034, 11, 323, 584, 527, 44169, 1057, 15592, 15771, 323, 4211, 311, 1862, 1521, 7526, 323, 14645, 13, 1226, 527, 304, 46839, 7194, 311, 1977, 323, 10519, 14054, 311, 1862, 9624, 25213, 3600, 11, 2793, 304, 62542, 11, 323, 18467, 11005, 11, 8104, 311, 1862, 323, 5569, 1057, 6763, 5457, 13, 2468, 279, 1890, 892, 11, 1057, 28650, 527, 19019, 11469, 323, 61417, 9624, 6108, 3600, 13, 60426, 323, 9889, 4211, 527, 15022, 323, 15320, 42028, 11, 323, 584, 1253, 539, 36861, 14343, 5569, 323, 63336, 311, 11322, 1057, 2626, 26470, 13, 15903, 11, 1057, 2626, 449, 586, 10706, 6444, 1253, 3118, 5217, 15635, 11, 2737, 23331, 8907, 15635, 13, 1789, 2937, 11, 584, 1253, 387, 3917, 311, 3109, 75620, 323, 2853, 8544, 11, 323, 904, 8060, 311, 26069, 477, 904, 72946, 1766, 1253, 29241, 603, 311, 5897, 11, 6020, 11, 323, 5255, 43839, 1697, 15635, 13, 10641, 20222, 7016, 323, 14640, 1253, 1397, 603, 311, 1304, 502, 6864, 22538, 11, 1977, 502, 3956, 11, 323, 6056, 8717, 311, 6493, 44589, 3600, 304, 1023, 5961, 11, 323, 584, 1253, 539, 387, 3025, 311, 3449, 46384, 10565, 8670, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 16964, 5195, 596, 22538, 304, 9624, 3600, 323, 279, 5938, 11774, 11, 2737, 19428, 10937, 323, 23331, 8907, 15635, 13, 1102, 72890, 279, 19092, 12939, 315, 1521, 3600, 1418, 39686, 4754, 32116, 311, 32145, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bef520>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 42271, 315, 279, 52678, 11, 6522, 1139, 4726, 3230, 17078, 5552, 311, 279, 2883, 596, 2626, 4676, 323, 3157, 30295, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bef5b0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 510, 2028, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 2038, 25750]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bef640>, 'json_data': {'input': [[18902, 79483, 25, 9629, 6650, 304, 24084, 11987, 7863, 311, 810, 15196, 11987, 323, 4028, 5370, 12414, 82, 323, 12006, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 9629, 6650, 304, 24084, 11987, 7863, 311, 810, 15196, 11987, 439, 264, 9959, 8331, 66700, 5195, 596, 13172, 30466, 11, 23377, 430, 54001, 18845, 649, 12207, 5536, 8244, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bef6d0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 4461, 40019, 63897, 4953, 2637, 279, 2748, 2883, 315, 5195, 11, 6376, 279, 6566, 369, 279, 17876, 2262, 304, 279, 2246, 11, 2737, 3649, 922, 279, 2883, 596, 7677, 11, 6020, 5178, 11, 323, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bef760>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 26, 912, 1495, 311, 24564, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bef7f0>, 'json_data': {'input': [[18902, 79483, 25, 220, 4370, 627, 2014, 940, 1534, 73094, 25, 9086, 921, 15655, 220, 16, 323, 220, 23, 11, 420, 12143, 15785, 279, 1212, 315, 264, 502, 3857, 477, 2199, 11, 4461, 19392, 2500, 9320, 304, 279, 6070, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bef880>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 311, 3493, 2317, 369, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bef910>, 'json_data': {'input': [[18902, 79483, 25, 77990, 2206, 40412, 520, 14930, 5273, 389, 264, 4158, 21081, 70128, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 30202, 430, 279, 2768, 2038, 690, 281, 7770, 311, 22538, 430, 527, 17303, 520, 6762, 907, 389, 264, 46350, 8197, 11, 19392, 264, 5357, 389, 1268, 279, 2883, 29972, 323, 6821, 1202, 9341, 20136, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62bef9a0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1627, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5084, 311, 387, 264, 2199, 1396, 477, 264, 3857, 11381, 304, 279, 2246, 11, 11000, 19392, 264, 9320, 311, 264, 502, 3857, 477, 264, 42271, 315, 264, 3766, 3857, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62befa30>, 'json_data': {'input': [[18902, 79483, 25, 7837, 16976, 53076, 3083, 356, 2864, 1112, 24093, 220, 20, 30237, 21176, 48062, 31980, 9, 8927, 11079, 1905, 1372, 18610, 13, 29039, 362, 67777, 83751, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 279, 2316, 315, 279, 4876, 430, 11263, 11, 11951, 21760, 389, 279, 40944, 4330, 4771, 2860, 471, 315, 63897, 4953, 13, 3308, 362, 4279, 5708, 13, 1115, 2316, 8779, 13016, 3619, 1148, 828, 279, 4876, 690, 41468, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62befac0>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 584, 690, 3136, 311, 3663, 60487, 23331, 36752, 323, 4442, 304, 23331, 4787, 11, 7016, 11, 323, 586, 10396, 11, 902, 1436, 7958, 1057, 2626, 12659, 323, 6020, 3135, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 27053, 279, 2883, 596, 50919, 315, 7319, 23331, 36752, 323, 10223, 7016, 13, 1102, 374, 961, 315, 279, 5326, 9547, 323, 4741, 31348, 12518, 11, 19392, 1268, 1778, 4442, 1436, 7958, 63897, 596, 2626, 12659, 323, 6020, 20124, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62befb50>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 264, 8205, 315, 13426, 323, 3827, 4526, 30255, 304, 279, 549, 815, 13, 323, 12387, 7362, 56043, 13, 5751, 7524, 3827, 7969, 527, 11754, 555, 264, 8205, 315, 9547, 11, 2737, 4442, 304, 279, 6651, 315, 24608, 304, 56043, 449, 2204, 45530, 3827, 7969, 11, 4272, 20192, 323, 18151, 389, 305, 17327, 323, 5552, 14463, 1234, 1057, 7362, 9473, 5326, 6373, 2068, 11, 4442, 304, 1057, 5708, 3430, 369, 13551, 11136, 439, 9548, 20448, 11, 4442, 304, 279, 51262, 315, 1057, 27334, 3827, 12032, 477, 58165, 11, 323, 279, 3851, 315, 2204, 19705, 315, 3827, 7016, 477, 4442, 304, 3827, 7016, 11, 14640, 11, 477, 24043, 16565, 320, 16564, 4442, 304, 279, 23692, 315, 6484, 7016, 570, 15903, 11, 422, 584, 527, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 5370, 3827, 30255, 279, 2883, 12580, 4028, 56043, 11, 45293, 279, 9547, 430, 10383, 1202, 7524, 3827, 7969, 13, 1102, 66159, 279, 23965, 315, 3827, 8907, 323, 279, 4754, 369, 3938, 58165, 11, 29820, 311, 279, 27927, 6020, 5326, 19775, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62befbe0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 578, 330, 2620, 315, 36962, 1, 5825, 264, 34030, 24131, 315, 279, 14491, 323, 3673, 5343, 304, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 369, 63897, 4953, 13, 369, 279, 20323, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 17482, 439, 264, 69917, 369, 13016, 311, 21546, 279, 2246, 30820, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62befc70>, 'json_data': {'input': [[18902, 79483, 25, 10314, 1741, 13254, 6650, 574, 81383, 2915, 11754, 555, 4442, 304, 7362, 11667, 9473, 7969, 11, 15871, 4245, 311, 279, 549, 815, 13, 18160, 48513, 8844, 311, 279, 11002, 58440, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 93071, 6372, 315, 11667, 9473, 7969, 389, 10314, 1741, 320, 39563, 64976, 8, 13254, 6650, 11, 7999, 2317, 311, 279, 15481, 5178, 6492, 323, 94012, 1268, 9434, 9547, 649, 10383, 6020, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62befd00>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 10968, 389, 4857, 459, 1524, 810, 11190, 5195, 369, 5127, 11, 323, 584, 84611, 311, 3041, 5127, 279, 7526, 814, 1205, 311, 5376, 872, 6677, 11, 2890, 11, 23871, 11, 323, 2450, 13, 5195, 7694, 8779, 1274, 1505, 2038, 323, 1304, 5647, 315, 279, 1917, 304, 810, 5933, 323, 42779, 5627, 11, 449, 490, 91387, 315, 27573, 389, 5195, 1475, 1060, 13, 13674, 5825, 1274, 449, 16924, 11, 2038, 11, 323, 10708, 311, 4048, 2555, 502, 13, 5195, 22103, 6209, 279, 1888, 1648, 311, 636, 2574, 2884, 61440, 4028, 2204, 7766, 11, 8405, 25530, 1520, 6957, 264, 1732, 596, 1938, 11, 912, 5030, 1405, 814, 527, 13, 5195, 15161, 8779, 6444, 11886, 3432, 753, 2626, 11774, 11, 7417, 26206, 11, 8108, 7194, 11, 323, 15405, 502, 6650, 21787, 13, 1226, 527, 35611, 9721, 1113, 323, 4857, 502, 3956, 323, 4519, 430, 690, 1520, 1057, 3932, 11, 8717, 11, 6444, 11, 323, 10977, 323, 617, 29091, 810, 1109, 400, 3965, 7239, 304, 3495, 323, 4500, 304, 279, 1566, 4330, 1667, 304, 1862, 315, 1521, 9045, 627, 2014, 940, 1534, 73094, 25, 763, 420, 13651, 11, 279, 2246, 25985, 988, 389, 3230, 5195, 3956, 323, 3600, 11, 82003, 872, 15919, 323, 5536, 389, 3932, 6, 7446, 6439, 13, 1115, 4726, 46480, 63897, 596, 15507, 311, 19297, 323, 9341, 304, 432, 33465, 311, 18885, 1202, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62befd90>, 'json_data': {'input': [[18902, 79483, 25, 1226, 7068, 13172, 30466, 15871, 555, 24944, 13172, 389, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 311, 7872, 279, 6156, 8336, 315, 13172, 13254, 369, 63897, 11, 39686, 279, 2204, 15771, 323, 3600, 1405, 43749, 527, 12886, 13, 1115, 2317, 374, 7718, 369, 8830, 279, 58321, 315, 63897, 596, 13172, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62befe20>, 'json_data': {'input': [[18902, 79483, 25, 78909, 1579, 22867, 2262, 13, 62697, 1005, 315, 15592, 304, 1057, 33935, 323, 5419, 6067, 1253, 1893, 502, 73234, 315, 11737, 369, 3958, 20142, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 2262, 4367, 11, 33018, 15592, 439, 264, 8331, 430, 1253, 1391, 49895, 279, 18468, 315, 50162, 13, 1102, 17738, 264, 4741, 31348, 4747, 922, 1268, 83787, 304, 5557, 649, 387, 51763, 11, 902, 34161, 1203, 311, 279, 2246, 596, 5357, 389, 19297, 323, 10937, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62befeb0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 527, 40056, 315, 279, 2768, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3063, 3502, 311, 7872, 279, 6956, 315, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 11, 8405, 459, 24131, 315, 279, 5370, 8336, 315, 8070, 2949, 420, 5699, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62beff40>, 'json_data': {'input': [[18902, 79483, 25, 29240, 304, 3674, 11, 5054, 11, 7100, 11, 3827, 11, 323, 23331, 4787, 477, 304, 7016, 323, 10396, 10217, 264, 7029, 2134, 315, 13650, 323, 5552, 5897, 13146, 11, 2737, 26969, 11, 43986, 11, 323, 23331, 6299, 11, 617, 19543, 304, 35018, 323, 9057, 603, 311, 2349, 1057, 2626, 12659, 13, 1666, 1521, 3728, 18845, 3136, 11, 1057, 2853, 315, 3815, 2626, 1253, 5376, 11, 1057, 5845, 311, 23564, 3738, 2626, 4211, 477, 3085, 3738, 3956, 477, 3600, 1253, 387, 7347, 11, 323, 584, 1253, 1205, 311, 2349, 1057, 2626, 12659, 311, 26069, 449, 42028, 23331, 323, 5897, 13146, 13, 26379, 2997, 279, 3276, 85971, 21859, 13019, 555, 279, 549, 815, 13, 6011, 315, 12007, 323, 264, 1396, 315, 1614, 7867, 27910, 3331, 26, 27743, 25243, 323, 15639, 39725, 304, 279, 549, 815, 2637, 10013, 11, 323, 2212, 279, 1917, 430, 1436, 57160, 477, 22472, 6220, 57511, 9313, 369, 13335, 323, 2930, 15771, 26, 323, 279, 14434, 47910, 3298, 323, 14434, 8471, 3298, 304, 4606, 323, 5370, 27743, 25243, 304, 279, 549, 815, 13, 10968, 389, 3544, 5557, 15771, 13, 1789, 5217, 2038, 11, 1518, 5858, 220, 16, 32, 32388, 68318, 323, 25705, 58364, 304, 7181, 220, 605, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 3744, 8105, 11, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 23331, 11774, 9932, 8767, 11, 45293, 279, 5370, 9434, 40850, 63897, 12580, 11, 2737, 3276, 85971, 4819, 323, 27743, 4442, 13, 1102, 22020, 279, 4754, 6020, 323, 25605, 16296, 315, 1521, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720040>, 'json_data': {'input': [[18902, 79483, 25, 3580, 330, 10464, 315, 11842, 12279, 84016, 19863, 29553, 8245, 1, 3770, 369, 3649, 23343, 311, 1057, 1005, 315, 6926, 11667, 2038, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 264, 3857, 25394, 279, 1005, 315, 2536, 12279, 84016, 6926, 11667, 2038, 11, 902, 11335, 264, 16996, 3560, 304, 8830, 279, 2883, 753, 6020, 5178, 555, 44878, 279, 6372, 315, 11667, 65649, 13, 1102, 15151, 430, 4726, 3649, 690, 1833, 304, 279, 2246, 11, 82003, 279, 12939, 315, 420, 2038, 369, 6020, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627200d0>, 'json_data': {'input': [[18902, 79483, 25, 29240, 304, 7318, 28849, 323, 51091, 527, 16625, 555, 264, 1396, 315, 958, 9920, 9547, 11, 2737, 4442, 304, 87386, 10374, 26, 14529, 2027, 323, 4947, 4442, 26, 323, 11, 439, 433, 36716, 311, 7318, 28849, 11, 65649, 304, 2778, 20126, 13239, 505, 4442, 304, 1217, 25375, 323, 10648, 11, 15871, 389, 6505, 7766, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 9547, 66700, 4442, 304, 7318, 28849, 323, 51091, 13, 1102, 5825, 62129, 2317, 311, 279, 47616, 828, 10666, 304, 279, 3766, 27855, 11, 26073, 279, 30295, 4920, 279, 5219, 11, 8617, 47594, 279, 6742, 596, 8830, 315, 3157, 7865, 323, 13172, 18845, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720160>, 'json_data': {'input': [[18902, 79483, 25, 220, 2397, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 17, 323, 46613, 220, 21, 11, 420, 12143, 5084, 311, 387, 264, 37666, 1906, 477, 25829, 2085, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627201f0>, 'json_data': {'input': [[18902, 79483, 25, 13674, 6012, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 17889, 1486, 9731, 279, 10430, 315, 13172, 13254, 8336, 555, 45391, 13674, 6012, 11, 2500, 1401, 5452, 369, 63897, 596, 1008, 8070, 13, 1102, 66159, 279, 12939, 315, 2835, 2262, 304, 872, 13172, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720280>, 'json_data': {'input': [[18902, 79483, 25, 7436, 1952, 5887, 220, 22, 11, 220, 2366, 16, 11, 264, 1396, 315, 1614, 7867, 27910, 3331, 13019, 459, 3276, 85971, 12458, 304, 279, 549, 815, 13, 11182, 7301, 369, 279, 17355, 11182, 315, 7188, 11, 62546, 430, 5195, 753, 5784, 315, 8682, 323, 5195, 7199, 34521, 549, 815, 13, 3276, 85971, 7016, 323, 1614, 3276, 85971, 323, 11761, 9313, 7016, 13, 763, 6250, 220, 2366, 18, 11, 584, 8813, 264, 17516, 304, 17966, 449, 220, 1135, 1614, 7867, 27910, 3331, 323, 2380, 39543, 13, 578, 549, 815, 13, 11182, 7301, 28520, 9467, 660, 279, 9269, 2457, 449, 279, 5415, 11, 323, 904, 1620, 14765, 315, 279, 17516, 374, 3685, 311, 12446, 304, 220, 2366, 19, 13, 763, 3297, 220, 2366, 17, 11, 279, 21283, 323, 279, 356, 4940, 1855, 9107, 26969, 1139, 5195, 7199, 753, 2626, 12659, 13, 16526, 40242, 527, 24834, 5195, 7199, 596, 34631, 12659, 11, 2737, 264, 16287, 3477, 304, 3297, 220, 2366, 17, 315, 5195, 596, 8907, 449, 279, 502, 917, 3637, 34631, 14640, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 2500, 3276, 85971, 12458, 5552, 311, 5195, 753, 8682, 323, 5195, 7199, 7677, 11, 45391, 264, 17516, 8813, 449, 5361, 1614, 7867, 27910, 3331, 13, 1102, 5825, 20616, 1139, 279, 23331, 18921, 28987, 5195, 753, 2626, 1646, 323, 2027, 8141, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720310>, 'json_data': {'input': [[18902, 79483, 25, 25733, 2140, 287, 6072, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 14836, 369, 264, 3857, 25394, 330, 40938, 2140, 287, 6072, 1359, 902, 18713, 1771, 311, 4754, 58165, 279, 2883, 1253, 3663, 4245, 311, 5370, 5897, 8349, 477, 42254, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627203a0>, 'json_data': {'input': [[18902, 79483, 25, 578, 5376, 304, 1023, 2853, 315, 30466, 315, 400, 806, 13, 24, 7239, 505, 220, 2366, 16, 311, 220, 2366, 17, 574, 15871, 4245, 311, 12992, 304, 3756, 7194, 11, 20448, 18512, 11, 94189, 11, 323, 7241, 14228, 18512, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 13970, 2317, 369, 279, 5376, 304, 1023, 7194, 315, 30466, 505, 220, 2366, 16, 311, 220, 2366, 17, 11, 10923, 13016, 311, 1518, 18845, 927, 5361, 1667, 323, 3619, 279, 2883, 596, 42028, 2853, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720430>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 264, 42271, 315, 279, 52678, 315, 3230, 4741, 31348, 17078, 11, 6522, 311, 5217, 6020, 38864, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627204c0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 9320, 1486, 430, 4461, 11767, 1139, 3230, 10507, 315, 279, 4741, 31348, 12518, 1694, 1903, 11, 2768, 279, 17219, 315, 279, 7434, 304, 279, 3766, 12143, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720550>, 'json_data': {'input': [[18902, 79483, 25, 320, 17, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 30293, 15151, 264, 87910, 5905, 11, 23377, 430, 4726, 2317, 477, 64784, 369, 279, 5552, 2262, 6866, 18403, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627205e0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 19, 11, 420, 15151, 2500, 2937, 315, 279, 330, 2620, 315, 36962, 1359, 13788, 439, 264, 34512, 1697, 12576, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720670>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 19, 13, 386, 4069, 85204, 69484, 12244, 34, 38658, 51761, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 4342, 369, 330, 12236, 220, 19, 13, 386, 4069, 85204, 69484, 12244, 34, 38658, 51761, 1359, 19392, 430, 279, 3857, 690, 3504, 904, 9959, 75992, 5552, 311, 10705, 7296, 11, 902, 527, 11383, 2631, 505, 5220, 304, 11935, 477, 5552, 19647, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720700>, 'json_data': {'input': [[18902, 79483, 25, 31946, 520, 31946, 520, 52950, 315, 9941, 2758, 6055, 25585, 4060, 315, 9941, 9941, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 400, 220, 16, 11, 17451, 400, 220, 17, 11, 25221, 400, 320, 17, 11, 24970, 8, 400, 220, 16, 11, 20422, 9941, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 400, 220, 16, 11, 20422, 400, 220, 17, 11, 6549, 400, 320, 17, 11, 12405, 8, 400, 220, 16, 11, 11702, 9941, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 400, 220, 16, 11, 11702, 400, 220, 18, 11, 7322, 400, 320, 17, 11, 22039, 8, 400, 220, 16, 11, 24380, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 2007, 505, 46613, 220, 777, 11, 8405, 3230, 35876, 828, 369, 1855, 1060, 13, 1102, 94594, 279, 7314, 8335, 11, 38314, 11, 10648, 11, 323, 13696, 8335, 369, 279, 41458, 369, 6807, 18151, 11, 902, 374, 7718, 369, 47614, 279, 2883, 753, 6020, 550, 74193, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720790>, 'json_data': {'input': [[18902, 79483, 25, 320, 32871, 18362, 20148, 315, 279, 75659, 519, 340, 2014, 940, 1534, 73094, 25, 320, 32871, 18362, 20148, 315, 279, 75659, 519, 8]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720820>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627208b0>, 'json_data': {'input': [[18902, 79483, 25, 220, 19, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 264, 37666, 1493, 11, 4461, 19392, 430, 433, 17482, 439, 264, 66743, 2449, 304, 279, 2246, 4856, 1109, 8649, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720940>, 'json_data': {'input': [[18902, 79483, 25, 42321, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 25891, 330, 1110, 56867, 1359, 902, 35434, 279, 15022, 18921, 430, 279, 2883, 27149, 304, 13, 1102, 7437, 279, 6566, 369, 264, 11944, 6492, 315, 5370, 28650, 4028, 2204, 26593, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627209d0>, 'json_data': {'input': [[18902, 79483, 25, 3331, 323, 52941, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 3331, 323, 52941, 18512, 11, 19392, 430, 420, 374, 2500, 9200, 5699, 315, 25605, 18512, 369, 63897, 4953, 13, 1102, 11263, 279, 20954, 315, 432, 33465, 323, 16207, 323, 18729, 11, 11957, 65383, 304, 264, 16195, 24131, 315, 279, 2883, 596, 2853, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720a60>, 'json_data': {'input': [[18902, 79483, 25, 4185, 351, 94140, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 3857, 430, 690, 3118, 18792, 94140, 13254, 2038, 13, 1102, 15151, 430, 279, 2768, 2262, 690, 1464, 1523, 13254, 8336, 11, 902, 374, 3062, 369, 42118, 279, 2883, 596, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720af0>, 'json_data': {'input': [[18902, 79483, 25, 23139, 54974, 555, 36233, 44382, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 12302, 264, 10430, 389, 8515, 28555, 505, 10565, 7640, 11, 902, 527, 16595, 369, 47614, 279, 2883, 596, 6332, 2626, 5178, 323, 5845, 311, 7068, 8515, 505, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720b80>, 'json_data': {'input': [[18902, 79483, 25, 220, 2721, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 5905, 11, 19392, 1202, 2361, 2949, 279, 8244, 2246, 13, 1102, 78864, 430, 279, 2038, 2768, 433, 17623, 311, 279, 220, 2721, 339, 2199, 315, 279, 2246, 11, 902, 374, 4279, 304, 35306, 6821, 1093, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720c10>, 'json_data': {'input': [[18902, 79483, 25, 12850, 315, 20790, 9624, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 34945, 330, 48387, 315, 20790, 9624, 3600, 1359, 19392, 430, 10937, 304, 279, 9624, 3600, 3634, 374, 264, 5199, 4747, 369, 279, 2883, 596, 7677, 323, 6650, 304, 420, 10706, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720ca0>, 'json_data': {'input': [[18902, 79483, 25, 1115, 25992, 8423, 389, 3459, 220, 605, 16222, 5727, 4741, 31348, 12518, 2949, 279, 7438, 315, 279, 9877, 46272, 39351, 18413, 40365, 3298, 315, 220, 2550, 20, 13, 4314, 2997, 11, 4315, 1023, 2574, 11, 12518, 9002, 512, 2014, 940, 1534, 73094, 25, 1115, 5224, 17482, 439, 264, 7419, 323, 17219, 311, 279, 4741, 31348, 12518, 9932, 304, 279, 2246, 11, 57616, 279, 9877, 46272, 39351, 18413, 40365, 3298, 315, 220, 2550, 20, 13, 1102, 15151, 430, 279, 17876, 14491, 690, 2997, 5370, 17078, 323, 51165, 5552, 311, 279, 2883, 596, 2626, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720d30>, 'json_data': {'input': [[18902, 79483, 25, 279, 8657, 10603, 315, 1057, 8336, 315, 11006, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 17503, 1234, 279, 10430, 315, 6020, 20334, 323, 25605, 8824, 304, 279, 4741, 31348, 12518, 13, 1102, 14564, 279, 2883, 596, 15813, 315, 1202, 11006, 8336, 11, 902, 374, 16996, 369, 80184, 7677, 323, 12899, 6650, 28271, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720dc0>, 'json_data': {'input': [[18902, 79483, 25, 20448, 20900, 5552, 311, 1057, 828, 19169, 323, 1023, 7677, 1778, 439, 2262, 3477, 323, 6130, 323, 2027, 1862, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 832, 3230, 3777, 315, 279, 330, 11663, 2853, 315, 30466, 1359, 21760, 389, 20448, 18512, 5552, 311, 828, 19169, 323, 7677, 11, 902, 527, 3062, 369, 8830, 279, 25605, 7194, 315, 4401, 5195, 596, 14054, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720e50>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 21, 11, 420, 12143, 17482, 439, 264, 37666, 11381, 430, 2942, 4861, 279, 2246, 596, 6070, 11, 4461, 19392, 279, 7314, 315, 264, 502, 3857, 477, 8712, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720ee0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 578, 17571, 330, 2620, 315, 36962, 1, 13533, 420, 3857, 50729, 279, 6070, 315, 279, 2246, 11, 15182, 279, 5370, 14491, 323, 13650, 9960, 13, 1102, 8779, 13016, 6288, 25539, 3230, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62720f70>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1005, 3738, 17150, 311, 3839, 1268, 1664, 9629, 4028, 5370, 6012, 374, 58191, 1534, 439, 433, 36716, 311, 1057, 13172, 30466, 25, 7318, 28849, 323, 2853, 17453, 29218, 281, 7770, 311, 9629, 389, 5195, 7694, 612, 1023, 6012, 11, 1418, 51091, 323, 2853, 17453, 38025, 4099, 281, 7770, 311, 9629, 389, 1057, 5195, 8304, 6012, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 17150, 1511, 311, 15806, 279, 58191, 2065, 315, 9629, 389, 2204, 5195, 6012, 11, 11951, 86055, 1990, 5195, 7694, 612, 1023, 6012, 323, 5195, 8304, 6012, 13, 1102, 5825, 26793, 1139, 1268, 5195, 11193, 1202, 13172, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721000>, 'json_data': {'input': [[18902, 79483, 25, 578, 14691, 15740, 315, 279, 2930, 1917, 706, 20162, 311, 279, 6650, 315, 1057, 2626, 323, 1057, 30466, 2533, 54529, 13, 1226, 1755, 430, 420, 15740, 690, 3136, 311, 8935, 1057, 2626, 323, 1057, 30466, 11, 8051, 520, 264, 29493, 18338, 1109, 584, 617, 10534, 35901, 11, 304, 4040, 1306, 279, 23651, 1534, 6650, 304, 1057, 13172, 30466, 2391, 279, 20562, 12, 777, 28522, 13, 763, 5369, 11, 584, 3663, 7859, 10937, 369, 1217, 20392, 323, 50270, 11, 902, 1253, 7958, 1057, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 5536, 315, 2930, 15740, 389, 63897, 596, 6650, 11, 27401, 279, 12939, 315, 19994, 15022, 65904, 10223, 30295, 304, 1217, 20392, 323, 13172, 11, 5423, 1772, 7813, 46, 7635, 12, 777, 28522, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721090>, 'json_data': {'input': [[18902, 79483, 25, 7089, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 44488, 2440, 430, 1587, 539, 6782, 904, 2262, 13, 1102, 1253, 8464, 311, 264, 3857, 14836, 477, 264, 6002, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721120>, 'json_data': {'input': [[18902, 79483, 25, 64141, 323, 92523, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 34692, 311, 25394, 279, 8244, 6020, 6070, 315, 63897, 4953, 2637, 11951, 21760, 389, 330, 15289, 82, 323, 92523, 1359, 902, 7437, 279, 6566, 369, 264, 11944, 31085, 315, 279, 2883, 596, 53869, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627211b0>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 24, 13, 7839, 14724, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 14836, 369, 7181, 220, 24, 11, 902, 4461, 14861, 279, 8712, 315, 82746, 11, 19392, 279, 1212, 315, 264, 502, 3857, 304, 279, 2246, 25394, 528, 61186, 12032, 477, 63948, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721240>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 20, 11, 420, 12143, 17482, 439, 264, 4342, 11, 312, 2058, 1113, 279, 2246, 596, 9764, 323, 41961, 311, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627212d0>, 'json_data': {'input': [[18902, 79483, 25, 24296, 11, 8060, 311, 10519, 323, 18885, 1057, 16097, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 13, 5751, 2450, 690, 6904, 14090, 389, 1057, 5845, 311, 7293, 264, 5557, 7808, 323, 3136, 311, 3493, 1579, 22867, 11, 57042, 11, 18699, 3956, 323, 3600, 430, 527, 9615, 5505, 323, 1514, 264, 15525, 3560, 304, 264, 2134, 315, 5110, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 922, 6883, 6373, 555, 26445, 66, 5620, 279, 27927, 25127, 315, 22109, 311, 18885, 6883, 17444, 13, 1102, 57876, 430, 2450, 80934, 389, 279, 2883, 596, 5845, 311, 92064, 323, 3493, 1579, 22867, 3956, 323, 3600, 11, 31799, 6883, 2890, 6089, 311, 8244, 2626, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721360>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 2500, 330, 2620, 315, 36962, 1359, 91115, 279, 2246, 596, 17057, 6932, 323, 86387, 304, 10873, 1555, 279, 5370, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627213f0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 10565, 3135, 1253, 39388, 6426, 11, 902, 3727, 1057, 3135, 5107, 311, 7168, 323, 1436, 5353, 1057, 3135, 311, 4498, 2875, 315, 17078, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 38088, 44696, 2968, 315, 63897, 596, 10565, 3135, 11, 23377, 430, 65649, 1436, 3063, 311, 20124, 430, 656, 539, 3449, 3157, 17078, 11, 28592, 28987, 30693, 27065, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721480>, 'json_data': {'input': [[18902, 79483, 25, 9742, 323, 12053, 369, 22172, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 264, 7057, 21760, 389, 40800, 323, 5557, 11, 23377, 430, 279, 2768, 2262, 690, 4358, 279, 2883, 596, 9131, 311, 18885, 3728, 2680, 311, 2038, 323, 5557, 11, 82003, 1202, 3560, 439, 459, 6273, 3213, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721510>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 5217, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627215a0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 26, 912, 1495, 311, 24564, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721630>, 'json_data': {'input': [[18902, 79483, 25, 5751, 5178, 323, 3938, 2450, 14117, 304, 3544, 961, 5304, 279, 8738, 2532, 315, 1401, 11156, 11767, 439, 1664, 439, 3697, 315, 1057, 10195, 6373, 2128, 13, 1789, 2937, 11, 37902, 277, 393, 718, 2192, 374, 9200, 311, 279, 8244, 6373, 315, 63897, 323, 1202, 72202, 323, 11335, 459, 3062, 3560, 304, 279, 4500, 315, 1057, 5557, 11, 20958, 1057, 7829, 11, 323, 6376, 1057, 19092, 5216, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 1401, 17274, 11, 11951, 45391, 37902, 277, 393, 718, 2192, 11, 323, 872, 12939, 304, 51346, 63897, 753, 19092, 5216, 13, 1102, 72890, 279, 54180, 389, 3831, 11692, 304, 60499, 2626, 11774, 11, 63143, 1139, 279, 27927, 7057, 315, 6373, 20334, 323, 27375, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627216c0>, 'json_data': {'input': [[18902, 79483, 25, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 32400, 430, 374, 54291, 11, 19392, 430, 279, 23702, 519, 1587, 539, 26456, 439, 264, 2536, 38698, 3757, 261, 660, 1488, 261, 13, 1102, 374, 961, 315, 279, 23331, 8907, 3857, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721750>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 52950, 20547, 97239, 3827, 7720, 400, 220, 18, 11, 26244, 400, 220, 20, 11, 11286, 400, 220, 22, 11, 22913, 68148, 5552, 311, 4972, 1060, 3827, 10093, 220, 21618, 220, 14022, 220, 21112, 65201, 2315, 5552, 311, 4972, 1060, 3827, 10093, 320, 15666, 8, 320, 18318, 8, 320, 25178, 8, 65201, 2315, 5552, 311, 17516, 449, 3827, 11527, 320, 18196, 8, 320, 6860, 8, 320, 1691, 8, 68148, 5552, 311, 1510, 1060, 3827, 10093, 220, 16, 11, 12910, 220, 17, 11, 12425, 220, 17, 11, 18061, 74521, 20547, 97239, 3827, 7720, 400, 220, 20, 11, 11286, 400, 220, 22, 11, 22913, 400, 220, 24, 11, 20596, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 828, 505, 279, 3766, 12143, 11, 45293, 279, 7640, 5552, 311, 97239, 3827, 7720, 369, 279, 5300, 1667, 13, 1102, 22020, 12992, 323, 43154, 304, 3827, 10093, 11, 902, 527, 9200, 369, 47614, 279, 2883, 753, 3827, 8907, 323, 5326, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627217e0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1927, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 5905, 323, 1587, 539, 6782, 67749, 2262, 13, 11699, 6156, 7580, 374, 311, 7945, 304, 2246, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721870>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 312, 2058, 988, 279, 836, 315, 279, 2883, 11, 63897, 4953, 2637, 323, 4461, 17482, 439, 264, 4342, 369, 279, 17876, 14491, 477, 2262, 430, 11263, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721900>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 30466, 6824, 315, 30466, 505, 512, 2014, 940, 1534, 73094, 25, 23548, 279, 4342, 505, 46613, 220, 22, 11, 420, 12143, 12302, 311, 21782, 279, 8336, 315, 13254, 11951, 71526, 311, 5195, 15161, 13, 1102, 7437, 279, 6566, 369, 264, 11944, 31085, 315, 279, 5370, 6956, 430, 17210, 311, 420, 10449, 596, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721990>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 345, 2014, 940, 1534, 73094, 25, 1115, 17571, 40019, 279, 8335, 11071, 439, 315, 264, 3230, 2457, 11, 6790, 220, 2148, 11, 902, 374, 9200, 369, 8830, 279, 892, 4124, 315, 279, 6020, 828, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721a20>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 2038, 922, 1057, 21282, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 690, 3118, 6020, 828, 922, 63897, 4953, 3238, 82, 21282, 11, 43080, 264, 9320, 311, 47616, 6492, 315, 279, 2883, 596, 2626, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721ab0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1495, 12143, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721b40>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721bd0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6020, 24198, 1101, 2997, 11897, 323, 25452, 22538, 304, 5220, 449, 902, 584, 1101, 10862, 1139, 8518, 28904, 520, 477, 3221, 279, 1890, 892, 13, 1789, 1521, 14463, 11, 19971, 374, 2631, 304, 47614, 279, 20278, 315, 279, 28904, 11, 2737, 47614, 3508, 279, 6956, 315, 279, 28904, 1288, 387, 41853, 369, 439, 8821, 14463, 1234, 279, 8581, 27438, 2599, 11, 323, 26679, 279, 907, 315, 279, 6956, 315, 279, 28904, 11, 2737, 279, 6762, 907, 315, 279, 22538, 13, 23212, 11, 422, 1057, 9341, 304, 1778, 5220, 9221, 50160, 11, 904, 9861, 5178, 30255, 1053, 387, 32834, 22456, 323, 1253, 387, 11293, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 24043, 6514, 369, 11897, 323, 25452, 22538, 304, 5220, 449, 902, 63897, 706, 8518, 28904, 13, 1102, 8111, 304, 279, 2317, 315, 9341, 24043, 12659, 11, 82003, 279, 84140, 6532, 304, 1062, 7623, 1778, 22538, 323, 279, 1205, 369, 19971, 304, 8907, 449, 27438, 2599, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721c60>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 13454, 315, 279, 2246, 2316, 11, 330, 2149, 18992, 4953, 13, 1359, 13788, 439, 264, 4342, 477, 44817, 2449, 304, 279, 1934, 11, 82003, 279, 9764, 315, 279, 2883, 1694, 14407, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721cf0>, 'json_data': {'input': [[18902, 79483, 25, 578, 41458, 369, 6807, 18151, 389, 9815, 2215, 43672, 574, 400, 23952, 3610, 323, 400, 24876, 3610, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 12678, 369, 279, 41458, 369, 6807, 18151, 389, 9815, 2215, 43672, 439, 315, 279, 842, 315, 220, 2366, 17, 323, 220, 2366, 18, 13, 1115, 374, 3062, 369, 8830, 279, 2883, 753, 5326, 6373, 9002, 4754, 17088, 555, 6444, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721d80>, 'json_data': {'input': [[18902, 79483, 25, 78447, 4097, 4606, 11, 279, 12877, 6460, 11, 323, 10384, 320, 2783, 19657, 1237, 13936, 64976, 320, 2599, 1741, 1237, 323, 7008, 323, 20023, 5270, 3573, 11663, 52248, 39709, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 17931, 369, 279, 46139, 13918, 25819, 304, 279, 3766, 12143, 13, 1115, 64784, 57924, 8830, 315, 279, 828, 10666, 323, 11815, 13687, 23692, 315, 13254, 8336, 555, 5654, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721e10>, 'json_data': {'input': [[18902, 79483, 25, 220, 21, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 459, 33243, 3857, 11, 29820, 2697, 66251, 907, 389, 1202, 1866, 13, 1102, 1253, 13519, 264, 37666, 477, 29595, 4360, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721ea0>, 'json_data': {'input': [[18902, 79483, 25, 9580, 220, 17, 482, 47381, 430, 527, 3196, 5304, 24116, 7729, 369, 4528, 24198, 304, 4642, 11987, 11, 24116, 7729, 369, 20086, 477, 4528, 24198, 304, 11987, 430, 527, 539, 4642, 11, 323, 1646, 6108, 51262, 12823, 369, 902, 682, 5199, 11374, 527, 40635, 304, 279, 3157, 477, 649, 387, 14592, 505, 40635, 3157, 828, 13, 11208, 8581, 11, 1521, 4211, 2447, 3938, 8515, 28555, 323, 11336, 279, 3938, 15055, 311, 264, 3118, 907, 1701, 3157, 6108, 40635, 11374, 2737, 2802, 4478, 37033, 11, 7362, 9473, 7969, 11, 323, 6807, 18594, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 9580, 220, 17, 315, 279, 6762, 907, 30022, 11, 21760, 389, 11374, 3196, 389, 4528, 24198, 304, 4642, 477, 32899, 11987, 13, 1102, 9731, 279, 10430, 389, 6762, 907, 22323, 11, 8405, 5217, 7872, 430, 64252, 39210, 922, 51262, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721f30>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 5357, 389, 63897, 4953, 13, 439, 264, 8792, 3917, 315, 279, 2246, 11, 31692, 279, 2883, 2317, 369, 279, 17876, 6020, 29060, 323, 6821, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62721fc0>, 'json_data': {'input': [[18902, 79483, 25, 14930, 5273, 77917, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 14930, 5273, 77917, 11, 902, 374, 264, 9200, 7434, 304, 24043, 323, 17452, 430, 22223, 1268, 12032, 323, 58165, 527, 33647, 323, 5068, 304, 6020, 12518, 13, 1102, 5825, 264, 8197, 369, 8830, 17876, 14491, 430, 7872, 3230, 51262, 5528, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722050>, 'json_data': {'input': [[18902, 79483, 25, 578, 1925, 6956, 315, 1057, 432, 33465, 18512, 527, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3230, 6956, 315, 8483, 323, 11050, 320, 49, 33465, 8, 18512, 13, 1102, 374, 961, 315, 264, 11944, 3857, 430, 690, 13555, 279, 5540, 430, 17210, 311, 432, 33465, 7194, 11, 16996, 369, 8830, 9341, 304, 19297, 323, 2027, 4500, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627220e0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5751, 8925, 315, 46085, 1253, 4360, 11, 2085, 5708, 4346, 14765, 11, 13551, 315, 2073, 14312, 660, 15236, 5708, 11, 902, 3727, 433, 3284, 369, 1057, 8925, 315, 46085, 311, 4360, 15236, 5708, 449, 16043, 477, 1023, 3268, 477, 19882, 430, 1436, 3242, 15686, 279, 2450, 315, 904, 4879, 311, 21953, 603, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 8925, 596, 11447, 311, 4360, 15236, 5708, 2085, 63342, 14765, 11, 39686, 264, 19092, 5507, 430, 1436, 387, 1511, 311, 64788, 4754, 1645, 11642, 388, 555, 19371, 10831, 872, 16043, 2410, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722170>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 94594, 279, 13240, 6762, 907, 315, 22538, 304, 2561, 15548, 58637, 3157, 481, 11897, 34919, 555, 7524, 76543, 48261, 13003, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 29385, 4954, 279, 13240, 6762, 907, 315, 2561, 15548, 58637, 3157, 481, 11897, 34919, 11, 8405, 264, 11944, 31085, 315, 1521, 22538, 323, 872, 76543, 48261, 13003, 13, 1115, 2038, 374, 16595, 369, 42118, 279, 2883, 596, 53113, 323, 9341, 25845, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722200>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 87910, 5905, 11381, 11, 19392, 430, 5217, 93566, 2038, 369, 264, 38846, 5224, 477, 3857, 374, 2561, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722290>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 13596, 2937, 315, 279, 6771, 315, 36962, 11, 420, 54515, 13533, 430, 279, 2246, 1253, 387, 34030, 311, 2187, 4062, 10873, 311, 5370, 14491, 11, 91115, 279, 12939, 315, 279, 33740, 13650, 369, 13016, 11125, 3230, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722320>, 'json_data': {'input': [[18902, 79483, 25, 1226, 7068, 30466, 555, 24944, 9959, 11, 2853, 53421, 2930, 13172, 26, 9624, 6108, 10105, 430, 3493, 20790, 6444, 449, 14054, 323, 5452, 3600, 439, 1664, 439, 10758, 323, 20632, 7526, 26, 6763, 315, 1023, 3956, 323, 3600, 11, 1778, 439, 12718, 4036, 369, 11761, 15493, 6108, 3956, 11, 10721, 323, 304, 20624, 24393, 11, 323, 7766, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 311, 7872, 63897, 753, 13254, 2427, 94207, 7640, 11, 82003, 279, 17226, 8336, 315, 13254, 11, 1778, 439, 41455, 323, 3756, 6763, 13, 1102, 5825, 264, 16195, 8830, 315, 1268, 279, 2883, 58191, 4861, 1202, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627223b0>, 'json_data': {'input': [[18902, 79483, 25, 220, 2421, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 2500, 3857, 1396, 5905, 2949, 279, 2246, 11, 11000, 19392, 264, 42271, 477, 264, 502, 23695, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722440>, 'json_data': {'input': [[18902, 79483, 25, 18925, 526, 3808, 449, 29911, 21304, 56875, 343, 811, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3857, 4342, 11, 33018, 279, 8712, 315, 17517, 430, 21736, 5361, 5178, 30255, 13, 1102, 15151, 264, 5357, 389, 279, 84140, 315, 13254, 18324, 304, 15082, 1405, 5361, 3600, 477, 3956, 527, 3984, 1234, 264, 3254, 5226, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627224d0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 22864, 82746, 311, 13122, 8316, 3196, 389, 279, 3685, 8935, 505, 279, 2626, 10824, 13, 1226, 15806, 1057, 13122, 8316, 48582, 11, 439, 1664, 439, 994, 4442, 304, 1057, 10565, 21282, 12446, 13, 1789, 4442, 304, 13122, 8316, 11, 584, 312, 7128, 82746, 1701, 264, 8844, 6762, 907, 24691, 5603, 13, 1226, 1296, 1057, 82746, 369, 53317, 520, 3325, 30171, 11, 477, 810, 14134, 422, 4455, 477, 4442, 304, 13463, 13519, 430, 279, 9513, 1253, 387, 50160, 13, 7839, 14724, 38974, 1392, 1051, 539, 3769, 369, 279, 18852, 10666, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 10396, 14932, 279, 24691, 323, 16865, 315, 82746, 2949, 63897, 4953, 3238, 82, 6020, 12518, 13, 1102, 16964, 279, 1920, 315, 7649, 82746, 369, 53317, 11, 902, 374, 7718, 369, 23391, 430, 279, 5068, 907, 315, 82746, 27053, 1202, 6762, 907, 323, 374, 539, 83509, 660, 304, 279, 6020, 6821, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722560>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 8, 6104, 1855, 21283, 5597, 374, 1234, 14638, 11, 279, 35018, 527, 5343, 304, 99216, 18512, 323, 1023, 1510, 58165, 389, 1057, 79980, 660, 31946, 61572, 11, 439, 584, 3984, 6201, 36755, 320, 258, 39381, 315, 264, 8515, 8323, 8, 369, 279, 35018, 13, 26868, 82, 2997, 279, 6372, 315, 7362, 9473, 323, 2802, 13, 3580, 7181, 220, 605, 369, 4726, 3649, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 6209, 264, 87910, 9002, 279, 7665, 9849, 35018, 9932, 304, 46613, 220, 20, 13, 1102, 20064, 9803, 279, 24043, 6514, 315, 1521, 35018, 11, 19392, 430, 814, 527, 5343, 304, 99216, 18512, 4245, 311, 14529, 35730, 13, 1115, 2317, 374, 16996, 369, 8830, 279, 7138, 315, 279, 58165, 10212, 323, 872, 25127, 369, 279, 2883, 753, 6020, 2361, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627225f0>, 'json_data': {'input': [[18902, 79483, 25, 29226, 17610, 15871, 315, 8220, 11822, 323, 374, 11224, 520, 279, 4827, 315, 2853, 323, 4272, 1972, 8499, 907, 13, 11443, 374, 25157, 1701, 279, 1176, 3502, 11, 1176, 9994, 1749, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19170, 15808, 323, 1202, 51262, 1749, 13, 1102, 374, 961, 315, 279, 15808, 6373, 3857, 11, 8405, 7718, 3649, 389, 1268, 63897, 4953, 13, 29972, 323, 6821, 1202, 15808, 7194, 11, 902, 527, 9959, 369, 8830, 9513, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722680>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2626, 14117, 389, 8738, 323, 653, 6802, 31035, 2680, 311, 279, 8191, 555, 603, 323, 1057, 3932, 13, 8191, 2680, 12850, 1253, 387, 3025, 311, 9067, 11, 2565, 11, 96630, 11, 477, 6900, 369, 2680, 311, 3738, 315, 1057, 3956, 323, 3600, 11, 902, 1436, 3063, 311, 5217, 18512, 323, 279, 4814, 315, 3932, 323, 50270, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 7757, 2680, 439, 264, 9200, 8331, 369, 279, 2883, 753, 7677, 13, 1102, 7437, 279, 6566, 369, 25394, 9434, 20113, 11, 8104, 389, 7757, 2532, 12850, 11, 902, 374, 9959, 311, 8830, 279, 27927, 25605, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722710>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 15246, 311, 65649, 304, 279, 6762, 2819, 315, 1057, 22538, 323, 11, 304, 1063, 13422, 11, 1057, 6020, 12518, 33435, 49188, 44122, 51262, 81898, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 15635, 5552, 311, 279, 6762, 51262, 315, 22538, 11, 19392, 430, 65649, 304, 9341, 2819, 1436, 5536, 279, 6020, 12518, 13, 1102, 7437, 279, 2317, 369, 264, 10430, 389, 279, 44122, 7138, 315, 1521, 1062, 38170, 323, 872, 25127, 369, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627227a0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 7314, 315, 264, 3857, 12514, 311, 63897, 4953, 2637, 279, 2748, 2883, 315, 5195, 11, 6376, 279, 2317, 369, 279, 2768, 14491, 430, 690, 4358, 1202, 7677, 11, 6020, 82, 11, 323, 35186, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722830>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 8471, 5764, 3956, 323, 3600, 1778, 439, 14058, 11, 8682, 11, 17669, 11, 7766, 11, 5195, 28508, 11, 5195, 7199, 11, 7694, 11, 323, 13674, 13, 5195, 8471, 27983, 30466, 15871, 505, 13172, 26, 12718, 4036, 369, 11761, 15493, 6108, 3956, 1778, 439, 13674, 6007, 11, 13674, 10948, 323, 26745, 11, 323, 12873, 7418, 29497, 26, 279, 6412, 315, 10721, 323, 304, 20624, 24393, 323, 7766, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 4096, 315, 279, 5195, 8471, 10449, 11, 15182, 279, 5370, 3956, 323, 3600, 433, 71010, 323, 82003, 1202, 6156, 13254, 8336, 11, 902, 527, 14090, 14592, 505, 13172, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627228c0>, 'json_data': {'input': [[18902, 79483, 25, 25441, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 12569, 315, 1495, 449, 912, 2317, 477, 2262, 3984, 13, 1102, 4461, 17482, 439, 264, 6002, 477, 37666, 2449, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722950>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3663, 11, 323, 1253, 3136, 311, 3663, 11, 20207, 3424, 323, 1023, 8349, 430, 1436, 387, 34348, 311, 10726, 11, 1121, 304, 5199, 5674, 23146, 477, 1023, 7194, 320, 16564, 90108, 2461, 23146, 705, 323, 4017, 1057, 5845, 311, 1005, 3738, 14645, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 5326, 315, 20207, 3424, 8349, 279, 2883, 12580, 11, 902, 649, 617, 5199, 6020, 16296, 13, 1102, 7437, 279, 6566, 369, 264, 19662, 27501, 315, 5897, 11774, 5552, 311, 20207, 3424, 11, 82003, 279, 4754, 5536, 389, 279, 2883, 596, 5845, 311, 29166, 5557, 323, 6493, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627229e0>, 'json_data': {'input': [[18902, 79483, 25, 24416, 8105, 25, 4196, 4090, 323, 20143, 7922, 41755, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 24416, 8105, 11, 902, 12789, 449, 4196, 4090, 323, 20143, 7922, 41755, 11, 36548, 8405, 26793, 1139, 279, 2883, 596, 24043, 369, 30600, 323, 90120, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722a70>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 8483, 323, 4500, 18512, 400, 220, 2137, 11, 2636, 400, 220, 1774, 11, 20465, 8483, 323, 4500, 18512, 439, 264, 11668, 315, 30466, 220, 975, 1034, 220, 868, 33648, 2014, 940, 1534, 73094, 25, 1115, 2007, 18911, 3230, 6020, 12678, 369, 432, 33465, 18512, 11, 10923, 13016, 311, 9616, 9974, 18512, 323, 24564, 432, 33465, 439, 264, 11668, 315, 2860, 30466, 13, 1115, 828, 374, 7718, 369, 8830, 279, 2883, 596, 15507, 311, 19297, 8844, 311, 1202, 8244, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722b00>, 'json_data': {'input': [[18902, 79483, 25, 11842, 30004, 36164, 34919, 15871, 6824, 315, 25452, 34919, 13, 1226, 2759, 369, 2536, 30004, 36164, 25452, 34919, 1555, 902, 584, 10368, 5199, 10383, 719, 656, 539, 617, 2585, 927, 279, 2793, 2176, 1234, 279, 25452, 1749, 13, 2052, 1023, 2536, 30004, 36164, 25452, 34919, 430, 584, 3412, 527, 15871, 41853, 369, 1234, 279, 19179, 10778, 13, 9636, 279, 19179, 10778, 11, 279, 15691, 907, 374, 17303, 520, 2853, 11, 2753, 904, 53317, 11, 5636, 477, 28382, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 24043, 5528, 369, 2536, 30004, 36164, 25452, 34919, 11, 2737, 279, 25452, 1749, 369, 5199, 10383, 22538, 323, 279, 19179, 10778, 369, 3885, 13, 1115, 2317, 374, 3062, 369, 8830, 1268, 63897, 4953, 13, 9815, 369, 1202, 2753, 14812, 22538, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722b90>, 'json_data': {'input': [[18902, 79483, 25, 220, 1644, 627, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 439, 912, 1495, 374, 3984, 369, 46613, 220, 1032, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722c20>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 439, 912, 1495, 374, 3984, 369, 46613, 220, 20, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722cb0>, 'json_data': {'input': [[18902, 79483, 25, 25441, 2014, 940, 1534, 73094, 25, 1115, 7891, 15151, 279, 7314, 315, 264, 35876, 907, 5552, 311, 279, 2883, 596, 2860, 58165, 323, 5708, 17075, 6, 25452, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722d40>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 369, 420, 12143, 26, 433, 1253, 387, 264, 6002, 477, 10321, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722dd0>, 'json_data': {'input': [[18902, 79483, 25, 1442, 459, 24084, 6650, 2883, 11, 13519, 555, 1817, 1906, 422, 279, 23702, 519, 706, 16689, 539, 311, 1005, 279, 11838, 9320, 4261, 369, 89506, 449, 904, 502, 477, 32828, 6020, 24043, 10886, 3984, 33549, 311, 11360, 220, 1032, 2948, 8, 315, 279, 19224, 3298, 13, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 961, 315, 279, 23331, 8907, 3857, 2949, 279, 220, 605, 16222, 26559, 13, 1102, 11951, 14564, 3508, 279, 23702, 519, 706, 12146, 311, 1935, 9610, 315, 459, 11838, 9320, 4261, 369, 502, 6020, 24043, 10886, 11, 264, 17575, 430, 6276, 24084, 6650, 5220, 311, 7781, 8907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722e60>, 'json_data': {'input': [[18902, 79483, 25, 18052, 315, 279, 19426, 2883, 753, 24043, 323, 1023, 23541, 6067, 11, 323, 279, 38793, 315, 2027, 11, 15009, 11, 323, 6763, 323, 8661, 5865, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 279, 96968, 11774, 315, 54952, 24043, 323, 23541, 6067, 1772, 38698, 17647, 13, 1102, 36716, 311, 279, 27927, 19775, 315, 1268, 25605, 92126, 649, 387, 44500, 2391, 18970, 388, 323, 63948, 422, 539, 9152, 13750, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722ef0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 3857, 323, 95593, 279, 9764, 315, 279, 13122, 5502, 11, 63897, 4953, 13, 1102, 374, 264, 16287, 78570, 315, 279, 2883, 1694, 14407, 11, 3062, 369, 32373, 304, 23331, 68248, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62722f80>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 14497, 311, 4726, 11944, 20954, 922, 6020, 17150, 323, 18845, 74055, 63897, 596, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723010>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 22, 13, 94378, 40702, 12244, 17218, 5123, 3651, 66857, 75564, 3083, 25338, 27267, 6340, 11228, 3651, 54128, 3083, 42476, 22545, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3682, 3857, 315, 279, 1934, 10968, 389, 9744, 596, 36613, 323, 18825, 320, 6204, 36121, 8, 315, 279, 6020, 3044, 323, 3135, 315, 7677, 11, 902, 374, 9200, 369, 8830, 279, 2883, 596, 6020, 2890, 323, 19092, 36721, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627230a0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 44694, 279, 4342, 369, 279, 2007, 315, 8970, 11, 91115, 1202, 9546, 323, 734, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723130>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 73100, 14742, 279, 2246, 596, 2316, 11, 330, 2149, 18992, 4953, 13, 1359, 4528, 311, 46613, 220, 19, 11, 10109, 1113, 279, 2262, 2949, 279, 2317, 315, 63897, 596, 6020, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627231c0>, 'json_data': {'input': [[18902, 79483, 25, 220, 3391, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 264, 961, 315, 279, 2246, 596, 37666, 11, 2085, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723250>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 904, 1495, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627232e0>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 11, 584, 527, 4737, 6299, 311, 30536, 1057, 3728, 5274, 3634, 13, 1666, 264, 1121, 11, 4974, 10405, 12715, 2391, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1051, 400, 16, 13, 23, 7239, 439, 27000, 304, 279, 2007, 3770, 13, 763, 5369, 311, 1521, 4974, 10405, 11, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 52872, 400, 16955, 3610, 304, 49858, 8175, 323, 49858, 94189, 11, 902, 527, 539, 5343, 304, 279, 2007, 3770, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 505, 279, 3766, 12143, 11, 21760, 389, 279, 26329, 315, 5274, 3634, 323, 5938, 7194, 13, 1102, 18911, 6020, 25127, 315, 4974, 10405, 16662, 5217, 18512, 52872, 11, 8617, 8405, 264, 16195, 1684, 315, 25605, 34074, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723370>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 961, 315, 279, 2246, 596, 24693, 5540, 11, 19392, 279, 9546, 315, 264, 6771, 315, 36962, 13, 1102, 1587, 539, 6782, 2262, 430, 7612, 66251, 2065, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723400>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723490>, 'json_data': {'input': [[18902, 79483, 25, 220, 1114, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 459, 1493, 323, 1587, 539, 3493, 9959, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723520>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 8070, 13426, 304, 279, 549, 815, 13, 323, 7362, 56043, 13, 90462, 19971, 374, 2631, 304, 38663, 1057, 36218, 3827, 10093, 323, 26679, 1057, 17575, 369, 8070, 13426, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 84140, 6532, 304, 38663, 36218, 3827, 10093, 323, 26679, 3827, 19705, 13, 1102, 22020, 279, 19971, 2631, 304, 420, 3158, 11, 902, 374, 9200, 369, 8830, 279, 2883, 596, 6020, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627235b0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6444, 8965, 7782, 13172, 15808, 1555, 5195, 43283, 11, 5195, 2467, 10790, 11, 5195, 10848, 612, 8519, 220, 6843, 11, 323, 5195, 18729, 17916, 11, 4315, 3885, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 50729, 279, 14595, 23395, 12006, 369, 6444, 23387, 449, 63897, 596, 13172, 3600, 13, 1102, 15151, 279, 15771, 1555, 902, 50270, 649, 3780, 1008, 15808, 11, 45296, 279, 17057, 6070, 315, 63897, 596, 13172, 6763, 1920, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723640>, 'json_data': {'input': [[18902, 79483, 25, 7436, 14969, 6, 28198, 323, 13172, 3136, 311, 6541, 2930, 439, 279, 7528, 8752, 93054, 627, 2014, 940, 1534, 73094, 25, 1115, 1486, 22020, 264, 1401, 9327, 315, 32931, 11761, 7865, 9017, 2930, 15771, 11, 902, 706, 5199, 25127, 369, 63897, 596, 13172, 13254, 323, 19092, 39825, 304, 279, 7528, 8752, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627236d0>, 'json_data': {'input': [[18902, 79483, 25, 220, 6330, 15, 93261, 83856, 16091, 68253, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 279, 2686, 315, 63897, 4953, 3238, 82, 12717, 11145, 19672, 11, 902, 374, 5995, 369, 4033, 44818, 323, 23331, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723760>, 'json_data': {'input': [[18902, 79483, 25, 28924, 220, 605, 16222, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 955, 315, 2246, 1694, 13019, 11, 11951, 3459, 220, 605, 16222, 11, 902, 374, 459, 9974, 1934, 2631, 555, 279, 22370, 430, 6835, 264, 16195, 24131, 315, 264, 2883, 753, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627237f0>, 'json_data': {'input': [[18902, 79483, 25, 13707, 323, 12850, 315, 15592, 3956, 323, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 330, 65405, 323, 12850, 315, 15592, 3956, 323, 3600, 1359, 39686, 279, 15022, 18921, 9002, 15592, 14645, 11, 902, 374, 15098, 9959, 369, 279, 2883, 596, 3938, 46045, 323, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723880>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 439, 912, 1495, 374, 3984, 369, 46613, 220, 16, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723910>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 25074, 8070, 400, 220, 17, 11, 11771, 400, 220, 18, 11, 24678, 25074, 20900, 320, 18520, 8, 320, 14498, 8, 19620, 11667, 9473, 8895, 320, 9563, 705, 4272, 320, 21969, 8, 320, 16, 11, 13895, 8, 50809, 320, 9563, 8, 389, 11897, 34919, 11, 4272, 320, 17, 11, 20478, 8, 320, 16, 11, 12112, 8, 50809, 320, 9563, 8, 389, 25452, 34919, 11, 4272, 320, 18, 11, 20325, 8, 220, 19695, 21304, 12718, 220, 26519, 220, 15574, 33620, 320, 9563, 8, 323, 53317, 505, 25452, 1749, 22538, 11, 4272, 320, 17609, 8, 320, 23574, 8, 7089, 220, 19162, 220, 15531, 7089, 8070, 320, 59857, 705, 4272, 400, 320, 18, 11, 20998, 8, 400, 220, 16, 11, 18517, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 5769, 1299, 24131, 315, 2802, 8070, 11, 18512, 11, 323, 1023, 6020, 17150, 11, 8405, 7718, 828, 369, 42118, 279, 2883, 596, 6020, 3044, 323, 279, 5536, 315, 5370, 8070, 323, 20900, 5540, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e627239a0>, 'json_data': {'input': [[18902, 79483, 25, 3277, 5995, 584, 5226, 449, 9873, 2212, 279, 1917, 311, 3493, 28175, 3600, 1405, 584, 656, 539, 617, 8475, 304, 37002, 19248, 477, 5070, 11, 3629, 304, 5151, 430, 1397, 28175, 4967, 1093, 42030, 7677, 11, 2262, 64382, 11, 6130, 1862, 11, 323, 7106, 4868, 13, 1226, 1101, 5226, 449, 13643, 65151, 13607, 994, 584, 1205, 311, 3504, 2875, 9860, 11141, 11, 994, 584, 617, 51760, 304, 2626, 3966, 11, 477, 994, 584, 1205, 311, 6288, 49727, 349, 3361, 7224, 13, 1226, 5268, 1057, 8717, 323, 65151, 13607, 15884, 11, 323, 3477, 872, 8907, 449, 5195, 753, 32804, 6247, 315, 50935, 13, 1226, 35611, 1304, 18637, 311, 12192, 264, 49150, 323, 6928, 3318, 4676, 369, 5127, 2001, 8420, 11, 29629, 11, 323, 13643, 5687, 27083, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 35434, 5195, 596, 5603, 311, 60506, 704, 28175, 3600, 323, 279, 16994, 6727, 315, 8717, 311, 6106, 8907, 449, 279, 2883, 596, 10886, 13, 1102, 66159, 279, 12939, 315, 20958, 264, 49150, 990, 4676, 369, 682, 8420, 323, 33840, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723a30>, 'json_data': {'input': [[18902, 79483, 25, 1226, 75224, 7362, 11667, 4741, 323, 3072, 17517, 320, 16564, 4631, 1590, 8, 439, 8515, 6530, 305, 17327, 311, 42766, 3738, 18057, 291, 13254, 14463, 3453, 50615, 304, 36702, 1023, 1109, 279, 549, 815, 13, 18160, 13, 4314, 17517, 617, 296, 2693, 1385, 315, 220, 1187, 4038, 477, 2753, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 43851, 315, 7362, 11667, 4741, 323, 3072, 17517, 439, 8515, 6530, 305, 17327, 11, 26073, 872, 3230, 1005, 304, 79482, 13254, 14463, 13, 1102, 374, 3062, 369, 8830, 1268, 63897, 4953, 13, 36236, 1202, 13254, 23914, 505, 11667, 65649, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723ac0>, 'json_data': {'input': [[18902, 79483, 25, 320, 87680, 519, 596, 21186, 1396, 11, 2737, 3158, 2082, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 38846, 12143, 11, 19392, 430, 433, 374, 279, 23702, 519, 596, 21186, 1396, 11, 2737, 279, 3158, 2082, 13, 1115, 93566, 5296, 8779, 38263, 279, 7580, 315, 279, 3766, 6710, 315, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723b50>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 2246, 11, 31692, 1202, 9764, 439, 264, 1934, 5552, 311, 63897, 4953, 2637, 902, 374, 279, 2748, 2883, 315, 5195, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723be0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 904, 1495, 13, 1102, 17482, 264, 4528, 24693, 7580, 439, 46613, 220, 20, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723c70>, 'json_data': {'input': [[18902, 79483, 25, 72673, 369, 33620, 72837, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 17575, 369, 8070, 13426, 3857, 11, 902, 374, 16595, 369, 8830, 279, 2883, 596, 3827, 30255, 323, 872, 5536, 389, 8244, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723d00>, 'json_data': {'input': [[18902, 79483, 25, 1442, 34919, 527, 9879, 33549, 311, 11360, 220, 717, 1921, 8, 315, 279, 3298, 11, 13519, 555, 1817, 1906, 3508, 279, 6020, 12518, 315, 279, 23702, 519, 5343, 304, 279, 26559, 8881, 279, 27358, 315, 459, 1493, 311, 8767, 11136, 6020, 12518, 13, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 13708, 315, 279, 6020, 12518, 5343, 304, 279, 26559, 11, 11951, 3508, 814, 8881, 51479, 315, 904, 6103, 505, 8767, 11136, 6020, 12518, 13, 1115, 374, 3062, 369, 20958, 279, 38769, 315, 279, 6020, 13122, 1920, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723d90>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11105, 2500, 3857, 4342, 369, 279, 6771, 315, 36962, 11, 4726, 19392, 279, 7471, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723e20>, 'json_data': {'input': [[18902, 79483, 25, 220, 6028, 627, 2014, 940, 1534, 73094, 25, 578, 1396, 330, 6028, 1210, 4461, 17482, 439, 264, 2199, 1396, 5905, 477, 3857, 1396, 11, 10695, 311, 25539, 420, 2038, 2949, 279, 27927, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723eb0>, 'json_data': {'input': [[18902, 79483, 25, 578, 15691, 907, 315, 25452, 34919, 374, 17303, 439, 279, 2860, 2926, 2853, 5636, 279, 40944, 4272, 8895, 320, 9563, 570, 480, 1771, 323, 18151, 11, 2737, 38974, 1392, 11, 527, 5343, 439, 264, 3777, 315, 507, 40, 69248, 304, 279, 79980, 660, 70816, 315, 33620, 13, 3580, 7181, 220, 22, 369, 4726, 3649, 389, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 19179, 315, 279, 15691, 907, 315, 25452, 34919, 11, 26073, 1268, 279, 2926, 2853, 323, 40944, 20192, 477, 18151, 527, 41853, 369, 13, 1102, 374, 961, 315, 279, 25452, 22538, 3857, 323, 5825, 2317, 369, 279, 51262, 5528, 1511, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62723f40>, 'json_data': {'input': [[18902, 79483, 25, 12850, 315, 28614, 10758, 323, 31357, 3956, 26, 323, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 17, 11, 420, 12143, 36611, 2500, 43940, 304, 279, 2626, 4676, 2345, 48387, 315, 28614, 10758, 323, 31357, 3956, 13, 1102, 72890, 279, 17226, 2134, 315, 10937, 5195, 12580, 304, 5370, 26593, 11, 74055, 1202, 3157, 4430, 323, 1217, 20392, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444040>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1047, 400, 5120, 13, 24, 7239, 304, 8515, 11, 8515, 86106, 11, 323, 2875, 9860, 3157, 481, 34919, 13, 23139, 86106, 323, 3157, 481, 34919, 527, 40056, 315, 892, 34751, 11, 3300, 3157, 10736, 11, 7701, 14812, 3109, 27460, 11, 13166, 11897, 34919, 11, 21515, 46128, 323, 9513, 46128, 34919, 11, 323, 3157, 481, 25452, 34919, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 12678, 9002, 63897, 4953, 3238, 82, 8515, 11, 8515, 86106, 11, 323, 2875, 9860, 3157, 481, 34919, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 11725, 279, 6956, 315, 1521, 12032, 11, 66251, 4954, 279, 2883, 596, 53113, 2361, 2949, 279, 6020, 3044, 10430, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624440d0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 961, 315, 279, 2246, 753, 2316, 11, 330, 2149, 18992, 4953, 13, 1359, 19392, 430, 279, 17876, 2038, 18713, 1771, 311, 279, 6020, 323, 25605, 3649, 315, 420, 3230, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444160>, 'json_data': {'input': [[18902, 79483, 25, 21304, 59678, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7434, 315, 5178, 12718, 11, 43080, 264, 6541, 311, 25394, 20448, 28904, 17791, 311, 9341, 4780, 13, 1102, 17482, 439, 264, 4342, 369, 279, 17876, 16540, 315, 1268, 1521, 12718, 527, 41853, 369, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624441f0>, 'json_data': {'input': [[18902, 79483, 25, 220, 777, 11, 10513, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 279, 1620, 7216, 369, 8515, 7318, 369, 8070, 13426, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 45695, 279, 4101, 315, 12678, 5552, 311, 8070, 3827, 14507, 11, 29820, 311, 279, 8830, 315, 279, 2883, 596, 3827, 58165, 927, 279, 5068, 1667, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444280>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 374, 279, 4342, 19392, 430, 279, 2246, 18713, 1771, 311, 63897, 4953, 2637, 279, 2748, 2883, 315, 5195, 11, 323, 7437, 279, 2317, 369, 279, 6020, 2038, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444310>, 'json_data': {'input': [[18902, 79483, 25, 6909, 14767, 198, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624443a0>, 'json_data': {'input': [[18902, 79483, 25, 3028, 7388, 220, 2366, 19, 328, 43945, 11, 264, 13096, 315, 578, 23778, 1059, 11529, 484, 32886, 4953, 13, 2052, 3268, 4694, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 7065, 5406, 11, 19392, 279, 15637, 315, 279, 828, 323, 14515, 10666, 304, 279, 3766, 27855, 13, 1102, 17482, 439, 264, 5897, 78570, 315, 279, 2592, 315, 279, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444430>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 22, 11, 420, 374, 4461, 264, 24693, 2449, 315, 279, 2246, 323, 1587, 539, 3085, 23222, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624444c0>, 'json_data': {'input': [[18902, 79483, 25, 6186, 220, 966, 11, 220, 2366, 19, 198, 2014, 940, 1534, 73094, 25, 1115, 2457, 15785, 279, 67599, 315, 279, 25261, 1934, 369, 63897, 4953, 13, 323, 15151, 994, 279, 6020, 12518, 5343, 304, 279, 2246, 1051, 6264, 1639, 323, 61487, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444550>, 'json_data': {'input': [[18902, 79483, 25, 23139, 54974, 555, 36233, 44382, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 12302, 264, 10430, 389, 8515, 28555, 505, 10565, 7640, 11, 902, 527, 16595, 369, 47614, 279, 2883, 596, 6332, 2626, 5178, 323, 5845, 311, 7068, 8515, 505, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624445e0>, 'json_data': {'input': [[18902, 79483, 25, 320, 1423, 477, 1023, 29101, 315, 88465, 477, 7471, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 73100, 14742, 279, 2317, 315, 279, 3766, 12143, 555, 38938, 279, 7138, 315, 279, 2038, 1694, 3984, 320, 2513, 315, 88465, 323, 469, 691, 570]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444670>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 19392, 279, 836, 315, 279, 2883, 11, 330, 2149, 18992, 4953, 13, 1359, 323, 4461, 8111, 520, 279, 7314, 315, 279, 2246, 439, 961, 315, 279, 2316, 477, 3504, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444700>, 'json_data': {'input': [[18902, 79483, 25, 578, 10013, 753, 14434, 47910, 3298, 11, 902, 690, 1397, 304, 1355, 2474, 5220, 311, 6994, 1217, 14771, 369, 35271, 828, 4028, 3738, 3956, 323, 1397, 2778, 21787, 311, 4430, 32248, 1534, 828, 449, 21425, 5220, 11, 4315, 1023, 4442, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 10013, 753, 14434, 47910, 3298, 11, 902, 88381, 502, 8670, 389, 5220, 9002, 1217, 14771, 323, 828, 11821, 13, 1102, 22020, 279, 42028, 23331, 4676, 323, 1202, 25127, 369, 63897, 11, 31799, 1203, 311, 279, 22100, 315, 8907, 323, 25605, 2349, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444790>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 507, 40, 69248, 11, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 7437, 709, 369, 264, 2007, 29040, 1023, 8070, 323, 18512, 11, 8405, 264, 2867, 6020, 24131, 315, 2536, 59655, 1697, 8070, 23914, 323, 7194, 11, 902, 527, 3062, 369, 16195, 6020, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444820>, 'json_data': {'input': [[18902, 79483, 25, 3314, 7016, 10217, 279, 8863, 315, 6160, 24264, 2038, 11, 1778, 439, 279, 19174, 12371, 24264, 8245, 19406, 3298, 323, 279, 8421, 40985, 477, 5560, 315, 12371, 24264, 35721, 3298, 11, 902, 33330, 30255, 389, 9873, 430, 6667, 477, 36333, 11761, 6160, 24264, 2038, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 1614, 7016, 18815, 279, 8863, 315, 6160, 24264, 2038, 11, 27401, 3230, 10507, 1093, 279, 19174, 323, 8421, 7016, 13, 1102, 11621, 8149, 311, 279, 10430, 389, 12625, 14640, 555, 94012, 279, 29865, 30255, 27070, 389, 9873, 11, 47594, 279, 8830, 315, 23331, 84140, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624448b0>, 'json_data': {'input': [[18902, 79483, 25, 6909, 17244, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 72214, 279, 1212, 315, 3744, 17244, 315, 279, 2246, 11, 902, 6118, 5727, 5370, 80506, 2038, 11, 2737, 6020, 12518, 323, 11944, 75992, 2631, 555, 14640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444940>, 'json_data': {'input': [[18902, 79483, 25, 220, 4218, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 2500, 2199, 1396, 477, 3857, 11381, 11, 4461, 961, 315, 279, 2246, 596, 29595, 369, 14553, 315, 5905, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624449d0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 2199, 1396, 5905, 430, 15151, 279, 6771, 315, 36962, 3857, 11, 902, 5825, 459, 24131, 315, 279, 2246, 596, 6070, 323, 8779, 13016, 25539, 3230, 2038, 2949, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444a60>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 13019, 279, 2768, 9477, 439, 961, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 1160, 315, 9477, 13019, 439, 961, 315, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 13, 1102, 64252, 13016, 430, 279, 17876, 3673, 690, 6782, 3230, 6020, 323, 24043, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444af0>, 'json_data': {'input': [[18902, 79483, 25, 320, 258, 11990, 11, 3734, 1370, 907, 824, 4430, 15055, 340, 2014, 940, 1534, 73094, 25, 1115, 5296, 30202, 279, 11667, 1511, 304, 279, 6020, 12518, 11, 19392, 430, 682, 15055, 527, 5068, 304, 11990, 315, 11441, 11, 3734, 369, 1370, 907, 824, 4430, 15055, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444b80>, 'json_data': {'input': [[18902, 79483, 25, 1666, 8767, 36489, 11, 5195, 15620, 11, 264, 41164, 315, 63897, 11, 13019, 22736, 449, 279, 8690, 12411, 8398, 5475, 33549, 311, 8690, 26542, 2585, 8670, 11, 902, 2011, 387, 84864, 449, 4972, 311, 279, 1179, 315, 9960, 3673, 13, 578, 2038, 3984, 33549, 311, 11360, 220, 1032, 2666, 8, 315, 279, 19224, 3298, 304, 3744, 8105, 11, 5858, 220, 20, 315, 1057, 75483, 8423, 389, 3459, 220, 605, 29342, 369, 279, 8502, 9670, 6250, 220, 966, 11, 220, 2366, 18, 374, 32762, 36881, 555, 5905, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 961, 315, 279, 6771, 315, 36962, 11, 902, 8779, 13016, 21546, 279, 2246, 13, 1102, 17482, 439, 264, 69917, 369, 9455, 3230, 14491, 2949, 279, 9974, 1934, 11, 47594, 2246, 76160, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444c10>, 'json_data': {'input': [[18902, 79483, 25, 4185, 351, 94140, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 3857, 430, 690, 3118, 18792, 94140, 13254, 2038, 13, 1102, 15151, 430, 279, 2768, 2262, 690, 1464, 1523, 13254, 8336, 11, 902, 374, 3062, 369, 42118, 279, 2883, 596, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444ca0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 439, 912, 1495, 374, 3984, 369, 46613, 220, 16, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444d30>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 7016, 11, 14640, 11, 323, 1023, 11193, 430, 2633, 264, 7029, 2134, 315, 13650, 11, 2737, 1884, 5552, 311, 13146, 7953, 1057, 6332, 3956, 323, 3600, 13, 1789, 2937, 11, 502, 7016, 11, 14640, 11, 10396, 11, 323, 6625, 1046, 2311, 23343, 311, 469, 7939, 13146, 11, 2737, 41329, 11, 10182, 2349, 11, 3823, 6864, 11, 323, 20057, 11, 527, 1694, 8040, 323, 16287, 1534, 304, 4606, 11, 279, 549, 815, 2637, 323, 18403, 11, 902, 1253, 87092, 3230, 11, 2218, 32505, 49125, 323, 5255, 28957, 8670, 13, 1226, 617, 11798, 22514, 469, 7939, 7620, 11, 18306, 13122, 49125, 323, 16565, 11, 323, 7376, 264, 1396, 315, 9021, 323, 28271, 13, 578, 8292, 315, 1521, 9021, 323, 28271, 1253, 1397, 24779, 22538, 11, 323, 1057, 9021, 11, 449, 682, 315, 872, 39639, 6072, 11, 20113, 11, 323, 304, 3738, 5157, 11, 54180, 389, 4948, 24993, 23751, 323, 5255, 5178, 11, 527, 6485, 323, 32855, 11, 323, 1253, 2349, 13, 1226, 4250, 15803, 430, 1057, 9021, 323, 28271, 690, 387, 7373, 15393, 389, 279, 88244, 584, 1755, 477, 520, 682, 11, 323, 7224, 430, 527, 8308, 439, 13205, 1253, 539, 11322, 279, 3135, 584, 48248, 13, 5884, 8060, 11, 477, 26617, 8060, 11, 555, 603, 311, 49553, 311, 1057, 586, 12518, 11, 26069, 7373, 449, 11469, 58689, 315, 469, 7939, 7016, 323, 14640, 11, 477, 3449, 42028, 323, 28830, 18783, 4346, 17078, 323, 10886, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 1624, 2396, 19662, 1139, 279, 42028, 18921, 315, 469, 7939, 14640, 323, 279, 2883, 596, 42356, 311, 41329, 323, 20057, 13, 1102, 66159, 279, 23965, 315, 25976, 1521, 28271, 323, 279, 4754, 43839, 1697, 15635, 11, 27442, 1139, 279, 98536, 7057, 315, 8907, 323, 13166, 35186, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444dc0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 961, 315, 279, 2246, 596, 24693, 5540, 11, 19392, 279, 9546, 315, 264, 6771, 315, 36962, 13, 1102, 1587, 539, 6782, 2262, 430, 7612, 66251, 2065, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444e50>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 11, 53869, 555, 50270, 8541, 311, 81584, 449, 8244, 7100, 4787, 13, 2467, 4550, 18563, 49944, 4787, 617, 11754, 11, 323, 1253, 304, 279, 3938, 7958, 11, 279, 7631, 369, 13172, 11, 13239, 304, 65649, 304, 279, 15055, 1057, 50270, 8493, 389, 13172, 11, 902, 1436, 11682, 1057, 6020, 3044, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 7902, 87386, 10374, 311, 27927, 7100, 4787, 11, 23377, 430, 7100, 76506, 82, 1436, 3063, 311, 11293, 13172, 42484, 13, 1102, 66159, 279, 83416, 2136, 315, 279, 2883, 596, 6020, 5178, 449, 279, 18563, 49944, 4676, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444ee0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 14393, 279, 2883, 836, 11, 63897, 4953, 2637, 902, 17482, 439, 279, 14836, 369, 279, 4553, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62444f70>, 'json_data': {'input': [[18902, 79483, 25, 3308, 362, 323, 3308, 426, 7874, 12937, 323, 3308, 356, 18880, 12937, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 459, 24131, 315, 279, 2204, 6989, 315, 5708, 19144, 555, 63897, 596, 8925, 315, 46085, 11, 11951, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 13, 1102, 374, 961, 315, 279, 3857, 45293, 279, 6070, 315, 63897, 596, 25452, 323, 63342, 16043, 3268, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445000>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 3308, 362, 3308, 426, 3308, 356, 14967, 4272, 8070, 824, 4430, 25, 48224, 859, 73767, 315, 2073, 26204, 24608, 400, 220, 1958, 11, 1049, 400, 220, 20, 11, 11771, 400, 220, 1927, 11, 25090, 9973, 31306, 5742, 315, 13551, 1511, 304, 824, 4430, 35547, 220, 21, 11, 11030, 220, 21278, 220, 21, 11, 20596, 14967, 4272, 8070, 824, 4430, 400, 220, 20, 13, 3076, 400, 220, 20, 13, 3076, 400, 220, 20, 13, 3076, 53867, 2844, 4272, 8070, 824, 4430, 25, 48224, 859, 73767, 315, 2073, 26204, 24608, 369, 6913, 35547, 400, 220, 1958, 11, 1049, 400, 220, 20, 11, 11771, 400, 220, 1927, 11, 25090, 8976, 2588, 315, 2073, 26204, 24608, 439, 264, 1121, 315, 14747, 315, 3308, 426, 311, 3308, 362, 13551, 220, 20, 11, 11771, 220, 15, 220, 15, 8976, 2588, 315, 2073, 26204, 24608, 320, 23864, 8, 320, 2813, 8, 220, 23864, 73767, 315, 2073, 26204, 24608, 400, 220, 1987, 11, 24531, 400, 220, 20, 11, 28384, 400, 220, 1806, 11, 8273, 9973, 31306, 5742, 315, 13551, 1511, 304, 6913, 35547, 220, 21, 11, 11030, 220, 21278, 220, 21, 11, 20596, 16923, 291, 78526, 2515, 315, 19371, 6844, 34919, 2758, 25, 43609, 315, 3308, 426, 311, 3308, 362, 13551, 19310, 220, 21278, 220, 15, 220, 15, 94960, 5708, 8316, 323, 1023, 39639, 4501, 2425, 13429, 13551, 220, 15, 220, 15, 220, 1049, 5742, 315, 13551, 1511, 304, 824, 4430, 35547, 220, 21, 11, 22387, 220, 21278, 220, 21, 11, 24495, 53867, 2844, 4272, 8070, 824, 4430, 400, 220, 20, 13, 5547, 400, 220, 20, 13, 5547, 400, 220, 20, 13, 5547, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 3649, 279, 22702, 315, 6913, 323, 80703, 4272, 8070, 824, 4430, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 13, 1102, 5764, 3230, 12678, 369, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 11, 8405, 28330, 1139, 1268, 24608, 527, 20816, 4315, 2204, 6989, 315, 5708, 17075, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445090>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 8349, 11, 43986, 11, 23331, 323, 3109, 26969, 11, 1023, 29407, 11, 323, 10373, 16239, 10937, 11, 20207, 3424, 11, 828, 12625, 323, 4868, 11, 3827, 323, 5552, 8907, 11, 9511, 323, 14740, 11, 8518, 42254, 11, 2262, 8066, 555, 1057, 3932, 11, 11822, 323, 3600, 9076, 555, 50270, 477, 36717, 1701, 1057, 15771, 11, 4443, 11134, 11, 323, 1023, 13146, 13, 1226, 527, 1101, 3917, 311, 264, 8205, 315, 8349, 2737, 2027, 8642, 11, 2027, 24305, 11, 323, 11761, 9313, 8349, 5552, 311, 2027, 42655, 11, 4315, 1023, 39725, 11, 323, 584, 1253, 1101, 387, 3917, 311, 8349, 16239, 2890, 323, 7296, 11, 51024, 7384, 10648, 11, 1023, 12434, 6372, 11, 15592, 4967, 11, 4500, 11, 323, 8518, 2065, 11, 477, 2532, 98057, 477, 28950, 13, 51198, 617, 1027, 7263, 11, 323, 584, 1755, 690, 3136, 311, 387, 7263, 11, 2403, 603, 369, 89201, 11, 59357, 11, 69140, 315, 5226, 11, 7065, 323, 32464, 54443, 11, 28743, 10937, 11, 45522, 5820, 11, 16831, 82, 11, 12625, 3268, 27655, 11, 16515, 11, 477, 1023, 5897, 26018, 3196, 389, 279, 7138, 323, 2262, 315, 2038, 2561, 389, 477, 4669, 1057, 3600, 11, 279, 2955, 323, 2515, 315, 1057, 3956, 323, 3600, 11, 477, 4245, 311, 1057, 22315, 304, 20256, 11, 78768, 11, 8661, 11, 44817, 11, 477, 8405, 2680, 311, 2262, 3549, 555, 4948, 9875, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 25985, 988, 389, 279, 4595, 315, 8349, 323, 43986, 63897, 4953, 13, 1253, 3663, 11, 18702, 264, 7353, 2134, 315, 5897, 4819, 505, 20207, 3424, 311, 11761, 9313, 13, 1102, 72890, 279, 4754, 5897, 15635, 279, 2883, 374, 15246, 311, 439, 433, 27149, 1202, 5370, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445120>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 6771, 315, 36962, 315, 279, 2246, 11, 902, 17482, 439, 264, 34512, 1697, 5507, 311, 1520, 13016, 25539, 3230, 14491, 323, 13650, 2949, 279, 27927, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624451b0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1227, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 477, 3857, 1396, 505, 279, 2246, 11, 19392, 430, 433, 1253, 8854, 439, 264, 34512, 1697, 11381, 4856, 1109, 8649, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445240>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 975, 13, 33620, 72837, 198, 2014, 940, 1534, 73094, 25, 1115, 15785, 279, 7314, 315, 264, 3857, 10968, 389, 33620, 72837, 11, 19392, 430, 279, 2768, 27855, 690, 3493, 11944, 2038, 9002, 63897, 4953, 3238, 82, 3827, 14228, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624452d0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 7314, 315, 264, 502, 3857, 477, 2199, 11, 4461, 5552, 311, 12920, 315, 8970, 477, 70552, 430, 8641, 279, 6742, 1555, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445360>, 'json_data': {'input': [[18902, 79483, 25, 7436, 1666, 2930, 13172, 93054, 11, 584, 3136, 311, 9407, 1057, 2027, 33935, 11, 902, 1253, 7958, 1057, 58191, 2065, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 10430, 15151, 279, 15740, 315, 2930, 13172, 323, 63897, 596, 2077, 1555, 24050, 2027, 33935, 13, 1115, 7437, 709, 264, 27927, 10430, 389, 1268, 1521, 4442, 1253, 5536, 13254, 9659, 323, 58191, 2065, 15174, 304, 3938, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624453f0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2007, 3770, 18911, 279, 20192, 320, 9563, 288, 8, 315, 1057, 43645, 389, 279, 79980, 660, 70816, 315, 33620, 25, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 50729, 279, 20192, 323, 18151, 389, 43645, 439, 12715, 304, 279, 79980, 660, 70816, 315, 33620, 13, 1102, 374, 961, 315, 279, 6020, 28957, 430, 6835, 20616, 1139, 279, 5536, 315, 43645, 389, 279, 2883, 753, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445480>, 'json_data': {'input': [[18902, 79483, 25, 1226, 4510, 430, 1475, 2626, 706, 279, 6776, 323, 29672, 311, 6144, 1057, 11841, 13, 89812, 374, 832, 315, 1057, 6332, 2819, 520, 5195, 11, 323, 584, 37106, 311, 1977, 41329, 1139, 4395, 584, 656, 13, 1226, 617, 1027, 264, 7808, 389, 41329, 323, 10182, 2349, 2533, 5195, 753, 36330, 810, 1109, 220, 914, 1667, 4227, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 5195, 596, 6332, 907, 315, 41329, 323, 1202, 13970, 11692, 304, 10182, 2349, 28271, 13, 1102, 10093, 279, 2883, 439, 832, 430, 75762, 41329, 1139, 1202, 2626, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445510>, 'json_data': {'input': [[18902, 79483, 25, 320, 1423, 477, 1023, 29101, 315, 88465, 477, 7471, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 73100, 14742, 279, 2317, 315, 279, 3766, 12143, 555, 38938, 279, 7138, 315, 279, 2038, 1694, 3984, 320, 2513, 315, 88465, 323, 469, 691, 570]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624455a0>, 'json_data': {'input': [[18902, 79483, 25, 2468, 63897, 11, 584, 527, 11411, 311, 3339, 20057, 11, 25452, 11, 323, 28286, 961, 315, 4395, 584, 656, 323, 311, 7982, 264, 32027, 430, 374, 18740, 315, 279, 3932, 584, 8854, 13, 4497, 2038, 389, 5195, 753, 5603, 311, 20057, 649, 387, 1766, 304, 1057, 9974, 20057, 6821, 11, 2561, 17880, 520, 20057, 5831, 13, 578, 8970, 315, 1057, 20057, 6821, 527, 539, 32762, 555, 5905, 1139, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 477, 304, 904, 1023, 1934, 477, 2246, 584, 1052, 449, 279, 22370, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 5195, 596, 15507, 311, 20057, 11, 25452, 11, 323, 28286, 2949, 1202, 32027, 13, 1102, 15151, 430, 279, 2883, 22262, 311, 1977, 264, 2128, 52828, 315, 1202, 1217, 2385, 11, 31799, 9548, 20057, 311, 13166, 2819, 323, 27927, 3674, 28423, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445630>, 'json_data': {'input': [[18902, 79483, 25, 578, 7524, 3827, 4478, 25983, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 42852, 279, 2515, 315, 279, 1403, 3827, 6037, 4442, 7633, 3485, 11, 8104, 279, 2349, 5552, 311, 7362, 3827, 20746, 13, 578, 2515, 315, 1521, 3827, 6037, 4442, 574, 26310, 4445, 555, 4442, 304, 36218, 3827, 7720, 323, 264, 18979, 304, 279, 549, 815, 13, 6918, 19620, 68949, 1357, 61186, 33620, 3827, 39943, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 6625, 24345, 9002, 3827, 10396, 323, 4754, 4442, 304, 3938, 3827, 30255, 11, 8405, 2317, 369, 1317, 9860, 9293, 323, 20323, 8446, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624456c0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 23927, 11842, 5364, 847, 36164, 23927, 11842, 5364, 847, 36164, 58588, 58588, 58588, 58588, 46272, 46272, 10884, 46272, 46272, 10884, 10884, 2926, 2853, 400, 220, 20, 11, 24402, 400, 220, 845, 11, 10895, 400, 220, 1691, 11, 22536, 400, 220, 20, 11, 19770, 400, 220, 1114, 11, 21379, 400, 220, 1419, 11, 22379, 32678, 22948, 4272, 8895, 320, 9563, 2432, 16, 8, 320, 19944, 8, 220, 717, 11, 17662, 220, 806, 11, 24402, 220, 14148, 220, 806, 11, 3965, 220, 806, 11, 21469, 3341, 28609, 907, 400, 220, 20, 11, 10132, 400, 220, 1591, 11, 21618, 400, 220, 1644, 11, 23717, 400, 220, 20, 11, 24471, 400, 220, 1591, 11, 25358, 400, 220, 1958, 11, 25809, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 2007, 29385, 4954, 279, 15691, 2819, 315, 3157, 481, 323, 2536, 30004, 36164, 25452, 34919, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 13, 1115, 2038, 374, 16996, 369, 8830, 279, 6020, 2361, 323, 9341, 8446, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445750>, 'json_data': {'input': [[18902, 79483, 25, 220, 717, 5364, 6167, 24478, 1666, 315, 6790, 220, 2148, 11, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 220, 2366, 17, 220, 2366, 18, 32388, 5699, 482, 2802, 4478, 400, 220, 4146, 400, 220, 17408, 400, 220, 3753, 400, 220, 15828, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 35876, 828, 5552, 311, 279, 13240, 832, 11477, 4814, 304, 6762, 907, 315, 3157, 481, 11897, 34919, 369, 279, 1667, 13696, 6790, 220, 2148, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1115, 828, 11815, 279, 2038, 10666, 304, 46613, 220, 16, 323, 374, 7718, 369, 8830, 279, 5326, 14675, 304, 63897, 4953, 3238, 82, 9341, 20136, 11, 439, 433, 10484, 9803, 279, 4754, 6020, 5536, 315, 2802, 4478, 4442, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624457e0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 9320, 1139, 15182, 3230, 4595, 315, 28650, 13, 1102, 66159, 279, 20057, 315, 10937, 17011, 555, 279, 2883, 323, 48542, 279, 6742, 369, 279, 11944, 52678, 315, 28650, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445870>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 578, 12262, 16, 10143, 374, 4461, 264, 87910, 477, 5905, 11381, 430, 15151, 5217, 93566, 2038, 477, 64784, 9002, 279, 38846, 828, 11, 47594, 279, 6742, 596, 8830, 315, 279, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445900>, 'json_data': {'input': [[18902, 79483, 25, 7766, 11, 902, 15871, 2997, 6763, 315, 279, 28569, 3070, 315, 7766, 26, 323, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 16, 11, 420, 12143, 25985, 988, 389, 279, 13254, 8066, 505, 279, 6412, 315, 7766, 11, 11951, 45391, 279, 28569, 3070, 13, 1102, 44072, 311, 279, 8830, 315, 63897, 596, 17226, 13254, 23914, 11, 82003, 12035, 6763, 16662, 3241, 323, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445990>, 'json_data': {'input': [[18902, 79483, 25, 350, 1741, 5764, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 311, 14158, 832, 315, 279, 6956, 315, 279, 10884, 47423, 64141, 320, 51, 1741, 8, 5938, 449, 279, 2853, 315, 30466, 11, 23377, 264, 810, 11944, 16540, 690, 1833, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445a20>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 16, 13, 22241, 315, 90462, 45344, 63348, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 7181, 220, 16, 315, 279, 8554, 311, 279, 60391, 6020, 12518, 11, 902, 35434, 279, 12399, 315, 5199, 24043, 10396, 13, 1102, 7437, 279, 6566, 369, 8830, 279, 24043, 12914, 9435, 304, 20646, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445ab0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 8349, 11, 43986, 11, 23331, 323, 3109, 26969, 11, 1023, 29407, 11, 323, 14771, 10373, 16239, 10937, 11, 20207, 3424, 11, 828, 4868, 11, 3827, 323, 5552, 8907, 11, 9511, 323, 14740, 11, 8518, 42254, 11, 2262, 8066, 555, 1057, 3932, 11, 11822, 323, 3600, 9076, 555, 50270, 477, 36717, 1701, 1057, 15771, 11, 4443, 11134, 11, 11761, 9313, 11, 323, 1023, 13146, 13, 1789, 3187, 11, 304, 6790, 220, 2366, 18, 11, 264, 7188, 21928, 12886, 264, 36543, 304, 40467, 11871, 348, 13, 5195, 9455, 430, 5195, 34521, 3276, 85971, 7016, 5552, 311, 5195, 7199, 596, 2626, 13, 578, 1685, 6714, 11913, 690, 8417, 51236, 304, 220, 2366, 19, 11, 323, 279, 2134, 315, 4754, 51236, 13592, 13882, 13, 1226, 3197, 311, 14638, 13, 1226, 1101, 48582, 617, 828, 24455, 430, 584, 1934, 311, 9959, 40242, 439, 2631, 555, 2383, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 5370, 5897, 15635, 323, 14640, 63897, 12580, 4028, 5361, 31576, 11, 2737, 10937, 11, 20207, 3424, 11, 323, 11761, 9313, 13, 1102, 15407, 264, 5199, 3293, 36543, 2403, 5195, 304, 459, 3276, 85971, 1162, 11, 94012, 279, 4754, 8389, 16296, 315, 14529, 39725, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445b40>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 87910, 5905, 11381, 11, 19392, 430, 5217, 93566, 2038, 369, 264, 38846, 5224, 477, 3857, 374, 2561, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445bd0>, 'json_data': {'input': [[18902, 79483, 25, 16207, 323, 18729, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 8712, 315, 16207, 323, 18729, 18512, 11, 19392, 430, 420, 374, 2500, 9200, 3777, 315, 63897, 4953, 14639, 82, 25605, 7194, 13, 1102, 11263, 279, 10430, 315, 432, 33465, 11, 23377, 264, 16195, 1684, 315, 279, 2883, 596, 10374, 30601, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445c60>, 'json_data': {'input': [[18902, 79483, 25, 220, 777, 11, 10513, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 279, 1620, 7216, 369, 8515, 7318, 369, 8070, 13426, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 45695, 279, 4101, 315, 12678, 5552, 311, 8070, 3827, 14507, 11, 29820, 311, 279, 8830, 315, 279, 2883, 596, 3827, 58165, 927, 279, 5068, 1667, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445cf0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2626, 14117, 389, 8738, 323, 653, 6802, 31035, 2680, 311, 279, 8191, 555, 603, 323, 1057, 3932, 13, 8191, 2680, 12850, 1253, 387, 3025, 311, 9067, 11, 2565, 11, 96630, 11, 477, 6900, 369, 2680, 311, 3738, 315, 1057, 3956, 323, 3600, 11, 902, 1436, 3063, 311, 5217, 18512, 323, 279, 4814, 315, 3932, 323, 50270, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 7757, 2680, 439, 264, 9200, 8331, 369, 279, 2883, 753, 7677, 13, 1102, 7437, 279, 6566, 369, 25394, 9434, 20113, 11, 8104, 389, 7757, 2532, 12850, 11, 902, 374, 9959, 311, 8830, 279, 27927, 25605, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445d80>, 'json_data': {'input': [[18902, 79483, 25, 220, 21, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 459, 33243, 3857, 11, 29820, 2697, 66251, 907, 389, 1202, 1866, 13, 1102, 1253, 13519, 264, 37666, 477, 29595, 4360, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445e10>, 'json_data': {'input': [[18902, 79483, 25, 23212, 11, 65649, 304, 1057, 30466, 8066, 505, 13172, 3573, 14783, 13172, 4063, 30466, 505, 1023, 8336, 3573, 14783, 41455, 11, 15771, 11, 323, 7766, 30466, 4063, 5195, 15161, 11, 323, 7089, 426, 1441, 30466, 617, 1027, 11, 323, 1253, 3136, 311, 387, 11, 11754, 555, 1023, 9547, 5016, 311, 1855, 743, 315, 30466, 11, 439, 7633, 3770, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 3766, 10430, 315, 13254, 65649, 555, 28898, 430, 2204, 13254, 23914, 2345, 21470, 439, 13172, 11, 41455, 11, 323, 9624, 3600, 2345, 18864, 387, 40028, 555, 5016, 9547, 13, 1102, 7437, 279, 6566, 369, 264, 810, 11944, 24481, 315, 1521, 13254, 11306, 11, 902, 374, 5199, 369, 15167, 323, 39210, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445ea0>, 'json_data': {'input': [[18902, 79483, 25, 22395, 63897, 4953, 2637, 279, 328, 43945, 220, 2636, 8167, 11, 279, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 961, 315, 264, 5708, 5178, 4876, 430, 43565, 63897, 4953, 3238, 82, 5178, 2403, 5370, 5708, 15285, 13, 1102, 15151, 430, 279, 17876, 828, 690, 41468, 279, 40944, 4780, 315, 63897, 596, 3308, 362, 5708, 16662, 279, 328, 43945, 220, 2636, 8167, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445f30>, 'json_data': {'input': [[18902, 79483, 25, 1789, 5217, 2038, 11, 1518, 1101, 1057, 5326, 8331, 389, 12625, 323, 828, 9313, 14640, 1234, 3451, 49, 93934, 25368, 311, 42089, 11, 49357, 11, 323, 63348, 529, 3770, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 5905, 311, 5217, 2038, 9002, 12625, 323, 828, 9313, 14640, 11, 19392, 430, 279, 10430, 389, 1521, 13650, 374, 961, 315, 264, 27927, 12914, 315, 5897, 323, 23331, 11774, 17011, 555, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62445fc0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 3723, 4273, 400, 220, 8546, 11, 25515, 220, 2790, 1034, 400, 220, 9565, 11, 25498, 220, 2166, 1034, 400, 220, 10465, 11, 17361, 220, 2618, 1034, 469, 91467, 7, 16, 8, 220, 4643, 11, 7699, 220, 2148, 220, 6086, 11, 19222, 220, 1682, 220, 5925, 11, 24462, 220, 966, 10314, 1741, 7, 16, 8, 220, 2790, 11, 4513, 220, 972, 220, 2618, 11, 19592, 220, 845, 220, 3971, 11, 20998, 220, 1114, 7089, 52248, 7, 16, 8, 220, 975, 11, 7507, 220, 20, 220, 845, 11, 25208, 220, 21, 220, 972, 11, 9588, 220, 21, 75263, 3252, 20192, 320, 9563, 288, 8, 220, 10161, 220, 15, 220, 16, 11, 16415, 220, 16, 220, 14087, 220, 15, 10884, 30466, 400, 220, 15574, 11, 21788, 220, 1041, 1034, 400, 220, 16544, 11, 25192, 220, 1041, 1034, 400, 220, 14777, 11, 20077, 220, 1041, 33648, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 279, 13254, 12678, 18792, 94140, 555, 54242, 369, 279, 5300, 1667, 13, 1102, 5825, 7718, 20616, 1139, 279, 46139, 8141, 315, 63897, 4953, 3238, 82, 13254, 11, 39686, 5789, 315, 6650, 323, 3157, 9546, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446050>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 1057, 6864, 53869, 690, 5376, 11, 2737, 279, 3685, 5376, 304, 1057, 11156, 14054, 9341, 311, 1862, 279, 6650, 315, 1057, 2626, 323, 1057, 1317, 9860, 28271, 11, 304, 4040, 304, 1862, 315, 21075, 11478, 320, 15836, 8, 3956, 323, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 22020, 279, 2883, 596, 31293, 315, 7319, 6864, 53869, 11, 8104, 304, 11156, 14054, 323, 15592, 28271, 13, 1102, 18809, 2949, 279, 27927, 19775, 315, 279, 2883, 753, 15507, 311, 19297, 323, 6650, 11, 23377, 19092, 22538, 311, 1862, 3938, 2626, 26006, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624460e0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1954, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4461, 264, 6002, 477, 11381, 2949, 279, 2246, 11, 11000, 19392, 264, 2199, 1396, 477, 3857, 1464, 11, 323, 1587, 539, 6782, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446170>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446200>, 'json_data': {'input': [[18902, 79483, 25, 7089, 426, 1441, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 11663, 426, 1441, 1, 10449, 315, 63897, 11, 19392, 264, 5357, 389, 2536, 24357, 9873, 430, 13488, 18699, 10105, 4028, 5370, 19647, 13, 1102, 7437, 279, 6566, 369, 25394, 63897, 596, 22772, 323, 1579, 46570, 7224, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446290>, 'json_data': {'input': [[18902, 79483, 25, 477, 7720, 13, 1442, 584, 527, 539, 279, 6156, 63932, 304, 264, 650, 5484, 11, 584, 2759, 369, 279, 9341, 477, 1023, 3977, 12034, 304, 264, 650, 5484, 304, 18859, 449, 8581, 27438, 2599, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 650, 5484, 82, 11, 38938, 279, 24043, 6514, 369, 22538, 304, 1778, 15086, 994, 63897, 374, 539, 279, 6156, 63932, 13, 1102, 5825, 19351, 389, 71628, 311, 27438, 2599, 304, 1521, 15082, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446320>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 8471, 5764, 3956, 323, 3600, 1778, 439, 14058, 11, 8682, 11, 17669, 11, 7766, 11, 5195, 28508, 11, 5195, 7199, 11, 7694, 11, 323, 13674, 13, 5195, 8471, 27983, 30466, 15871, 505, 13172, 26, 12718, 4036, 369, 11761, 15493, 6108, 3956, 1778, 439, 13674, 6007, 11, 13674, 10948, 323, 26745, 11, 323, 12873, 7418, 29497, 26, 279, 6412, 315, 10721, 323, 304, 20624, 24393, 323, 7766, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 4096, 315, 279, 5195, 8471, 10449, 11, 15182, 279, 5370, 3956, 323, 3600, 433, 71010, 323, 82003, 1202, 6156, 13254, 8336, 11, 902, 527, 14090, 14592, 505, 13172, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624463b0>, 'json_data': {'input': [[18902, 79483, 25, 6652, 11, 423, 732, 13, 220, 10866, 2491, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 279, 3813, 315, 279, 22370, 5274, 11, 6652, 11, 423, 732, 13, 220, 10866, 2491, 11, 902, 374, 9959, 369, 5897, 323, 23331, 10096, 11, 19392, 1405, 279, 2246, 374, 13019, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446440>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 20, 11, 420, 12143, 17482, 439, 264, 4342, 11, 312, 2058, 1113, 279, 2246, 596, 9764, 323, 41961, 311, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624464d0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 22639, 1990, 3932, 323, 50270, 2349, 11, 323, 439, 2930, 1217, 7865, 93054, 11, 584, 3136, 311, 9407, 1057, 2027, 33935, 311, 8854, 1521, 10223, 3966, 11, 902, 1253, 7958, 1057, 58191, 2065, 13, 1789, 3187, 11, 30466, 505, 14058, 389, 13674, 323, 5195, 7199, 58191, 553, 520, 264, 4827, 4478, 1109, 1057, 8776, 2778, 14058, 13, 1226, 1101, 1755, 311, 3136, 311, 33435, 15592, 46045, 1139, 1057, 3956, 11, 1778, 439, 15592, 304, 7694, 11, 430, 1436, 7958, 1057, 58191, 2065, 18845, 13, 3277, 11469, 502, 3956, 323, 3600, 584, 8965, 5357, 1176, 389, 1217, 3217, 323, 1243, 389, 58191, 2065, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 1268, 4442, 304, 1217, 22639, 323, 7865, 10383, 63897, 596, 58191, 2065, 15174, 13, 1102, 5825, 10507, 315, 3230, 15771, 1093, 13674, 323, 5195, 7199, 11, 902, 11415, 279, 29865, 13254, 7969, 323, 279, 18052, 315, 15592, 11, 94012, 279, 2883, 753, 19092, 5357, 389, 1217, 3217, 1603, 58191, 2065, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446560>, 'json_data': {'input': [[18902, 79483, 25, 25074, 20900, 374, 4272, 315, 2802, 98421, 315, 400, 9892, 3610, 11, 400, 4386, 3610, 11, 323, 400, 10562, 3610, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 6020, 3649, 5552, 311, 2802, 20900, 11, 39686, 1268, 1790, 2802, 574, 98421, 304, 6020, 13122, 369, 279, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 374, 961, 315, 279, 69051, 6020, 5224, 2038, 3857, 11, 21760, 389, 279, 2883, 753, 11897, 6373, 323, 1202, 5536, 389, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624465f0>, 'json_data': {'input': [[18902, 79483, 25, 1023, 7739, 315, 13172, 11, 1778, 439, 4121, 19826, 11, 32947, 11, 32594, 11, 9063, 11, 323, 12707, 439, 1057, 50270, 11383, 51936, 304, 5361, 3772, 11, 2225, 2930, 323, 27258, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 330, 1605, 7739, 315, 13172, 1359, 1778, 439, 8776, 3772, 320, 30742, 19826, 11, 32594, 11, 5099, 25390, 42852, 279, 15022, 18921, 304, 902, 50270, 21797, 1463, 872, 3772, 10374, 11, 74055, 279, 2883, 596, 13172, 13254, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446680>, 'json_data': {'input': [[18902, 79483, 25, 3331, 323, 23541, 18512, 7319, 400, 19597, 3610, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 15871, 16625, 555, 459, 5376, 304, 20448, 18512, 315, 400, 17763, 3610, 11, 902, 574, 14090, 279, 1121, 315, 400, 12815, 3610, 304, 9548, 3285, 685, 10405, 5938, 449, 279, 14278, 304, 1057, 32027, 304, 5369, 311, 264, 10824, 315, 1023, 9547, 11, 7000, 315, 902, 1051, 32399, 5199, 627, 2014, 940, 1534, 73094, 25, 1115, 19775, 15100, 279, 5376, 304, 3331, 323, 52941, 18512, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 45293, 279, 9547, 10043, 1521, 4442, 13, 1102, 22020, 20448, 18512, 11, 5423, 1884, 5552, 311, 32027, 14278, 11, 902, 374, 16996, 369, 8830, 279, 6020, 18845, 10666, 304, 279, 3766, 2007, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446710>, 'json_data': {'input': [[18902, 79483, 25, 220, 1032, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 459, 1493, 11, 439, 433, 1587, 539, 6782, 9959, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624467a0>, 'json_data': {'input': [[18902, 79483, 25, 26182, 240, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 1817, 4075, 19392, 430, 279, 3766, 3488, 9002, 63897, 1694, 264, 3544, 49858, 1488, 261, 374, 11007, 439, 837, 13, 1102, 95593, 279, 2883, 596, 24790, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446830>, 'json_data': {'input': [[18902, 79483, 25, 220, 3076, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 2500, 4384, 477, 5906, 4174, 291, 5905, 11, 902, 1587, 539, 17210, 904, 2262, 369, 66251, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624468c0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 8304, 11, 902, 5764, 30466, 8066, 389, 5195, 8304, 6012, 24435, 304, 2467, 61161, 11, 2467, 62109, 11, 323, 5195, 2467, 10790, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 5195, 8304, 13254, 8336, 11, 902, 2997, 30466, 505, 2467, 61161, 11, 2467, 62109, 11, 323, 5195, 2467, 10790, 13, 1102, 1946, 1392, 279, 3766, 27855, 555, 22824, 4954, 2500, 1401, 13254, 4365, 430, 44072, 311, 5195, 596, 8244, 13172, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446950>, 'json_data': {'input': [[18902, 79483, 25, 3402, 75202, 315, 3308, 362, 323, 3308, 356, 13551, 1051, 400, 5538, 13, 17, 7239, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1789, 5217, 2038, 11, 1518, 7181, 220, 806, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 34945, 279, 4430, 2109, 75202, 1903, 555, 279, 2883, 11, 902, 527, 3062, 369, 8830, 6864, 24691, 323, 63342, 907, 28271, 13, 1102, 27053, 279, 2883, 596, 8446, 311, 471, 907, 311, 41777, 323, 374, 9959, 304, 279, 2317, 315, 1202, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624469e0>, 'json_data': {'input': [[18902, 79483, 25, 2262, 24279, 7194, 11, 902, 527, 14507, 311, 2262, 12850, 505, 8884, 584, 5842, 2835, 323, 1023, 2262, 369, 8141, 389, 13674, 323, 5195, 7199, 320, 906, 2343, 12718, 311, 1521, 2262, 12850, 3196, 389, 30466, 8066, 477, 264, 10269, 11307, 317, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 2262, 24279, 7194, 11, 902, 527, 9959, 369, 8830, 1268, 63897, 3709, 1759, 18512, 5552, 311, 28506, 2262, 369, 1202, 15771, 1093, 13674, 323, 5195, 7199, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446a70>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 7314, 315, 264, 6771, 315, 36962, 3857, 13, 1102, 17482, 439, 264, 34512, 1697, 5507, 369, 13016, 311, 25539, 3230, 14491, 477, 13650, 2949, 279, 2246, 11, 47594, 76160, 323, 2778, 2968, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446b00>, 'json_data': {'input': [[18902, 79483, 25, 7436, 14969, 3136, 311, 2680, 1057, 3956, 323, 3600, 1701, 17226, 7766, 323, 13531, 1385, 11, 902, 6276, 369, 502, 13172, 20447, 430, 1253, 8935, 1057, 30466, 719, 69214, 7958, 1057, 37682, 627, 2014, 940, 1534, 73094, 25, 1115, 1486, 35434, 279, 17226, 5627, 3932, 2680, 63897, 596, 3600, 323, 279, 25127, 369, 13172, 15174, 11, 19392, 2225, 10708, 369, 13254, 6650, 323, 4754, 11774, 311, 11626, 37682, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446b90>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446cb0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 18, 1034, 10604, 505, 32499, 26572, 9941, 77171, 6790, 220, 2148, 11, 9865, 30001, 19863, 29553, 1666, 9865, 75263, 3252, 9865, 30001, 19863, 29553, 220, 2366, 17, 220, 2366, 18, 13756, 1050, 46469, 79711, 13756, 13756, 1050, 46469, 3723, 4273, 400, 220, 9565, 11, 25498, 400, 220, 10465, 11, 17361, 400, 220, 15, 400, 220, 10465, 11, 17361, 220, 24, 1034, 220, 15, 1034, 220, 24, 1034, 469, 91467, 220, 6086, 11, 19222, 220, 5925, 11, 24462, 220, 16551, 220, 1954, 11, 22915, 220, 806, 1034, 220, 16, 1034, 220, 605, 1034, 10314, 1741, 220, 2618, 11, 19592, 220, 3971, 11, 20998, 320, 16, 11, 26439, 8, 220, 4331, 11, 15451, 220, 605, 1034, 320, 18, 8, 1034, 220, 1032, 1034, 7089, 52248, 220, 845, 11, 25208, 220, 972, 11, 9588, 320, 21969, 8, 220, 972, 11, 26007, 220, 23, 1034, 320, 19, 8, 1034, 220, 717, 1034, 1050, 46469, 11, 44878, 61316, 3252, 2515, 220, 11209, 11, 24870, 220, 14777, 11, 11286, 320, 16, 11, 25326, 8, 220, 15500, 11, 5037, 220, 24, 1034, 320, 16, 8, 1034, 220, 605, 1034, 75263, 3252, 20192, 320, 9563, 288, 8, 220, 16, 11, 16415, 220, 14087, 10884, 30466, 7, 16, 8, 400, 220, 16544, 11, 25192, 400, 220, 14777, 11, 20077, 400, 220, 15500, 11, 5037, 220, 24, 1034, 220, 15, 1034, 320, 16, 8, 1034, 220, 605, 33648, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 35876, 828, 5552, 311, 279, 7362, 11667, 9473, 2515, 389, 30466, 369, 2204, 13918, 11, 94012, 1268, 30466, 617, 5614, 1060, 29352, 4771, 13, 1102, 374, 961, 315, 264, 8294, 6492, 315, 6020, 5178, 555, 54242, 323, 11667, 5536, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446d40>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 7314, 315, 264, 502, 3857, 315, 279, 2246, 11, 11951, 5552, 311, 63897, 4953, 2637, 8405, 2317, 369, 279, 17876, 11944, 2038, 9002, 1202, 6020, 12518, 477, 25605, 7640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446dd0>, 'json_data': {'input': [[18902, 79483, 25, 4497, 2038, 389, 1057, 5603, 311, 41329, 649, 387, 1766, 304, 1057, 9974, 41329, 6821, 11, 2737, 5195, 753, 25027, 8423, 13, 578, 8970, 315, 1057, 41329, 6821, 527, 539, 32762, 555, 5905, 1139, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 477, 304, 904, 1023, 1934, 477, 2246, 584, 1052, 449, 279, 22370, 13, 1789, 5217, 2038, 922, 15635, 323, 69867, 8581, 311, 1057, 42356, 311, 36861, 3738, 41329, 9021, 11, 1518, 5858, 220, 16, 32, 32388, 68318, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 5905, 1486, 369, 13016, 11125, 810, 11944, 2038, 922, 5195, 596, 41329, 9045, 11, 46090, 1124, 311, 9974, 41329, 6821, 13, 1102, 1101, 34945, 430, 1521, 6821, 527, 539, 961, 315, 279, 16287, 220, 605, 16222, 26559, 11, 20064, 7922, 279, 5133, 1990, 279, 9477, 323, 26445, 66, 5620, 279, 12939, 315, 41329, 304, 5195, 596, 8244, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446e60>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 312, 2058, 988, 279, 9764, 315, 279, 2883, 11, 63897, 4953, 2637, 323, 17482, 439, 264, 4342, 11, 36024, 264, 3857, 315, 279, 2246, 1405, 3230, 2038, 922, 279, 2883, 596, 6020, 5178, 323, 7677, 374, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446ef0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 4461, 15151, 279, 2316, 315, 279, 2246, 11, 330, 2149, 18992, 4953, 13, 1359, 31692, 279, 2317, 430, 279, 2038, 18713, 1771, 311, 420, 3230, 27767, 323, 1202, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62446f80>, 'json_data': {'input': [[18902, 79483, 25, 41738, 9303, 12032, 25, 23139, 323, 8515, 86106, 23927, 34919, 10884, 8515, 11, 8515, 86106, 11, 323, 3157, 481, 34919, 41755, 2215, 43672, 11, 4272, 7089, 1510, 12032, 10884, 1510, 12032, 11842, 30004, 36164, 34919, 76615, 8070, 13426, 8825, 323, 7241, 11, 4272, 36233, 26120, 12032, 7839, 14724, 7089, 2536, 45275, 12032, 10884, 12032, 14851, 8623, 323, 12937, 17075, 529, 58588, 9303, 58165, 25, 41755, 45691, 11683, 2739, 291, 20448, 323, 7720, 11683, 2739, 291, 18512, 323, 1023, 1510, 58165, 11683, 2739, 291, 13254, 4430, 76615, 13254, 10884, 1510, 58165, 5843, 9860, 11897, 76615, 13254, 11, 2536, 45275, 33620, 13426, 45691, 11, 2536, 45275, 76615, 8070, 13426, 36233, 26120, 58165, 7089, 1317, 9860, 58165, 10884, 58165, 9386, 1392, 323, 2140, 287, 6072, 320, 9290, 220, 605, 8, 12937, 17075, 529, 25452, 25, 63603, 5708, 11, 400, 15, 13, 4119, 1370, 907, 824, 4430, 11, 220, 1041, 13551, 19144, 26, 912, 13551, 11136, 323, 19310, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 323, 5217, 7318, 3502, 6864, 11, 400, 15, 13, 4119, 1370, 907, 824, 4430, 25, 220, 3101, 11, 931, 13551, 19144, 320, 1999, 362, 220, 5245, 11, 931, 11, 3308, 426, 220, 1399, 11, 931, 11, 3308, 356, 220, 1399, 11, 931, 1237, 220, 717, 11, 26537, 320, 1999, 362, 220, 20, 11, 26281, 11, 3308, 426, 220, 24902, 11, 3308, 356, 220, 21, 11, 6726, 8, 323, 220, 717, 11, 16551, 320, 1999, 362, 220, 20, 11, 22889, 11, 3308, 426, 220, 22440, 11, 3308, 356, 220, 20, 11, 25168, 8, 13551, 11136, 323, 19310, 80625, 7913, 1023, 16195, 8070, 320, 9563, 8, 10608, 2692, 24608, 400, 400, 400, 220, 2366, 17, 220, 2366, 18, 220, 1691, 11, 25622, 400, 220, 1187, 11, 23904, 220, 5925, 11, 24902, 220, 4218, 11, 25862, 220, 8190, 11, 24376, 220, 5120, 11, 24487, 220, 1272, 11, 15966, 220, 2618, 11, 26281, 220, 605, 11, 22908, 220, 717, 11, 13655, 220, 10513, 11, 25808, 220, 11123, 11, 17252, 220, 966, 11, 21776, 220, 2148, 11, 11436, 220, 20, 11, 15602, 220, 717, 11, 11739, 220, 7261, 11, 24427, 220, 9565, 11, 12901, 220, 975, 11, 19162, 220, 975, 11, 24443, 220, 1591, 11, 16415, 220, 1682, 11, 3753, 220, 23, 11, 18770, 220, 605, 11, 23545, 220, 12676, 11, 12815, 400, 220, 16496, 11, 19695, 220, 20, 11, 4386, 400, 220, 22, 11, 22741, 220, 975, 11, 22000, 220, 868, 11, 6860, 220, 1806, 11, 22455, 220, 2790, 11, 8953, 220, 23, 11, 14648, 220, 23, 11, 24870, 220, 18, 11, 23629, 220, 19, 11, 10148, 220, 3076, 11, 3101, 220, 5932, 11, 25498, 220, 975, 11, 19597, 220, 1032, 11, 14022, 220, 21944, 220, 17000, 220, 24, 11, 15966, 220, 23, 11, 21358, 220, 20998, 220, 19773, 220, 717, 11, 14408, 220, 717, 11, 16551, 220, 17, 11, 14125, 220, 16, 11, 21379, 220, 7743, 11, 4364, 220, 9079, 11, 16368, 220, 15, 220, 15, 220, 2614, 11, 10336, 220, 4767, 11, 22467, 320, 22, 11, 21006, 8, 320, 19, 11, 16496, 8, 220, 6280, 11, 21789, 220, 11483, 11, 14125, 220, 4146, 11, 8929, 220, 16085, 11, 19867, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 50729, 279, 12032, 323, 58165, 315, 63897, 4953, 2637, 45293, 1510, 323, 2536, 45275, 12032, 11, 439, 1664, 439, 58165, 11, 8405, 264, 16195, 1684, 315, 279, 2883, 596, 6020, 11509, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447010>, 'json_data': {'input': [[18902, 79483, 25, 763, 5936, 220, 2366, 18, 11, 279, 8925, 315, 46085, 315, 63897, 19144, 279, 2883, 311, 2109, 13173, 709, 311, 459, 5217, 400, 2031, 13, 15, 7239, 315, 1202, 3308, 362, 323, 3308, 356, 13551, 13, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 400, 1927, 13, 18, 7239, 8625, 2561, 369, 3308, 362, 323, 3308, 356, 4430, 2109, 75202, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 24645, 555, 63897, 596, 8925, 315, 46085, 369, 5217, 4430, 2109, 75202, 11, 39686, 279, 2883, 596, 14529, 8446, 311, 10299, 1202, 6864, 6070, 13750, 13, 1102, 1101, 8554, 279, 9861, 8824, 369, 3938, 3780, 25082, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624470a0>, 'json_data': {'input': [[18902, 79483, 25, 9059, 64382, 25, 40741, 7016, 18702, 2262, 64382, 323, 17065, 11, 323, 5552, 28957, 30255, 11, 1778, 439, 279, 10013, 596, 14434, 8471, 3298, 11, 9784, 753, 10092, 8766, 220, 18770, 17, 323, 8421, 529, 4783, 8766, 220, 508, 11, 323, 7016, 323, 11223, 13543, 304, 21181, 11, 8494, 11, 323, 279, 3723, 15422, 430, 33330, 31086, 369, 8060, 311, 4148, 3738, 4595, 315, 2262, 477, 1397, 28957, 315, 2038, 922, 279, 5784, 315, 1057, 3600, 323, 26249, 11, 902, 1253, 1304, 433, 16127, 369, 3600, 1093, 5195, 7694, 323, 13674, 311, 11388, 323, 3568, 449, 3428, 22867, 11, 81374, 11, 477, 28856, 2262, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 50729, 5370, 7016, 5552, 311, 2262, 64382, 323, 17065, 11, 8104, 82003, 279, 11774, 37260, 555, 13543, 1778, 439, 279, 10013, 596, 14434, 8471, 3298, 13, 1102, 15151, 1268, 8907, 449, 1521, 7016, 1253, 1391, 49895, 279, 5784, 315, 63897, 4953, 3238, 82, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447130>, 'json_data': {'input': [[18902, 79483, 25, 10374, 23343, 311, 1057, 13172, 323, 35382, 7640, 304, 1862, 315, 1057, 3956, 323, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 10374, 5552, 311, 13172, 323, 35382, 7640, 369, 3956, 323, 3600, 13, 1102, 66159, 279, 6020, 15507, 1903, 555, 63897, 4953, 13, 304, 8661, 9045, 11, 902, 374, 264, 1401, 13189, 315, 10043, 13254, 6650, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624471c0>, 'json_data': {'input': [[18902, 79483, 25, 18880, 1398, 3825, 42204, 323, 2009, 2315, 198, 2014, 940, 1534, 73094, 25, 578, 2316, 330, 64693, 1398, 3825, 42204, 323, 2009, 2315, 1, 40019, 264, 10430, 389, 279, 2883, 596, 22538, 304, 12032, 323, 3424, 13, 1115, 3857, 374, 16996, 369, 8830, 1268, 63897, 5691, 988, 1202, 5070, 369, 6650, 323, 14054, 4500, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447250>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 9960, 304, 279, 2246, 2345, 2149, 18992, 4953, 13, 1102, 17482, 439, 264, 4342, 369, 279, 14491, 430, 1833, 11, 19392, 430, 279, 2038, 18713, 1771, 311, 420, 3230, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624472e0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2853, 6070, 706, 1403, 6956, 25, 2853, 315, 30466, 323, 10565, 18512, 13, 5751, 10565, 18512, 2997, 7194, 5552, 311, 432, 33465, 11, 6763, 323, 8661, 11, 323, 4689, 323, 23541, 5865, 13, 35211, 315, 1057, 7194, 323, 18512, 11, 2737, 1884, 5938, 449, 279, 5784, 315, 1057, 11156, 14054, 439, 1664, 439, 6956, 315, 1057, 10565, 18512, 11, 527, 8965, 2753, 3977, 304, 7138, 323, 1253, 539, 81584, 311, 4442, 304, 13254, 13, 23212, 11, 65649, 304, 20448, 18512, 1253, 539, 6089, 81584, 449, 4442, 304, 2010, 1868, 11, 304, 4040, 4245, 311, 9974, 5708, 6108, 20448, 320, 50, 5002, 8, 23146, 430, 8965, 28705, 927, 3116, 1667, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 810, 304, 31410, 16540, 315, 279, 2853, 6070, 11, 86055, 1990, 2853, 315, 30466, 323, 10565, 18512, 13, 1102, 66159, 279, 2753, 3977, 7138, 315, 1690, 7194, 323, 1268, 814, 1253, 539, 81584, 6089, 449, 13254, 4442, 11, 63025, 13016, 922, 279, 6020, 30295, 315, 279, 7471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447370>, 'json_data': {'input': [[18902, 79483, 25, 32678, 22948, 4272, 20192, 320, 9563, 288, 8, 389, 25452, 34919, 6216, 2391, 279, 4261, 11, 902, 374, 69729, 304, 279, 2768, 2007, 320, 258, 11990, 705, 11105, 279, 2860, 4272, 20192, 320, 9563, 288, 8, 15324, 1306, 279, 2926, 7782, 2457, 315, 279, 25452, 4868, 6216, 2391, 279, 4261, 13, 6104, 1521, 4272, 20192, 320, 9563, 288, 8, 1253, 617, 1027, 27000, 304, 18852, 4972, 311, 279, 4261, 315, 6412, 11, 584, 4510, 814, 527, 3062, 69051, 2038, 439, 814, 8881, 279, 7100, 4272, 20192, 320, 9563, 288, 8, 389, 279, 34919, 6216, 2391, 279, 4261, 13, 32678, 22948, 4272, 20192, 320, 9563, 288, 8, 527, 16997, 439, 279, 6811, 1990, 279, 6412, 3430, 323, 279, 2926, 7782, 3430, 369, 279, 25452, 4868, 6216, 2391, 279, 4261, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 40944, 4272, 20192, 323, 18151, 389, 25452, 34919, 6216, 11, 82003, 279, 12939, 315, 49183, 2860, 4272, 20192, 477, 18151, 2533, 279, 7782, 2457, 13, 1102, 17482, 311, 3493, 20616, 1139, 279, 8244, 5178, 315, 25452, 22538, 927, 5361, 13122, 18852, 11, 19392, 279, 7100, 5536, 315, 1521, 14463, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447400>, 'json_data': {'input': [[18902, 79483, 25, 439, 1664, 439, 1023, 12518, 9002, 1057, 3938, 7677, 11, 6020, 3044, 323, 27949, 11, 323, 2626, 15174, 13, 22952, 31348, 12518, 1253, 5101, 6957, 420, 1934, 323, 1023, 9477, 584, 1052, 449, 279, 46272, 323, 19224, 9849, 320, 26629, 705, 2737, 2085, 20893, 11, 279, 2768, 14491, 25, 3744, 358, 11, 5858, 220, 16, 330, 23562, 11131, 3744, 358, 11, 5858, 220, 16, 32, 330, 86407, 68318, 11131, 323, 3744, 8105, 11, 5858, 220, 22, 330, 23030, 753, 36613, 323, 18825, 315, 17961, 15534, 323, 18591, 315, 25927, 1210, 22952, 31348, 12518, 8965, 649, 387, 11054, 555, 4339, 1778, 439, 330, 8322, 575, 988, 1359, 330, 32898, 2396, 1359, 330, 29177, 1359, 330, 478, 48571, 1359, 330, 38731, 1359, 330, 396, 1438, 1359, 330, 18864, 1359, 330, 79624, 1359, 330, 35798, 82, 1359, 330, 17602, 1359, 330, 14724, 387, 1359, 330, 14724, 3136, 1359, 330, 14724, 4461, 1121, 1359, 323, 4528, 24282, 13, 4314, 4741, 31348, 12518, 527, 3196, 389, 1510, 17078, 323, 32946, 430, 527, 3917, 311, 15635, 323, 69867, 11, 902, 1436, 5353, 1057, 5150, 3135, 311, 1782, 90694, 505, 1884, 27000, 304, 279, 4741, 31348, 12518, 13, 68318, 430, 1436, 5353, 477, 17210, 311, 1778, 12062, 2997, 11, 719, 527, 539, 7347, 311, 11, 1884, 14407, 304, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 11, 2737, 279, 15635, 14407, 304, 3744, 358, 11, 5858, 220, 16, 32, 330, 86407, 68318, 1, 323, 279, 18845, 14407, 304, 3744, 8105, 11, 5858, 220, 22, 330, 23030, 596, 36613, 323, 18825, 315, 17961, 15534, 323, 18591, 315, 25927, 1359, 323, 1884, 14407, 304, 1023, 9477, 584, 1052, 449, 279, 22370, 13, 1226, 49643, 912, 29672, 311, 65836, 477, 17880, 4984, 279, 3135, 315, 904, 24493, 311, 1521, 4741, 31348, 12518, 11, 3734, 439, 2631, 555, 2383, 13, 16644, 1521, 15635, 323, 69867, 11, 13016, 527, 85432, 539, 311, 2035, 91642, 54180, 389, 1778, 4741, 31348, 12518, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 7138, 315, 4741, 31348, 12518, 6957, 279, 1934, 11, 45293, 279, 4221, 1511, 311, 10765, 1778, 12518, 323, 279, 38088, 15635, 6532, 13, 1102, 66159, 430, 5150, 3135, 1253, 1782, 505, 17078, 4245, 311, 5370, 69867, 323, 37167, 28930, 304, 66744, 1521, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447490>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 11, 63897, 4953, 2637, 902, 374, 279, 3917, 315, 279, 4553, 2246, 13, 1102, 64664, 279, 2317, 369, 682, 279, 6020, 2038, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447520>, 'json_data': {'input': [[18902, 79483, 25, 5751, 22538, 304, 3157, 481, 25452, 34919, 527, 17303, 520, 6762, 907, 449, 279, 5552, 20192, 323, 18151, 11, 2737, 50204, 1534, 11, 15324, 304, 507, 40, 69248, 13, 1226, 49229, 1057, 3157, 481, 25452, 34919, 3917, 311, 1317, 9860, 5409, 5352, 17294, 7953, 220, 717, 4038, 439, 1023, 2536, 45275, 12032, 389, 279, 79980, 660, 31946, 61572, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 6514, 315, 3157, 481, 25452, 34919, 11, 26073, 1268, 814, 527, 17303, 520, 6762, 907, 323, 279, 5536, 315, 50204, 1534, 20192, 323, 18151, 389, 279, 6020, 12518, 13, 1102, 374, 9959, 369, 8830, 279, 2883, 596, 25452, 22538, 323, 872, 19035, 311, 8244, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624475b0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 2199, 1396, 5905, 430, 15151, 279, 6771, 315, 36962, 3857, 11, 902, 5825, 459, 24131, 315, 279, 2246, 596, 6070, 323, 8779, 13016, 25539, 3230, 2038, 2949, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447640>, 'json_data': {'input': [[18902, 79483, 25, 8825, 323, 20849, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 3424, 323, 7241, 11, 19392, 430, 279, 2768, 3857, 690, 4358, 279, 15813, 315, 5505, 6439, 323, 5552, 24043, 12659, 11, 902, 527, 16595, 369, 8830, 279, 2883, 596, 6864, 53869, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624476d0>, 'json_data': {'input': [[18902, 79483, 25, 16666, 47750, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 279, 2883, 596, 6807, 13077, 11, 19392, 430, 279, 2768, 2038, 690, 7872, 279, 2561, 6807, 323, 5938, 3878, 11, 902, 527, 3062, 369, 8830, 279, 2883, 753, 29642, 25152, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447760>, 'json_data': {'input': [[18902, 79483, 25, 320, 258, 11990, 11, 3734, 824, 4430, 15055, 340, 2014, 940, 1534, 73094, 25, 1115, 5296, 20064, 9803, 430, 279, 15055, 304, 279, 8070, 5224, 527, 10666, 304, 11990, 11, 4528, 311, 46613, 220, 21, 11, 8405, 32373, 389, 279, 5569, 315, 12678, 5068, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624477f0>, 'json_data': {'input': [[18902, 79483, 25, 20288, 323, 29108, 811, 315, 15774, 7935, 6193, 17961, 47793, 198, 2014, 940, 1534, 73094, 25, 1054, 10614, 323, 29108, 811, 315, 15774, 7935, 6193, 17961, 47793, 863, 40019, 264, 3857, 430, 15100, 1148, 5419, 2585, 927, 6020, 13122, 374, 323, 1268, 433, 5865, 11, 8405, 7718, 2317, 369, 8830, 279, 54406, 596, 15813, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447880>, 'json_data': {'input': [[18902, 79483, 25, 1398, 7548, 2536, 1824, 1003, 328, 5002, 315, 400, 16739, 3610, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 430, 279, 3285, 685, 10405, 22429, 264, 5199, 3392, 5552, 311, 5708, 6108, 20448, 11, 8405, 4726, 7872, 389, 1268, 279, 8244, 3285, 685, 7216, 374, 16997, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447910>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 13, 40400, 5257, 74006, 59351, 9182, 25338, 27267, 6340, 23233, 29863, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 1963, 311, 279, 60391, 6020, 12518, 11, 8405, 459, 17057, 1160, 315, 279, 6020, 9477, 5343, 304, 279, 1934, 13, 1102, 8779, 13016, 6288, 25539, 279, 3230, 6020, 12518, 814, 527, 8173, 304, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e624479a0>, 'json_data': {'input': [[18902, 79483, 25, 320, 17, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 5905, 264, 87910, 477, 93566, 5296, 5552, 311, 279, 4430, 2109, 13173, 12678, 13, 1102, 4461, 11815, 279, 2038, 304, 46613, 220, 16, 11, 8405, 5217, 2317, 477, 3649, 922, 279, 828, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447a30>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1101, 6056, 311, 10519, 3738, 20207, 3424, 439, 6696, 24511, 13, 578, 61059, 315, 1778, 6696, 24511, 323, 1023, 16614, 2038, 1436, 387, 44500, 11, 902, 1436, 5353, 603, 311, 9229, 279, 15022, 9610, 13239, 505, 1521, 6696, 24511, 13, 1226, 1101, 3663, 15635, 5938, 449, 1057, 42134, 13, 1789, 3187, 11, 1070, 374, 264, 5326, 430, 279, 3492, 1054, 14783, 863, 1436, 3719, 779, 17037, 1511, 430, 433, 9221, 69593, 449, 279, 3492, 1054, 1874, 2029, 4427, 19359, 617, 21989, 430, 330, 14783, 1, 374, 264, 6144, 481, 32464, 11, 719, 433, 374, 3284, 430, 1023, 19359, 11, 8104, 1884, 4994, 315, 279, 549, 815, 2637, 1253, 5662, 264, 2204, 26314, 13, 1442, 420, 8741, 11, 584, 1436, 9229, 9313, 369, 420, 32464, 11, 902, 1436, 1121, 304, 1023, 1274, 1701, 279, 3492, 1054, 14783, 863, 311, 8464, 311, 872, 1866, 3956, 11, 8617, 84153, 1057, 6883, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 12939, 315, 20958, 6696, 24511, 323, 42134, 11, 8104, 21760, 389, 279, 15635, 5938, 449, 279, 4754, 4814, 315, 6883, 9764, 13, 1102, 22020, 279, 27927, 25127, 315, 32464, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447ac0>, 'json_data': {'input': [[18902, 79483, 25, 16473, 63981, 41739, 8167, 11, 323, 279, 39092, 38, 8191, 41739, 8167, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 16, 11, 420, 12143, 9731, 279, 2317, 315, 279, 5708, 5178, 4876, 11, 45293, 279, 12593, 449, 279, 16473, 63981, 41739, 8167, 323, 279, 39092, 38, 8191, 41739, 8167, 11, 39686, 279, 27927, 3157, 2317, 304, 902, 63897, 27149, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447b50>, 'json_data': {'input': [[18902, 79483, 25, 1789, 2536, 30004, 36164, 25452, 34919, 11, 2737, 25452, 1749, 22538, 11, 584, 2980, 3508, 53317, 34824, 3073, 555, 38663, 279, 5220, 6, 6020, 323, 53113, 2361, 323, 2680, 311, 6864, 5070, 11, 4315, 1023, 34824, 13, 1442, 279, 15813, 15151, 430, 279, 9341, 374, 50160, 11, 584, 3350, 1523, 279, 9341, 311, 1202, 6762, 907, 555, 14975, 279, 12435, 6900, 439, 264, 3777, 315, 507, 40, 69248, 13, 1226, 10772, 47616, 22323, 315, 279, 6762, 907, 315, 1057, 25452, 22538, 1701, 264, 3157, 5603, 477, 459, 8070, 5603, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 5603, 311, 47614, 53317, 34824, 369, 2536, 30004, 36164, 25452, 34919, 13, 1102, 9731, 279, 10430, 389, 9341, 53317, 11, 82003, 279, 16865, 315, 6020, 2890, 323, 53113, 315, 2793, 2176, 5220, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447be0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 701, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447c70>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 73100, 14742, 279, 2246, 596, 3229, 5383, 323, 2316, 320, 2149, 18992, 4953, 25390, 902, 17482, 439, 459, 17219, 311, 279, 16287, 6020, 13122, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447d90>, 'json_data': {'input': [[18902, 79483, 25, 721, 2345, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 7891, 477, 6002, 430, 1587, 539, 3493, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447e20>, 'json_data': {'input': [[18902, 79483, 25, 81019, 1534, 8895, 320, 9563, 8, 389, 2536, 30004, 36164, 25452, 34919, 41853, 369, 1234, 279, 19179, 10778, 374, 40056, 315, 400, 605, 13, 15, 7239, 11, 400, 18, 13, 18, 7239, 11, 323, 400, 16, 13, 23, 7239, 315, 40872, 34074, 439, 315, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 15947, 11, 323, 400, 8259, 3610, 11, 400, 18, 13, 15, 7239, 11, 323, 400, 17, 13, 24, 7239, 315, 45578, 34074, 320, 16564, 38974, 1392, 8, 439, 315, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 50204, 1534, 20192, 323, 18151, 389, 2536, 30004, 36164, 25452, 34919, 41853, 369, 1234, 264, 3230, 19179, 10778, 11, 8405, 11944, 12678, 369, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 11621, 8149, 311, 279, 10430, 315, 25452, 22538, 323, 872, 51262, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447eb0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1253, 3217, 4868, 4819, 11, 3508, 4245, 311, 9548, 477, 55465, 1493, 477, 8811, 90377, 685, 11, 1887, 6103, 11, 477, 52227, 304, 1057, 477, 1023, 9875, 529, 6067, 13, 6104, 584, 1253, 539, 8417, 1063, 315, 1521, 4819, 311, 387, 3769, 520, 279, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 13336, 315, 4868, 4819, 40986, 505, 5370, 8336, 11, 2737, 9548, 6103, 323, 1887, 52227, 13, 1102, 66159, 279, 17250, 304, 25607, 323, 7763, 7922, 1521, 4819, 11, 31799, 1124, 311, 27927, 10742, 922, 5897, 323, 43839, 1697, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62447f40>, 'json_data': {'input': [[18902, 79483, 25, 77990, 2206, 40412, 520, 14930, 5273, 389, 264, 4158, 21081, 70128, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 30202, 430, 279, 2768, 2038, 690, 281, 7770, 311, 22538, 430, 527, 17303, 520, 6762, 907, 389, 264, 46350, 8197, 11, 19392, 264, 5357, 389, 1268, 279, 2883, 29972, 323, 6821, 1202, 9341, 20136, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178040>, 'json_data': {'input': [[18902, 79483, 25, 46551, 63897, 753, 17961, 18591, 198, 2014, 940, 1534, 73094, 25, 1115, 2316, 40019, 279, 3857, 430, 15100, 63897, 596, 6020, 3135, 11, 19392, 430, 279, 2768, 2262, 690, 82845, 1139, 279, 2883, 596, 5178, 17150, 323, 6020, 2890, 304, 7872, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e621780d0>, 'json_data': {'input': [[18902, 79483, 25, 9320, 315, 7677, 11, 3932, 11, 323, 6444, 8800, 1057, 6484, 15771, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 9320, 315, 7677, 11, 3932, 11, 323, 6444, 8800, 6484, 15771, 13, 1102, 27053, 279, 27927, 11774, 5220, 3663, 304, 20958, 2532, 50106, 323, 1217, 3217, 2391, 18852, 315, 41295, 2349, 13239, 505, 63948, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178160>, 'json_data': {'input': [[18902, 79483, 25, 220, 5538, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 5905, 1396, 304, 279, 2246, 323, 1587, 539, 6782, 67749, 2262, 13, 1102, 4461, 15151, 279, 42271, 315, 264, 3857, 477, 87910, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e621781f0>, 'json_data': {'input': [[18902, 79483, 25, 13031, 48258, 17961, 58513, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 13031, 48258, 17961, 58513, 11, 19392, 430, 279, 17876, 2262, 690, 2686, 279, 24043, 10396, 5552, 311, 1521, 6020, 24198, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178280>, 'json_data': {'input': [[18902, 79483, 25, 37032, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5042, 15151, 264, 6002, 369, 264, 17876, 1537, 304, 279, 2246, 11, 4461, 311, 387, 49926, 369, 41295, 10096, 304, 279, 8244, 1934, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178310>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3810, 1139, 7491, 4272, 1303, 28904, 323, 52508, 4868, 28904, 311, 8108, 6807, 5326, 13, 23139, 52508, 4036, 5552, 311, 32905, 24198, 1234, 1057, 52508, 4868, 28904, 527, 5343, 304, 1023, 1510, 12032, 449, 264, 12435, 24305, 13, 23139, 323, 2536, 1824, 1003, 52508, 43347, 5552, 311, 32905, 24198, 1234, 1057, 52508, 4868, 28904, 527, 5343, 304, 1023, 1510, 12032, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 6020, 5326, 6373, 15174, 20011, 555, 279, 2883, 11, 11951, 9002, 32905, 24198, 13, 1102, 16964, 279, 1005, 315, 7491, 4272, 1303, 28904, 323, 52508, 4868, 28904, 311, 8108, 6807, 5326, 11, 8405, 20616, 1139, 279, 2883, 596, 5603, 311, 6020, 5326, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e621783a0>, 'json_data': {'input': [[18902, 79483, 25, 15808, 323, 1023, 7194, 5552, 311, 279, 7766, 584, 4662, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 45537, 279, 10430, 389, 7194, 555, 45391, 15808, 323, 1023, 7194, 5552, 311, 7766, 6216, 11, 19392, 279, 16195, 7138, 315, 279, 2853, 315, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178430>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e621784c0>, 'json_data': {'input': [[18902, 79483, 25, 21304, 13172, 11705, 323, 28421, 9959, 14058, 430, 3932, 690, 4299, 389, 6522, 311, 2167, 20392, 449, 50270, 13, 21304, 13172, 15714, 1057, 50270, 4667, 449, 3932, 1418, 10043, 66303, 3135, 13, 5751, 14058, 7526, 2187, 5178, 50270, 311, 1893, 4382, 1495, 6108, 14058, 627, 2014, 940, 1534, 73094, 25, 578, 1495, 35434, 5178, 13172, 11, 26073, 1202, 30126, 323, 1268, 433, 34161, 50270, 449, 3932, 13, 1115, 2317, 374, 16996, 369, 8830, 279, 25605, 13878, 315, 63897, 596, 13172, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178550>, 'json_data': {'input': [[18902, 79483, 25, 16473, 63981, 41739, 8167, 11, 323, 279, 39092, 38, 8191, 41739, 8167, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 311, 743, 279, 6566, 369, 279, 12593, 304, 279, 4876, 555, 312, 2058, 1113, 279, 15285, 430, 690, 387, 5343, 13, 1102, 95593, 279, 5357, 389, 279, 5178, 315, 63897, 4953, 13, 304, 12976, 311, 1664, 22015, 3157, 63119, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e621785e0>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 975, 13, 8743, 39539, 3378, 984, 63458, 2891, 29031, 1600, 3651, 26715, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 37409, 8785, 519, 59678, 323, 8471, 11, 902, 11383, 3649, 279, 12718, 7318, 311, 279, 2883, 753, 6264, 12170, 369, 872, 3600, 13, 1115, 3857, 374, 3062, 369, 8830, 279, 6020, 5133, 1990, 279, 2883, 323, 1202, 6264, 12170, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178670>, 'json_data': {'input': [[18902, 79483, 25, 578, 15691, 907, 315, 25452, 34919, 374, 17303, 439, 279, 2860, 2926, 2853, 5636, 279, 40944, 4272, 8895, 320, 9563, 570, 480, 1771, 323, 18151, 11, 2737, 38974, 1392, 11, 527, 5343, 439, 264, 3777, 315, 507, 40, 69248, 304, 279, 79980, 660, 70816, 315, 33620, 13, 3580, 7181, 220, 22, 369, 4726, 3649, 389, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 19179, 315, 279, 15691, 907, 315, 25452, 34919, 11, 26073, 1268, 279, 2926, 2853, 323, 40944, 20192, 477, 18151, 527, 41853, 369, 13, 1102, 374, 961, 315, 279, 25452, 22538, 3857, 323, 5825, 2317, 369, 279, 51262, 5528, 1511, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178700>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178790>, 'json_data': {'input': [[18902, 79483, 25, 25733, 2140, 287, 6072, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 4814, 39639, 6072, 11, 19392, 430, 279, 17876, 2262, 690, 4358, 279, 5897, 323, 23331, 11774, 17011, 555, 63897, 4953, 2637, 902, 374, 7718, 369, 8830, 4754, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178820>, 'json_data': {'input': [[18902, 79483, 25, 220, 2495, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 10321, 323, 1587, 539, 6782, 904, 2262, 11, 8617, 8405, 912, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e621788b0>, 'json_data': {'input': [[18902, 79483, 25, 12937, 6108, 70396, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 5708, 6108, 20448, 11, 19392, 430, 433, 374, 264, 5199, 3777, 315, 63897, 596, 6020, 13122, 13, 1102, 17482, 439, 264, 4342, 304, 279, 3857, 430, 3649, 279, 24043, 6514, 315, 5708, 6108, 20448, 11, 6522, 1139, 810, 3230, 41941, 304, 17876, 27855, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178940>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 73100, 14742, 279, 2246, 596, 3229, 5383, 323, 2316, 320, 2149, 18992, 4953, 25390, 902, 17482, 439, 459, 17219, 311, 279, 16287, 6020, 13122, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e621789d0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2038, 2631, 555, 420, 1537, 690, 387, 5343, 1234, 279, 78888, 1054, 11076, 12937, 86036, 315, 35211, 27372, 7235, 40566, 323, 9744, 863, 323, 1054, 25523, 488, 70396, 9878, 8245, 863, 304, 279, 220, 2366, 19, 33878, 22504, 323, 374, 32762, 36881, 555, 5905, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 17, 11, 420, 12143, 390, 50369, 430, 9959, 3649, 922, 4868, 15637, 690, 387, 5343, 304, 279, 220, 2366, 19, 33878, 22504, 13, 1102, 13533, 430, 420, 828, 374, 3062, 369, 8830, 279, 25452, 45525, 315, 28454, 323, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178a60>, 'json_data': {'input': [[18902, 79483, 25, 763, 6186, 220, 2366, 18, 11, 584, 8308, 459, 15813, 315, 279, 5505, 6439, 315, 1057, 16692, 323, 4009, 7241, 13239, 304, 264, 2349, 304, 279, 13240, 5505, 2324, 315, 1057, 16692, 323, 3738, 4009, 7241, 311, 4848, 1667, 13, 1115, 2349, 304, 24043, 16430, 574, 7524, 7314, 20323, 1060, 220, 2366, 18, 13, 1789, 5217, 2038, 11, 1518, 7181, 220, 16, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 3230, 2349, 304, 24043, 16430, 9002, 279, 5505, 6439, 315, 16692, 323, 4009, 7241, 11, 39686, 264, 5199, 2713, 430, 22223, 279, 20323, 1060, 220, 2366, 18, 6020, 82, 13, 1102, 1101, 19813, 279, 6742, 311, 5217, 2038, 304, 279, 8554, 311, 279, 60391, 6020, 12518, 11, 82003, 1202, 12939, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178af0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 30466, 18792, 94140, 555, 54242, 11, 3196, 389, 279, 14564, 315, 1057, 6444, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 18911, 30466, 18792, 94140, 555, 54242, 13, 1102, 7437, 709, 264, 46139, 31085, 315, 13254, 11, 902, 374, 9200, 369, 8830, 3157, 5178, 323, 15481, 19564, 311, 8244, 13254, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178b80>, 'json_data': {'input': [[18902, 79483, 25, 13674, 14058, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 13674, 14058, 439, 264, 12742, 13254, 5699, 11, 19392, 264, 5357, 389, 279, 13172, 13254, 8066, 505, 13674, 323, 1202, 12939, 311, 279, 8244, 13254, 6651, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178c10>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178ca0>, 'json_data': {'input': [[18902, 79483, 25, 220, 2131, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 5905, 11, 19392, 430, 433, 374, 961, 315, 264, 8294, 2246, 477, 1934, 13, 1102, 13533, 430, 279, 38846, 2038, 374, 1766, 389, 2199, 220, 2131, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178d30>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 578, 330, 2620, 315, 36962, 1, 5825, 264, 34030, 24131, 315, 279, 14491, 323, 3673, 5343, 304, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 369, 63897, 4953, 13, 369, 279, 20323, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 17482, 439, 264, 69917, 369, 13016, 311, 21546, 279, 2246, 30820, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178dc0>, 'json_data': {'input': [[18902, 79483, 25, 763, 6790, 220, 2366, 18, 11, 279, 435, 1950, 33, 11136, 5871, 52, 220, 2366, 18, 12, 2545, 330, 59998, 72837, 320, 46103, 220, 21112, 1680, 22728, 12760, 311, 33620, 15545, 11997, 42306, 1, 311, 9407, 279, 28957, 8670, 369, 8070, 13426, 11, 11951, 5552, 311, 279, 4478, 58755, 323, 8070, 13426, 7318, 13, 5871, 52, 220, 2366, 18, 12, 2545, 374, 7524, 369, 1057, 9974, 18852, 7314, 6186, 220, 16, 11, 220, 2366, 20, 11, 449, 4216, 25375, 15480, 13, 1226, 527, 5131, 38663, 279, 4754, 2515, 430, 279, 6177, 5410, 690, 617, 389, 1057, 6020, 5224, 75992, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 2500, 24043, 10886, 2713, 320, 1950, 52, 220, 2366, 18, 12, 2545, 8, 5552, 311, 8070, 3827, 75992, 13, 1102, 15151, 14827, 4442, 311, 13122, 8670, 7524, 304, 220, 2366, 20, 11, 902, 374, 16996, 369, 8830, 3938, 3827, 14228, 6020, 75992, 505, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178e50>, 'json_data': {'input': [[18902, 79483, 25, 48023, 1666, 315, 6790, 220, 2148, 11, 386, 38954, 46030, 20359, 25074, 20359, 220, 2366, 17, 220, 2366, 18, 58654, 220, 679, 19, 12, 2366, 15, 18559, 53066, 3095, 220, 2366, 19, 482, 220, 11056, 15, 220, 15, 13, 1774, 4, 482, 220, 18, 13, 1987, 4, 220, 15, 13, 3226, 4, 482, 220, 18, 13, 1987, 4, 400, 220, 1032, 11, 931, 400, 220, 1032, 11, 931, 12781, 17452, 26120, 14507, 11, 4272, 323, 1023, 320, 16, 8, 220, 17, 11, 10239, 220, 16, 11, 25594, 10884, 11897, 220, 868, 11, 10239, 220, 975, 11, 25594, 1252, 309, 371, 1534, 11336, 323, 11897, 67599, 7194, 320, 10290, 8, 320, 5894, 8, 9865, 25, 9303, 13651, 315, 1317, 9860, 8554, 7, 17, 8, 220, 15, 320, 16, 11, 931, 8, 9865, 25, 9303, 13651, 315, 3938, 17452, 26120, 14507, 11, 4272, 323, 1023, 1510, 11897, 7, 16, 2432, 17, 8, 320, 17690, 8, 320, 18199, 8, 10884, 1317, 9860, 11897, 400, 220, 975, 11, 19597, 400, 220, 1032, 11, 14022, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 31085, 315, 63897, 4953, 3238, 82, 11897, 439, 315, 6790, 220, 2148, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 5764, 2038, 389, 8554, 11136, 11, 48261, 13003, 11, 24759, 7969, 11, 323, 279, 8244, 1317, 9860, 11897, 2361, 11, 902, 374, 16996, 369, 8830, 279, 2883, 753, 6864, 6070, 323, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178ee0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 72034, 11, 902, 5764, 41455, 369, 9624, 6108, 10758, 323, 20632, 7526, 369, 40919, 11, 1778, 439, 17263, 11, 62046, 11, 61791, 11, 16542, 11, 323, 26911, 11, 449, 18751, 4519, 1093, 423, 14127, 15592, 304, 5195, 72034, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 24400, 389, 5195, 72034, 11, 902, 374, 961, 315, 5195, 15161, 30466, 11, 39686, 1202, 15493, 1646, 369, 20790, 7526, 11, 67908, 279, 2883, 596, 25679, 389, 2626, 10105, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62178f70>, 'json_data': {'input': [[18902, 79483, 25, 41738, 9303, 12032, 25, 23139, 323, 8515, 86106, 23927, 34919, 10884, 8515, 11, 8515, 86106, 11, 323, 3157, 481, 34919, 41755, 2215, 43672, 11, 4272, 7089, 1510, 12032, 10884, 1510, 12032, 11842, 30004, 36164, 34919, 76615, 8070, 13426, 8825, 323, 7241, 11, 4272, 36233, 26120, 12032, 7839, 14724, 7089, 2536, 45275, 12032, 10884, 12032, 14851, 8623, 323, 12937, 17075, 529, 58588, 9303, 58165, 25, 41755, 45691, 11683, 2739, 291, 20448, 323, 7720, 11683, 2739, 291, 18512, 323, 1023, 1510, 58165, 11683, 2739, 291, 13254, 4430, 76615, 13254, 10884, 1510, 58165, 5843, 9860, 11897, 76615, 13254, 11, 2536, 45275, 33620, 13426, 45691, 11, 2536, 45275, 76615, 8070, 13426, 36233, 26120, 58165, 7089, 1317, 9860, 58165, 10884, 58165, 9386, 1392, 323, 2140, 287, 6072, 320, 9290, 220, 605, 8, 12937, 17075, 529, 25452, 25, 63603, 5708, 11, 400, 15, 13, 4119, 1370, 907, 824, 4430, 11, 220, 1041, 13551, 19144, 26, 912, 13551, 11136, 323, 19310, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 323, 5217, 7318, 3502, 6864, 11, 400, 15, 13, 4119, 1370, 907, 824, 4430, 25, 220, 3101, 11, 931, 13551, 19144, 320, 1999, 362, 220, 5245, 11, 931, 11, 3308, 426, 220, 1399, 11, 931, 11, 3308, 356, 220, 1399, 11, 931, 1237, 220, 717, 11, 26537, 320, 1999, 362, 220, 20, 11, 26281, 11, 3308, 426, 220, 24902, 11, 3308, 356, 220, 21, 11, 6726, 8, 323, 220, 717, 11, 16551, 320, 1999, 362, 220, 20, 11, 22889, 11, 3308, 426, 220, 22440, 11, 3308, 356, 220, 20, 11, 25168, 8, 13551, 11136, 323, 19310, 80625, 7913, 1023, 16195, 8070, 320, 9563, 8, 10608, 2692, 24608, 400, 400, 400, 220, 2366, 17, 220, 2366, 18, 220, 1691, 11, 25622, 400, 220, 1187, 11, 23904, 220, 5925, 11, 24902, 220, 4218, 11, 25862, 220, 8190, 11, 24376, 220, 5120, 11, 24487, 220, 1272, 11, 15966, 220, 2618, 11, 26281, 220, 605, 11, 22908, 220, 717, 11, 13655, 220, 10513, 11, 25808, 220, 11123, 11, 17252, 220, 966, 11, 21776, 220, 2148, 11, 11436, 220, 20, 11, 15602, 220, 717, 11, 11739, 220, 7261, 11, 24427, 220, 9565, 11, 12901, 220, 975, 11, 19162, 220, 975, 11, 24443, 220, 1591, 11, 16415, 220, 1682, 11, 3753, 220, 23, 11, 18770, 220, 605, 11, 23545, 220, 12676, 11, 12815, 400, 220, 16496, 11, 19695, 220, 20, 11, 4386, 400, 220, 22, 11, 22741, 220, 975, 11, 22000, 220, 868, 11, 6860, 220, 1806, 11, 22455, 220, 2790, 11, 8953, 220, 23, 11, 14648, 220, 23, 11, 24870, 220, 18, 11, 23629, 220, 19, 11, 10148, 220, 3076, 11, 3101, 220, 5932, 11, 25498, 220, 975, 11, 19597, 220, 1032, 11, 14022, 220, 21944, 220, 17000, 220, 24, 11, 15966, 220, 23, 11, 21358, 220, 20998, 220, 19773, 220, 717, 11, 14408, 220, 717, 11, 16551, 220, 17, 11, 14125, 220, 16, 11, 21379, 220, 7743, 11, 4364, 220, 9079, 11, 16368, 220, 15, 220, 15, 220, 2614, 11, 10336, 220, 4767, 11, 22467, 320, 22, 11, 21006, 8, 320, 19, 11, 16496, 8, 220, 6280, 11, 21789, 220, 11483, 11, 14125, 220, 4146, 11, 8929, 220, 16085, 11, 19867, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 50729, 279, 12032, 323, 58165, 315, 63897, 4953, 2637, 45293, 1510, 323, 2536, 45275, 12032, 11, 439, 1664, 439, 58165, 11, 8405, 264, 16195, 1684, 315, 279, 2883, 596, 6020, 11509, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179000>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 22, 32, 13, 27090, 2891, 964, 24093, 3651, 71375, 964, 24093, 12244, 34, 38658, 51761, 52912, 18505, 1372, 432, 68799, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 2955, 988, 279, 7314, 315, 264, 3857, 12514, 311, 3157, 15635, 11, 19392, 430, 279, 2768, 2262, 690, 2686, 47616, 323, 62129, 75992, 922, 5370, 3157, 15635, 17011, 555, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179090>, 'json_data': {'input': [[18902, 79483, 25, 7436, 1952, 5887, 220, 1691, 11, 220, 2366, 18, 11, 279, 34483, 7376, 264, 6037, 2349, 10923, 35748, 311, 28191, 3881, 279, 14640, 304, 2515, 4972, 311, 220, 2366, 17, 5552, 311, 549, 815, 13, 6918, 7362, 3827, 20746, 13, 1115, 17480, 17208, 311, 7362, 13426, 7318, 477, 99216, 304, 279, 20323, 1667, 220, 2366, 17, 323, 220, 2366, 18, 13, 362, 40944, 832, 7394, 28174, 8581, 311, 279, 4972, 4261, 369, 420, 3827, 6037, 2349, 574, 12715, 304, 220, 2366, 18, 323, 374, 27000, 304, 1057, 7524, 3827, 4478, 315, 220, 1032, 13, 24, 4, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 264, 5199, 3827, 6037, 2349, 555, 279, 34483, 430, 22223, 279, 2883, 596, 7524, 3827, 4478, 369, 279, 1060, 13, 1102, 5825, 2317, 369, 8830, 279, 2883, 596, 3827, 8446, 323, 6020, 13122, 11, 8104, 18815, 7362, 3827, 20746, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179120>, 'json_data': {'input': [[18902, 79483, 25, 1789, 5217, 2038, 11, 1518, 7181, 220, 22, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15407, 5217, 8554, 304, 279, 6020, 12518, 11, 51346, 13016, 311, 810, 11944, 41941, 315, 279, 12678, 10666, 11, 902, 374, 7718, 369, 8830, 279, 2317, 4920, 279, 5219, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e621791b0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 63948, 323, 1023, 19092, 28904, 1436, 1101, 1121, 304, 19371, 6844, 53066, 3095, 315, 1057, 25452, 34919, 11, 279, 3709, 21201, 315, 11897, 11, 59575, 58165, 11, 477, 93364, 2065, 18512, 11, 477, 53317, 315, 82746, 323, 5255, 15075, 1317, 62954, 12032, 11, 323, 69027, 10405, 11, 904, 315, 902, 1436, 11682, 1057, 6020, 3044, 323, 10565, 3135, 13, 7429, 11, 279, 30199, 7720, 477, 907, 315, 1057, 63948, 323, 1023, 19092, 28904, 1253, 539, 3769, 553, 13, 763, 3717, 449, 1057, 3512, 478, 42204, 11, 584, 617, 7378, 11, 323, 1253, 304, 279, 3938, 7655, 11, 311, 3493, 90108, 2461, 369, 3738, 4754, 58165, 11, 902, 1436, 11682, 1057, 6020, 3044, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 6020, 25127, 315, 63948, 323, 19092, 28904, 11, 45293, 5370, 16296, 1778, 439, 19371, 1516, 315, 25452, 11, 11897, 3709, 21201, 11, 323, 4754, 38974, 1392, 13, 1102, 95593, 279, 2246, 596, 5357, 389, 279, 84140, 323, 15635, 6532, 304, 63897, 596, 6650, 15174, 323, 279, 12939, 315, 16994, 6020, 9293, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179240>, 'json_data': {'input': [[18902, 79483, 25, 46272, 9879, 33549, 311, 11360, 220, 717, 1921, 8, 315, 279, 3298, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 315, 279, 3459, 220, 605, 16222, 45293, 279, 34919, 9879, 1234, 11360, 220, 717, 1921, 8, 315, 279, 46272, 19224, 3298, 315, 220, 7285, 19, 13, 1102, 7437, 279, 6566, 369, 279, 2768, 2038, 922, 63897, 596, 34919, 10212, 389, 5708, 30098, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e621792d0>, 'json_data': {'input': [[18902, 79483, 25, 220, 5495, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 11741, 18133, 2449, 477, 264, 6002, 304, 279, 2246, 323, 1587, 539, 3493, 23222, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179360>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 2038, 449, 5201, 311, 63897, 596, 2109, 75202, 315, 3308, 362, 323, 3308, 356, 5708, 2391, 279, 8502, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 2007, 29385, 4954, 63897, 596, 2109, 13173, 7640, 369, 1202, 3308, 362, 323, 3308, 356, 5708, 11, 8405, 47616, 828, 430, 374, 16996, 369, 15167, 47614, 279, 2883, 596, 6864, 24691, 15174, 323, 3157, 7640, 2391, 264, 3230, 8502, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e621793f0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 2500, 3857, 11381, 477, 2262, 7471, 5507, 2949, 279, 2246, 11, 19392, 264, 9320, 477, 502, 8712, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179480>, 'json_data': {'input': [[18902, 79483, 25, 12937, 21304, 12441, 82, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 264, 3857, 430, 18911, 5708, 5178, 40099, 13, 1102, 15151, 430, 279, 2768, 2262, 690, 3493, 9302, 828, 9002, 279, 5708, 5178, 315, 63897, 4953, 13, 304, 12593, 311, 9959, 3157, 15285, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179510>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 264, 8205, 315, 13426, 323, 3827, 4526, 30255, 304, 279, 549, 815, 13, 323, 12387, 7362, 56043, 13, 5751, 7524, 3827, 7969, 527, 11754, 555, 264, 8205, 315, 9547, 11, 2737, 4442, 304, 279, 6651, 315, 24608, 304, 56043, 449, 2204, 45530, 3827, 7969, 11, 4272, 20192, 323, 18151, 389, 305, 17327, 323, 5552, 14463, 1234, 1057, 7362, 9473, 5326, 6373, 2068, 11, 4442, 304, 1057, 5708, 3430, 369, 13551, 11136, 439, 9548, 20448, 11, 4442, 304, 279, 51262, 315, 1057, 27334, 3827, 12032, 477, 58165, 11, 323, 279, 3851, 315, 2204, 19705, 315, 3827, 7016, 477, 4442, 304, 3827, 7016, 11, 14640, 11, 477, 24043, 16565, 320, 16564, 4442, 304, 279, 23692, 315, 6484, 7016, 570, 15903, 11, 422, 584, 527, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 5370, 3827, 30255, 279, 2883, 12580, 4028, 56043, 11, 45293, 279, 9547, 430, 10383, 1202, 7524, 3827, 7969, 13, 1102, 66159, 279, 23965, 315, 3827, 8907, 323, 279, 4754, 369, 3938, 58165, 11, 29820, 311, 279, 27927, 6020, 5326, 19775, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e621795a0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 48582, 3477, 1057, 11897, 323, 2536, 30004, 36164, 25452, 34919, 369, 53317, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 10015, 24131, 315, 279, 39445, 3477, 1920, 369, 11897, 323, 2536, 30004, 36164, 25452, 34919, 311, 10765, 38974, 1392, 13, 1102, 374, 961, 315, 279, 27927, 10430, 389, 9341, 51262, 323, 5326, 15813, 2949, 63897, 596, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179630>, 'json_data': {'input': [[18902, 79483, 25, 578, 4876, 3770, 9248, 63897, 4953, 13, 3308, 362, 596, 40944, 4330, 4771, 2860, 5708, 4346, 471, 389, 4279, 5708, 449, 279, 40944, 2860, 4780, 315, 279, 328, 43945, 220, 2636, 1963, 11, 279, 16473, 63981, 41739, 1963, 11, 323, 279, 39092, 38, 8191, 41739, 1963, 13, 578, 4876, 14242, 279, 5178, 315, 264, 400, 1041, 9341, 304, 1057, 4279, 5708, 323, 304, 1855, 1963, 320, 4291, 279, 15601, 94539, 315, 682, 56364, 8, 505, 6790, 220, 2148, 11, 220, 679, 23, 11, 311, 6790, 220, 2148, 11, 220, 2366, 18, 13, 578, 4780, 6982, 527, 3196, 389, 13970, 3135, 323, 527, 539, 10825, 311, 4284, 3938, 5178, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 4876, 27393, 63897, 4953, 3238, 82, 3308, 362, 5708, 5178, 449, 3682, 3157, 15285, 927, 264, 4330, 4771, 4261, 13, 1102, 50729, 279, 2317, 369, 279, 4876, 11, 82003, 279, 12939, 315, 8830, 1268, 63897, 596, 5708, 706, 10887, 304, 12976, 311, 1023, 63119, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e621796c0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 8471, 5195, 15161, 7089, 426, 1441, 10884, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 16, 400, 220, 777, 11, 23038, 400, 220, 17, 11, 17609, 400, 220, 24531, 400, 220, 1313, 11, 26067, 6515, 53929, 220, 16, 11, 10967, 220, 19, 11, 24870, 220, 9079, 220, 21, 11, 11123, 19620, 11667, 14807, 323, 1023, 34074, 320, 9992, 8, 320, 23, 8, 320, 19, 8, 320, 11515, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 508, 11, 25125, 220, 22, 11, 10866, 220, 23629, 220, 1591, 11, 16415, 6515, 53929, 220, 8273, 220, 18, 220, 15, 220, 14052, 19620, 11667, 14807, 323, 1023, 34074, 220, 2148, 320, 24, 8, 320, 1544, 8, 320, 20, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 400, 220, 1691, 11, 8899, 400, 220, 22, 11, 2550, 400, 220, 25339, 400, 220, 1682, 11, 3753, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 11944, 35876, 828, 9002, 279, 4442, 304, 279, 15691, 3392, 315, 82746, 369, 5195, 8471, 11, 5195, 15161, 11, 323, 7089, 426, 1441, 13, 1102, 18911, 279, 39954, 520, 279, 842, 315, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 3235, 449, 63948, 323, 7362, 11667, 34074, 11, 94012, 279, 6650, 323, 65649, 315, 82746, 2949, 279, 2883, 753, 21282, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179750>, 'json_data': {'input': [[18902, 79483, 25, 4206, 15680, 315, 13031, 344, 5983, 198, 2014, 940, 1534, 73094, 25, 578, 2316, 330, 6582, 1303, 315, 13031, 344, 5983, 1, 15151, 264, 3857, 25394, 1268, 279, 2883, 29972, 6020, 43645, 11, 8104, 21760, 389, 279, 12659, 2212, 4445, 1303, 1521, 24198, 311, 50460, 5326, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e621797e0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 5843, 62954, 12032, 25, 3723, 4273, 400, 220, 6365, 11, 20943, 400, 220, 5120, 11, 25210, 7327, 220, 1644, 11, 20339, 220, 1987, 11, 19230, 10884, 1317, 62954, 12032, 400, 220, 6804, 11, 25307, 400, 220, 10410, 11, 21299, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 12399, 315, 279, 1317, 62954, 12032, 315, 63897, 4953, 13, 439, 315, 6790, 220, 2148, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 11, 11102, 1523, 1139, 13018, 323, 6625, 11306, 13, 1115, 2038, 374, 961, 315, 279, 6020, 12518, 3857, 11, 8405, 26793, 1139, 279, 2883, 596, 9513, 2385, 323, 54001, 8141, 315, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179870>, 'json_data': {'input': [[18902, 79483, 25, 5751, 8323, 3878, 369, 9815, 2215, 43672, 13592, 555, 279, 4595, 323, 10687, 315, 1057, 6444, 323, 279, 3956, 477, 3600, 9076, 13, 578, 4751, 1990, 51744, 10332, 323, 994, 8323, 374, 4245, 374, 539, 5199, 13, 1789, 3738, 3956, 477, 3600, 323, 6444, 11, 584, 1397, 8323, 1603, 279, 3956, 477, 3600, 527, 12886, 311, 279, 6130, 13, 23212, 11, 9815, 2215, 43672, 5764, 15055, 369, 3600, 10887, 304, 12178, 315, 279, 1314, 311, 25637, 279, 6130, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 8323, 3878, 369, 9815, 2215, 43672, 11, 39686, 279, 54709, 3196, 389, 6130, 4595, 323, 3600, 9076, 13, 1102, 374, 961, 315, 279, 27927, 3857, 389, 9815, 2215, 43672, 6373, 323, 13254, 18324, 2949, 63897, 4953, 3238, 82, 6020, 13122, 11, 45293, 1268, 279, 2883, 29972, 8515, 6530, 5552, 311, 6130, 14507, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179900>, 'json_data': {'input': [[18902, 79483, 25, 54463, 2857, 25368, 311, 42089, 11, 49357, 11, 323, 63348, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 14836, 369, 264, 3857, 10968, 389, 279, 5897, 323, 23331, 15635, 279, 2883, 12580, 11, 51346, 13016, 311, 264, 11944, 10430, 315, 1521, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179990>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 11680, 323, 14016, 400, 220, 2287, 11, 24777, 400, 220, 5728, 11, 25077, 8245, 5557, 12032, 220, 2287, 11, 16567, 220, 1490, 11, 23428, 24987, 304, 5208, 220, 1544, 11, 23480, 220, 1758, 11, 14378, 81751, 6416, 18637, 220, 605, 11, 21228, 220, 806, 11, 17837, 30339, 323, 38764, 220, 16104, 220, 21757, 8825, 323, 7241, 11, 20547, 220, 11123, 11, 19027, 220, 679, 11, 20899, 9865, 25, 41165, 94189, 320, 2946, 11, 22349, 8, 320, 3080, 11, 21209, 8, 8825, 323, 7241, 11, 4272, 400, 220, 7261, 11, 24427, 400, 220, 9565, 11, 12901, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 12399, 315, 63897, 4953, 3238, 82, 3424, 323, 7241, 439, 315, 6790, 220, 2148, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 18911, 11944, 12678, 389, 5370, 9513, 11306, 11, 2737, 4363, 11, 14016, 11, 323, 2038, 5557, 12032, 11, 323, 48517, 279, 4272, 907, 1306, 24043, 369, 41165, 94189, 13, 1115, 2038, 374, 961, 315, 279, 6020, 12518, 323, 8779, 8720, 279, 2883, 596, 6864, 9341, 323, 9513, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179a20>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 1317, 62954, 12032, 555, 46139, 3158, 11, 902, 5764, 3424, 323, 7241, 11, 4272, 323, 10565, 26120, 12032, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 690, 3118, 2038, 922, 1317, 62954, 12032, 555, 46139, 3158, 11, 19392, 264, 5357, 389, 279, 2883, 753, 7106, 6864, 22538, 323, 872, 46139, 8141, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179ab0>, 'json_data': {'input': [[18902, 79483, 25, 320, 258, 11990, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 430, 279, 6020, 12678, 304, 420, 3857, 527, 1101, 10666, 304, 11990, 11, 23391, 29237, 4028, 682, 6020, 12518, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179b40>, 'json_data': {'input': [[18902, 79483, 25, 1226, 12849, 4272, 8070, 824, 4430, 315, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 1701, 279, 1403, 15144, 1749, 13, 14967, 4272, 8070, 824, 4430, 374, 25157, 1701, 279, 37924, 78526, 1396, 315, 13551, 19310, 2391, 279, 4261, 13, 53867, 2844, 4272, 8070, 824, 4430, 374, 25157, 1701, 279, 37924, 78526, 1396, 315, 13551, 323, 279, 2515, 315, 13893, 19371, 6844, 34919, 19310, 2391, 279, 4261, 13, 14020, 31668, 19371, 6844, 34919, 6824, 315, 24107, 3642, 323, 1023, 39639, 4501, 2425, 13429, 13551, 13, 578, 19371, 6844, 2515, 315, 19310, 24107, 3642, 323, 1023, 39639, 4501, 2425, 13429, 13551, 374, 27000, 304, 80703, 24608, 824, 4430, 555, 3851, 315, 279, 79353, 5708, 1749, 13, 578, 35547, 315, 279, 80703, 4272, 8070, 824, 4430, 315, 3308, 362, 5708, 22204, 279, 14747, 315, 3308, 426, 5708, 11, 1418, 279, 80703, 4272, 8070, 824, 4430, 315, 3308, 426, 5708, 1587, 539, 9855, 279, 14747, 315, 1884, 13551, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 38152, 1511, 555, 63897, 311, 11294, 4272, 8070, 824, 4430, 11, 2737, 279, 1403, 15144, 1749, 11, 902, 374, 7718, 369, 8830, 1268, 22613, 527, 20816, 4315, 2204, 6989, 315, 41777, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179bd0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 961, 315, 279, 6771, 315, 36962, 11, 8405, 264, 34030, 21782, 315, 279, 2246, 596, 14491, 13, 1102, 8779, 13016, 21546, 279, 1934, 323, 1505, 9959, 2038, 6288, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179c60>, 'json_data': {'input': [[18902, 79483, 25, 578, 6762, 907, 315, 1057, 11897, 323, 25452, 22538, 1253, 304, 279, 3938, 387, 11, 323, 3738, 22538, 617, 1027, 304, 279, 3347, 11, 48291, 11754, 555, 53113, 11, 6807, 82189, 477, 18151, 11, 5178, 323, 6020, 3135, 315, 279, 16940, 15086, 11, 7362, 9473, 7969, 11, 4442, 304, 2802, 7969, 11, 2737, 4442, 430, 1253, 1121, 505, 279, 8292, 315, 502, 29531, 7969, 11, 279, 2515, 315, 502, 477, 10223, 14640, 11, 279, 5708, 3157, 304, 4689, 11, 477, 1023, 9547, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 4726, 25985, 988, 389, 279, 9547, 430, 1253, 7958, 279, 6762, 907, 315, 63897, 596, 22538, 11, 2737, 53113, 323, 6807, 15635, 11, 3157, 5178, 11, 323, 23331, 4442, 13, 1102, 22890, 5304, 279, 3766, 12143, 555, 45293, 279, 84140, 6532, 304, 18646, 279, 2883, 596, 9341, 20136, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179cf0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 2316, 4342, 19392, 279, 1212, 315, 279, 6771, 315, 36962, 3857, 304, 279, 2246, 13, 578, 6771, 315, 36962, 374, 16996, 369, 60499, 279, 5370, 14491, 315, 279, 25992, 8423, 11, 10923, 13016, 311, 6288, 1505, 3230, 2038, 477, 50829, 25819, 6957, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179d80>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 5224, 19813, 311, 17989, 315, 3938, 20448, 18512, 11, 19392, 279, 12939, 315, 6020, 79482, 323, 8199, 287, 2949, 279, 2883, 596, 8244, 6020, 8446, 13, 1102, 374, 4461, 961, 315, 264, 810, 16781, 10430, 389, 9548, 20448, 323, 7720, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179e10>, 'json_data': {'input': [[18902, 79483, 25, 1226, 13375, 1057, 75620, 304, 18859, 449, 279, 10886, 315, 279, 62029, 21257, 13, 13266, 10886, 1397, 430, 584, 3197, 323, 2804, 279, 25261, 311, 6994, 13579, 44701, 922, 3508, 279, 6020, 12518, 527, 1949, 315, 3769, 5906, 25159, 11, 3508, 4245, 311, 1493, 477, 16515, 13, 5751, 75620, 5343, 16785, 16346, 311, 8720, 279, 15635, 315, 3769, 5906, 25159, 315, 279, 6020, 12518, 11, 3508, 4245, 311, 1493, 477, 16515, 11, 323, 16785, 16346, 430, 6013, 311, 1884, 15635, 13, 15483, 16346, 5343, 38936, 11, 389, 264, 1296, 8197, 11, 6029, 9002, 279, 15055, 323, 75992, 304, 279, 6020, 12518, 13, 5751, 75620, 1101, 5343, 38663, 279, 24043, 16565, 1511, 323, 5199, 17989, 1903, 555, 6373, 11, 439, 1664, 439, 38663, 279, 8244, 15864, 315, 279, 6020, 12518, 13, 1226, 4510, 430, 1057, 75620, 3493, 264, 13579, 8197, 369, 1057, 9647, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 25261, 16346, 45179, 11, 39686, 279, 47999, 7138, 315, 279, 25261, 1920, 11, 902, 5343, 5326, 41300, 11, 6029, 24481, 11, 323, 16865, 315, 6373, 596, 17989, 323, 24043, 16565, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179ea0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1047, 3769, 7782, 42356, 323, 1023, 76543, 30255, 315, 400, 1774, 13, 24, 7239, 11, 315, 902, 400, 2148, 13, 21, 7239, 574, 2875, 9860, 13, 4314, 15055, 15871, 6824, 315, 7782, 10373, 369, 3738, 11156, 14054, 439, 1664, 439, 279, 2536, 86103, 481, 13651, 477, 279, 8187, 36935, 11307, 304, 3738, 20038, 5552, 311, 42356, 311, 7782, 21746, 11, 2737, 2262, 21746, 11, 15808, 323, 4009, 8824, 13, 1789, 1884, 20038, 449, 3977, 3878, 11, 584, 656, 539, 16430, 279, 2536, 86103, 481, 29672, 7953, 904, 8187, 33776, 323, 5255, 21913, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 763, 3738, 13422, 11, 279, 3392, 315, 1057, 76543, 30255, 1253, 2349, 3196, 389, 279, 3685, 18912, 315, 2015, 57383, 505, 1057, 20972, 13, 1789, 810, 2038, 5552, 311, 1057, 2262, 21746, 11, 1518, 7181, 220, 605, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 12678, 5552, 311, 63897, 4953, 3238, 82, 7782, 42356, 323, 76543, 30255, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 45293, 15055, 323, 872, 7138, 13, 1115, 2038, 374, 9200, 369, 38663, 279, 2883, 596, 3938, 8515, 6530, 8670, 323, 25605, 42356, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179f30>, 'json_data': {'input': [[18902, 79483, 25, 10884, 6926, 11667, 30466, 315, 400, 15500, 13, 16, 7239, 369, 220, 2366, 18, 7319, 400, 1591, 13, 17, 7239, 7863, 311, 400, 11209, 13, 24, 7239, 304, 30466, 11, 44878, 61316, 3252, 2515, 11, 369, 220, 2366, 17, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 264, 5199, 5376, 304, 6926, 11667, 30466, 369, 220, 2366, 18, 7863, 311, 220, 2366, 17, 11, 8405, 2317, 369, 8244, 13254, 6650, 323, 82003, 279, 12939, 315, 44878, 61316, 3252, 6372, 369, 49479, 6020, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e62179fc0>, 'json_data': {'input': [[18902, 79483, 25, 11443, 315, 30466, 17610, 315, 350, 1741, 323, 1023, 7194, 315, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 9002, 279, 2853, 315, 30466, 11, 19392, 430, 433, 690, 7872, 279, 6956, 430, 1304, 709, 420, 6020, 1584, 1537, 13, 1102, 17482, 311, 7124, 279, 7036, 315, 1148, 374, 5343, 304, 279, 2853, 315, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217a050>, 'json_data': {'input': [[18902, 79483, 25, 2001, 62, 8713, 2345, 69716, 16620, 2345, 384, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 17, 11, 420, 12143, 8111, 311, 387, 264, 37666, 1906, 477, 25829, 11, 4461, 19392, 264, 9320, 477, 1464, 304, 279, 1495, 11, 4856, 1109, 8649, 23222, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217a0e0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5415, 330, 2149, 18992, 4953, 13, 1359, 43080, 279, 5502, 311, 902, 279, 6020, 12518, 323, 6821, 281, 7770, 11, 31692, 279, 2317, 369, 279, 6020, 2038, 430, 11263, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217a170>, 'json_data': {'input': [[18902, 79483, 25, 6186, 220, 966, 11, 220, 2366, 19, 198, 2014, 940, 1534, 73094, 25, 1115, 2457, 15785, 279, 67599, 315, 279, 25261, 1934, 369, 63897, 4953, 13, 323, 15151, 994, 279, 6020, 12518, 5343, 304, 279, 2246, 1051, 6264, 1639, 323, 61487, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217a200>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 24, 34, 13, 12244, 34, 38658, 4622, 97667, 1753, 82456, 622, 1539, 1669, 18091, 37868, 26336, 21626, 6927, 26776, 1777, 37868, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 330, 34590, 14767, 1359, 902, 374, 264, 3857, 315, 279, 9974, 1934, 430, 11383, 5727, 2038, 922, 13166, 35186, 11, 11145, 20448, 11, 323, 7690, 2038, 11, 8405, 26793, 1139, 279, 6373, 323, 38189, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217a290>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5042, 15151, 279, 9546, 315, 264, 2007, 315, 8970, 304, 279, 2246, 11, 13788, 439, 264, 34512, 1697, 2449, 369, 13016, 311, 25539, 5370, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217a320>, 'json_data': {'input': [[18902, 79483, 25, 220, 1544, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 2500, 2199, 1396, 477, 3857, 11381, 11, 19392, 264, 9320, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217a3b0>, 'json_data': {'input': [[18902, 79483, 25, 763, 220, 2366, 18, 11, 279, 15774, 38493, 8471, 320, 91064, 8, 11136, 264, 6037, 2349, 10923, 35748, 311, 28191, 3881, 279, 14640, 304, 2515, 4972, 311, 220, 2366, 17, 5552, 311, 549, 815, 13, 6918, 7362, 3827, 20746, 11, 439, 1664, 439, 264, 8821, 6037, 2349, 449, 41653, 19351, 389, 279, 6864, 2065, 323, 93364, 2065, 315, 432, 33465, 18512, 13, 362, 40944, 832, 7394, 28174, 8581, 311, 279, 4972, 4261, 369, 1521, 3827, 6037, 4442, 574, 12715, 304, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 18979, 304, 279, 7524, 3827, 4478, 11, 31799, 433, 311, 34483, 6037, 4442, 11, 902, 374, 3062, 369, 8830, 279, 3827, 18921, 323, 1202, 6372, 389, 4272, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217a440>, 'json_data': {'input': [[18902, 79483, 25, 2057, 279, 12937, 17075, 323, 279, 8925, 315, 46085, 315, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 578, 5224, 20669, 1054, 1271, 279, 12937, 17075, 323, 279, 8925, 315, 46085, 315, 63897, 4953, 2029, 15151, 279, 10825, 10877, 315, 279, 25261, 1934, 11, 82003, 1202, 12939, 311, 41777, 323, 279, 35186, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217a4d0>, 'json_data': {'input': [[18902, 79483, 25, 11761, 41455, 11, 902, 15871, 2997, 30466, 505, 13674, 3600, 11, 1778, 13674, 6007, 11, 13674, 10948, 323, 26745, 11, 323, 12873, 7418, 29497, 11, 439, 1664, 439, 5195, 3861, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 11761, 41455, 13189, 315, 279, 30466, 11, 15182, 3230, 3600, 1093, 13674, 6007, 323, 5195, 3861, 13, 1102, 22020, 279, 20057, 2949, 11761, 15493, 33935, 430, 17210, 311, 13254, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217a560>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2853, 6070, 706, 1403, 6956, 25, 2853, 315, 30466, 323, 10565, 18512, 13, 5751, 10565, 18512, 2997, 7194, 5552, 311, 432, 33465, 11, 6763, 323, 8661, 11, 323, 4689, 323, 23541, 5865, 13, 35211, 315, 1057, 7194, 323, 18512, 11, 2737, 1884, 5938, 449, 279, 5784, 315, 1057, 11156, 14054, 439, 1664, 439, 6956, 315, 1057, 10565, 18512, 11, 527, 8965, 2753, 3977, 304, 7138, 323, 1253, 539, 81584, 311, 4442, 304, 13254, 13, 23212, 11, 65649, 304, 20448, 18512, 1253, 539, 6089, 81584, 449, 4442, 304, 2010, 1868, 11, 304, 4040, 4245, 311, 9974, 5708, 6108, 20448, 320, 50, 5002, 8, 23146, 430, 8965, 28705, 927, 3116, 1667, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 810, 304, 31410, 16540, 315, 279, 2853, 6070, 11, 86055, 1990, 2853, 315, 30466, 323, 10565, 18512, 13, 1102, 66159, 279, 2753, 3977, 7138, 315, 1690, 7194, 323, 1268, 814, 1253, 539, 81584, 6089, 449, 13254, 4442, 11, 63025, 13016, 922, 279, 6020, 30295, 315, 279, 7471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217a5f0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 18, 45285, 26868, 45285, 26868, 3308, 362, 4430, 2109, 75202, 220, 5547, 400, 220, 21, 11, 24758, 220, 2495, 400, 220, 24, 11, 15340, 3308, 356, 4430, 2109, 75202, 220, 21330, 220, 4103, 11, 23411, 220, 10617, 220, 4103, 11, 25862, 10884, 4430, 2109, 75202, 7, 16, 8, 220, 17252, 400, 220, 2946, 11, 17408, 220, 21458, 400, 220, 5538, 11, 10336, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 3230, 828, 389, 279, 1396, 315, 13551, 2109, 73350, 323, 872, 20081, 15055, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 11, 29820, 311, 279, 11944, 31085, 315, 4430, 2109, 13173, 7640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217a680>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1253, 3810, 1139, 1317, 9860, 17517, 369, 7384, 323, 3956, 430, 5379, 603, 311, 5199, 3878, 323, 4787, 13, 1226, 1253, 3663, 7194, 369, 7384, 323, 3956, 430, 527, 539, 27073, 4245, 311, 3157, 7631, 11, 30116, 2349, 11, 5614, 11761, 19882, 11, 4367, 11, 2027, 41231, 11, 323, 8642, 4819, 13, 1789, 2937, 11, 1606, 3738, 315, 1057, 12035, 8312, 17517, 617, 8286, 6108, 21913, 477, 8187, 7782, 8670, 11, 422, 279, 8286, 315, 6763, 315, 1057, 7766, 43154, 477, 1587, 539, 5662, 28448, 11811, 11, 584, 1436, 3663, 7319, 7384, 323, 15266, 7194, 477, 1023, 6020, 58165, 430, 1436, 1304, 1057, 3956, 810, 34348, 824, 5089, 311, 30847, 323, 11682, 1057, 6020, 3044, 323, 10565, 3135, 13, 24296, 11, 3738, 315, 1057, 28650, 1253, 37667, 810, 37849, 76543, 3878, 3196, 389, 8286, 323, 1023, 42356, 430, 1253, 3493, 1124, 449, 15022, 22934, 323, 1253, 7958, 1057, 8312, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 25127, 315, 1317, 9860, 17517, 323, 872, 5938, 15635, 13, 1102, 22020, 1268, 3157, 65649, 323, 11761, 7865, 4442, 649, 3063, 311, 7319, 7194, 323, 6020, 58165, 369, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217a710>, 'json_data': {'input': [[18902, 79483, 25, 2956, 12625, 323, 4868, 10742, 23343, 311, 1057, 5557, 323, 1057, 12659, 1436, 11682, 1057, 17444, 11, 5353, 603, 311, 62622, 5199, 24305, 11, 323, 4130, 1510, 323, 4754, 3932, 477, 6444, 505, 1701, 1057, 3956, 323, 3600, 13, 17863, 42068, 11, 3241, 23367, 477, 42655, 11, 4868, 69140, 11, 323, 8951, 389, 1057, 6067, 1436, 1121, 304, 279, 41086, 28957, 323, 1005, 315, 1217, 828, 323, 32317, 449, 1057, 3932, 529, 323, 6444, 529, 5845, 311, 1005, 1057, 3956, 323, 3600, 11, 90255, 1057, 2626, 323, 17444, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 828, 12625, 323, 4868, 10742, 11, 39686, 279, 4754, 8389, 5536, 389, 279, 2883, 753, 17444, 323, 1217, 7095, 4245, 311, 4868, 69140, 477, 62851, 315, 828, 13, 1102, 72890, 279, 12939, 315, 49071, 287, 1217, 2038, 439, 264, 16188, 13189, 315, 279, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217a7a0>, 'json_data': {'input': [[18902, 79483, 25, 14681, 18362, 20148, 198, 2014, 940, 1534, 73094, 25, 14681, 18362, 20148]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217a830>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217a8c0>, 'json_data': {'input': [[18902, 79483, 25, 220, 2031, 627, 2014, 940, 1534, 73094, 25, 1115, 8111, 311, 387, 264, 2199, 1396, 5905, 11, 902, 2643, 13519, 1405, 279, 2768, 2038, 374, 7559, 2949, 279, 2246, 13, 1102, 4461, 17482, 439, 264, 34512, 1697, 12576, 2949, 279, 8294, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217a950>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3085, 13172, 555, 24944, 2225, 5178, 323, 6883, 13172, 13, 1226, 15641, 30466, 369, 5178, 13172, 994, 264, 1217, 69589, 449, 279, 33789, 13, 1789, 6883, 13172, 11, 584, 15641, 30466, 994, 279, 1008, 374, 12882, 11, 477, 264, 1217, 6325, 279, 1008, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 15100, 279, 30296, 1990, 5178, 323, 6883, 13172, 11, 45293, 1268, 13254, 374, 15324, 3196, 389, 1217, 20392, 477, 1008, 3113, 13, 1102, 5825, 20616, 1139, 279, 17150, 430, 6678, 63897, 596, 13172, 13254, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217a9e0>, 'json_data': {'input': [[18902, 79483, 25, 220, 4161, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 18, 11, 420, 374, 2500, 2199, 1396, 5905, 11, 19392, 279, 2246, 596, 7471, 13, 1102, 72214, 430, 279, 17876, 2038, 374, 7559, 389, 279, 220, 4161, 339, 2199, 315, 279, 2246, 11, 29820, 311, 279, 8244, 6070, 323, 34512, 2968, 315, 279, 25992, 8423, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217aa70>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1005, 3738, 17150, 311, 3839, 1268, 1664, 9629, 4028, 5370, 6012, 374, 58191, 1534, 439, 433, 36716, 311, 1057, 13172, 30466, 25, 7318, 28849, 323, 2853, 17453, 29218, 281, 7770, 311, 9629, 389, 5195, 7694, 612, 1023, 6012, 11, 1418, 51091, 323, 2853, 17453, 38025, 4099, 281, 7770, 311, 9629, 389, 1057, 5195, 8304, 6012, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 17150, 1511, 311, 15806, 279, 58191, 2065, 315, 9629, 389, 2204, 5195, 6012, 11, 11951, 86055, 1990, 5195, 7694, 612, 1023, 6012, 323, 5195, 8304, 6012, 13, 1102, 5825, 26793, 1139, 1268, 5195, 11193, 1202, 13172, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217ab00>, 'json_data': {'input': [[18902, 79483, 25, 220, 5925, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 320, 5925, 8, 304, 279, 6771, 315, 36962, 11, 19392, 1202, 2361, 304, 279, 8244, 2246, 6070, 13, 1102, 8779, 13016, 21546, 279, 2246, 6847, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217ab90>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217ac20>, 'json_data': {'input': [[18902, 79483, 25, 578, 17575, 369, 8070, 13426, 5764, 279, 2515, 315, 21137, 19705, 323, 4442, 311, 30600, 439, 1664, 439, 279, 5552, 4272, 2802, 323, 31086, 13, 763, 5369, 11, 584, 527, 3917, 311, 279, 19815, 24481, 315, 1057, 8070, 3827, 4780, 555, 279, 34483, 323, 1023, 3827, 11527, 902, 1253, 2105, 41300, 2403, 603, 13, 1226, 15870, 8720, 279, 29736, 315, 31959, 20124, 13239, 505, 1521, 69570, 323, 41300, 311, 8417, 279, 41228, 2826, 315, 1057, 17575, 369, 8070, 13426, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 9731, 279, 10430, 315, 8070, 3827, 19705, 11, 45293, 279, 6372, 315, 21137, 19705, 323, 9434, 69570, 389, 279, 2883, 596, 3827, 58165, 13, 1102, 95593, 279, 12939, 315, 17879, 3827, 8907, 323, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217acb0>, 'json_data': {'input': [[18902, 79483, 25, 1952, 6841, 220, 966, 11, 220, 679, 15, 11, 279, 21283, 596, 94466, 3331, 369, 42321, 9107, 459, 8990, 1139, 5370, 3276, 85971, 14228, 21859, 2403, 603, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15407, 459, 8990, 9107, 555, 279, 7665, 9849, 320, 7650, 8, 304, 220, 679, 15, 9002, 3276, 85971, 21859, 2403, 279, 2883, 13, 1102, 5825, 13970, 2317, 311, 279, 14529, 5897, 4819, 279, 2883, 12580, 304, 279, 22651, 315, 10937, 2383, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217ad40>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217add0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 13, 74006, 59351, 9182, 23233, 29863, 3083, 83751, 39, 8021, 4419, 529, 469, 5876, 3414, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 96594, 59351, 9182, 23233, 29863, 3083, 83751, 39, 8021, 4419, 529, 469, 5876, 3414, 1359, 2500, 1401, 6020, 5224, 430, 50729, 4442, 304, 25452, 369, 5708, 17075, 927, 279, 5300, 18852, 11, 8405, 26793, 1139, 6864, 6070, 323, 63342, 14463, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217ae60>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1253, 1101, 387, 46025, 304, 1057, 9045, 311, 29262, 1057, 10396, 477, 6062, 5471, 477, 34630, 6629, 904, 1778, 24455, 13, 5884, 315, 279, 88931, 26006, 1253, 48291, 7958, 1217, 7095, 323, 20392, 11, 11682, 1057, 17444, 323, 16097, 11, 1397, 603, 311, 2349, 1057, 2626, 12659, 304, 5627, 430, 11682, 1057, 2626, 7677, 11, 323, 69214, 7958, 1057, 2626, 323, 6020, 3135, 13, 5884, 1778, 26006, 1253, 1101, 3917, 603, 311, 5217, 39725, 323, 23331, 44983, 11, 902, 1436, 1121, 304, 33384, 31086, 323, 26186, 11, 37098, 6373, 753, 892, 323, 6666, 11, 323, 3063, 311, 24872, 23331, 38189, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 19775, 505, 46613, 220, 17, 11, 82003, 279, 4754, 16296, 315, 22109, 311, 2686, 4868, 4819, 13750, 13, 1102, 72890, 279, 15635, 311, 1217, 7095, 11, 279, 2883, 753, 17444, 11, 323, 279, 29736, 315, 7319, 23331, 36752, 11, 91115, 279, 11774, 14407, 304, 279, 3766, 27855, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217aef0>, 'json_data': {'input': [[18902, 79483, 25, 578, 6541, 311, 2930, 11, 439, 1664, 439, 279, 11599, 315, 279, 7447, 66707, 1917, 11, 706, 7263, 10708, 4994, 315, 279, 549, 815, 2637, 2737, 304, 24084, 11987, 11, 1778, 439, 6890, 13, 1226, 3136, 311, 2793, 17345, 323, 2274, 44589, 11028, 315, 1057, 3956, 323, 13172, 7620, 9959, 311, 1057, 3932, 304, 1521, 11987, 13, 1115, 706, 6197, 311, 264, 9327, 315, 7319, 30466, 505, 24084, 11987, 13, 1226, 1755, 430, 1057, 3135, 690, 3136, 311, 387, 11754, 555, 1057, 5178, 304, 1521, 11987, 11, 8104, 439, 3428, 41238, 6505, 7766, 3719, 810, 2561, 13, 1115, 9327, 1436, 7958, 1057, 30466, 439, 11469, 11987, 15453, 58191, 553, 520, 264, 4827, 4478, 1109, 810, 15196, 11987, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 6650, 315, 30466, 505, 24084, 11987, 11, 82003, 44589, 2027, 4500, 13, 1102, 95593, 279, 19092, 12939, 315, 1521, 11987, 323, 1268, 2926, 58191, 2065, 2643, 387, 4827, 7863, 311, 810, 9749, 11987, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217af80>, 'json_data': {'input': [[18902, 79483, 25, 58237, 63897, 11, 584, 527, 1101, 1701, 5557, 311, 1456, 311, 11886, 2466, 5435, 430, 7958, 264, 7029, 8205, 315, 19647, 505, 18899, 18386, 323, 2890, 5557, 311, 24919, 10105, 311, 2686, 10182, 2349, 13, 63897, 753, 9341, 304, 279, 20136, 315, 7089, 426, 1441, 5764, 9873, 430, 527, 520, 5370, 18094, 315, 4500, 11, 24950, 505, 1884, 304, 279, 432, 33465, 10474, 311, 1884, 430, 527, 304, 279, 7314, 18094, 315, 8518, 2065, 13, 5751, 5915, 374, 369, 1124, 311, 3719, 53414, 11, 6992, 9873, 13, 7089, 426, 1441, 14816, 439, 9678, 5220, 323, 1063, 315, 1124, 617, 872, 1866, 21126, 449, 9678, 3697, 323, 4994, 15167, 13, 6104, 1521, 4216, 51256, 9873, 18182, 2586, 449, 24779, 27924, 11, 1063, 315, 1124, 527, 2736, 24038, 13254, 323, 3339, 3062, 37387, 304, 872, 19647, 13, 1050, 46469, 505, 7089, 426, 1441, 527, 8066, 15871, 505, 279, 6412, 315, 18985, 14228, 3600, 323, 7757, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 459, 24131, 315, 279, 330, 11663, 426, 1441, 1, 10449, 11, 45293, 63897, 596, 5603, 311, 22581, 5199, 3728, 11774, 323, 39686, 279, 20057, 315, 9873, 2949, 420, 5699, 13, 1102, 72890, 279, 4754, 369, 6650, 323, 19297, 4994, 315, 279, 1925, 5195, 3600, 11, 82003, 279, 2883, 596, 1317, 9860, 11376, 369, 1521, 22538, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217b010>, 'json_data': {'input': [[18902, 79483, 25, 1226, 7068, 264, 5199, 13651, 315, 1057, 30466, 505, 13172, 13, 80569, 10374, 555, 50270, 11, 264, 4814, 315, 8717, 11, 477, 502, 323, 6484, 14645, 430, 2565, 14058, 2930, 323, 5255, 7958, 1057, 5845, 311, 32187, 14058, 1436, 11682, 1057, 2626, 627, 2014, 940, 1534, 73094, 25, 1115, 1495, 25985, 988, 389, 279, 13172, 13254, 1646, 11, 82003, 279, 5199, 13651, 315, 13254, 14592, 505, 420, 2592, 13, 1102, 35434, 4754, 52227, 11, 1778, 439, 87386, 24999, 323, 3157, 4787, 11, 430, 1436, 5536, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217b0a0>, 'json_data': {'input': [[18902, 79483, 25, 1023, 7739, 315, 13172, 11, 1778, 439, 4121, 19826, 11, 32947, 11, 32594, 11, 9063, 11, 323, 12707, 439, 1057, 50270, 11383, 51936, 304, 5361, 3772, 11, 2225, 2930, 323, 27258, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 330, 1605, 7739, 315, 13172, 1359, 1778, 439, 8776, 3772, 320, 30742, 19826, 11, 32594, 11, 5099, 25390, 42852, 279, 15022, 18921, 304, 902, 50270, 21797, 1463, 872, 3772, 10374, 11, 74055, 279, 2883, 596, 13172, 13254, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217b130>, 'json_data': {'input': [[18902, 79483, 25, 8940, 69950, 11216, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 2883, 596, 330, 12792, 69950, 11216, 1359, 902, 374, 459, 3062, 13189, 315, 1202, 6020, 8446, 323, 63342, 4780, 13, 1102, 15151, 279, 2883, 596, 5603, 311, 50812, 22613, 311, 41777, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217b1c0>, 'json_data': {'input': [[18902, 79483, 25, 11443, 315, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3230, 1207, 22327, 389, 279, 2853, 315, 30466, 11, 902, 374, 264, 9200, 3158, 315, 6492, 369, 8830, 1268, 13254, 9659, 374, 40028, 555, 5938, 7194, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217b250>, 'json_data': {'input': [[18902, 79483, 25, 5560, 315, 11842, 12279, 84016, 19863, 29553, 8245, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 25394, 279, 330, 10464, 315, 11842, 12279, 84016, 19863, 29553, 8245, 1210, 1102, 15151, 264, 5357, 389, 6020, 17150, 430, 22429, 279, 6372, 315, 11667, 53838, 11, 39686, 279, 2883, 596, 5603, 311, 6020, 13122, 323, 5178, 16865, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217b2e0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 264, 6771, 315, 36962, 3857, 11, 902, 2942, 4861, 279, 2246, 323, 50729, 279, 5370, 14491, 323, 50829, 369, 8831, 10873, 11, 10695, 13016, 25539, 3230, 2038, 6288, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217b370>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 369, 420, 12143, 26, 433, 1253, 387, 264, 6002, 477, 10321, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217b400>, 'json_data': {'input': [[18902, 79483, 25, 1226, 4510, 584, 617, 3831, 6105, 2403, 1521, 8349, 323, 690, 10726, 13520, 77849, 13, 1226, 3136, 311, 47903, 449, 6918, 323, 1614, 40242, 304, 279, 549, 815, 2637, 279, 21283, 11, 323, 1023, 40242, 2212, 279, 1917, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 57876, 5195, 753, 12410, 304, 1202, 9232, 2403, 3276, 85971, 8349, 323, 66159, 279, 2883, 753, 23915, 449, 40242, 13, 1102, 27053, 279, 2883, 753, 59314, 30031, 304, 60499, 5897, 11774, 11, 91115, 279, 7057, 315, 5897, 9232, 304, 279, 2317, 315, 14529, 26969, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217b490>, 'json_data': {'input': [[18902, 79483, 25, 578, 17575, 369, 8070, 13426, 5764, 279, 2515, 315, 21137, 19705, 323, 4442, 311, 30600, 439, 1664, 439, 279, 5552, 4272, 2802, 323, 31086, 13, 763, 5369, 11, 584, 527, 3917, 311, 279, 19815, 24481, 315, 1057, 8070, 3827, 4780, 555, 279, 34483, 323, 1023, 3827, 11527, 902, 1253, 2105, 41300, 2403, 603, 13, 1226, 15870, 8720, 279, 29736, 315, 31959, 20124, 13239, 505, 1521, 69570, 323, 41300, 311, 8417, 279, 41228, 2826, 315, 1057, 17575, 369, 8070, 13426, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 9731, 279, 10430, 315, 8070, 3827, 19705, 11, 45293, 279, 6372, 315, 21137, 19705, 323, 9434, 69570, 389, 279, 2883, 596, 3827, 58165, 13, 1102, 95593, 279, 12939, 315, 17879, 3827, 8907, 323, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217b520>, 'json_data': {'input': [[18902, 79483, 25, 12220, 279, 20323, 8502, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 279, 2768, 11360, 220, 845, 9640, 323, 28454, 18306, 11, 11041, 477, 32372, 264, 1054, 11590, 220, 605, 65, 20, 12, 16, 11380, 27204, 863, 320, 300, 4613, 304, 5858, 220, 18058, 315, 48338, 328, 16222, 315, 279, 19224, 3298, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 2317, 315, 11360, 220, 845, 9808, 323, 28454, 889, 617, 18306, 11, 11041, 11, 477, 32372, 264, 330, 11590, 220, 605, 65, 20, 12, 16, 11380, 27204, 1, 2391, 279, 5300, 20323, 8502, 13, 1115, 2038, 374, 3062, 369, 8830, 4442, 304, 55465, 11380, 7640, 430, 1436, 5536, 5708, 5178, 323, 30693, 21063, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217b5b0>, 'json_data': {'input': [[18902, 79483, 25, 33332, 611, 50, 14, 328, 13508, 946, 393, 33929, 15836, 37902, 277, 393, 718, 2192, 611, 50, 14, 432, 9331, 386, 13, 58970, 835, 42893, 386, 13, 20388, 266, 611, 50, 14, 6912, 5484, 4534, 52, 12545, 507, 17773, 46, 17328, 3383, 648, 36992, 804, 507, 17773, 78, 1286, 611, 50, 14, 17067, 85510, 473, 13, 6395, 45, 8021, 43833, 473, 13, 44312, 611, 50, 14, 14311, 11010, 56, 19333, 691, 74529, 3320, 258, 611, 50, 14, 432, 13, 90665, 691, 6969, 9682, 57, 432, 13, 11826, 921, 1995, 19610, 611, 50, 14, 445, 13, 76275, 9503, 2716, 445, 13, 3842, 3234, 618, 611, 50, 14, 12076, 8912, 468, 13, 435, 643, 38, 2078, 715, 53666, 13, 29607, 468, 13, 38476, 16014, 13, 611, 50, 14, 76275, 445, 13, 473, 965, 7415, 56, 3842, 445, 13, 13370, 2136, 88, 611, 50, 14, 445, 77964, 26095, 30390, 5874, 611, 50, 14, 735, 13, 22813, 78148, 2871, 1428, 735, 13, 15504, 1443, 38315, 309, 611, 50, 14, 12076, 59631, 445, 13, 468, 44337, 17582, 445, 13, 6652, 11106, 14681, 18362, 20148, 323, 10783, 320, 32871, 18362, 20148, 8, 4900, 323, 14681, 33350, 20148, 26, 14681, 17961, 20148, 320, 32871, 17961, 20148, 8, 23270, 4900, 11, 36565, 9970, 323, 37409, 45344, 20148, 10783, 3623, 12, 83834, 323, 10783, 10783, 10783, 10783, 10783, 11, 16478, 3623, 12, 83834, 323, 10783, 10783, 10783, 2696, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 11725, 279, 33728, 315, 1401, 29509, 323, 28454, 315, 63897, 4953, 2637, 50096, 872, 42143, 315, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 13, 9062, 12223, 5764, 279, 836, 11, 2316, 11, 323, 2457, 11, 8405, 39242, 323, 11447, 369, 279, 2038, 13282, 2949, 279, 1934, 11, 902, 374, 7718, 369, 23331, 8907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217b640>, 'json_data': {'input': [[18902, 79483, 25, 3028, 323, 1023, 20207, 3424, 25, 3028, 323, 5552, 7016, 11, 2737, 279, 10013, 57852, 389, 3028, 304, 279, 14434, 11579, 8152, 323, 7665, 23362, 12299, 1380, 28536, 11, 902, 1253, 19678, 502, 28506, 61911, 11, 5376, 24305, 449, 5201, 311, 2262, 23700, 555, 3932, 477, 10815, 311, 505, 1057, 15771, 11, 477, 1893, 3424, 3268, 304, 3754, 29085, 430, 1436, 1397, 14507, 311, 3754, 13607, 323, 36717, 11, 902, 1253, 1121, 304, 1023, 23331, 6299, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 24400, 389, 7065, 323, 20207, 3424, 7016, 28987, 63897, 4953, 2637, 11951, 39686, 279, 10013, 57852, 389, 3028, 304, 279, 14434, 11579, 8152, 13, 1102, 35434, 1268, 1521, 7016, 1253, 33330, 502, 28506, 8670, 323, 24305, 369, 1217, 16581, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217b6d0>, 'json_data': {'input': [[18902, 79483, 25, 23139, 12477, 304, 93696, 44382, 198, 2014, 940, 1534, 73094, 25, 1115, 14836, 17738, 279, 7314, 315, 264, 3857, 21760, 389, 8515, 1511, 304, 26012, 7640, 11, 902, 374, 16996, 369, 8830, 1268, 279, 2883, 5691, 988, 10736, 369, 6650, 323, 14800, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217b760>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 25074, 8070, 400, 220, 16, 11, 18162, 400, 220, 17, 11, 11771, 400, 220, 18, 11, 24678, 25074, 20900, 7, 16, 8, 320, 18061, 8, 320, 18520, 8, 320, 14498, 8, 19620, 11667, 9473, 8895, 320, 9563, 705, 4272, 320, 8273, 8, 320, 21969, 8, 320, 16, 11, 13895, 8, 50809, 320, 9563, 8, 389, 11897, 34919, 11, 4272, 320, 5120, 8, 320, 17, 11, 20478, 8, 320, 16, 11, 12112, 8, 50809, 320, 9563, 8, 389, 25452, 34919, 11, 4272, 220, 717, 11, 13897, 320, 18, 11, 20325, 8, 220, 19695, 21304, 12718, 320, 16, 11, 23629, 8, 220, 26519, 220, 15574, 33620, 320, 9563, 8, 323, 53317, 505, 25452, 1749, 22538, 11, 4272, 220, 17153, 320, 17609, 8, 320, 23574, 8, 7089, 220, 17337, 220, 19162, 220, 15531, 7089, 8070, 320, 59857, 705, 4272, 400, 220, 717, 11, 11139, 400, 320, 18, 11, 20998, 8, 400, 220, 16, 11, 18517, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 31085, 315, 279, 6956, 315, 507, 40, 69248, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 6209, 20616, 1139, 279, 5370, 8336, 315, 8070, 323, 18512, 430, 7958, 279, 2883, 596, 8244, 6020, 5178, 11, 39686, 18845, 323, 5199, 4442, 927, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217b7f0>, 'json_data': {'input': [[18902, 79483, 25, 3277, 279, 47616, 1323, 68, 4058, 1392, 315, 6762, 907, 13519, 459, 53317, 6866, 11, 584, 3350, 1523, 279, 9341, 311, 1202, 1510, 6762, 907, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 16964, 279, 2883, 596, 5603, 311, 14975, 38974, 1392, 369, 22538, 994, 6762, 907, 41300, 13519, 264, 18174, 13, 1102, 374, 9959, 369, 8830, 1268, 63897, 4953, 13, 29972, 1202, 9341, 20136, 323, 56030, 4754, 18151, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217b880>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 279, 2316, 369, 279, 6771, 315, 36962, 3857, 315, 279, 2246, 13, 1102, 8779, 13016, 21546, 279, 5370, 14491, 323, 3673, 13282, 2949, 279, 220, 605, 16222, 26559, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217b910>, 'json_data': {'input': [[18902, 79483, 25, 18512, 23343, 311, 5897, 13146, 11, 2737, 3738, 35018, 323, 45704, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 5552, 311, 279, 1890, 3857, 439, 46613, 220, 17, 11, 21760, 389, 18512, 17791, 311, 5897, 13146, 11, 902, 649, 5536, 279, 2883, 596, 8244, 25605, 7194, 323, 11415, 4754, 58165, 477, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217b9a0>, 'json_data': {'input': [[18902, 79483, 25, 220, 2618, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 6002, 323, 1587, 539, 6782, 2262, 9959, 311, 8830, 279, 6020, 1934, 13, 1102, 17482, 439, 264, 25829, 477, 264, 5905, 11381, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217ba30>, 'json_data': {'input': [[18902, 79483, 25, 1226, 4510, 15592, 649, 11886, 1063, 315, 279, 37554, 59529, 11, 12624, 323, 15009, 11774, 315, 1057, 892, 13, 1789, 3187, 11, 304, 220, 2366, 15, 11, 5195, 18682, 70738, 753, 25737, 76636, 1887, 29056, 264, 220, 1135, 4771, 6418, 13128, 45842, 8815, 13, 8876, 1243, 11, 584, 617, 1825, 1355, 54492, 311, 279, 12624, 4029, 220, 1049, 3610, 315, 25737, 76636, 753, 13128, 14726, 902, 527, 1511, 311, 990, 389, 4395, 505, 69741, 502, 69263, 40300, 311, 44169, 9572, 5623, 18841, 323, 11469, 12466, 12, 12459, 56067, 13, 1666, 2500, 3187, 11, 15592, 649, 1101, 617, 264, 87435, 2515, 389, 10182, 5208, 555, 8405, 11190, 2038, 11, 52997, 10182, 14228, 4455, 11, 323, 74142, 10182, 1957, 13, 12362, 11084, 15592, 323, 3980, 437, 33514, 6492, 11, 5195, 8483, 706, 8040, 18197, 79482, 4211, 430, 649, 3493, 4216, 10163, 323, 1972, 7394, 39262, 2038, 311, 10977, 323, 7931, 627, 2014, 940, 1534, 73094, 25, 763, 420, 3857, 11, 279, 2246, 35434, 3230, 10507, 315, 15592, 8522, 11, 8104, 304, 12624, 323, 12434, 38697, 13, 1115, 46480, 63897, 596, 15507, 311, 1701, 15592, 369, 59529, 7720, 11, 67908, 1202, 3560, 304, 28118, 3728, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217bac0>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 24, 33, 13, 10271, 45613, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 330, 12236, 220, 24, 33, 13, 10271, 45613, 1359, 902, 374, 264, 3857, 315, 279, 9974, 1934, 1405, 279, 2883, 35434, 5217, 9959, 3649, 430, 656, 539, 5052, 1139, 1023, 3230, 11306, 13, 1102, 11383, 5764, 75992, 922, 11380, 28904, 11, 23331, 8907, 11, 323, 1023, 3769, 4455, 430, 1436, 7958, 15167, 6, 8830, 315, 279, 2883, 596, 7677, 323, 35186, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217bb50>, 'json_data': {'input': [[18902, 79483, 25, 6193, 279, 1667, 11, 1057, 28569, 18084, 617, 32762, 15592, 12849, 6089, 1139, 279, 3756, 323, 5918, 11704, 389, 1948, 315, 433, 13, 5751, 5652, 28569, 7766, 1051, 5918, 2212, 15592, 11, 12967, 279, 1888, 15592, 35915, 380, 535, 11704, 311, 1057, 3932, 11, 1778, 439, 7252, 12040, 11, 15852, 12865, 11, 323, 12632, 15852, 9939, 12351, 13, 1666, 584, 1427, 8469, 11, 584, 527, 30829, 1057, 8682, 323, 17669, 10565, 6067, 449, 502, 15592, 45904, 1217, 11704, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 10507, 315, 1268, 63897, 4953, 13, 706, 18751, 15592, 1139, 1202, 28569, 7766, 11, 67908, 3230, 15592, 4519, 6319, 311, 18885, 1217, 3217, 13, 1102, 18809, 2949, 279, 27927, 7057, 315, 2027, 19297, 323, 279, 3851, 315, 15592, 304, 12035, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217bbe0>, 'json_data': {'input': [[18902, 79483, 25, 220, 21, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 459, 33243, 3857, 11, 29820, 2697, 66251, 907, 389, 1202, 1866, 13, 1102, 1253, 13519, 264, 37666, 477, 29595, 4360, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217bc70>, 'json_data': {'input': [[18902, 79483, 25, 37543, 304, 279, 4500, 323, 1005, 315, 15592, 1253, 1121, 304, 43839, 1697, 11682, 323, 7319, 24305, 14675, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7057, 315, 43839, 1697, 323, 24305, 15635, 5938, 449, 279, 4500, 323, 1005, 315, 15592, 14645, 11, 6376, 279, 6566, 369, 264, 19662, 27501, 315, 1521, 4819, 304, 17876, 27855, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217bd00>, 'json_data': {'input': [[18902, 79483, 25, 59316, 685, 5764, 15055, 311, 387, 23183, 304, 8515, 11, 41853, 369, 439, 832, 7394, 91605, 9548, 35508, 7720, 11, 323, 328, 5002, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 279, 7138, 315, 3285, 685, 14507, 9932, 6931, 11, 26073, 430, 814, 2997, 2225, 8515, 45704, 323, 5708, 6108, 20448, 13, 1102, 11621, 2317, 311, 279, 6020, 25127, 315, 279, 32027, 14278, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217bd90>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 19392, 279, 9546, 315, 264, 2007, 315, 8970, 11, 902, 8779, 311, 21546, 279, 2246, 719, 1587, 539, 3493, 3230, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217be20>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 18, 59316, 685, 323, 25368, 320, 16, 8, 8410, 11746, 10884, 11443, 315, 30466, 400, 220, 21848, 400, 220, 21235, 400, 220, 16415, 8483, 323, 4500, 220, 24951, 220, 22440, 220, 16, 11, 21982, 16207, 323, 8661, 220, 22640, 220, 15574, 220, 23952, 3331, 323, 23541, 220, 12815, 220, 14590, 220, 14408, 10884, 10405, 400, 220, 17, 11, 25620, 400, 220, 16, 11, 24650, 400, 220, 18, 11, 25806, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 11944, 6020, 31085, 315, 3285, 685, 323, 5274, 3634, 4974, 10405, 555, 5699, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 5825, 20616, 1139, 1268, 1521, 7194, 527, 20816, 4028, 2204, 25605, 21282, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217beb0>, 'json_data': {'input': [[18902, 79483, 25, 1789, 3738, 60391, 650, 5484, 82, 11, 872, 12032, 527, 539, 2561, 311, 603, 323, 872, 66599, 656, 539, 617, 93370, 311, 603, 13, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 12032, 430, 649, 1193, 387, 1511, 311, 25760, 30255, 315, 1521, 650, 5484, 82, 1051, 400, 19, 13, 16, 7239, 323, 400, 19, 13, 24, 7239, 11, 15947, 11, 323, 279, 58165, 369, 902, 66599, 1193, 617, 93370, 311, 279, 650, 5484, 82, 1051, 400, 17, 13, 21, 7239, 323, 400, 17, 13, 20, 7239, 11, 15947, 13, 1226, 1253, 3136, 311, 3887, 14529, 7677, 315, 3738, 650, 5484, 82, 430, 527, 5343, 2949, 7089, 426, 1441, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7138, 315, 3738, 60391, 650, 5484, 82, 11, 11951, 27401, 430, 872, 12032, 527, 539, 2561, 311, 279, 2883, 311, 25760, 30255, 13, 1102, 5825, 20616, 1139, 6020, 5326, 323, 279, 6070, 315, 58165, 5938, 449, 1521, 15086, 11, 902, 374, 16996, 369, 38663, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6217bf40>, 'json_data': {'input': [[18902, 79483, 25, 220, 2421, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 2500, 3857, 1396, 5905, 2949, 279, 2246, 11, 11000, 19392, 264, 42271, 477, 264, 502, 23695, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebc040>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 19392, 430, 279, 2246, 18713, 1771, 311, 63897, 4953, 2637, 279, 2748, 2883, 315, 5195, 11, 323, 17482, 439, 459, 62469, 11381, 369, 279, 17876, 2262, 5552, 311, 279, 27767, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebc0d0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 7068, 264, 5199, 13651, 315, 1057, 30466, 505, 13172, 13, 80569, 10374, 555, 50270, 11, 264, 4814, 315, 8717, 11, 477, 502, 323, 6484, 14645, 430, 2565, 14058, 2930, 323, 5255, 7958, 1057, 5845, 311, 32187, 14058, 1436, 11682, 1057, 2626, 627, 2014, 940, 1534, 73094, 25, 1115, 1495, 25985, 988, 389, 279, 13172, 13254, 1646, 11, 82003, 279, 5199, 13651, 315, 13254, 14592, 505, 420, 2592, 13, 1102, 35434, 4754, 52227, 11, 1778, 439, 87386, 24999, 323, 3157, 4787, 11, 430, 1436, 5536, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebc160>, 'json_data': {'input': [[18902, 79483, 25, 15903, 11, 584, 527, 3917, 311, 42028, 7016, 323, 14640, 430, 62974, 3508, 11, 1268, 11, 323, 1234, 1148, 13463, 584, 649, 8481, 11, 1920, 323, 5255, 5371, 4443, 828, 11, 439, 1664, 439, 14529, 13627, 6299, 505, 15945, 87003, 11527, 5552, 311, 5425, 28117, 31711, 315, 4443, 828, 13, 578, 32939, 315, 5370, 828, 8481, 24717, 584, 5131, 17631, 5304, 8625, 3917, 311, 5897, 11, 23331, 11, 323, 5054, 26006, 304, 2225, 4606, 323, 279, 549, 815, 2637, 902, 1253, 1397, 603, 311, 10737, 1057, 6484, 28904, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 84140, 323, 5897, 11774, 5938, 449, 828, 8481, 323, 8863, 14640, 11, 8104, 304, 3177, 315, 42028, 7016, 304, 4606, 323, 279, 549, 815, 13, 1102, 22020, 279, 4754, 1205, 369, 279, 2883, 311, 10737, 1202, 828, 11850, 12659, 11, 19392, 279, 27927, 7057, 315, 23331, 8907, 323, 1202, 25127, 369, 279, 2883, 596, 7677, 323, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebc1f0>, 'json_data': {'input': [[18902, 79483, 25, 7837, 16976, 53076, 3083, 356, 2864, 1112, 24093, 220, 20, 30237, 21176, 48062, 31980, 9, 8927, 11079, 1905, 1372, 18610, 13, 29039, 362, 67777, 83751, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 279, 2316, 315, 279, 4876, 430, 11263, 11, 11951, 21760, 389, 279, 40944, 4330, 4771, 2860, 471, 315, 63897, 4953, 13, 3308, 362, 4279, 5708, 13, 1115, 2316, 8779, 13016, 3619, 1148, 828, 279, 4876, 690, 41468, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebc280>, 'json_data': {'input': [[18902, 79483, 25, 220, 1927, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 5905, 323, 1587, 539, 6782, 67749, 2262, 13, 11699, 6156, 7580, 374, 311, 7945, 304, 2246, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebc310>, 'json_data': {'input': [[18902, 79483, 25, 220, 1544, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 2500, 2199, 1396, 477, 3857, 11381, 11, 19392, 264, 9320, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebc3a0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 9865, 1109, 220, 717, 52446, 220, 717, 52446, 477, 33381, 10884, 81019, 1534, 81019, 1534, 81019, 1534, 14930, 5273, 25733, 14930, 5273, 25733, 14930, 5273, 25733, 10423, 27460, 400, 220, 1691, 11, 21602, 400, 320, 16, 11, 8759, 8, 400, 220, 1032, 11, 20596, 400, 320, 16, 11, 20945, 8, 400, 220, 1958, 11, 21144, 400, 320, 17, 11, 23785, 8, 36565, 11897, 34919, 220, 806, 11, 14261, 320, 14868, 8, 220, 868, 11, 6549, 320, 16, 11, 24130, 8, 220, 1627, 11, 17228, 320, 16, 11, 21776, 8, 48780, 46128, 323, 9513, 46128, 34919, 220, 22, 11, 23309, 320, 21535, 8, 220, 21, 11, 26281, 320, 23480, 8, 220, 975, 11, 25458, 320, 16, 11, 12754, 8, 10884, 400, 220, 2137, 11, 22992, 400, 320, 17, 11, 23273, 8, 400, 220, 1758, 11, 22369, 400, 320, 17, 11, 11711, 8, 400, 220, 2075, 11, 21851, 400, 320, 19, 11, 25659, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 12399, 2007, 315, 50204, 1534, 20192, 323, 18151, 389, 5370, 11306, 315, 11897, 34919, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 13, 1102, 374, 961, 315, 279, 27927, 3857, 25394, 279, 6762, 907, 22323, 315, 6020, 24198, 11, 11951, 45293, 279, 5178, 315, 3109, 27460, 11, 13166, 11897, 34919, 11, 323, 21515, 46128, 34919, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebc430>, 'json_data': {'input': [[18902, 79483, 25, 1226, 7068, 30466, 555, 24944, 9959, 11, 2853, 53421, 2930, 13172, 26, 9624, 6108, 10105, 430, 3493, 20790, 6444, 315, 682, 12562, 449, 14054, 323, 5452, 3600, 439, 1664, 439, 10758, 323, 20632, 7526, 26, 6763, 315, 1023, 3956, 323, 3600, 11, 1778, 439, 10721, 323, 304, 20624, 24393, 11, 323, 7766, 26, 323, 12718, 4036, 369, 11761, 15493, 6108, 3956, 13, 1789, 5217, 2038, 389, 1268, 584, 15641, 13254, 11, 1518, 7181, 220, 16, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 6156, 8336, 315, 13254, 369, 63897, 4953, 2637, 39686, 1202, 17226, 2626, 1646, 430, 5764, 2930, 13172, 11, 9624, 10105, 11, 2027, 6763, 11, 323, 15493, 3600, 13, 1102, 17482, 439, 459, 17219, 311, 279, 6020, 17150, 323, 13254, 18324, 10396, 430, 690, 387, 25985, 660, 389, 304, 279, 2246, 11, 11951, 22797, 13016, 311, 9959, 14491, 369, 4726, 3649, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebc4c0>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 1057, 2853, 315, 30466, 11, 3495, 323, 4500, 320, 49, 33465, 8, 18512, 11, 6763, 323, 8661, 18512, 11, 323, 4689, 323, 23541, 18512, 1253, 5376, 304, 3392, 323, 5255, 1253, 5376, 439, 264, 11668, 315, 30466, 323, 1253, 387, 11754, 555, 264, 1396, 315, 9547, 280, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebc550>, 'json_data': {'input': [[18902, 79483, 25, 6969, 71894, 2006, 3651, 12244, 1929, 793, 16837, 50, 4874, 63458, 38225, 6328, 63458, 1753, 3651, 25338, 27267, 6340, 12244, 34, 38658, 4622, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 28118, 330, 11569, 304, 323, 4185, 351, 58875, 449, 8785, 1821, 389, 45344, 323, 17961, 78354, 1210, 1115, 3857, 374, 9959, 369, 15167, 323, 39210, 439, 433, 35434, 904, 5199, 4819, 23926, 449, 24043, 12659, 477, 9434, 6264, 12170, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebc5e0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 701, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebc670>, 'json_data': {'input': [[18902, 79483, 25, 220, 1272, 627, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 3857, 1396, 6002, 323, 1587, 539, 3493, 66251, 2038, 9959, 311, 279, 2262, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebc700>, 'json_data': {'input': [[18902, 79483, 25, 18925, 526, 3808, 449, 29911, 21304, 56875, 343, 811, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3857, 4342, 11, 33018, 279, 8712, 315, 17517, 430, 21736, 5361, 5178, 30255, 13, 1102, 15151, 264, 5357, 389, 279, 84140, 315, 13254, 18324, 304, 15082, 1405, 5361, 3600, 477, 3956, 527, 3984, 1234, 264, 3254, 5226, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebc790>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 5217, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebc820>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 3308, 362, 323, 3308, 356, 13551, 2109, 73350, 323, 28520, 22311, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 2007, 430, 94594, 279, 13551, 315, 3308, 362, 323, 3308, 356, 5708, 2109, 73350, 555, 63897, 4953, 13, 1115, 828, 374, 7718, 369, 15167, 323, 31499, 889, 1390, 311, 3839, 279, 2883, 596, 4430, 2109, 13173, 5820, 927, 892, 323, 8720, 1202, 5536, 389, 4430, 907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebc8b0>, 'json_data': {'input': [[18902, 79483, 25, 7089, 426, 1441, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 11663, 426, 1441, 1, 10449, 11, 902, 5764, 63897, 596, 5370, 22772, 323, 2536, 24357, 9873, 13, 1102, 15151, 264, 6541, 311, 25394, 420, 2753, 21349, 719, 13893, 1579, 2427, 19632, 3158, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebc940>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1253, 3217, 4868, 4819, 11, 3508, 4245, 311, 9548, 477, 55465, 1493, 477, 8811, 90377, 685, 11, 1887, 6103, 11, 477, 52227, 304, 1057, 477, 1023, 9875, 529, 6067, 13, 6104, 584, 1253, 539, 8417, 1063, 315, 1521, 4819, 311, 387, 3769, 520, 279, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 13336, 315, 4868, 4819, 40986, 505, 5370, 8336, 11, 2737, 9548, 6103, 323, 1887, 52227, 13, 1102, 66159, 279, 17250, 304, 25607, 323, 7763, 7922, 1521, 4819, 11, 31799, 1124, 311, 27927, 10742, 922, 5897, 323, 43839, 1697, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebc9d0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 10862, 1139, 10565, 26120, 20038, 15871, 369, 828, 19169, 11, 4363, 11, 323, 19672, 6957, 279, 1917, 449, 26120, 18852, 1367, 6322, 1990, 220, 2366, 19, 323, 220, 11056, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 459, 24131, 315, 279, 2883, 596, 10565, 26120, 20038, 11, 2737, 279, 4595, 315, 6012, 82280, 323, 279, 8250, 315, 1521, 20038, 11, 902, 374, 9959, 369, 8830, 279, 2883, 753, 42356, 323, 6020, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebca60>, 'json_data': {'input': [[18902, 79483, 25, 3308, 362, 11, 3308, 426, 11, 3308, 356, 12937, 323, 24086, 55182, 32600, 18880, 80625, 7913, 7089, 67963, 10608, 2692, 10884, 12937, 17075, 529, 45285, 26868, 33620, 320, 40938, 8, 469, 15202, 58588, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 15, 220, 1032, 11, 18048, 400, 220, 2970, 11, 15633, 400, 220, 23736, 400, 220, 9892, 11, 10841, 400, 220, 9716, 11, 21239, 12937, 11136, 220, 9591, 220, 717, 220, 15, 220, 15, 220, 717, 12937, 6108, 20448, 20900, 220, 15, 220, 868, 11, 23033, 220, 15, 220, 15, 220, 868, 11, 23033, 15545, 81612, 5552, 311, 28705, 287, 315, 22486, 5708, 8316, 323, 1023, 220, 15, 320, 605, 11, 15451, 8, 220, 15, 220, 15, 320, 605, 11, 15451, 8, 3402, 75202, 315, 5708, 320, 18501, 8, 320, 17, 11, 16723, 8, 220, 15, 320, 2618, 11, 15862, 8, 320, 1135, 11, 16590, 8, 13618, 315, 2802, 304, 60391, 15086, 220, 15, 220, 12226, 220, 15, 220, 15, 220, 12226, 9558, 8070, 220, 15, 220, 15, 220, 15, 220, 4767, 11, 13103, 220, 4767, 11, 13103, 7089, 16195, 8070, 320, 9563, 8, 220, 15, 220, 15, 320, 17, 11, 4146, 8, 220, 15, 320, 17, 11, 4146, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 16, 220, 1032, 11, 12754, 220, 5547, 11, 24472, 320, 16, 11, 22801, 8, 220, 7529, 11, 20339, 220, 13860, 11, 22276, 12937, 11136, 220, 10148, 220, 23, 220, 15, 220, 15, 220, 23, 12937, 6108, 20448, 20900, 220, 15, 220, 777, 11, 18415, 220, 15, 220, 15, 220, 777, 11, 18415, 15545, 81612, 5552, 311, 28705, 287, 315, 22486, 5708, 8316, 323, 1023, 220, 15, 320, 24, 11, 23952, 8, 220, 15, 320, 16, 8, 320, 24, 11, 23532, 8, 3402, 75202, 315, 5708, 320, 17252, 8, 320, 18, 11, 7507, 8, 220, 15, 320, 2131, 11, 24110, 8, 320, 2946, 11, 17408, 8, 13618, 315, 2802, 304, 60391, 15086, 220, 15, 220, 1758, 220, 15, 220, 15, 220, 1758, 9558, 8070, 220, 15, 220, 15, 220, 15, 220, 2946, 11, 24425, 220, 2946, 11, 24425, 7089, 16195, 8070, 320, 9563, 8, 220, 15, 220, 15, 320, 20, 11, 19068, 8, 220, 15, 320, 20, 11, 19068, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 717, 11, 26537, 220, 2614, 11, 10336, 320, 22, 11, 21006, 8, 220, 6280, 11, 21789, 220, 4146, 11, 8929, 12937, 11136, 220, 10125, 220, 15, 220, 15, 220, 15, 220, 15, 12937, 6108, 20448, 20900, 220, 15, 220, 1313, 11, 22915, 220, 15, 220, 15, 220, 1313, 11, 22915, 15545, 81612, 5552, 311, 28705, 287, 315, 22486, 5708, 8316, 323, 1023, 220, 15, 320, 605, 11, 10513, 8, 220, 15, 220, 24, 320, 605, 11, 9992, 8, 3402, 75202, 315, 5708, 320, 21458, 8, 320, 19, 11, 20478, 8, 220, 15, 320, 2970, 11, 4364, 8, 320, 5538, 11, 10336, 8, 9558, 8070, 220, 15, 220, 15, 220, 15, 220, 5958, 11, 25808, 220, 5958, 11, 25808, 7089, 16195, 8070, 320, 9563, 8, 220, 15, 220, 15, 220, 18, 11, 679, 220, 15, 220, 18, 11, 679, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 220, 717, 11, 16551, 400, 220, 4767, 11, 22467, 400, 320, 19, 11, 16496, 8, 400, 220, 11483, 11, 14125, 400, 220, 16085, 11, 19867, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 11944, 2038, 9002, 279, 5708, 17075, 6, 25452, 315, 63897, 4953, 13, 927, 3892, 1667, 11, 2737, 5708, 67599, 11, 5708, 6108, 20448, 11, 3827, 81612, 11, 5708, 2109, 75202, 11, 323, 16195, 8070, 11, 902, 527, 7718, 369, 8830, 25452, 4442, 323, 63342, 907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebcaf0>, 'json_data': {'input': [[18902, 79483, 25, 2314, 8630, 555, 1817, 1906, 3508, 279, 23702, 519, 706, 13019, 264, 1934, 389, 323, 1651, 65078, 311, 1202, 6373, 596, 15813, 315, 279, 27375, 315, 1202, 5419, 2585, 927, 6020, 13122, 1234, 11360, 220, 7507, 1921, 8, 315, 279, 13951, 6993, 288, 24540, 87, 3258, 3298, 320, 868, 549, 815, 732, 13, 24430, 17, 1921, 595, 555, 279, 9879, 586, 24043, 7626, 430, 10235, 477, 11136, 1202, 25261, 1934, 13, 26182, 240, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18713, 1771, 311, 279, 23702, 519, 596, 5419, 11835, 927, 6020, 13122, 11, 11951, 1234, 11360, 220, 7507, 1921, 8, 315, 279, 13951, 6993, 288, 24540, 87, 3258, 3298, 13, 1102, 15151, 430, 459, 9434, 93596, 7626, 706, 32448, 279, 27375, 315, 1521, 5419, 11835, 11, 902, 374, 264, 16996, 3777, 315, 279, 2883, 596, 6020, 17025, 323, 28330, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebcb80>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3956, 323, 3600, 617, 2586, 264, 1317, 1648, 2533, 279, 2883, 574, 18538, 810, 1109, 220, 914, 1667, 4227, 13, 6104, 5195, 7694, 3940, 439, 264, 1648, 311, 1505, 3566, 6959, 11, 17057, 1139, 5899, 6437, 7902, 11, 584, 617, 16625, 11156, 83787, 323, 2027, 46045, 430, 617, 24411, 5195, 7694, 1139, 264, 8915, 11, 80149, 58697, 3217, 13, 1226, 1176, 17626, 505, 8776, 17963, 33957, 1139, 6505, 3566, 2778, 11, 3339, 433, 8831, 311, 21546, 389, 9333, 15670, 13, 1666, 502, 4595, 315, 2262, 58646, 389, 279, 7757, 11, 26581, 7694, 1903, 433, 3284, 311, 2778, 5361, 2262, 4595, 11, 1093, 3754, 11, 5448, 11, 6946, 11, 323, 810, 11, 311, 6493, 9257, 11, 9959, 3135, 13, 578, 17219, 315, 502, 2778, 13531, 1385, 11, 1093, 7899, 323, 9302, 2778, 11, 1903, 433, 8831, 369, 1274, 311, 3237, 872, 41328, 304, 5933, 323, 42779, 5627, 13, 1226, 3952, 430, 264, 3094, 4726, 449, 75837, 2974, 11, 902, 15714, 1274, 2778, 449, 1495, 323, 5448, 520, 279, 1890, 892, 13, 20902, 4221, 4211, 1093, 426, 3481, 323, 22950, 275, 1091, 73534, 27972, 11, 477, 386, 2864, 82, 11, 617, 1903, 433, 3284, 311, 3237, 810, 5933, 4221, 20126, 11, 53108, 18899, 279, 4367, 315, 3135, 13, 9062, 50925, 706, 1903, 433, 8831, 323, 810, 5933, 369, 1274, 311, 1505, 1148, 814, 527, 3411, 369, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 25985, 988, 389, 279, 15740, 315, 5195, 7694, 505, 1202, 54529, 311, 1202, 1510, 1614, 11, 39686, 5199, 83787, 304, 5557, 323, 2027, 19297, 13, 1115, 2317, 374, 3062, 369, 8830, 279, 2883, 596, 14529, 15507, 311, 18899, 1217, 3217, 323, 279, 4500, 315, 502, 2778, 13531, 1385, 11, 902, 374, 89328, 311, 63897, 596, 9764, 439, 264, 13312, 9721, 859, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebcc10>, 'json_data': {'input': [[18902, 79483, 25, 46551, 63897, 753, 17961, 18591, 198, 2014, 940, 1534, 73094, 25, 1115, 2316, 40019, 279, 3857, 430, 15100, 63897, 596, 6020, 3135, 11, 19392, 430, 279, 2768, 2262, 690, 82845, 1139, 279, 2883, 596, 5178, 17150, 323, 6020, 2890, 304, 7872, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebcca0>, 'json_data': {'input': [[18902, 79483, 25, 220, 6365, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 2199, 1396, 320, 6365, 8, 505, 279, 6771, 315, 36962, 11, 10695, 311, 10519, 279, 2246, 596, 34512, 1697, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebcd30>, 'json_data': {'input': [[18902, 79483, 25, 4476, 4500, 7194, 1101, 2997, 7194, 311, 2274, 3241, 311, 387, 1511, 21742, 311, 3449, 5419, 3966, 323, 9624, 6108, 8522, 1511, 311, 6493, 1057, 3600, 13, 1226, 53825, 4500, 7194, 5552, 311, 1521, 3241, 8522, 3131, 279, 33269, 2447, 6566, 374, 4686, 323, 433, 374, 35977, 430, 279, 2447, 690, 387, 8308, 323, 279, 3241, 690, 387, 1511, 311, 2804, 279, 734, 10825, 13, 64141, 98421, 369, 11469, 1778, 3241, 8522, 1051, 539, 3769, 369, 279, 18852, 10666, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 4595, 315, 3241, 4500, 7194, 430, 63897, 4953, 13, 3709, 1759, 11, 11951, 1884, 369, 5419, 1005, 323, 9624, 6108, 8522, 13, 1102, 16964, 994, 1521, 7194, 1253, 387, 98421, 11, 91115, 279, 24043, 4947, 9002, 3241, 4500, 13, 9086, 46613, 220, 16, 11, 420, 374, 961, 315, 279, 24043, 10396, 3857, 11, 8405, 32373, 389, 1268, 5370, 3241, 4500, 18512, 527, 12020, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebcdc0>, 'json_data': {'input': [[18902, 79483, 25, 2467, 4550, 3135, 304, 904, 315, 1521, 43986, 1253, 2997, 23146, 315, 33384, 26186, 11, 34348, 53817, 477, 28506, 20038, 320, 333, 21746, 527, 2561, 520, 682, 705, 477, 10373, 33994, 1057, 5845, 311, 4662, 1057, 3956, 323, 3600, 304, 279, 549, 815, 13, 477, 18403, 11, 2737, 555, 27252, 603, 505, 10209, 3738, 4519, 11, 93180, 11, 3956, 11, 477, 3600, 304, 3738, 56043, 13, 2435, 1253, 1101, 5353, 603, 311, 2349, 1057, 2626, 12659, 304, 5627, 430, 1436, 1121, 304, 264, 4814, 315, 30466, 369, 603, 323, 6062, 11682, 1057, 2626, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 31959, 20124, 430, 649, 31889, 505, 20207, 3424, 43986, 11, 2737, 6020, 31086, 323, 25605, 17294, 13, 1102, 34161, 311, 279, 3766, 27855, 555, 94012, 279, 16296, 315, 39725, 11, 902, 1253, 4541, 20227, 4442, 304, 2626, 12659, 323, 5536, 13254, 9659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebce50>, 'json_data': {'input': [[18902, 79483, 25, 38493, 48698, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 8712, 315, 13254, 18324, 11, 8405, 279, 89328, 16565, 430, 8641, 1268, 63897, 4953, 13, 7576, 323, 6821, 1202, 13254, 304, 18859, 449, 24043, 10886, 13, 1102, 374, 961, 315, 279, 27927, 6020, 13122, 3857, 79774, 5199, 24043, 10396, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebcee0>, 'json_data': {'input': [[18902, 79483, 25, 23139, 11964, 4023, 812, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 459, 17219, 311, 279, 3857, 389, 23139, 11964, 4023, 812, 13, 1102, 15151, 430, 279, 2768, 1495, 690, 3493, 3649, 389, 1268, 279, 2883, 29972, 1202, 13937, 8515, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebcf70>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 22, 11, 420, 12143, 4461, 17482, 439, 264, 34512, 1697, 2449, 304, 279, 2246, 11, 19392, 279, 2883, 753, 836, 323, 1587, 539, 6782, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebd000>, 'json_data': {'input': [[18902, 79483, 25, 502, 2027, 323, 2532, 38175, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 330, 943, 2027, 323, 2532, 38175, 1, 439, 264, 8331, 74055, 13254, 65649, 13, 1102, 15151, 430, 19297, 323, 279, 17219, 315, 502, 33935, 527, 9200, 311, 63897, 596, 6650, 8446, 323, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebd090>, 'json_data': {'input': [[18902, 79483, 25, 5751, 1274, 527, 9200, 369, 1057, 8738, 2450, 11, 779, 584, 990, 2653, 311, 1893, 459, 4676, 1405, 8420, 649, 617, 50698, 31133, 11, 323, 387, 6380, 11, 9498, 11, 323, 27331, 13, 1226, 3085, 5064, 69475, 7720, 323, 7620, 311, 1935, 2512, 315, 279, 17226, 3966, 315, 1057, 8420, 323, 872, 8689, 11, 2737, 10708, 369, 7076, 6650, 323, 4500, 11, 5070, 311, 1862, 872, 6020, 2890, 11, 323, 2680, 311, 9250, 18985, 11709, 13, 5751, 15022, 20448, 7620, 1520, 603, 311, 9504, 323, 14389, 1948, 11426, 11, 323, 584, 690, 3136, 311, 2793, 304, 32959, 23944, 1274, 311, 11156, 323, 2536, 12, 73237, 13073, 11, 323, 42093, 1124, 1664, 13, 1226, 3493, 264, 8205, 315, 1579, 4367, 4967, 323, 1862, 311, 20258, 311, 1977, 323, 20259, 872, 17357, 12, 4235, 81, 8764, 505, 14307, 369, 502, 20258, 11, 311, 6975, 5070, 430, 1520, 1124, 3493, 11302, 323, 10299, 5178, 11, 311, 24826, 323, 3927, 1862, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 50729, 279, 5370, 9548, 7720, 323, 7620, 430, 5195, 6209, 311, 1862, 1202, 32027, 13, 1102, 22020, 279, 2883, 596, 15507, 311, 86644, 264, 9498, 323, 27331, 990, 4676, 11, 902, 374, 16996, 369, 51647, 323, 51110, 11005, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebd120>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 11, 63897, 4953, 2637, 1578, 439, 264, 4342, 11, 31692, 279, 13166, 2317, 369, 279, 6020, 2038, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebd1b0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 904, 1495, 13, 1102, 4461, 17482, 439, 264, 37666, 477, 24693, 2449, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebd240>, 'json_data': {'input': [[18902, 79483, 25, 5751, 17517, 449, 6444, 1253, 2997, 5361, 5178, 30255, 13, 1789, 1778, 28904, 11, 584, 22864, 30466, 311, 1855, 5178, 29672, 3196, 389, 1202, 8844, 44488, 11486, 3430, 13, 1226, 8965, 8417, 44488, 11486, 7729, 3196, 389, 279, 7729, 11684, 311, 6444, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 1268, 63897, 5691, 988, 30466, 311, 2204, 5178, 30255, 2949, 17517, 13, 1102, 66159, 279, 12939, 315, 44488, 11486, 7729, 304, 13254, 18324, 11, 902, 374, 16996, 369, 30357, 13122, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebd2d0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 52678, 315, 4741, 31348, 12518, 11, 19392, 430, 279, 2768, 14491, 690, 82845, 19662, 1139, 279, 3230, 9547, 28987, 279, 2883, 596, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebd360>, 'json_data': {'input': [[18902, 79483, 25, 37902, 277, 393, 718, 2192, 198, 2014, 940, 1534, 73094, 25, 37902, 277, 393, 718, 2192]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebd3f0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 72034, 11, 902, 5764, 41455, 369, 9624, 6108, 10758, 323, 20632, 7526, 369, 40919, 11, 1778, 439, 17263, 11, 62046, 11, 61791, 11, 16542, 11, 323, 26911, 11, 449, 18751, 4519, 1093, 423, 14127, 15592, 304, 5195, 72034, 26, 323, 198, 2014, 940, 1534, 73094, 25, 82117, 505, 46613, 220, 24, 11, 420, 12143, 3649, 30466, 505, 5195, 72034, 11, 902, 5764, 41455, 369, 20632, 7526, 13, 1115, 11621, 2500, 6324, 311, 279, 8830, 315, 5195, 15161, 30466, 11, 94012, 279, 58321, 315, 3600, 9076, 311, 20790, 6444, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebd480>, 'json_data': {'input': [[18902, 79483, 25, 25074, 20359, 32388, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 7314, 315, 264, 10430, 389, 2802, 4478, 5326, 11, 19392, 264, 6541, 304, 5357, 505, 11667, 15635, 311, 279, 15635, 5938, 449, 65649, 304, 2802, 7969, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebd510>, 'json_data': {'input': [[18902, 79483, 25, 578, 2860, 13240, 6762, 907, 315, 279, 19310, 8554, 574, 13489, 400, 24, 13, 24, 7239, 323, 400, 605, 13, 18, 7239, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 6790, 220, 2148, 11, 220, 2366, 18, 11, 15947, 13, 578, 6762, 907, 574, 11075, 3196, 389, 40635, 3157, 7729, 315, 20086, 24198, 304, 2753, 4642, 11987, 323, 374, 71974, 28178, 439, 9580, 220, 17, 304, 279, 6762, 907, 30022, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 13240, 6762, 907, 315, 279, 19310, 8554, 11, 26073, 1268, 433, 374, 11075, 323, 71974, 2949, 279, 6762, 907, 30022, 13, 1115, 2038, 374, 5199, 369, 8830, 279, 3157, 21063, 315, 279, 2883, 753, 11897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebd5a0>, 'json_data': {'input': [[18902, 79483, 25, 15771, 11, 902, 15871, 2997, 30466, 505, 5195, 7199, 505, 279, 6763, 315, 10721, 323, 304, 20624, 24393, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 279, 15771, 13254, 11, 8104, 21760, 389, 5195, 7199, 323, 1202, 3560, 304, 24038, 8070, 1555, 917, 6763, 323, 304, 20624, 24393, 11, 4726, 45293, 279, 2883, 753, 13254, 8336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebd630>, 'json_data': {'input': [[18902, 79483, 25, 1050, 46469, 323, 3206, 295, 2065, 55290, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 14836, 430, 40019, 279, 3857, 21760, 389, 30466, 323, 58191, 2065, 17150, 11, 19392, 264, 6541, 311, 264, 810, 11944, 24481, 315, 6020, 5178, 323, 13254, 9659, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebd6c0>, 'json_data': {'input': [[18902, 79483, 25, 1952, 6841, 220, 966, 11, 220, 679, 15, 11, 279, 21283, 596, 94466, 3331, 369, 42321, 9107, 459, 8990, 1139, 5370, 3276, 85971, 14228, 21859, 2403, 603, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15407, 459, 8990, 9107, 555, 279, 7665, 9849, 320, 7650, 8, 304, 220, 679, 15, 9002, 3276, 85971, 21859, 2403, 279, 2883, 13, 1102, 5825, 13970, 2317, 311, 279, 14529, 5897, 4819, 279, 2883, 12580, 304, 279, 22651, 315, 10937, 2383, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebd750>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 1587, 539, 6782, 904, 1495, 323, 9093, 37856, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebd7e0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebd870>, 'json_data': {'input': [[18902, 79483, 25, 64141, 323, 92523, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 25394, 7194, 323, 18512, 11, 902, 374, 16996, 369, 8830, 279, 6020, 6070, 323, 25605, 15374, 315, 63897, 4953, 13, 1102, 7437, 279, 6566, 369, 264, 11944, 24481, 315, 5370, 4595, 315, 7194, 52872, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebd900>, 'json_data': {'input': [[18902, 79483, 25, 323, 15055, 7318, 311, 5195, 8304, 8717, 527, 12715, 439, 2853, 315, 30466, 13, 11208, 584, 527, 279, 12717, 11, 584, 2585, 279, 13172, 15808, 1603, 433, 374, 23217, 311, 1057, 6444, 13, 5751, 2585, 374, 69457, 555, 1057, 13612, 5845, 311, 58191, 553, 279, 13172, 15808, 1603, 433, 374, 23217, 311, 1057, 6444, 323, 374, 4726, 7396, 555, 603, 1694, 15871, 8647, 311, 1057, 6444, 323, 3515, 264, 2237, 315, 32022, 304, 31692, 21913, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 5825, 5217, 7872, 389, 1268, 63897, 11835, 13172, 15808, 323, 58191, 4861, 433, 1603, 51051, 433, 311, 6444, 13, 1102, 50729, 872, 28423, 323, 21913, 32022, 11, 902, 527, 9200, 369, 8830, 872, 13254, 18324, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebd990>, 'json_data': {'input': [[18902, 79483, 25, 40741, 16195, 549, 815, 13, 1614, 323, 7362, 12625, 7016, 11, 902, 3041, 502, 828, 12625, 3268, 311, 872, 20081, 11062, 320, 16564, 11, 304, 7188, 11, 264, 879, 1314, 315, 1957, 304, 279, 1567, 315, 264, 828, 31471, 13239, 505, 1057, 8060, 311, 4305, 323, 10519, 13579, 4868, 16346, 323, 12659, 8, 323, 33330, 5199, 30255, 389, 27319, 323, 37686, 315, 11761, 828, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 549, 815, 13, 1614, 323, 7362, 12625, 7016, 430, 13500, 502, 3268, 311, 11062, 11, 8104, 21760, 389, 7188, 596, 2383, 430, 6276, 879, 6299, 304, 828, 31471, 5157, 13, 1102, 22020, 279, 5199, 30255, 27070, 389, 9873, 11, 21583, 1203, 311, 279, 27927, 7057, 315, 23331, 8907, 323, 1202, 5536, 389, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebda20>, 'json_data': {'input': [[18902, 79483, 25, 3842, 13370, 2136, 88, 11, 16478, 315, 279, 8925, 315, 46085, 11, 1555, 279, 3842, 445, 13, 13370, 2136, 88, 612, 41184, 622, 13, 13370, 2136, 88, 10315, 511, 481, 17236, 11, 18306, 264, 502, 11380, 3197, 389, 6841, 220, 16, 11, 220, 2366, 18, 320, 4291, 279, 1176, 6696, 1234, 279, 502, 3197, 13847, 369, 7552, 220, 717, 11, 220, 2366, 19, 570, 578, 11380, 3197, 690, 387, 7524, 3156, 5587, 220, 717, 11, 220, 2366, 20, 311, 4662, 220, 21, 11, 23888, 13551, 315, 3308, 356, 18880, 12937, 323, 220, 806, 11, 17014, 13551, 315, 3308, 362, 7874, 12937, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 35508, 315, 264, 11380, 3197, 555, 9489, 386, 1894, 11, 264, 4846, 4562, 315, 279, 8925, 315, 46085, 13, 578, 3649, 922, 279, 35508, 2457, 323, 279, 1396, 315, 13551, 6532, 527, 5199, 369, 8830, 4442, 304, 55465, 58348, 323, 4754, 3157, 25127, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebdab0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 9865, 1109, 220, 717, 52446, 220, 717, 52446, 477, 33381, 10884, 14930, 5273, 81019, 1534, 25733, 14930, 5273, 81019, 1534, 25733, 14930, 5273, 81019, 1534, 25733, 10423, 27460, 400, 220, 16, 11, 10961, 400, 320, 1313, 8, 400, 220, 1032, 11, 24777, 400, 320, 23480, 8, 400, 220, 868, 11, 17228, 400, 320, 25136, 8, 36565, 11897, 34919, 220, 24920, 320, 20, 8, 220, 868, 11, 18775, 320, 20128, 8, 220, 845, 11, 6393, 320, 24574, 8, 48780, 46128, 323, 9513, 46128, 34919, 220, 17, 11, 24599, 320, 1627, 8, 220, 22, 11, 24487, 320, 19944, 8, 220, 605, 11, 24963, 320, 24307, 8, 10884, 400, 220, 20, 11, 14261, 400, 320, 4331, 8, 400, 220, 1806, 11, 5245, 400, 320, 16, 11, 20907, 8, 400, 220, 2983, 11, 18058, 400, 320, 16, 11, 21056, 340, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 16, 11, 420, 12143, 5825, 459, 6177, 12399, 2007, 315, 50204, 1534, 20192, 323, 18151, 389, 11897, 34919, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 42852, 4442, 927, 279, 1060, 13, 1115, 2038, 374, 16996, 369, 8830, 279, 6020, 5178, 315, 63897, 4953, 14639, 82, 9341, 20136, 323, 374, 961, 315, 279, 3857, 389, 6762, 907, 22323, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebdb40>, 'json_data': {'input': [[18902, 79483, 25, 11156, 14054, 11, 902, 17610, 315, 1057, 22538, 304, 16692, 323, 4009, 7241, 369, 25213, 11, 5942, 11, 323, 29130, 8670, 369, 14529, 2626, 7640, 11, 2737, 15592, 11, 320, 17840, 3210, 14183, 311, 439, 1057, 2038, 5557, 12032, 8, 323, 828, 4219, 4363, 323, 4857, 8246, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 11914, 24400, 389, 330, 73237, 14054, 1359, 38938, 279, 4595, 315, 12032, 63897, 374, 26012, 304, 11, 1778, 439, 16692, 323, 29130, 7241, 13, 1115, 2317, 374, 16996, 369, 8830, 279, 2883, 596, 30116, 17357, 323, 3938, 62792, 11, 5423, 9002, 15592, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebdbd0>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 1057, 2853, 315, 30466, 11, 3495, 323, 4500, 320, 49, 33465, 8, 18512, 11, 6763, 323, 8661, 18512, 11, 323, 4689, 323, 23541, 18512, 1253, 5376, 304, 3392, 323, 5255, 1253, 5376, 439, 264, 11668, 315, 30466, 323, 1253, 387, 11754, 555, 264, 1396, 315, 9547, 280, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebdc60>, 'json_data': {'input': [[18902, 79483, 25, 320, 40, 2056, 815, 13, 75952, 59776, 2360, 29275, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 2440, 369, 279, 469, 691, 11, 20064, 7922, 1202, 7580, 323, 41961, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebdcf0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1052, 8070, 3827, 4780, 304, 279, 549, 815, 13, 6918, 29101, 323, 304, 1690, 1614, 323, 7362, 56043, 13, 5751, 1403, 3682, 3827, 56043, 527, 279, 549, 815, 13, 6918, 323, 14990, 13, 1226, 527, 3917, 311, 279, 19815, 24481, 315, 1057, 8070, 3827, 4780, 555, 279, 34483, 323, 1023, 3827, 11527, 13, 578, 34483, 374, 5131, 38936, 1057, 220, 679, 21, 1555, 220, 2366, 16, 3827, 4780, 13, 1226, 617, 1101, 4036, 3827, 41300, 304, 5361, 7362, 56043, 43525, 8481, 21913, 34074, 477, 15690, 21967, 13, 1226, 3136, 311, 10726, 1778, 8349, 439, 10666, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 2883, 753, 3827, 26559, 12659, 323, 14529, 69570, 555, 3827, 11527, 11, 8104, 9002, 1202, 3682, 56043, 13, 1102, 15151, 279, 23965, 315, 279, 2883, 596, 3827, 6671, 323, 279, 4754, 369, 34074, 3196, 389, 3827, 11447, 41300, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebdd80>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 9558, 8070, 400, 220, 4767, 11, 13103, 400, 220, 2946, 11, 24425, 400, 220, 5958, 11, 25808, 7089, 16195, 8070, 320, 9563, 1680, 10604, 304, 7362, 11667, 14807, 28174, 320, 16, 11, 20502, 8, 320, 16, 11, 25192, 8, 220, 24939, 16528, 15548, 58637, 22538, 25, 10604, 304, 4272, 50204, 1534, 20192, 320, 9563, 288, 8, 320, 16, 11, 13384, 8, 320, 19, 11, 13104, 8, 220, 16, 11, 17451, 9865, 25, 312, 66481, 28174, 369, 4272, 320, 70, 1771, 8, 18151, 5343, 304, 4272, 8070, 320, 1227, 8, 220, 16, 11, 11194, 220, 16, 11, 8953, 9558, 2349, 11, 4272, 315, 8070, 3827, 8935, 320, 59857, 8, 315, 400, 20077, 11, 400, 16, 11, 25921, 11, 323, 5035, 25169, 8, 320, 16, 11, 18322, 8, 320, 18, 11, 22977, 8, 220, 17, 11, 8358, 23139, 6530, 305, 17327, 25, 10604, 304, 4272, 50204, 1534, 20192, 320, 9563, 288, 8, 220, 23929, 220, 16, 11, 14417, 220, 8953, 9865, 25, 312, 66481, 28174, 369, 4272, 320, 70, 1771, 8, 18151, 5343, 304, 4272, 8070, 320, 10559, 8, 320, 16, 11, 22457, 8, 320, 11584, 8, 9558, 2349, 11, 4272, 315, 8070, 3827, 8935, 320, 59857, 8, 315, 5035, 8259, 705, 400, 5120, 11, 323, 400, 17, 220, 19242, 320, 19852, 8, 320, 2790, 8, 7089, 16195, 8070, 320, 9563, 8, 320, 17, 11, 4146, 8, 320, 20, 11, 19068, 8, 220, 18, 11, 679, 67963, 8070, 400, 220, 5958, 11, 15831, 400, 220, 4331, 11, 22992, 400, 220, 4767, 11, 23031, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 11944, 6020, 828, 369, 63897, 4953, 13, 927, 2380, 20323, 1667, 320, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 705, 2737, 4272, 8070, 11, 16195, 8070, 11, 323, 5370, 6956, 315, 1023, 16195, 8070, 13, 1102, 5825, 1401, 5178, 34824, 430, 527, 16595, 369, 6020, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebde10>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 14393, 279, 6771, 315, 36962, 11, 902, 2942, 4861, 279, 2246, 1139, 14491, 369, 4228, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebdea0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 2759, 369, 8070, 13426, 1701, 279, 9513, 323, 24305, 1749, 11, 1234, 902, 584, 15641, 279, 3392, 315, 13426, 45691, 477, 21639, 481, 369, 279, 1510, 1060, 323, 27334, 3827, 12032, 323, 58165, 369, 279, 3938, 3827, 16296, 315, 4455, 430, 617, 1027, 15324, 304, 1057, 6020, 12518, 477, 3827, 4780, 13, 1226, 6767, 1510, 323, 27334, 3827, 12032, 323, 58165, 3196, 389, 19705, 315, 44977, 3827, 2383, 13, 1226, 15806, 279, 29736, 315, 3938, 49803, 315, 1057, 27334, 3827, 12032, 3196, 389, 682, 2561, 6029, 323, 5813, 264, 51262, 41458, 311, 8108, 27334, 3827, 12032, 994, 433, 374, 810, 4461, 1109, 539, 430, 814, 690, 539, 387, 15393, 477, 4984, 264, 51262, 41458, 311, 5376, 27334, 3827, 12032, 994, 433, 374, 810, 4461, 1109, 539, 430, 814, 690, 387, 15393, 13, 1226, 617, 16689, 311, 2759, 369, 279, 3827, 6372, 315, 279, 3728, 528, 61186, 3428, 3827, 33620, 17575, 439, 264, 1510, 4261, 20900, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 1749, 20011, 555, 63897, 4953, 13, 369, 24043, 369, 8070, 13426, 11, 82003, 279, 9513, 323, 24305, 5603, 13, 1115, 374, 3062, 369, 8830, 1268, 3827, 30255, 527, 27000, 304, 279, 2883, 596, 6020, 12518, 323, 872, 4754, 5536, 389, 4272, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebdf30>, 'json_data': {'input': [[18902, 79483, 25, 29140, 315, 22765, 36639, 3142, 45344, 38725, 320, 4977, 19268, 33, 3110, 25, 220, 2983, 8, 17961, 70816, 25, 79980, 660, 31946, 61572, 79980, 660, 70816, 315, 33620, 79980, 660, 70816, 315, 67963, 33620, 79980, 660, 70816, 315, 12937, 17075, 529, 58588, 79980, 660, 70816, 315, 23139, 3061, 4336, 18559, 311, 79980, 660, 17961, 70816, 5874, 220, 2166, 220, 3971, 220, 4103, 220, 4331, 220, 4370, 220, 2131, 220, 3487, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 279, 6821, 315, 279, 9678, 9879, 586, 24043, 7626, 323, 279, 6020, 12518, 5343, 304, 279, 2246, 13, 1102, 17482, 439, 264, 12399, 315, 279, 25261, 323, 6020, 13122, 6956, 11, 902, 527, 7718, 369, 69963, 279, 13708, 323, 31638, 315, 279, 6020, 2038, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebdfc0>, 'json_data': {'input': [[18902, 79483, 25, 3580, 330, 10464, 315, 11842, 12279, 84016, 19863, 29553, 8245, 1, 3770, 369, 3649, 23343, 311, 1057, 1005, 315, 6926, 11667, 2038, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 264, 3857, 25394, 279, 1005, 315, 2536, 12279, 84016, 6926, 11667, 2038, 11, 902, 11335, 264, 16996, 3560, 304, 8830, 279, 2883, 753, 6020, 5178, 555, 44878, 279, 6372, 315, 11667, 65649, 13, 1102, 15151, 430, 4726, 3649, 690, 1833, 304, 279, 2246, 11, 82003, 279, 12939, 315, 420, 2038, 369, 6020, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebe050>, 'json_data': {'input': [[18902, 79483, 25, 29140, 315, 22765, 36639, 3142, 45344, 38725, 220, 2166, 17961, 70816, 25, 79980, 660, 31946, 61572, 220, 3971, 79980, 660, 70816, 315, 33620, 220, 4103, 79980, 660, 70816, 315, 67963, 33620, 220, 4331, 79980, 660, 70816, 315, 12937, 17075, 529, 58588, 220, 4370, 79980, 660, 70816, 315, 23139, 3061, 4336, 220, 2131, 18559, 311, 79980, 660, 17961, 70816, 220, 3487, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 5370, 6020, 12518, 5343, 304, 279, 1934, 11, 1778, 439, 279, 8335, 11071, 323, 8070, 12518, 11, 8405, 264, 69917, 369, 13016, 311, 3619, 279, 6020, 2890, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebe0e0>, 'json_data': {'input': [[18902, 79483, 25, 35211, 26120, 20038, 6782, 3977, 14507, 11, 902, 527, 1367, 30040, 439, 52872, 323, 539, 5343, 304, 279, 26120, 12032, 323, 58165, 13, 4314, 15055, 15871, 2997, 14507, 11754, 555, 279, 26262, 8650, 8167, 11, 323, 14507, 369, 13709, 323, 30519, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 6514, 315, 3977, 26120, 14507, 11, 39686, 1268, 3738, 7194, 527, 41853, 369, 304, 12976, 311, 26120, 20038, 13, 1102, 24400, 389, 279, 7138, 315, 1521, 14507, 323, 872, 42308, 505, 26120, 12032, 323, 58165, 11, 8405, 32373, 389, 279, 6020, 6373, 315, 73657, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebe170>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1304, 433, 264, 10844, 311, 6144, 279, 12625, 323, 4868, 315, 1057, 3956, 11, 3932, 11, 323, 6444, 11, 1524, 422, 1070, 527, 3221, 9860, 6020, 16296, 13, 1226, 656, 420, 555, 31978, 26012, 304, 4857, 3956, 430, 527, 9966, 555, 1670, 26, 26549, 709, 43591, 8647, 828, 12659, 430, 47032, 12625, 555, 2955, 26, 323, 4857, 4228, 4791, 25700, 5110, 430, 2231, 1274, 304, 2585, 13, 1226, 527, 35611, 47594, 1521, 9045, 927, 892, 11, 3508, 555, 28462, 3932, 311, 3313, 42004, 872, 828, 11, 7231, 1124, 7526, 11, 1778, 439, 3092, 2467, 5955, 11, 311, 2585, 872, 1008, 3217, 11, 477, 44169, 7294, 1474, 278, 1698, 11, 7294, 12, 99197, 11, 323, 3636, 4868, 4519, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 3230, 11193, 63897, 4953, 13, 374, 4737, 311, 6144, 1217, 12625, 323, 4868, 13, 1102, 66159, 279, 2883, 596, 59314, 5603, 311, 828, 9313, 323, 8647, 12659, 11, 91115, 279, 98536, 15507, 311, 1217, 7095, 323, 31308, 2626, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebe200>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 1578, 22020, 430, 279, 2246, 18713, 1771, 311, 63897, 4953, 2637, 13788, 439, 459, 13110, 369, 279, 2038, 13282, 2949, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebe290>, 'json_data': {'input': [[18902, 79483, 25, 74435, 315, 60391, 6020, 12518, 304, 90301, 449, 27438, 2599, 7612, 603, 311, 1304, 17989, 323, 32946, 430, 7958, 279, 15055, 5068, 323, 36489, 304, 279, 6020, 12518, 323, 279, 24442, 8554, 13, 34459, 3135, 1436, 1782, 90694, 505, 1521, 17989, 4245, 311, 69867, 13, 1952, 459, 14529, 8197, 11, 584, 15806, 1057, 17989, 11, 2737, 1884, 5552, 311, 279, 41458, 369, 6807, 18151, 26, 2262, 21746, 26, 59575, 58165, 26, 6762, 2819, 315, 6020, 24198, 323, 82746, 26, 8070, 13426, 26, 15808, 26, 323, 5505, 6439, 315, 3424, 323, 7241, 11, 4315, 3885, 13, 1226, 2385, 1057, 17989, 389, 32946, 11, 2225, 13970, 323, 4741, 3411, 11, 430, 527, 11846, 311, 387, 13579, 11, 323, 279, 3135, 315, 902, 1376, 279, 8197, 369, 3339, 59358, 922, 279, 15691, 2819, 315, 12032, 323, 58165, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 5217, 2317, 389, 279, 1005, 315, 17989, 11, 79774, 3230, 5789, 1405, 17989, 2643, 5536, 6020, 13122, 13, 1102, 66159, 279, 38088, 69867, 304, 6020, 24043, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebe320>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2536, 30004, 36164, 25452, 34919, 527, 22538, 304, 38171, 5762, 5220, 2085, 31368, 6449, 481, 3157, 2819, 13, 578, 15691, 907, 315, 1057, 2536, 30004, 36164, 25452, 34919, 374, 24257, 311, 6762, 907, 5304, 40635, 14463, 369, 20086, 477, 4528, 22538, 315, 279, 1890, 55935, 477, 53317, 13, 11842, 30004, 36164, 25452, 34919, 430, 617, 1027, 1323, 68, 40412, 2391, 279, 4261, 3196, 389, 40635, 14463, 527, 21771, 2949, 9580, 220, 17, 477, 9580, 220, 18, 304, 279, 6762, 907, 30022, 1606, 584, 16430, 279, 907, 3196, 389, 51262, 5528, 11, 2737, 3072, 21913, 4211, 11, 3157, 30139, 5603, 11, 323, 4279, 5708, 13890, 1749, 11, 902, 1253, 2997, 264, 10824, 315, 279, 40635, 7901, 3430, 520, 279, 7901, 2457, 323, 1023, 653, 34595, 11374, 2737, 53838, 11, 3685, 892, 311, 4974, 11, 5326, 1949, 4478, 11, 323, 279, 3268, 11, 323, 30255, 315, 279, 34919, 584, 3412, 13, 4314, 11374, 12207, 13592, 3196, 389, 9341, 955, 13, 578, 6762, 907, 315, 2536, 30004, 36164, 25452, 34919, 430, 617, 1027, 1323, 68, 40412, 4245, 311, 53317, 527, 21771, 2949, 9580, 220, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 7138, 315, 2536, 30004, 36164, 25452, 34919, 5762, 555, 63897, 4953, 13, 1102, 16964, 1268, 872, 15691, 907, 374, 24257, 3196, 389, 40635, 14463, 323, 5825, 20616, 1139, 279, 51262, 12823, 1511, 11, 47594, 8830, 315, 279, 2883, 596, 9341, 304, 879, 5220, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebe3b0>, 'json_data': {'input': [[18902, 79483, 25, 23139, 3984, 555, 29642, 7640, 17610, 15871, 315, 34555, 505, 67599, 315, 11897, 323, 34555, 505, 279, 6412, 315, 12034, 304, 60391, 15086, 13, 23139, 1511, 304, 29642, 7640, 17610, 15871, 315, 2109, 75202, 315, 5708, 11, 4272, 14507, 5552, 311, 5708, 6108, 10292, 7640, 11, 323, 54438, 1392, 315, 11897, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 8336, 323, 5829, 315, 8515, 304, 29642, 7640, 11, 45293, 13878, 1778, 439, 11897, 67599, 323, 5708, 2109, 75202, 11, 902, 527, 16595, 369, 47614, 279, 2883, 596, 6020, 8446, 323, 63342, 907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebe440>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 19392, 279, 1212, 315, 264, 3857, 5552, 311, 63897, 4953, 2637, 902, 17482, 439, 279, 98536, 5502, 369, 5195, 323, 1202, 5370, 7677, 11, 39825, 279, 17876, 2038, 2949, 279, 2317, 315, 279, 2883, 596, 8244, 41295, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebe4d0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebe560>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 20816, 12190, 5070, 311, 23351, 3958, 13172, 12659, 323, 22973, 3932, 389, 279, 3566, 13, 1226, 5357, 389, 6968, 279, 1888, 13172, 11704, 369, 1057, 3932, 323, 50270, 304, 1690, 5627, 11, 2737, 30770, 704, 8482, 9629, 11, 18054, 33151, 315, 3958, 14058, 505, 1057, 6067, 1475, 1060, 11, 323, 15499, 16967, 279, 6732, 11, 10721, 11, 323, 6946, 1405, 14058, 5101, 323, 2565, 35696, 1124, 994, 5995, 311, 6106, 430, 14058, 656, 539, 3887, 3958, 2262, 627, 2014, 940, 1534, 73094, 25, 763, 420, 3857, 11, 279, 2246, 14564, 63897, 596, 15507, 311, 96178, 3958, 13172, 12659, 323, 23391, 1217, 7296, 13, 1115, 2317, 374, 5199, 439, 433, 22020, 279, 2883, 753, 31308, 30031, 323, 9045, 311, 10519, 264, 6928, 13172, 26031, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebe5f0>, 'json_data': {'input': [[18902, 79483, 25, 384, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 11741, 18133, 2449, 477, 264, 6002, 304, 279, 2246, 323, 1587, 539, 3493, 23222, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebe680>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 11, 63897, 4953, 2637, 323, 17482, 439, 264, 4342, 369, 279, 2246, 11, 19392, 430, 279, 2768, 2262, 374, 5552, 311, 420, 3230, 5502, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebe710>, 'json_data': {'input': [[18902, 79483, 25, 432, 33465, 18512, 7319, 400, 20, 13, 24, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 15871, 16625, 555, 459, 5376, 304, 20448, 18512, 315, 400, 17, 13, 24, 7239, 11, 400, 22440, 3610, 304, 10405, 5552, 311, 1057, 5274, 3634, 26329, 9045, 11, 323, 459, 5376, 304, 94189, 20900, 315, 400, 23024, 3610, 13, 578, 400, 17, 13, 24, 7239, 5376, 304, 20448, 18512, 574, 14090, 279, 1121, 315, 264, 220, 19, 4, 5376, 304, 5578, 2010, 1868, 11, 1306, 43468, 369, 13073, 11754, 555, 279, 14278, 304, 1057, 32027, 11, 323, 459, 5376, 304, 328, 5002, 20900, 13, 23212, 11, 279, 5376, 304, 20448, 18512, 5343, 400, 24951, 3610, 304, 9548, 3285, 685, 10405, 5938, 449, 279, 14278, 304, 1057, 32027, 13, 578, 400, 23024, 3610, 5376, 304, 94189, 20900, 27000, 459, 4445, 1303, 8935, 315, 279, 2349, 304, 279, 13240, 5505, 6439, 315, 1057, 16692, 323, 4009, 7241, 627, 2014, 940, 1534, 73094, 25, 1115, 19775, 15100, 279, 5376, 304, 432, 33465, 18512, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 8405, 11944, 26793, 1139, 279, 9547, 10043, 1521, 4442, 13, 1102, 5764, 2038, 922, 32027, 34074, 11, 20448, 18512, 11, 323, 94189, 11, 902, 66251, 4861, 279, 6020, 828, 10666, 304, 279, 3766, 12143, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebe7a0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 7694, 323, 1023, 6012, 11, 2737, 30466, 505, 9629, 8066, 555, 2778, 8141, 8717, 889, 1005, 5195, 916, 439, 872, 1670, 2778, 304, 33957, 11, 5507, 25995, 11, 5099, 13, 323, 1023, 5195, 13234, 323, 24026, 6012, 1093, 62046, 11, 5195, 28508, 11, 323, 5195, 7199, 280, 2014, 940, 1534, 73094, 25, 1115, 17889, 1486, 30202, 832, 315, 279, 3682, 15771, 369, 24038, 13172, 13254, 2345, 14783, 7694, 323, 1202, 5552, 6012, 13, 1102, 5825, 10507, 315, 1268, 13254, 374, 8066, 1555, 2778, 6108, 13172, 11, 4726, 94012, 279, 2883, 596, 85957, 13172, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebe830>, 'json_data': {'input': [[18902, 79483, 25, 578, 3331, 2956, 19721, 48338, 323, 279, 3723, 15422, 3331, 2956, 19721, 49357, 11, 902, 3881, 311, 682, 315, 1057, 7640, 13375, 505, 459, 21967, 304, 279, 10013, 477, 279, 3723, 15422, 11, 15947, 11, 477, 5552, 311, 3956, 323, 3600, 430, 584, 3085, 311, 10013, 477, 279, 3723, 15422, 3932, 477, 6444, 11, 15947, 11, 477, 279, 16967, 315, 872, 7865, 304, 279, 10013, 477, 279, 6560, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 279, 41961, 315, 279, 3331, 2956, 19721, 48338, 320, 41949, 6616, 8, 323, 279, 6560, 92048, 311, 63897, 596, 7677, 11, 45293, 279, 46139, 7036, 323, 25127, 369, 828, 11850, 5552, 311, 10013, 323, 6560, 6444, 13, 1102, 66251, 4861, 279, 3766, 20954, 2949, 279, 12914, 315, 3230, 27743, 8670, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebe8c0>, 'json_data': {'input': [[18902, 79483, 25, 480, 1771, 323, 25733, 288, 389, 23927, 323, 11842, 30004, 36164, 58588, 46272, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 430, 94594, 20192, 323, 18151, 389, 2225, 3157, 481, 323, 2536, 30004, 36164, 25452, 34919, 13, 1102, 15151, 264, 5357, 389, 279, 6020, 5178, 315, 25452, 22538, 2949, 279, 8244, 6020, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebe950>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 18, 3308, 362, 3308, 426, 3308, 356, 14967, 4272, 8070, 824, 4430, 25, 48224, 859, 73767, 315, 2073, 26204, 24608, 400, 220, 1958, 11, 18262, 400, 220, 20, 11, 8874, 400, 220, 1958, 11, 17819, 9973, 31306, 5742, 315, 13551, 1511, 304, 824, 4430, 35547, 220, 20, 11, 20275, 220, 23873, 220, 20, 11, 25009, 14967, 4272, 8070, 824, 4430, 400, 220, 20, 13, 5833, 400, 220, 20, 13, 5833, 400, 220, 20, 13, 5833, 53867, 2844, 4272, 8070, 824, 4430, 25, 48224, 859, 73767, 315, 2073, 26204, 24608, 369, 6913, 35547, 400, 220, 1958, 11, 18262, 400, 220, 20, 11, 8874, 400, 220, 1958, 11, 17819, 8976, 2588, 315, 2073, 26204, 24608, 439, 264, 1121, 315, 14747, 315, 3308, 426, 311, 3308, 362, 13551, 220, 20, 11, 8874, 220, 15, 220, 15, 8976, 2588, 315, 2073, 26204, 24608, 320, 17897, 8, 320, 1806, 8, 220, 17897, 73767, 315, 2073, 26204, 24608, 400, 220, 2137, 11, 20596, 400, 220, 20, 11, 27311, 400, 220, 1958, 11, 18520, 9973, 31306, 5742, 315, 13551, 1511, 304, 6913, 35547, 220, 20, 11, 20275, 220, 23873, 220, 20, 11, 25009, 16923, 291, 78526, 2515, 315, 19371, 6844, 34919, 2758, 25, 43609, 315, 3308, 426, 311, 3308, 362, 13551, 19310, 220, 23873, 220, 15, 220, 15, 94960, 5708, 8316, 323, 1023, 39639, 4501, 2425, 13429, 13551, 220, 15, 220, 15, 220, 6083, 5742, 315, 13551, 1511, 304, 824, 4430, 35547, 220, 21, 11, 23987, 220, 23873, 220, 20, 11, 22614, 53867, 2844, 4272, 8070, 824, 4430, 400, 220, 20, 13, 1490, 400, 220, 20, 13, 1490, 400, 220, 20, 13, 1490, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 279, 35547, 315, 6913, 323, 80703, 4272, 8070, 824, 4430, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 9731, 279, 9327, 315, 13122, 6020, 5178, 17150, 11, 16996, 369, 38663, 279, 2883, 596, 3293, 5178, 323, 18845, 927, 279, 1667, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebe9e0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 22538, 304, 650, 5484, 82, 304, 902, 584, 527, 539, 279, 6156, 63932, 13, 4314, 650, 5484, 82, 2997, 879, 5220, 430, 527, 15871, 4216, 6566, 5220, 323, 3738, 33268, 4907, 15086, 304, 902, 7640, 21736, 2410, 9659, 1701, 33268, 8336, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 7138, 315, 22538, 304, 653, 6387, 5303, 660, 650, 5484, 82, 11, 11951, 21760, 389, 4216, 51256, 5220, 323, 33268, 4907, 15086, 13, 1102, 7437, 279, 2317, 369, 8830, 279, 19092, 12034, 315, 279, 2883, 304, 1521, 26593, 2085, 2539, 2585, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebea70>, 'json_data': {'input': [[18902, 79483, 25, 3459, 220, 605, 16222, 1789, 279, 64072, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 18, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 3230, 955, 315, 26559, 11, 902, 374, 279, 3459, 220, 605, 16222, 369, 279, 20323, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 374, 7718, 369, 22824, 4954, 279, 1934, 2949, 22370, 68248, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebeb00>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 44694, 279, 4342, 369, 279, 2007, 315, 8970, 11, 91115, 1202, 9546, 323, 734, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebeb90>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 439, 330, 2149, 18992, 4953, 1210, 323, 374, 4461, 961, 315, 279, 2316, 477, 14836, 3857, 315, 279, 2246, 11, 31692, 279, 2317, 2949, 902, 279, 1934, 374, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebec20>, 'json_data': {'input': [[18902, 79483, 25, 5195, 47423, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 330, 14783, 47423, 1, 439, 264, 3230, 13254, 5699, 13, 1102, 13533, 430, 279, 17876, 14491, 690, 7872, 279, 6956, 323, 5178, 315, 420, 1401, 13254, 4365, 11, 902, 374, 9200, 311, 8830, 279, 2883, 596, 6020, 30295, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebecb0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 3308, 362, 3308, 426, 3308, 356, 14967, 4272, 8070, 824, 4430, 25, 48224, 859, 73767, 315, 2073, 26204, 24608, 400, 220, 1544, 11, 21312, 400, 220, 19, 11, 23439, 400, 220, 1591, 11, 18781, 9973, 31306, 5742, 315, 13551, 1511, 304, 824, 4430, 35547, 220, 20, 11, 22897, 220, 26058, 220, 21, 11, 10828, 14967, 4272, 8070, 824, 4430, 400, 220, 19, 13, 2946, 400, 220, 19, 13, 2946, 400, 220, 19, 13, 2946, 53867, 2844, 4272, 8070, 824, 4430, 25, 48224, 859, 73767, 315, 2073, 26204, 24608, 369, 6913, 35547, 400, 220, 1544, 11, 21312, 400, 220, 19, 11, 23439, 400, 220, 1591, 11, 18781, 8976, 2588, 315, 2073, 26204, 24608, 439, 264, 1121, 315, 14747, 315, 3308, 426, 311, 3308, 362, 13551, 220, 19, 11, 23439, 220, 15, 220, 15, 8976, 2588, 315, 2073, 26204, 24608, 320, 9870, 8, 320, 966, 8, 220, 9870, 73767, 315, 2073, 26204, 24608, 400, 220, 2148, 11, 6843, 400, 220, 19, 11, 22349, 400, 220, 1591, 11, 21018, 9973, 31306, 5742, 315, 13551, 1511, 304, 6913, 35547, 220, 20, 11, 22897, 220, 26058, 220, 21, 11, 10828, 16923, 291, 78526, 2515, 315, 19371, 6844, 34919, 2758, 25, 43609, 315, 3308, 426, 311, 3308, 362, 13551, 19310, 220, 26058, 220, 15, 220, 15, 94960, 5708, 8316, 323, 1023, 39639, 4501, 2425, 13429, 13551, 220, 15, 220, 15, 220, 4161, 5742, 315, 13551, 1511, 304, 824, 4430, 35547, 220, 21, 11, 25339, 220, 26058, 220, 21, 11, 16949, 53867, 2844, 4272, 8070, 824, 4430, 400, 220, 19, 13, 3487, 400, 220, 19, 13, 3487, 400, 220, 19, 13, 3487, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 19, 11, 420, 12143, 18911, 279, 35547, 315, 6913, 323, 80703, 4272, 8070, 824, 4430, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 13, 1115, 2038, 9731, 279, 9327, 315, 8405, 11944, 6020, 17150, 369, 15167, 311, 8720, 63897, 4953, 3238, 82, 5178, 927, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebed40>, 'json_data': {'input': [[18902, 79483, 25, 1666, 7376, 389, 5936, 220, 508, 11, 220, 2366, 18, 11, 584, 7263, 3871, 961, 315, 5195, 8483, 320, 1820, 31417, 2128, 8, 323, 18682, 70738, 311, 12207, 43880, 1057, 5208, 304, 21075, 11478, 320, 15836, 570, 578, 1912, 11, 2663, 5195, 18682, 70738, 11, 374, 5068, 2949, 63897, 11852, 7640, 22199, 3210, 7314, 304, 279, 2132, 8502, 315, 220, 2366, 18, 13, 59787, 11, 279, 31417, 2128, 574, 5343, 2949, 5195, 8471, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 18488, 315, 279, 5195, 18682, 70738, 1912, 505, 279, 47112, 315, 5596, 315, 5195, 8483, 323, 18682, 70738, 11, 36024, 264, 19092, 6541, 9017, 21075, 11478, 4500, 323, 1202, 13122, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebedd0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 5912, 3477, 323, 25261, 555, 2225, 13018, 323, 7362, 3827, 11527, 13, 1666, 264, 1121, 11, 584, 617, 4036, 11, 323, 1253, 304, 279, 3938, 5371, 11, 41300, 304, 5361, 56043, 11, 389, 5370, 3827, 14228, 55936, 11, 1778, 439, 8481, 27748, 10332, 34074, 477, 15690, 48587, 479, 8349, 13, 5884, 31959, 15632, 315, 1778, 264, 3477, 477, 25261, 1436, 11682, 1057, 6020, 3044, 323, 10565, 3135, 11, 1397, 31959, 4442, 311, 1057, 2626, 12659, 11, 477, 3917, 603, 311, 5217, 39725, 323, 23331, 44983, 13, 763, 5369, 11, 279, 26314, 315, 1057, 15603, 17575, 369, 8070, 13426, 323, 1023, 3827, 58165, 7612, 5199, 19971, 323, 3629, 18065, 27924, 13, 10541, 584, 4510, 1057, 17989, 527, 13579, 11, 279, 17139, 3827, 15632, 1253, 1782, 505, 279, 15055, 12715, 304, 1057, 6020, 12518, 323, 1253, 7958, 1057, 6020, 3135, 304, 279, 4261, 477, 18852, 369, 902, 1778, 26314, 374, 1903, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 5912, 75620, 13375, 555, 3827, 11527, 323, 279, 4754, 369, 31959, 20124, 505, 1521, 8544, 13, 1102, 34161, 311, 279, 6931, 20954, 389, 3827, 58165, 323, 8907, 11, 82003, 279, 27924, 323, 15635, 5938, 449, 3827, 41300, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebee60>, 'json_data': {'input': [[18902, 79483, 25, 61647, 459, 36218, 3827, 2361, 18065, 5370, 62129, 38864, 11, 2737, 16865, 315, 30139, 323, 20250, 3827, 70530, 11, 4666, 2968, 315, 3827, 7016, 11, 323, 29736, 315, 17516, 13, 1226, 15806, 36218, 3827, 10093, 48582, 11, 13126, 4442, 304, 13363, 323, 13463, 11, 1778, 439, 502, 14640, 477, 3293, 31752, 18463, 11, 439, 1664, 439, 279, 2704, 315, 25261, 7640, 555, 88004, 11527, 13, 10541, 584, 4510, 584, 617, 49672, 4694, 369, 1057, 36218, 3827, 10093, 11, 912, 44701, 649, 387, 2728, 430, 279, 1620, 3827, 15632, 315, 1521, 13146, 690, 539, 387, 2204, 13, 2057, 279, 13112, 430, 279, 1620, 3827, 15632, 315, 1521, 13146, 374, 2204, 1109, 279, 15055, 12715, 11, 1778, 12062, 690, 7958, 279, 17575, 369, 8070, 13426, 323, 279, 7524, 3827, 4478, 304, 279, 4261, 304, 902, 1778, 26314, 374, 1903, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 15100, 1268, 36218, 3827, 10093, 527, 12715, 323, 279, 62129, 9547, 6646, 304, 872, 16865, 13, 1115, 11621, 8149, 311, 279, 10430, 389, 3827, 24043, 323, 279, 4754, 25127, 369, 279, 2883, 596, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebeef0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 279, 2883, 836, 11, 63897, 4953, 2637, 4461, 13788, 439, 264, 4342, 477, 2316, 369, 279, 2246, 477, 264, 3857, 2949, 433, 13, 1102, 64664, 279, 9764, 315, 279, 23702, 519, 369, 279, 1934, 1694, 14407, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebef80>, 'json_data': {'input': [[18902, 79483, 25, 17961, 15534, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 330, 57330, 15534, 1, 315, 63897, 4953, 2637, 79774, 279, 2883, 753, 8244, 6020, 2890, 323, 53113, 13, 1102, 17482, 439, 264, 71261, 311, 11944, 20954, 922, 8515, 11, 22538, 11, 323, 8515, 6530, 11, 82003, 279, 12939, 315, 1521, 5540, 304, 279, 2883, 596, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebf010>, 'json_data': {'input': [[18902, 79483, 25, 11842, 5364, 847, 36164, 46272, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 459, 17219, 311, 279, 3857, 389, 11842, 5364, 847, 36164, 46272, 11, 19392, 430, 279, 2768, 2262, 690, 3493, 3649, 9002, 279, 24043, 6514, 315, 1521, 34919, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebf0a0>, 'json_data': {'input': [[18902, 79483, 25, 1328, 42483, 6101, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 264, 1584, 19392, 279, 842, 315, 264, 3857, 477, 2246, 11, 902, 374, 4279, 304, 16287, 6821, 311, 89522, 7471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebf130>, 'json_data': {'input': [[18902, 79483, 25, 20902, 49858, 1488, 261, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 63897, 439, 264, 330, 17185, 49858, 1488, 261, 1210, 1115, 24790, 374, 5199, 1606, 433, 27667, 279, 13122, 30255, 323, 8907, 8670, 279, 2883, 2011, 49553, 311, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebf1c0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 12387, 3723, 4273, 320, 52, 815, 6266, 6918, 11, 1614, 11, 323, 2254, 11, 439, 1664, 439, 7362, 7016, 323, 14640, 18702, 264, 7029, 8205, 315, 15223, 11, 323, 279, 7036, 315, 420, 10401, 9731, 311, 84713, 449, 14691, 502, 5897, 323, 23331, 26006, 304, 279, 549, 815, 13, 323, 37545, 13, 9086, 1023, 5220, 304, 279, 5557, 5064, 11, 584, 3663, 15098, 60487, 36752, 505, 2225, 549, 815, 13, 323, 7362, 17047, 449, 5201, 311, 1057, 8907, 449, 7016, 323, 14640, 13, 9176, 315, 1521, 7016, 323, 14640, 527, 42028, 323, 872, 4666, 2968, 323, 7036, 11, 439, 33398, 555, 279, 19359, 11, 7293, 36218, 13, 97485, 449, 5363, 311, 15592, 26, 10182, 2349, 323, 41329, 26, 10937, 26, 11761, 9313, 26, 2262, 64382, 26, 828, 12625, 323, 4868, 26, 3754, 29085, 26, 323, 13122, 389, 3823, 6864, 323, 20057, 11, 584, 617, 3970, 459, 5376, 304, 502, 323, 42028, 7016, 323, 14640, 11, 439, 1664, 439, 5552, 13627, 6299, 323, 26969, 11, 1694, 11223, 323, 11798, 304, 3293, 1667, 555, 27743, 323, 23331, 13162, 2212, 279, 1917, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 50729, 279, 7353, 20326, 315, 7016, 323, 14640, 430, 2633, 63897, 596, 2626, 7640, 13, 1102, 22020, 279, 7859, 23331, 36752, 323, 279, 42028, 5897, 18921, 11, 8104, 23343, 311, 24084, 14645, 1093, 15592, 323, 41329, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebf250>, 'json_data': {'input': [[18902, 79483, 25, 58588, 77990, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 389, 25452, 22538, 11, 19392, 264, 6541, 304, 5357, 505, 11897, 34919, 311, 25452, 34919, 13, 1115, 3857, 690, 4461, 4358, 279, 51262, 323, 5178, 315, 25452, 22538, 2949, 63897, 4953, 14639, 82, 20136, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebf2e0>, 'json_data': {'input': [[18902, 79483, 25, 6186, 220, 966, 11, 220, 2366, 19, 198, 2014, 940, 1534, 73094, 25, 578, 2457, 1054, 33327, 220, 966, 11, 220, 2366, 19, 2476, 15785, 279, 4033, 2457, 315, 279, 54406, 596, 1934, 13, 1115, 374, 16996, 369, 8830, 279, 6935, 55798, 315, 279, 25261, 14955, 323, 872, 41961, 311, 279, 20323, 1060, 13696, 6790, 220, 2148, 11, 220, 2366, 18, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebf370>, 'json_data': {'input': [[18902, 79483, 25, 4689, 7100, 4787, 323, 5370, 9434, 30295, 11, 2737, 87998, 4455, 11, 14640, 11, 323, 1023, 11193, 323, 872, 2515, 389, 87386, 11, 11761, 11, 323, 20790, 10374, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 10383, 315, 330, 25615, 7100, 4787, 1, 323, 9434, 9547, 389, 13254, 65649, 13, 1102, 72890, 279, 83416, 2136, 315, 63897, 596, 5178, 449, 27927, 7100, 323, 87998, 26006, 11, 6376, 279, 6566, 369, 279, 10430, 315, 9434, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebf400>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 701, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebf490>, 'json_data': {'input': [[18902, 79483, 25, 220, 18, 627, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebf520>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 701, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebf5b0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 6763, 323, 8661, 18512, 320, 258, 11990, 11, 3734, 54208, 997, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 17, 11, 420, 12143, 15151, 430, 264, 2007, 690, 3493, 35876, 828, 5552, 311, 16207, 323, 18729, 18512, 11, 6376, 279, 6566, 369, 264, 11944, 24481, 315, 420, 20900, 5699, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebf640>, 'json_data': {'input': [[18902, 79483, 25, 1050, 46469, 505, 7089, 426, 1441, 527, 8066, 15871, 505, 279, 6412, 315, 18985, 14228, 3600, 323, 7757, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 3230, 8336, 315, 13254, 369, 279, 330, 11663, 426, 1441, 1, 5699, 11, 39686, 430, 279, 30466, 527, 15871, 14592, 505, 18985, 14228, 3600, 323, 7757, 3600, 11, 902, 6835, 20616, 1139, 279, 21797, 2461, 315, 63897, 596, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebf6d0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5415, 330, 2149, 18992, 4953, 13, 1359, 43080, 279, 5502, 311, 902, 279, 6020, 12518, 323, 6821, 281, 7770, 11, 31692, 279, 2317, 369, 279, 6020, 2038, 430, 11263, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebf760>, 'json_data': {'input': [[18902, 79483, 25, 5659, 892, 311, 892, 584, 527, 3917, 311, 16287, 323, 42887, 44983, 323, 26969, 389, 5370, 10937, 13146, 555, 23331, 11527, 304, 279, 549, 815, 2637, 4606, 11, 323, 1023, 56043, 31550, 13, 26379, 11, 369, 902, 2728, 872, 7138, 584, 4250, 16430, 264, 3284, 4814, 11, 2997, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 14529, 7138, 315, 3276, 85971, 26969, 430, 5195, 12580, 505, 5370, 23331, 13162, 2212, 279, 1917, 13, 1102, 17482, 439, 264, 71261, 311, 3230, 10507, 315, 1521, 44983, 430, 1833, 304, 279, 2246, 11, 31692, 279, 2317, 369, 279, 5897, 11774, 279, 2883, 374, 28118, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebf7f0>, 'json_data': {'input': [[18902, 79483, 25, 7817, 315, 279, 34464, 198, 2014, 940, 1534, 73094, 25, 763, 420, 3857, 11, 279, 6264, 12170, 3493, 5217, 2317, 389, 279, 3230, 5897, 13146, 279, 2883, 374, 6532, 304, 11, 45293, 279, 7138, 315, 8349, 323, 872, 4754, 25127, 369, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebf880>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 8070, 13426, 304, 279, 549, 815, 13, 323, 7362, 56043, 13, 90462, 19971, 374, 2631, 304, 38663, 1057, 36218, 3827, 10093, 323, 26679, 1057, 17575, 369, 8070, 13426, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 84140, 6532, 304, 38663, 36218, 3827, 10093, 323, 26679, 3827, 19705, 13, 1102, 22020, 279, 19971, 2631, 304, 420, 3158, 11, 902, 374, 9200, 369, 8830, 279, 2883, 596, 6020, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebf910>, 'json_data': {'input': [[18902, 79483, 25, 3580, 11, 7181, 220, 975, 369, 2038, 9002, 8070, 3827, 39639, 6072, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 7181, 220, 975, 11, 902, 374, 4461, 264, 3857, 18403, 304, 279, 2246, 430, 5825, 5217, 3649, 389, 8070, 3827, 39639, 6072, 13, 1102, 17482, 439, 264, 5905, 1486, 369, 13016, 11125, 810, 16195, 2038, 389, 3827, 14228, 4819, 323, 69867, 17011, 555, 63897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebf9a0>, 'json_data': {'input': [[18902, 79483, 25, 639, 94, 198, 2014, 940, 1534, 73094, 25, 639, 94]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebfa30>, 'json_data': {'input': [[18902, 79483, 25, 13674, 14058, 30466, 7319, 400, 17, 13, 18, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 13, 578, 6650, 574, 16625, 555, 1057, 6883, 323, 2167, 2077, 13172, 3956, 11, 2225, 315, 902, 56128, 505, 7319, 10374, 555, 1057, 50270, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 6650, 304, 13674, 14058, 30466, 11, 17780, 10831, 279, 5376, 311, 3230, 13172, 3956, 323, 10374, 12912, 11, 902, 8779, 66251, 553, 13674, 596, 3560, 304, 63897, 4953, 3238, 82, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebfac0>, 'json_data': {'input': [[18902, 79483, 25, 29140, 315, 22765, 36639, 3142, 45344, 38725, 220, 2166, 17961, 70816, 25, 79980, 660, 31946, 61572, 220, 3971, 79980, 660, 70816, 315, 33620, 220, 4103, 79980, 660, 70816, 315, 67963, 33620, 220, 4331, 79980, 660, 70816, 315, 12937, 17075, 529, 58588, 220, 4370, 79980, 660, 70816, 315, 23139, 3061, 4336, 220, 2131, 18559, 311, 79980, 660, 17961, 70816, 220, 3487, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 5370, 6020, 12518, 5343, 304, 279, 1934, 11, 1778, 439, 279, 8335, 11071, 323, 8070, 12518, 11, 8405, 264, 69917, 369, 13016, 311, 3619, 279, 6020, 2890, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebfb50>, 'json_data': {'input': [[18902, 79483, 25, 39993, 20547, 50204, 1534, 20192, 323, 18151, 369, 11897, 34919, 12715, 311, 362, 65083, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 64784, 9002, 279, 7138, 315, 20547, 50204, 1534, 20192, 323, 18151, 369, 11897, 34919, 11, 11951, 27401, 430, 1521, 15055, 527, 12715, 311, 80625, 7913, 7089, 67963, 33620, 320, 32, 65083, 570, 1102, 11621, 8149, 311, 279, 8830, 315, 1268, 63897, 4953, 13, 9815, 369, 1202, 6020, 24198, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebfbe0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 701, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebfc70>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 3723, 4273, 220, 2166, 1034, 220, 2618, 1034, 469, 91467, 220, 1682, 1034, 220, 966, 1034, 10314, 1741, 220, 845, 1034, 220, 1114, 1034, 7089, 52248, 220, 21, 1034, 220, 21, 1034, 75263, 3252, 20192, 320, 9563, 288, 8, 220, 16, 1034, 220, 15, 33648, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 3230, 13254, 54208, 555, 54242, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 10484, 9803, 279, 54001, 5178, 315, 63897, 4953, 2637, 10923, 13016, 311, 24564, 18845, 323, 29735, 304, 13254, 8336, 4028, 2204, 11987, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebfd00>, 'json_data': {'input': [[18902, 79483, 25, 6104, 584, 617, 1027, 54952, 15592, 1139, 1057, 3956, 369, 1667, 11, 584, 527, 1457, 40188, 279, 2410, 315, 1803, 1413, 15592, 311, 3136, 10695, 1057, 3932, 3237, 5694, 323, 636, 2574, 2884, 13, 1789, 3187, 11, 423, 14127, 15592, 304, 5195, 72034, 8779, 3932, 3350, 11, 31335, 11, 51187, 11, 43880, 88568, 11, 323, 617, 59774, 16659, 13, 64304, 6276, 3932, 311, 51696, 449, 22772, 15592, 449, 502, 4519, 430, 2997, 2217, 17357, 11, 11058, 1862, 11, 323, 917, 18052, 13, 18308, 14275, 11, 264, 502, 22772, 4668, 304, 13674, 11, 6276, 369, 279, 9886, 315, 15592, 16581, 2835, 477, 2217, 36576, 311, 91782, 555, 20061, 459, 4623, 1139, 264, 10137, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 3230, 10507, 315, 1268, 63897, 4953, 13, 374, 40188, 1803, 1413, 15592, 1139, 1202, 3956, 311, 18885, 1217, 16628, 323, 26206, 13, 1102, 34945, 3230, 7526, 1093, 423, 14127, 15592, 304, 5195, 72034, 323, 22772, 4519, 304, 13674, 11, 39825, 433, 2949, 279, 27927, 19775, 315, 18699, 2027, 4500, 323, 1217, 20392, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebfd90>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6664, 220, 17, 11, 220, 679, 20, 11, 63897, 4953, 13, 6244, 279, 34665, 55935, 315, 5195, 4953, 13, 33549, 311, 18592, 220, 717, 70, 12, 18, 2948, 8, 1234, 279, 19224, 3298, 13, 5751, 3308, 362, 5708, 706, 1027, 10212, 389, 279, 39322, 74307, 8121, 8593, 8152, 1234, 279, 7891, 1054, 15881, 12501, 863, 2533, 6287, 220, 777, 11, 220, 1049, 19, 11, 323, 1234, 279, 7891, 330, 15881, 46, 3910, 1, 2533, 5936, 220, 18, 11, 220, 679, 19, 13, 32499, 311, 6287, 220, 777, 11, 220, 1049, 19, 11, 1070, 574, 912, 586, 3157, 369, 1057, 5708, 13, 5751, 3308, 426, 5708, 374, 14188, 10212, 6463, 31207, 13, 5751, 3308, 356, 5708, 706, 1027, 10212, 389, 279, 39322, 74307, 8121, 8593, 8152, 1234, 279, 7891, 1054, 15881, 12501, 863, 2533, 5936, 220, 18, 11, 220, 679, 19, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 13970, 2317, 9002, 279, 2883, 596, 5708, 26544, 323, 96771, 320, 1999, 362, 11, 426, 11, 323, 356, 8, 389, 279, 39322, 74307, 11, 31692, 3062, 2038, 369, 15167, 922, 279, 11380, 3925, 323, 6070, 315, 279, 2883, 753, 25452, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebfe20>, 'json_data': {'input': [[18902, 79483, 25, 7294, 46713, 14455, 7016, 11, 1778, 439, 279, 549, 815, 13, 19620, 4563, 6722, 64813, 3298, 11, 323, 1023, 2254, 7016, 79466, 3738, 14507, 311, 3109, 7510, 11, 27655, 315, 902, 1436, 1121, 304, 8431, 323, 9337, 31086, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 8907, 15635, 5552, 311, 7294, 46713, 14455, 7016, 11, 11951, 45391, 279, 549, 815, 13, 19620, 4563, 6722, 64813, 3298, 13, 1102, 11621, 2500, 6324, 315, 23965, 311, 279, 5897, 18921, 63897, 34512, 988, 37545, 11, 82003, 279, 1205, 369, 71628, 311, 5370, 14640, 311, 5766, 5199, 31086, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebfeb0>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 806, 13, 63347, 1406, 6674, 22735, 20982, 3579, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 7314, 315, 264, 3857, 304, 279, 2246, 12514, 311, 18362, 70396, 11, 902, 374, 264, 5410, 1537, 304, 13166, 9974, 6821, 13, 1102, 50729, 279, 2883, 596, 5603, 311, 14573, 1113, 1202, 29509, 323, 28454, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61ebff40>, 'json_data': {'input': [[18902, 79483, 25, 362, 2883, 753, 5419, 2585, 927, 6020, 13122, 374, 264, 1920, 6319, 311, 3493, 13579, 44701, 9002, 279, 31638, 315, 6020, 13122, 323, 279, 18459, 315, 6020, 12518, 369, 9434, 10096, 304, 18859, 449, 8965, 11928, 24043, 16565, 13, 362, 2883, 753, 5419, 2585, 927, 6020, 13122, 5764, 1884, 10396, 323, 16346, 430, 320, 16, 8, 281, 7770, 311, 279, 13709, 315, 7576, 430, 11, 304, 13579, 7872, 11, 30357, 323, 14470, 8881, 279, 14463, 323, 834, 28536, 315, 279, 12032, 315, 279, 2883, 26, 320, 17, 8, 3493, 13579, 44701, 430, 14463, 527, 12715, 439, 5995, 311, 11810, 18459, 315, 6020, 12518, 304, 18859, 449, 8965, 11928, 24043, 16565, 11, 323, 430, 57580, 323, 53869, 315, 279, 2883, 527, 1694, 1903, 1193, 304, 18859, 449, 3229, 8200, 315, 6373, 323, 28454, 315, 279, 2883, 26, 323, 320, 18, 8, 3493, 13579, 44701, 9002, 27344, 477, 32100, 18468, 315, 45571, 24279, 11, 1005, 11, 477, 46096, 315, 279, 2883, 753, 12032, 430, 1436, 617, 264, 3769, 2515, 389, 279, 6020, 12518, 627, 2014, 940, 1534, 73094, 25, 1115, 11944, 4096, 25985, 988, 389, 279, 6956, 323, 26470, 315, 5419, 2585, 927, 6020, 13122, 11, 89328, 369, 8830, 279, 12939, 315, 7524, 11835, 304, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8040>, 'json_data': {'input': [[18902, 79483, 25, 384, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 11741, 18133, 2449, 477, 264, 6002, 304, 279, 2246, 323, 1587, 539, 3493, 23222, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be80d0>, 'json_data': {'input': [[18902, 79483, 25, 39993, 20547, 50204, 1534, 20192, 323, 18151, 369, 11897, 34919, 12715, 311, 362, 65083, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 64784, 9002, 279, 3766, 6420, 315, 50204, 1534, 20192, 323, 18151, 369, 11897, 34919, 11, 19392, 430, 1521, 527, 12715, 304, 80625, 7913, 7089, 67963, 33620, 320, 32, 65083, 570, 1115, 374, 9200, 369, 8830, 1268, 1521, 6020, 17150, 527, 5068, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8160>, 'json_data': {'input': [[18902, 79483, 25, 52347, 82, 922, 11, 2737, 279, 41228, 2826, 315, 11, 1057, 12659, 449, 5363, 311, 279, 4526, 11, 1005, 11, 35186, 11, 28957, 11, 477, 4868, 315, 4443, 828, 477, 1023, 828, 12, 47921, 14228, 13146, 11, 1524, 422, 9662, 13382, 11, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 13, 5751, 10396, 323, 12659, 1253, 2349, 927, 892, 439, 17078, 323, 14640, 9002, 12625, 323, 828, 2349, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 12625, 10742, 11, 82003, 279, 1205, 369, 8907, 449, 42028, 14640, 9002, 828, 4526, 323, 10648, 13, 1102, 15151, 430, 1524, 26617, 40206, 447, 27121, 304, 828, 12659, 649, 11682, 279, 2883, 596, 17444, 323, 25605, 68507, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be81f0>, 'json_data': {'input': [[18902, 79483, 25, 2876, 8581, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 330, 12236, 220, 605, 13, 20843, 10022, 11, 63347, 1406, 6674, 18076, 1341, 4419, 11, 3651, 80483, 2390, 12890, 87470, 8606, 1359, 43080, 264, 11944, 10430, 9002, 279, 2883, 753, 35186, 6070, 11, 2737, 279, 13073, 315, 28454, 323, 29509, 13, 1115, 2038, 374, 16996, 369, 41777, 38663, 279, 11692, 323, 35186, 12659, 315, 279, 7471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8280>, 'json_data': {'input': [[18902, 79483, 25, 82108, 4067, 13220, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 477, 25829, 304, 279, 2246, 11, 19392, 264, 9320, 304, 14491, 477, 2262, 13, 1102, 1587, 539, 6782, 3230, 2038, 719, 8779, 10519, 279, 2246, 596, 37666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8310>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 369, 420, 12143, 26, 433, 1253, 387, 264, 6002, 477, 10321, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be83a0>, 'json_data': {'input': [[18902, 79483, 25, 26182, 240, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 1817, 4075, 19392, 430, 279, 3766, 3488, 9002, 63897, 1694, 264, 3544, 49858, 1488, 261, 374, 11007, 439, 837, 13, 1102, 95593, 279, 2883, 596, 24790, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8430>, 'json_data': {'input': [[18902, 79483, 25, 1226, 6767, 3738, 6020, 24198, 520, 6762, 907, 389, 264, 2536, 265, 46839, 8197, 11, 31706, 15871, 315, 1057, 2536, 12, 3157, 481, 25452, 34919, 13, 4314, 22538, 527, 41853, 369, 1234, 279, 19179, 10778, 1749, 3573, 1820, 19179, 10778, 909, 323, 527, 17303, 520, 2853, 11, 2753, 53317, 11, 3917, 311, 40872, 323, 45578, 34074, 13239, 505, 40635, 3430, 4442, 369, 20086, 477, 4528, 22538, 315, 279, 1890, 55935, 13, 4314, 34074, 1397, 47616, 41300, 315, 279, 6762, 907, 315, 1057, 34919, 11, 902, 1253, 1397, 279, 1005, 315, 653, 34595, 11374, 13, 28295, 1392, 527, 11075, 15871, 3196, 389, 264, 3157, 5603, 439, 315, 279, 7901, 2457, 323, 21736, 279, 1005, 315, 17989, 1701, 279, 1888, 2038, 2561, 11, 902, 1253, 2997, 8515, 6530, 41579, 477, 1023, 2561, 3157, 828, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 15100, 279, 24043, 6514, 9435, 311, 2536, 30004, 36164, 25452, 34919, 17303, 520, 6762, 907, 13, 1102, 35434, 279, 1005, 315, 279, 19179, 10778, 1749, 323, 279, 9547, 430, 10383, 34074, 311, 279, 6762, 907, 315, 1521, 34919, 13, 1115, 2038, 374, 3062, 369, 8830, 279, 84140, 6532, 304, 1062, 7623, 22538, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be84c0>, 'json_data': {'input': [[18902, 79483, 25, 12037, 3402, 75202, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 12037, 3402, 75202, 11, 19392, 430, 279, 2768, 2038, 690, 281, 7770, 311, 279, 2883, 596, 3780, 1445, 7640, 11, 902, 527, 3062, 369, 8830, 6864, 6373, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8550>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 5918, 1917, 15144, 13172, 14645, 369, 50270, 11, 13607, 11, 323, 36717, 311, 2410, 872, 7528, 8661, 9873, 13, 5751, 13172, 10105, 1520, 11990, 315, 5220, 3139, 872, 9873, 1555, 1057, 7029, 2134, 315, 3956, 4028, 7766, 323, 20447, 11, 323, 584, 9395, 311, 6106, 6928, 1217, 11704, 555, 13788, 279, 1314, 14058, 520, 279, 1314, 892, 323, 555, 4857, 5655, 40705, 449, 16097, 323, 13607, 13, 15592, 706, 1027, 89328, 311, 1057, 13172, 2626, 369, 810, 1109, 264, 13515, 13, 15899, 1093, 21304, 7639, 323, 5761, 19074, 1005, 279, 2539, 2410, 315, 1057, 15592, 311, 1520, 50270, 1505, 13365, 5795, 323, 53399, 14747, 10708, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 50729, 63897, 596, 13172, 14645, 323, 10105, 11, 31692, 279, 26431, 315, 13172, 439, 264, 13254, 2592, 13, 1102, 66159, 279, 2883, 596, 15507, 311, 47594, 87386, 20124, 1555, 15592, 11, 902, 374, 264, 9200, 2449, 315, 872, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be85e0>, 'json_data': {'input': [[18902, 79483, 25, 21304, 13172, 11705, 323, 28421, 9959, 14058, 430, 3932, 690, 4299, 389, 6522, 311, 2167, 20392, 449, 50270, 13, 21304, 13172, 15714, 1057, 50270, 4667, 449, 3932, 1418, 10043, 66303, 3135, 13, 5751, 14058, 7526, 2187, 5178, 50270, 311, 1893, 4382, 1495, 6108, 14058, 627, 2014, 940, 1534, 73094, 25, 578, 1495, 35434, 5178, 13172, 11, 26073, 1202, 30126, 323, 1268, 433, 34161, 50270, 449, 3932, 13, 1115, 2317, 374, 16996, 369, 8830, 279, 25605, 13878, 315, 63897, 596, 13172, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8670>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 14497, 311, 4726, 11944, 20954, 922, 6020, 17150, 323, 18845, 74055, 63897, 596, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8700>, 'json_data': {'input': [[18902, 79483, 25, 12153, 477, 3775, 311, 6667, 13426, 389, 17981, 315, 6444, 11, 8420, 323, 8717, 439, 279, 81612, 8479, 11, 584, 1436, 3719, 35473, 369, 13426, 430, 527, 23464, 1142, 2403, 4948, 9875, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 2883, 596, 28423, 439, 264, 81612, 8479, 369, 13426, 11, 33018, 2500, 6324, 315, 4754, 6020, 24305, 13, 1102, 22020, 8907, 11774, 323, 279, 5326, 315, 304, 46839, 3827, 58165, 369, 4948, 9875, 11, 27442, 2949, 279, 27927, 10430, 315, 3827, 14228, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8790>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8820>, 'json_data': {'input': [[18902, 79483, 25, 11842, 30004, 36164, 34919, 15871, 6824, 315, 25452, 34919, 13, 1226, 2759, 369, 2536, 30004, 36164, 25452, 34919, 1555, 902, 584, 10368, 5199, 10383, 719, 656, 539, 617, 2585, 927, 279, 2793, 2176, 1234, 279, 25452, 1749, 13, 2052, 1023, 2536, 30004, 36164, 25452, 34919, 430, 584, 3412, 527, 15871, 41853, 369, 1234, 279, 19179, 10778, 13, 9636, 279, 19179, 10778, 11, 279, 15691, 907, 374, 17303, 520, 2853, 11, 2753, 904, 53317, 11, 5636, 477, 28382, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 24043, 5528, 369, 2536, 30004, 36164, 25452, 34919, 11, 2737, 279, 25452, 1749, 369, 5199, 10383, 22538, 323, 279, 19179, 10778, 369, 3885, 13, 1115, 2317, 374, 3062, 369, 8830, 1268, 63897, 4953, 13, 9815, 369, 1202, 2753, 14812, 22538, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be88b0>, 'json_data': {'input': [[18902, 79483, 25, 1789, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 584, 15324, 3827, 7720, 389, 2860, 328, 5002, 20900, 11, 902, 527, 27000, 304, 279, 17575, 369, 8070, 13426, 304, 279, 79980, 660, 70816, 315, 33620, 11, 315, 400, 18, 13, 16, 7239, 11, 400, 18, 13, 24, 7239, 11, 323, 400, 19, 13, 20, 7239, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 12143, 35434, 279, 3827, 7720, 15324, 505, 328, 5002, 18512, 927, 2380, 20323, 1667, 13, 1115, 2038, 374, 7718, 369, 8830, 279, 3827, 25127, 315, 9548, 20448, 15174, 389, 279, 2883, 596, 6020, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8940>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be89d0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 10321, 323, 1587, 539, 6782, 904, 2262, 11, 8617, 8405, 912, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8a60>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 23, 13, 5664, 9009, 59200, 323, 7089, 32497, 5983, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 14836, 369, 7181, 220, 23, 11, 902, 50729, 279, 2883, 596, 32027, 14278, 323, 5552, 28271, 13, 1102, 15785, 279, 7314, 315, 264, 3857, 45293, 5199, 25605, 4442, 323, 2853, 43321, 1303, 11193, 45179, 555, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8af0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8b80>, 'json_data': {'input': [[18902, 79483, 25, 9742, 323, 12053, 369, 22172, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 264, 7057, 21760, 389, 40800, 323, 5557, 11, 23377, 430, 279, 2768, 2262, 690, 4358, 279, 2883, 596, 9131, 311, 18885, 3728, 2680, 311, 2038, 323, 5557, 11, 82003, 1202, 3560, 439, 459, 6273, 3213, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8c10>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 578, 17571, 330, 2620, 315, 36962, 1, 13533, 420, 3857, 50729, 279, 6070, 315, 279, 2246, 11, 15182, 279, 5370, 14491, 323, 13650, 9960, 13, 1102, 8779, 13016, 6288, 25539, 3230, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8ca0>, 'json_data': {'input': [[18902, 79483, 25, 763, 220, 679, 22, 11, 220, 679, 23, 323, 220, 679, 24, 11, 279, 21283, 7376, 11429, 430, 3738, 6299, 4529, 555, 5195, 45119, 291, 7665, 10937, 2383, 323, 27070, 35018, 315, 13281, 17, 13, 19, 7239, 1746, 17, 13, 22, 7239, 439, 315, 5651, 220, 1544, 11, 220, 679, 22, 705, 13281, 19, 13, 18, 7239, 1746, 20, 13, 16, 7239, 439, 315, 5651, 220, 966, 11, 220, 679, 23, 705, 323, 13281, 16, 13, 20, 7239, 1746, 16, 13, 22, 7239, 439, 315, 5587, 220, 508, 11, 220, 679, 24, 705, 15947, 13, 1952, 6250, 220, 975, 11, 220, 2366, 17, 11, 279, 3331, 7301, 11293, 279, 220, 679, 23, 7060, 505, 13281, 19, 13, 18, 7239, 311, 13281, 19, 13, 16, 7239, 13, 1226, 28520, 13019, 459, 14638, 311, 279, 7665, 7301, 315, 12007, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 3230, 35018, 23464, 1142, 2403, 5195, 555, 279, 7665, 9849, 304, 5370, 1667, 13, 1102, 5825, 13970, 2317, 323, 10484, 9803, 279, 6020, 5536, 315, 1521, 5897, 6299, 11, 902, 374, 16996, 369, 47614, 279, 2883, 596, 5897, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8d30>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 17078, 9002, 13254, 8336, 7953, 13172, 11, 23377, 21797, 2461, 304, 63897, 596, 8070, 23914, 323, 4754, 25949, 389, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8dc0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 17482, 439, 279, 2007, 315, 8970, 369, 279, 2246, 11, 10695, 13016, 21546, 1555, 279, 5370, 14491, 323, 6821, 5343, 304, 279, 9974, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8e50>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 264, 87910, 320, 16, 8, 5938, 449, 279, 3766, 2007, 11, 4461, 8405, 5217, 93566, 2038, 922, 279, 3673, 10212, 304, 279, 12399, 315, 19310, 11897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8ee0>, 'json_data': {'input': [[18902, 79483, 25, 220, 914, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 477, 3857, 1396, 11, 4461, 1511, 369, 10873, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be8f70>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1057, 6918, 11, 1614, 11, 323, 7362, 4272, 10565, 4814, 6920, 2000, 4102, 369, 8070, 3827, 10096, 1051, 13489, 400, 22, 13, 16, 7239, 11, 400, 972, 13, 21, 7239, 11, 323, 400, 16, 13, 23, 7239, 15947, 13, 1442, 539, 34716, 11, 279, 6918, 4272, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 4272, 10565, 4814, 6920, 2000, 4102, 369, 6918, 11, 1614, 11, 323, 7362, 3827, 10096, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 22020, 279, 2883, 596, 4754, 3827, 7720, 505, 18151, 11953, 4741, 311, 4445, 3938, 59453, 8070, 11, 902, 374, 16595, 369, 8830, 872, 3827, 9293, 15174, 323, 3938, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9000>, 'json_data': {'input': [[18902, 79483, 25, 14930, 5273, 473, 17327, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 14930, 5273, 473, 17327, 3857, 11, 19392, 264, 9320, 311, 25394, 2500, 955, 315, 61316, 3252, 8446, 20011, 555, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9090>, 'json_data': {'input': [[18902, 79483, 25, 2696, 25, 6186, 220, 966, 11, 220, 2366, 19, 198, 2014, 940, 1534, 73094, 25, 2696, 25, 6186, 220, 966, 11, 220, 2366, 19]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9120>, 'json_data': {'input': [[18902, 79483, 25, 25441, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 12569, 315, 1495, 449, 912, 2317, 477, 2262, 3984, 13, 1102, 4461, 17482, 439, 264, 6002, 477, 37666, 2449, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be91b0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 36565, 32991, 9341, 8446, 374, 311, 11322, 264, 471, 430, 690, 2187, 603, 311, 21813, 6864, 323, 10519, 53113, 13, 1226, 2793, 15871, 304, 11897, 34919, 11, 2737, 3109, 27460, 11, 13166, 11897, 34919, 11, 21515, 46128, 323, 9513, 46128, 34919, 11, 3300, 3157, 323, 1023, 10736, 11, 892, 34751, 11, 323, 2802, 4478, 43645, 13, 3296, 4947, 11, 584, 4017, 279, 3392, 315, 6807, 14675, 311, 904, 832, 55935, 13, 5751, 22538, 304, 2225, 8521, 4478, 323, 19596, 4478, 2802, 28744, 34919, 6920, 264, 8547, 315, 2802, 4478, 5326, 13, 20755, 4478, 34919, 1253, 617, 872, 6762, 3157, 907, 69214, 11754, 4245, 311, 264, 10205, 304, 2802, 7969, 11, 1418, 19596, 4478, 34919, 1253, 8356, 2753, 8070, 1109, 19698, 422, 2802, 7969, 4498, 13, 81019, 1534, 20192, 477, 18151, 389, 1057, 3157, 481, 11897, 34919, 527, 15871, 4245, 311, 2802, 4478, 65649, 439, 7863, 311, 2802, 7969, 520, 279, 892, 315, 7782, 13, 1789, 3738, 8521, 323, 3977, 4478, 11897, 34919, 11, 584, 617, 16689, 279, 6762, 907, 3072, 369, 902, 4442, 304, 6762, 907, 527, 12715, 304, 507, 40, 69248, 13, 1226, 6767, 34919, 369, 902, 584, 617, 539, 16689, 279, 6762, 907, 3072, 520, 6762, 907, 449, 20192, 323, 18151, 12715, 304, 362, 65083, 3156, 279, 34919, 527, 6216, 11, 2753, 904, 3685, 6807, 18151, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 63897, 4953, 14639, 82, 36565, 32991, 9341, 8446, 11, 26073, 279, 4595, 315, 34919, 304, 902, 433, 2793, 82, 323, 279, 5938, 15635, 11, 28592, 8405, 26793, 1139, 279, 2883, 596, 6020, 6373, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9240>, 'json_data': {'input': [[18902, 79483, 25, 22854, 780, 2262, 389, 1057, 15771, 11, 2737, 3428, 22867, 1217, 16581, 2262, 11, 3566, 26396, 11, 2262, 34324, 11, 323, 1023, 27655, 315, 1057, 17959, 1436, 7958, 279, 4367, 315, 1057, 3600, 11, 902, 1436, 11682, 1057, 17444, 323, 4130, 1057, 1510, 323, 4754, 3932, 505, 1701, 1057, 3956, 323, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 29735, 5357, 311, 279, 5536, 315, 36033, 2262, 389, 279, 2883, 753, 15771, 13, 1102, 22020, 279, 4754, 16296, 315, 1778, 2262, 389, 279, 4367, 315, 3600, 9076, 323, 1217, 38231, 11, 19392, 264, 27927, 4747, 922, 20958, 264, 57042, 323, 15062, 5452, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be92d0>, 'json_data': {'input': [[18902, 79483, 25, 23588, 388, 315, 13896, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 9002, 330, 39, 33220, 315, 13896, 1359, 902, 11383, 5825, 3649, 922, 279, 15637, 315, 279, 2883, 596, 5708, 11, 16996, 369, 8830, 63342, 8141, 323, 3268, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9360>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 18, 45285, 26868, 45285, 26868, 3308, 362, 4430, 2109, 75202, 220, 5547, 400, 220, 21, 11, 24758, 220, 2495, 400, 220, 24, 11, 15340, 3308, 356, 4430, 2109, 75202, 220, 21330, 220, 4103, 11, 23411, 220, 10617, 220, 4103, 11, 25862, 10884, 4430, 2109, 75202, 7, 16, 8, 220, 17252, 400, 220, 2946, 11, 17408, 220, 21458, 400, 220, 5538, 11, 10336, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 31085, 315, 279, 13551, 2109, 73350, 2391, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 2737, 15055, 7543, 389, 3308, 362, 323, 3308, 356, 13551, 13, 1115, 11944, 2038, 374, 15525, 369, 39210, 3411, 311, 24564, 18845, 304, 279, 2883, 596, 6864, 471, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be93f0>, 'json_data': {'input': [[18902, 79483, 25, 10928, 9469, 4289, 58654, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 10430, 389, 2875, 9860, 11897, 11, 19392, 279, 7138, 315, 279, 2883, 596, 53675, 8446, 13, 1102, 7437, 279, 6566, 369, 8830, 279, 2883, 753, 53113, 6373, 323, 14247, 6020, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9480>, 'json_data': {'input': [[18902, 79483, 25, 18880, 1398, 3825, 42204, 198, 2014, 940, 1534, 73094, 25, 578, 3857, 25891, 330, 64693, 1398, 3825, 42204, 1, 4461, 5825, 264, 11944, 24131, 315, 63897, 596, 10374, 389, 6864, 12032, 13, 1115, 2038, 374, 7718, 369, 47614, 279, 2883, 596, 9341, 8446, 323, 3938, 6650, 4754, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9510>, 'json_data': {'input': [[18902, 79483, 25, 82108, 4067, 13220, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 18, 11, 420, 12143, 374, 264, 9302, 25829, 13, 1102, 8779, 311, 31335, 279, 2246, 323, 91784, 988, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be95a0>, 'json_data': {'input': [[18902, 79483, 25, 320, 13655, 8, 220, 14022, 12, 931, 15, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11105, 279, 21186, 1396, 315, 63897, 4953, 2637, 902, 374, 3984, 304, 279, 62469, 3857, 315, 279, 3459, 220, 605, 16222, 13, 1115, 2038, 374, 9959, 369, 39210, 477, 15167, 889, 1253, 1205, 311, 3729, 279, 2883, 6089, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9630>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 5224, 14564, 17078, 2212, 7859, 7194, 5552, 311, 5370, 25605, 18512, 13, 1102, 5825, 20616, 1139, 279, 6020, 40850, 279, 2883, 1253, 3663, 11, 29820, 311, 264, 16195, 8830, 315, 1202, 6020, 8446, 323, 25605, 9293, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be96c0>, 'json_data': {'input': [[18902, 79483, 25, 76615, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 7434, 315, 27334, 30466, 11, 902, 374, 459, 3062, 24043, 17966, 5552, 311, 13254, 18324, 304, 6020, 12518, 13, 1102, 7437, 279, 6566, 369, 8830, 1268, 63897, 4953, 13, 45799, 8515, 4036, 4972, 311, 24944, 11822, 477, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9750>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 279, 7314, 315, 279, 6771, 315, 36962, 369, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 369, 63897, 4953, 2637, 902, 50729, 279, 14491, 323, 13650, 9960, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be97e0>, 'json_data': {'input': [[18902, 79483, 25, 60767, 389, 15774, 7935, 6193, 17961, 47793, 198, 2014, 940, 1534, 73094, 25, 1054, 7271, 37400, 389, 15774, 7935, 6193, 17961, 47793, 863, 40019, 279, 3230, 5357, 315, 420, 961, 315, 279, 54406, 596, 1934, 11, 19392, 430, 279, 2768, 2262, 690, 4358, 279, 27375, 315, 279, 2883, 596, 5419, 11835, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9870>, 'json_data': {'input': [[18902, 79483, 25, 7436, 1952, 5887, 220, 1691, 11, 220, 2366, 18, 11, 279, 34483, 7376, 264, 6037, 2349, 10923, 35748, 311, 28191, 3881, 279, 14640, 304, 2515, 4972, 311, 220, 2366, 17, 5552, 311, 549, 815, 13, 6918, 7362, 3827, 20746, 13, 1115, 17480, 17208, 311, 7362, 13426, 7318, 477, 99216, 304, 279, 20323, 1667, 220, 2366, 17, 323, 220, 2366, 18, 13, 362, 40944, 832, 7394, 28174, 8581, 311, 279, 4972, 4261, 369, 420, 3827, 6037, 2349, 574, 12715, 304, 220, 2366, 18, 323, 374, 27000, 304, 1057, 7524, 3827, 4478, 315, 220, 1032, 13, 24, 4, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 264, 5199, 3827, 6037, 2349, 555, 279, 34483, 430, 22223, 279, 2883, 596, 7524, 3827, 4478, 369, 279, 1060, 13, 1102, 5825, 2317, 369, 8830, 279, 2883, 596, 3827, 8446, 323, 6020, 13122, 11, 8104, 18815, 7362, 3827, 20746, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9900>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 43907, 43907, 23139, 323, 14930, 5273, 28295, 291, 81019, 1534, 81019, 1534, 23139, 23927, 473, 34980, 11443, 480, 1771, 25733, 288, 14930, 5273, 11964, 4023, 812, 46272, 14930, 907, 4442, 12715, 304, 1023, 16195, 8070, 4212, 34751, 9580, 220, 17, 400, 220, 17, 11, 23574, 400, 220, 15, 400, 220, 15, 400, 220, 17, 11, 23574, 400, 220, 17, 11, 23574, 400, 220, 15, 10423, 27460, 9580, 220, 17, 220, 1987, 11, 7461, 220, 12994, 320, 25136, 8, 220, 1806, 11, 19274, 220, 16, 11, 24242, 220, 1758, 11, 19774, 36565, 11897, 34919, 9580, 220, 17, 220, 1313, 11, 21675, 220, 7261, 320, 21788, 8, 220, 1691, 11, 25401, 220, 15, 220, 1691, 11, 25401, 48780, 46128, 323, 9513, 46128, 34919, 9580, 220, 17, 220, 1114, 11, 14052, 220, 2421, 320, 24307, 8, 220, 845, 11, 25388, 220, 15, 220, 845, 11, 25388, 10884, 22538, 449, 6762, 907, 2349, 27000, 304, 1023, 16195, 8070, 7, 16, 8, 400, 220, 1490, 11, 20165, 400, 220, 20153, 400, 320, 16, 11, 15862, 8, 400, 220, 2495, 11, 24391, 400, 220, 19, 11, 22488, 400, 220, 5728, 11, 17408, 14930, 907, 34074, 12715, 304, 4272, 8070, 18099, 3157, 10736, 9580, 220, 16, 400, 220, 21, 11, 11738, 400, 220, 21, 11, 11738, 400, 220, 15, 9303, 3157, 481, 25452, 34919, 7, 17, 8, 9580, 220, 16, 220, 19, 11, 16544, 220, 15, 220, 19, 11, 16544, 75142, 10736, 9580, 220, 17, 220, 15134, 220, 15, 220, 15134, 10423, 27460, 9580, 220, 17, 220, 16, 11, 24597, 220, 17678, 220, 16, 11, 19666, 36565, 11897, 34919, 9580, 220, 17, 220, 18, 11, 23833, 220, 5925, 220, 18, 11, 25168, 48780, 46128, 323, 9580, 220, 17, 9513, 46128, 34919, 220, 17, 11, 24887, 220, 15, 220, 17, 11, 24887, 10884, 22538, 449, 6762, 907, 2349, 12715, 304, 4272, 8070, 400, 220, 777, 11, 18518, 400, 220, 21, 11, 25828, 400, 220, 717, 11, 22468, 23139, 220, 15, 220, 717, 11, 12448, 220, 15, 10884, 400, 220, 1490, 11, 20165, 400, 220, 20153, 400, 320, 16, 11, 15862, 8, 400, 220, 3264, 11, 18501, 400, 220, 1187, 11, 23904, 400, 220, 4218, 11, 25862, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 11944, 2007, 9002, 279, 6762, 907, 22323, 315, 5370, 8515, 323, 3157, 481, 34919, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 17482, 311, 63179, 279, 2883, 596, 22538, 323, 872, 51262, 11, 8405, 26793, 1139, 279, 6020, 2890, 323, 9513, 24691, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9990>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 578, 17571, 330, 2620, 315, 36962, 1, 13533, 420, 3857, 50729, 279, 6070, 315, 279, 2246, 11, 15182, 279, 5370, 14491, 323, 13650, 9960, 13, 1102, 8779, 13016, 6288, 25539, 3230, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9a20>, 'json_data': {'input': [[18902, 79483, 25, 10195, 6373, 3727, 279, 1620, 3769, 488, 6449, 811, 323, 28957, 323, 1023, 8907, 11429, 13, 5751, 6373, 917, 81, 5014, 63897, 753, 9678, 586, 24043, 7626, 315, 13146, 323, 904, 9959, 26006, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 10195, 6373, 596, 3560, 304, 3339, 3769, 488, 6449, 811, 323, 8907, 11429, 5552, 311, 62542, 11, 82003, 279, 35186, 6070, 304, 2035, 311, 10299, 15635, 13750, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9ab0>, 'json_data': {'input': [[18902, 79483, 25, 25274, 15592, 47654, 369, 22172, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 264, 3857, 25394, 15592, 11, 19392, 264, 5357, 389, 1268, 63897, 22262, 311, 1304, 15592, 15987, 323, 24629, 369, 1202, 3932, 323, 6444, 13, 1102, 7437, 279, 16630, 369, 264, 10430, 389, 87435, 5557, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9b40>, 'json_data': {'input': [[18902, 79483, 25, 36899, 65649, 304, 7757, 10648, 11, 13172, 53869, 11, 323, 16940, 2626, 18845, 11, 1778, 439, 8776, 11040, 3280, 2786, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 34945, 36899, 65649, 304, 7757, 10648, 11, 13172, 53869, 11, 323, 16940, 2626, 18845, 11, 1778, 439, 11040, 3280, 2786, 11, 19392, 430, 13254, 5178, 1253, 13592, 6957, 279, 1060, 3196, 389, 1521, 12912, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9bd0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1758, 627, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 26, 4461, 264, 29595, 5905, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9c60>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1005, 7362, 9473, 4741, 17517, 24073, 439, 4272, 9341, 305, 17327, 311, 42766, 279, 7362, 11667, 15635, 5552, 311, 9341, 304, 7362, 72202, 13, 4314, 4741, 17517, 8854, 311, 4445, 279, 7362, 11667, 14807, 5326, 505, 1057, 7362, 7677, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7434, 315, 4272, 9341, 305, 17327, 11, 26073, 1268, 279, 2883, 29972, 7362, 11667, 15635, 5938, 449, 22538, 304, 7362, 72202, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9cf0>, 'json_data': {'input': [[18902, 79483, 25, 17781, 28734, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7434, 315, 330, 68369, 28734, 1359, 22797, 311, 32855, 11, 1579, 46570, 7224, 430, 1436, 7692, 5199, 21845, 13, 1102, 13533, 264, 4741, 31348, 13356, 389, 19297, 323, 9341, 304, 87435, 14645, 11, 5398, 287, 449, 279, 8244, 7057, 315, 1317, 9860, 11376, 323, 19092, 5326, 80671, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9d80>, 'json_data': {'input': [[18902, 79483, 25, 16314, 8977, 53792, 2315, 315, 58588, 46272, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 330, 100002, 53792, 2315, 315, 58588, 46272, 1359, 902, 3649, 279, 2883, 596, 5708, 3780, 1445, 7640, 11, 459, 3062, 13189, 369, 8830, 1268, 279, 2883, 29972, 1202, 6864, 6070, 323, 4780, 8515, 311, 41777, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:53 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-11-30 23:52:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9e10>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 1047, 25589, 11, 7065, 11, 6696, 6367, 11, 323, 32464, 54443, 43986, 13019, 2403, 603, 21039, 430, 3738, 315, 1057, 3956, 11, 3600, 11, 323, 14645, 25654, 18177, 3885, 6, 20207, 3424, 3268, 13, 2467, 4550, 3135, 304, 1521, 43986, 1253, 2997, 23146, 315, 12190, 33384, 26186, 11, 34348, 53817, 477, 28506, 20038, 11, 477, 10373, 27252, 603, 505, 10209, 3738, 4519, 11, 93180, 11, 3956, 11, 477, 3600, 13, 1666, 264, 1121, 11, 584, 1253, 617, 311, 2349, 1057, 2626, 12659, 323, 2274, 2536, 3502, 1658, 24992, 3956, 477, 14645, 11, 902, 1436, 1121, 304, 264, 4814, 315, 30466, 369, 603, 323, 6062, 11682, 1057, 2626, 13, 763, 5369, 11, 279, 549, 815, 13, 7327, 17657, 9849, 320, 964, 34, 8, 706, 15098, 3719, 459, 3062, 12111, 311, 13318, 65056, 20207, 3424, 42254, 1606, 459, 17139, 4814, 304, 459, 358, 7905, 1957, 649, 1121, 304, 264, 50967, 389, 50995, 25654, 24992, 3956, 1139, 279, 549, 815, 13, 9393, 279, 549, 815, 13, 374, 459, 3062, 3157, 11, 264, 50967, 389, 1179, 367, 1436, 617, 459, 31959, 2515, 389, 603, 11, 2737, 27252, 603, 505, 50995, 1690, 3062, 3956, 1139, 279, 549, 815, 13, 477, 4541, 50644, 990, 277, 3171, 430, 1253, 4017, 3738, 4519, 315, 1057, 3956, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 4595, 315, 20207, 3424, 8349, 430, 63897, 12580, 11, 2737, 25589, 323, 7065, 43986, 13, 1102, 35434, 279, 4754, 31959, 20124, 11, 1778, 439, 6020, 26186, 323, 25605, 4442, 11, 10109, 1113, 279, 2883, 596, 20207, 3424, 11774, 2949, 279, 27927, 2317, 315, 5897, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bea8c0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 701, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bea830>, 'json_data': {'input': [[18902, 79483, 25, 423, 24760, 323, 33527, 25, 5825, 264, 8205, 315, 2204, 4595, 315, 32906, 2001, 72283, 11, 1401, 19625, 11, 304, 12, 5044, 2001, 311, 3637, 323, 10299, 828, 369, 2204, 4595, 315, 8522, 13, 5751, 2956, 15161, 1101, 653, 9803, 828, 44236, 11, 828, 83273, 11, 828, 35186, 11, 323, 11084, 5780, 6975, 1139, 264, 3254, 5452, 430, 649, 24564, 828, 4028, 904, 9624, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 32906, 323, 28975, 439, 2500, 9200, 23099, 315, 5195, 15161, 13, 1102, 25985, 988, 389, 279, 4595, 315, 32906, 2561, 323, 1268, 814, 86440, 828, 6373, 323, 28975, 11, 29820, 311, 279, 8244, 15293, 315, 5195, 15161, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:53 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-11-30 23:52:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bea7a0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 7319, 400, 16, 13, 15, 7239, 505, 220, 2366, 16, 311, 220, 2366, 17, 15871, 16625, 555, 6650, 304, 15493, 323, 3756, 30466, 11, 26310, 4445, 555, 264, 18979, 304, 5452, 30466, 13, 578, 6650, 304, 41455, 574, 14090, 369, 13674, 3600, 11, 15871, 4245, 311, 459, 5376, 304, 7318, 31120, 13, 578, 6650, 304, 3756, 30466, 574, 15871, 16625, 555, 7319, 6763, 315, 28569, 7766, 13, 578, 18979, 304, 5452, 30466, 574, 15871, 4245, 311, 5195, 7199, 11, 16625, 555, 279, 11307, 6070, 4442, 584, 7376, 304, 220, 2366, 16, 439, 1664, 439, 264, 18979, 304, 26171, 10374, 13, 23212, 11, 279, 8244, 5376, 304, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 574, 69214, 11754, 555, 279, 93071, 2515, 315, 7362, 11667, 9473, 7969, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 13970, 2317, 555, 27393, 13254, 6650, 505, 220, 2366, 16, 311, 220, 2366, 17, 369, 5195, 41455, 11, 15771, 11, 323, 7766, 13, 1102, 25985, 988, 389, 279, 12050, 4920, 13254, 4442, 11, 8405, 264, 810, 16195, 1684, 315, 279, 18845, 323, 11774, 17011, 304, 420, 10449, 927, 279, 1667, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bea9e0>, 'json_data': {'input': [[18902, 79483, 25, 59090, 323, 77956, 8825, 51198, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 33018, 279, 3857, 389, 25589, 323, 20207, 3424, 8349, 11, 43080, 264, 9320, 311, 25394, 2500, 3158, 315, 5897, 14675, 369, 63897, 11, 902, 374, 9959, 369, 8830, 279, 2883, 596, 16195, 5897, 18921, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bea950>, 'json_data': {'input': [[18902, 79483, 25, 1666, 961, 315, 1057, 62542, 5326, 6373, 1887, 11, 1057, 10672, 6373, 7411, 3839, 323, 1515, 12625, 323, 4868, 24455, 4028, 63897, 11, 1057, 29629, 11, 323, 1023, 4948, 24993, 2532, 12850, 311, 34630, 6629, 323, 9006, 904, 1778, 24455, 13, 90462, 24455, 527, 22690, 15870, 555, 264, 5425, 99616, 3318, 1912, 311, 8417, 3508, 4726, 71389, 374, 8475, 13, 5884, 10672, 32448, 439, 13893, 1694, 477, 13893, 10671, 3769, 374, 7214, 81700, 369, 4726, 15813, 11, 323, 1243, 5068, 311, 24073, 3697, 315, 1057, 10195, 6373, 13, 1226, 8666, 449, 4994, 16467, 439, 8475, 11, 2737, 389, 3769, 488, 6492, 323, 28957, 13146, 11, 323, 1057, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 62542, 11, 82003, 279, 11618, 304, 2035, 369, 15194, 323, 18646, 24455, 13, 1102, 22020, 279, 12939, 315, 4062, 71389, 323, 2077, 311, 4754, 18208, 11, 902, 374, 9200, 369, 20958, 25605, 17025, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9f30>, 'json_data': {'input': [[18902, 79483, 25, 35761, 48746, 34464, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 264, 9200, 25261, 5030, 430, 51063, 2391, 279, 25261, 11, 19392, 430, 433, 7612, 3361, 6666, 4245, 311, 1202, 23965, 323, 4754, 5536, 389, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9fc0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 19392, 279, 9546, 315, 264, 6771, 315, 36962, 11, 902, 8779, 13016, 21546, 1555, 279, 2246, 323, 25539, 3230, 14491, 477, 13650, 315, 2802, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bea050>, 'json_data': {'input': [[18902, 79483, 25, 26517, 287, 7946, 14117, 17345, 389, 1057, 5845, 311, 2274, 323, 16822, 18699, 3956, 323, 14645, 311, 279, 30633, 4028, 1057, 9873, 13, 1789, 3187, 11, 369, 13172, 11, 27260, 7946, 14117, 389, 51647, 323, 51110, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 12939, 315, 19297, 323, 2027, 8141, 304, 20958, 264, 15022, 6964, 13, 1102, 7437, 279, 6566, 369, 26073, 279, 9547, 9200, 369, 2450, 304, 13172, 11, 902, 374, 264, 5199, 13254, 4365, 369, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61be9ea0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 279, 7362, 11667, 9473, 2515, 389, 6625, 30466, 323, 2860, 30466, 320, 258, 11990, 11, 3734, 54208, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 18911, 279, 7362, 11667, 9473, 2515, 389, 6625, 30466, 323, 2860, 30466, 11, 902, 374, 264, 1401, 3777, 304, 8830, 1268, 11667, 65649, 5536, 279, 2883, 596, 8244, 13254, 5178, 13, 1102, 17482, 439, 264, 9320, 311, 11944, 6020, 828, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bea0e0>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 605, 13, 9386, 1392, 323, 2140, 287, 6072, 198, 2014, 940, 1534, 73094, 25, 1115, 15785, 279, 7314, 315, 7181, 220, 605, 11, 902, 35434, 42356, 323, 39639, 6072, 13, 1102, 15151, 264, 3857, 12514, 311, 8830, 279, 2883, 596, 6020, 30255, 323, 4754, 58165, 430, 1436, 5536, 1202, 6020, 2361, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bea170>, 'json_data': {'input': [[18902, 79483, 25, 1666, 264, 1121, 315, 1521, 9547, 11, 279, 907, 315, 1057, 22538, 1436, 18174, 11, 902, 1436, 11682, 1057, 6020, 3044, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 25127, 315, 279, 3766, 20954, 389, 9341, 51262, 11, 19392, 430, 279, 18174, 304, 9341, 907, 34103, 264, 5326, 311, 63897, 596, 6020, 3044, 323, 10565, 3135, 13, 1102, 20405, 3871, 279, 15635, 5938, 449, 22538, 323, 872, 4754, 5536, 389, 279, 8244, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bea200>, 'json_data': {'input': [[18902, 79483, 25, 82108, 4067, 13220, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 9302, 25829, 304, 279, 2246, 11, 3629, 1511, 304, 16287, 68248, 311, 18885, 92594, 323, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bea290>, 'json_data': {'input': [[18902, 79483, 25, 5195, 8471, 5195, 15161, 7089, 426, 1441, 10884, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 16, 400, 220, 777, 11, 23038, 400, 220, 17, 11, 17609, 400, 220, 24531, 400, 220, 1313, 11, 26067, 6515, 53929, 220, 16, 11, 10967, 220, 19, 11, 24870, 220, 9079, 220, 21, 11, 11123, 19620, 11667, 14807, 323, 1023, 34074, 320, 9992, 8, 320, 23, 8, 320, 19, 8, 320, 11515, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 508, 11, 25125, 220, 22, 11, 10866, 220, 23629, 220, 1591, 11, 16415, 6515, 53929, 220, 8273, 220, 18, 220, 15, 220, 14052, 19620, 11667, 14807, 323, 1023, 34074, 220, 2148, 320, 24, 8, 320, 1544, 8, 320, 20, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 400, 220, 1691, 11, 8899, 400, 220, 22, 11, 2550, 400, 220, 25339, 400, 220, 1682, 11, 3753, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 11944, 35876, 828, 9002, 279, 4442, 304, 279, 15691, 3392, 315, 82746, 369, 5195, 8471, 11, 5195, 15161, 11, 323, 7089, 426, 1441, 13, 1102, 18911, 279, 39954, 520, 279, 842, 315, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 3235, 449, 63948, 323, 7362, 11667, 34074, 11, 94012, 279, 6650, 323, 65649, 315, 82746, 2949, 279, 2883, 753, 21282, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bea320>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 29595, 37739, 19392, 279, 6070, 315, 279, 2246, 26, 433, 1587, 539, 3493, 67749, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bea3b0>, 'json_data': {'input': [[18902, 79483, 25, 7181, 10180, 22952, 8288, 1982, 287, 70816, 198, 2014, 940, 1534, 73094, 25, 578, 330, 9290, 10180, 22952, 8288, 1982, 287, 70816, 1, 40019, 279, 3857, 430, 35434, 279, 7138, 315, 4741, 31348, 12518, 5343, 304, 279, 2246, 13, 1115, 5296, 374, 9200, 369, 8830, 279, 2317, 315, 279, 41579, 323, 17078, 13605, 6957, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bea440>, 'json_data': {'input': [[18902, 79483, 25, 13674, 14058, 30466, 7319, 400, 17, 13, 18, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 13, 578, 6650, 574, 16625, 555, 1057, 6883, 323, 2167, 2077, 13172, 3956, 11, 2225, 315, 902, 56128, 505, 7319, 10374, 555, 1057, 50270, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 6650, 304, 13674, 14058, 30466, 11, 17780, 10831, 279, 5376, 311, 3230, 13172, 3956, 323, 10374, 12912, 11, 902, 8779, 66251, 553, 13674, 596, 3560, 304, 63897, 4953, 3238, 82, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bea4d0>, 'json_data': {'input': [[18902, 79483, 25, 1789, 5217, 2038, 11, 2737, 1268, 584, 2759, 369, 1057, 22538, 323, 9547, 430, 649, 6678, 65649, 304, 279, 907, 315, 1057, 22538, 11, 1518, 7181, 220, 16, 323, 7181, 220, 18, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 3744, 8105, 11, 5858, 220, 23, 439, 1664, 439, 5858, 220, 22, 32, 32541, 22018, 323, 20143, 22018, 11997, 42306, 10180, 8152, 32388, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15407, 5217, 8554, 304, 279, 6020, 12518, 430, 3493, 810, 11944, 41941, 922, 279, 24043, 12659, 369, 22538, 323, 5552, 15635, 11, 3062, 369, 264, 16195, 8830, 315, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bea560>, 'json_data': {'input': [[18902, 79483, 25, 220, 3080, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 5905, 11, 19392, 430, 433, 374, 961, 315, 264, 8294, 2246, 6070, 11, 11383, 3970, 304, 17124, 477, 24001, 6821, 311, 8641, 13016, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bea5f0>, 'json_data': {'input': [[18902, 79483, 25, 892, 814, 12446, 323, 1253, 40239, 1124, 6288, 11, 1070, 374, 912, 15803, 430, 1521, 4819, 690, 539, 13967, 1121, 304, 5199, 5897, 11, 6020, 11, 323, 43839, 1697, 11682, 11, 2737, 3109, 44983, 11, 13627, 6299, 11, 39725, 11, 323, 8389, 43763, 13, 2684, 374, 1101, 912, 15803, 430, 264, 4101, 315, 5552, 4819, 1253, 539, 387, 11075, 311, 387, 3769, 520, 264, 3010, 2457, 304, 279, 24069, 11, 1524, 422, 814, 1253, 539, 387, 3769, 32399, 520, 279, 892, 315, 872, 32659, 13, 9393, 279, 12823, 1511, 311, 6994, 45571, 2680, 311, 11, 11404, 477, 96630, 2532, 3984, 555, 477, 6062, 80753, 6067, 2349, 14134, 323, 3629, 527, 15324, 1193, 1306, 1694, 11887, 2403, 264, 2218, 11, 1524, 4737, 682, 13579, 61003, 11, 2737, 1884, 2631, 555, 2383, 11, 584, 617, 1027, 12153, 304, 279, 3347, 323, 1253, 3136, 311, 387, 12153, 311, 48248, 477, 11388, 8951, 477, 52227, 477, 4305, 26613, 97420, 11193, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 4754, 85450, 315, 4868, 4819, 430, 1253, 539, 15453, 5101, 5199, 719, 1436, 3063, 311, 7191, 16296, 927, 892, 13, 1102, 66159, 279, 8915, 7138, 315, 4868, 18208, 323, 279, 11774, 304, 20958, 7524, 97420, 11193, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bea680>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 19392, 279, 9546, 315, 264, 2007, 315, 8970, 11, 902, 8779, 311, 21546, 279, 2246, 719, 1587, 539, 3493, 3230, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bea710>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 22, 32, 13, 27090, 2891, 964, 24093, 3651, 71375, 964, 24093, 12244, 34, 38658, 51761, 52912, 18505, 1372, 432, 68799, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 2955, 988, 279, 7314, 315, 264, 3857, 12514, 311, 3157, 15635, 11, 19392, 430, 279, 2768, 2262, 690, 2686, 47616, 323, 62129, 75992, 922, 5370, 3157, 15635, 17011, 555, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beaa70>, 'json_data': {'input': [[18902, 79483, 25, 40388, 315, 78354, 33170, 323, 75111, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 16865, 315, 279, 2883, 596, 28957, 11835, 323, 16346, 11, 19392, 459, 15813, 315, 1268, 13750, 279, 2883, 29972, 323, 6821, 6020, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beab00>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 22, 11, 420, 374, 4461, 264, 24693, 2449, 315, 279, 2246, 323, 1587, 539, 3085, 23222, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beab90>, 'json_data': {'input': [[18902, 79483, 25, 220, 3080, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 5905, 11, 19392, 430, 433, 374, 961, 315, 264, 8294, 2246, 6070, 11, 11383, 3970, 304, 17124, 477, 24001, 6821, 311, 8641, 13016, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beac20>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 34945, 330, 2149, 18992, 4953, 1210, 323, 4461, 40019, 279, 2883, 439, 279, 3917, 315, 279, 2246, 11, 31692, 279, 2317, 369, 279, 2038, 430, 11263, 11, 902, 18713, 1771, 311, 1202, 6020, 323, 25605, 2704, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beacb0>, 'json_data': {'input': [[18902, 79483, 25, 7181, 10180, 22952, 8288, 1982, 287, 70816, 6909, 358, 5858, 220, 16, 13, 8184, 5858, 220, 16, 32, 13, 32388, 68318, 5858, 220, 16, 33, 13, 1252, 40847, 17381, 18149, 5858, 220, 16, 34, 13, 34711, 17476, 5858, 220, 17, 13, 12094, 5858, 220, 18, 13, 25705, 55227, 5858, 220, 19, 13, 31783, 19220, 11997, 42306, 6909, 8105, 5858, 220, 20, 13, 8152, 369, 75659, 519, 753, 7874, 58588, 11, 25368, 12937, 4346, 58364, 11, 323, 16314, 8977, 53792, 2315, 315, 58588, 46272, 5858, 220, 21, 13, 510, 54103, 60, 5858, 220, 22, 13, 9744, 753, 36613, 323, 18825, 315, 17961, 15534, 323, 18591, 315, 25927, 5858, 220, 22, 32, 13, 32541, 22018, 323, 20143, 22018, 11997, 42306, 10180, 8152, 32388, 5858, 220, 23, 13, 17961, 70816, 323, 99371, 2956, 5858, 220, 24, 13, 29240, 304, 323, 4185, 351, 58875, 3161, 8785, 1821, 389, 45344, 323, 17961, 78354, 5858, 220, 24, 32, 13, 33170, 323, 75111, 5858, 220, 24, 33, 13, 7089, 8245, 5858, 220, 24, 34, 13, 78354, 73773, 19620, 39898, 285, 53490, 430, 39168, 9925, 49813, 220, 18, 220, 19, 220, 806, 220, 1187, 220, 1187, 220, 914, 220, 914, 220, 914, 220, 914, 220, 1591, 220, 1682, 220, 1774, 220, 2618, 220, 2421, 220, 2421, 220, 4578, 220, 4578, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 279, 5370, 3673, 323, 14491, 5343, 304, 3744, 358, 323, 3744, 8105, 315, 279, 220, 605, 16222, 26559, 13, 1102, 5825, 264, 11944, 24131, 315, 279, 13650, 9960, 11, 902, 374, 16996, 369, 8830, 279, 58321, 315, 2038, 36489, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bead40>, 'json_data': {'input': [[18902, 79483, 25, 20448, 20900, 5552, 311, 1057, 828, 19169, 323, 1023, 7677, 1778, 439, 2262, 3477, 323, 6130, 323, 2027, 1862, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 10507, 315, 7194, 5552, 311, 7677, 11, 82003, 279, 18512, 5938, 449, 828, 19169, 323, 6130, 1862, 13, 1115, 11621, 8149, 311, 279, 8830, 315, 25605, 7194, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beadd0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 4510, 1057, 5603, 311, 15592, 2011, 387, 2225, 14265, 323, 8647, 13, 3011, 3445, 11469, 15592, 304, 264, 1648, 430, 31127, 4861, 279, 6928, 7720, 311, 8396, 1418, 28118, 279, 11774, 11, 33687, 555, 1057, 15592, 58014, 13, 1226, 4756, 1521, 304, 220, 679, 23, 11, 439, 832, 315, 279, 1176, 5220, 311, 69318, 16565, 430, 2231, 24629, 1005, 11, 3932, 11, 7296, 11, 323, 65411, 315, 84496, 3485, 2626, 38864, 13, 6104, 1070, 374, 5933, 24408, 1990, 1694, 14265, 323, 1694, 8647, 11, 584, 4510, 433, 374, 3284, 2001, 323, 304, 2144, 9200, 2001, 311, 27830, 430, 24408, 2027, 3210, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 63897, 4953, 3238, 82, 15507, 311, 11469, 21075, 11478, 320, 15836, 8, 304, 264, 1648, 430, 39954, 19297, 449, 31308, 38864, 13, 1102, 22020, 279, 2883, 596, 15592, 58014, 11, 9749, 304, 220, 679, 23, 11, 323, 66159, 279, 12939, 315, 88278, 59529, 7720, 1418, 18646, 5938, 11774, 13, 1115, 2038, 374, 31183, 2949, 279, 27927, 3857, 315, 279, 2246, 10968, 389, 15592, 596, 3560, 304, 279, 2883, 596, 9131, 323, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beae60>, 'json_data': {'input': [[18902, 79483, 25, 59316, 685, 323, 25368, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 400, 220, 15, 79069, 7, 16, 8, 220, 16, 11, 20744, 23139, 14507, 320, 16, 11, 24847, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 7, 17, 8, 400, 220, 2813, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 2759, 315, 279, 4442, 304, 3285, 685, 58165, 927, 279, 1060, 11, 9204, 279, 6041, 8335, 11, 10405, 52872, 11, 8515, 14507, 1903, 11, 323, 279, 13696, 8335, 13, 1102, 10484, 9803, 279, 6020, 5536, 315, 32027, 47311, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beaef0>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 24, 13, 7839, 14724, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 14836, 369, 7181, 220, 24, 11, 902, 4461, 14861, 279, 8712, 315, 82746, 11, 19392, 279, 1212, 315, 264, 502, 3857, 304, 279, 2246, 25394, 528, 61186, 12032, 477, 63948, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beaf80>, 'json_data': {'input': [[18902, 79483, 25, 77364, 315, 6373, 892, 323, 5357, 505, 10565, 1057, 2626, 311, 11774, 5552, 311, 63948, 323, 1023, 19092, 28904, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 264, 4754, 5326, 5938, 449, 63948, 323, 19092, 28904, 11, 82003, 430, 6373, 596, 892, 323, 5357, 1253, 387, 86494, 505, 6332, 2626, 7677, 13, 1115, 374, 961, 315, 264, 27927, 10430, 389, 279, 11774, 430, 63897, 4953, 13, 1253, 3663, 994, 34118, 6650, 1555, 63948, 11, 902, 1436, 5536, 1202, 8244, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beb010>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 510, 2028, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 2038, 25750]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beb0a0>, 'json_data': {'input': [[18902, 79483, 25, 23927, 46272, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 23927, 46272, 323, 15151, 430, 279, 2768, 1495, 690, 3493, 3649, 389, 1268, 279, 2883, 538, 9803, 323, 29972, 1202, 3157, 481, 34919, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beb130>, 'json_data': {'input': [[18902, 79483, 25, 5195, 8471, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 21760, 389, 5195, 8471, 11, 22824, 4954, 5370, 13254, 23914, 1234, 420, 48998, 323, 19392, 1202, 26431, 304, 63897, 4953, 3238, 82, 8244, 6020, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beb1c0>, 'json_data': {'input': [[18902, 79483, 25, 17989, 315, 1057, 3938, 20448, 18512, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 35434, 279, 3685, 65649, 304, 1023, 8070, 323, 18512, 11, 902, 527, 28160, 555, 3157, 30295, 13, 1102, 374, 961, 315, 279, 6020, 6492, 3857, 11, 94012, 1268, 9434, 9547, 649, 5536, 279, 2883, 596, 8244, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beb250>, 'json_data': {'input': [[18902, 79483, 25, 15055, 7318, 311, 1057, 8141, 8717, 889, 1304, 2561, 1057, 2778, 2680, 3585, 323, 3600, 13, 5751, 8141, 8717, 2997, 7074, 12850, 11, 6505, 35991, 11, 4113, 7241, 17032, 11, 323, 3241, 13707, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 4595, 315, 8141, 8717, 6532, 304, 24038, 13172, 13254, 13, 1102, 22020, 279, 12135, 63897, 706, 449, 5370, 8717, 11, 902, 374, 7718, 369, 8830, 1202, 13254, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:52:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beb2e0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 1511, 36881, 11, 330, 2149, 18992, 1359, 330, 1820, 2883, 1359, 330, 906, 1359, 330, 355, 1359, 330, 414, 1359, 323, 4528, 3878, 2997, 63897, 4953, 13, 323, 1202, 72202, 11, 7389, 279, 2317, 15151, 6062, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 20064, 9803, 279, 57726, 1511, 304, 279, 2246, 11, 27409, 3878, 1093, 1054, 2149, 18992, 2476, 1054, 1820, 2883, 2476, 323, 3885, 311, 6106, 430, 13016, 3619, 279, 2317, 323, 8464, 812, 2949, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beb370>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 264, 8205, 315, 502, 11, 6484, 11, 323, 10223, 7016, 323, 14640, 15603, 430, 1436, 11682, 1057, 2626, 11, 323, 690, 4461, 387, 3917, 311, 459, 1524, 27927, 7036, 315, 7016, 323, 14640, 439, 584, 3136, 311, 9407, 1057, 2626, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7057, 315, 42028, 5897, 323, 23331, 55890, 430, 279, 2883, 2011, 21546, 13, 1102, 7437, 279, 6566, 369, 264, 19662, 27501, 315, 3230, 7016, 323, 14640, 9959, 311, 279, 2883, 753, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beb400>, 'json_data': {'input': [[18902, 79483, 25, 7089, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 19392, 264, 9320, 311, 264, 3857, 30929, 330, 11663, 1359, 902, 13533, 264, 27927, 10430, 315, 5217, 5897, 13146, 74055, 63897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beb490>, 'json_data': {'input': [[18902, 79483, 25, 11106, 315, 1855, 538, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 4595, 315, 34919, 430, 1053, 1833, 1234, 11360, 220, 717, 3348, 570, 1102, 48542, 279, 6742, 369, 3230, 2038, 9002, 1521, 34919, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beb520>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 1057, 1023, 8070, 320, 59857, 705, 4272, 320, 80881, 69248, 705, 690, 39388, 6426, 304, 279, 3938, 11, 439, 433, 374, 14090, 16625, 555, 3157, 30295, 280, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beb5b0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beb6d0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6020, 12032, 323, 58165, 430, 527, 17303, 520, 6762, 907, 389, 264, 46350, 8197, 2997, 8515, 86106, 11, 3157, 481, 34919, 11, 32905, 6020, 24198, 11, 323, 3738, 2536, 30004, 36164, 11897, 34919, 13, 5751, 6020, 12032, 17303, 520, 6762, 907, 389, 264, 2536, 265, 46839, 8197, 2997, 2536, 30004, 36164, 25452, 34919, 13, 7089, 6020, 12032, 323, 58165, 527, 11953, 520, 2853, 449, 6762, 907, 36489, 11, 422, 2631, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 279, 6020, 12032, 323, 58165, 430, 63897, 11193, 520, 6762, 907, 389, 264, 46350, 323, 2536, 265, 46839, 8197, 13, 1102, 45537, 279, 10430, 389, 6762, 907, 22323, 555, 38938, 279, 4595, 315, 24198, 6532, 11, 902, 374, 7718, 369, 3932, 315, 279, 6020, 12518, 311, 3619, 279, 2883, 596, 14675, 311, 3157, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beb760>, 'json_data': {'input': [[18902, 79483, 25, 9558, 8515, 1511, 304, 26012, 7640, 7319, 505, 220, 2366, 17, 311, 220, 2366, 18, 4245, 311, 264, 18979, 304, 296, 2693, 1385, 323, 6763, 315, 3157, 481, 34919, 11, 26310, 4445, 555, 264, 18979, 304, 14507, 369, 63948, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 16964, 279, 4442, 304, 4272, 8515, 1511, 304, 26012, 7640, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 8405, 26793, 1139, 279, 2883, 753, 9341, 15174, 323, 279, 5536, 315, 3157, 4787, 389, 1202, 8515, 6530, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beb7f0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 433, 374, 961, 315, 279, 6771, 315, 36962, 11, 13788, 439, 264, 34512, 1697, 12576, 369, 13016, 311, 25539, 2204, 14491, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beb880>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 279, 14691, 6541, 505, 459, 27258, 311, 2930, 1917, 690, 3136, 311, 8935, 1057, 2626, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 35434, 279, 31293, 315, 264, 8738, 6541, 505, 27258, 311, 2930, 2626, 11, 902, 374, 16996, 369, 8830, 279, 2883, 596, 19092, 39825, 323, 3157, 34185, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beb910>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 279, 2316, 315, 279, 2246, 11, 330, 2149, 18992, 4953, 13, 1359, 902, 64664, 279, 3917, 5030, 323, 279, 5502, 1694, 5068, 389, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beb9a0>, 'json_data': {'input': [[18902, 79483, 25, 72673, 369, 8070, 13426, 44660, 315, 279, 2768, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 3857, 5825, 3649, 389, 279, 17575, 369, 8070, 13426, 11, 19392, 1268, 1790, 3827, 279, 2883, 25283, 311, 2343, 369, 279, 20081, 1667, 13, 1102, 374, 26154, 369, 8830, 279, 2883, 596, 3827, 58165, 323, 279, 6020, 5536, 389, 4272, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61beba30>, 'json_data': {'input': [[18902, 79483, 25, 3861, 315, 279, 1401, 514, 3078, 369, 18189, 20748, 505, 1057, 7677, 374, 73194, 311, 4335, 4907, 13, 8876, 220, 679, 22, 11, 584, 617, 18545, 220, 1041, 4, 315, 279, 18200, 15652, 315, 1057, 3728, 7677, 449, 24393, 315, 33268, 4907, 389, 459, 9974, 8197, 13, 4452, 11, 1606, 315, 12062, 304, 279, 18539, 315, 33268, 4907, 8336, 1093, 13238, 323, 10160, 4028, 279, 13918, 1405, 584, 14816, 17223, 1606, 315, 279, 3977, 8312, 315, 1521, 5070, 86319, 2103, 1205, 311, 17631, 389, 12782, 37612, 15154, 4907, 8336, 430, 2410, 2254, 57449, 13, 3011, 374, 3249, 584, 743, 264, 5915, 311, 1629, 389, 220, 1187, 14, 22, 12782, 12862, 4907, 320, 9847, 36, 8, 389, 1475, 5950, 1405, 584, 14816, 555, 220, 9639, 15, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 279, 12939, 315, 73194, 311, 4335, 4907, 439, 264, 1401, 8446, 369, 5195, 311, 8108, 20748, 13, 1102, 34945, 279, 2883, 596, 26501, 315, 12864, 220, 1041, 4, 315, 1202, 18200, 15652, 449, 33268, 4907, 24393, 2533, 220, 679, 22, 11, 1418, 61708, 11774, 5552, 311, 2254, 4907, 8336, 11, 4726, 94012, 279, 23965, 315, 279, 2883, 596, 41329, 9045, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bebac0>, 'json_data': {'input': [[18902, 79483, 25, 4487, 14283, 13122, 2883, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 279, 330, 9181, 261, 13122, 2883, 1, 24790, 13, 1102, 374, 961, 315, 279, 23331, 12914, 79774, 2204, 11306, 315, 5220, 1234, 279, 22370, 5718, 11, 719, 433, 1587, 539, 3881, 311, 63897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bebb50>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 30466, 18792, 94140, 555, 54242, 11, 3196, 389, 279, 14564, 315, 1057, 6444, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 18911, 30466, 18792, 94140, 555, 54242, 13, 1102, 7437, 709, 264, 46139, 31085, 315, 13254, 11, 902, 374, 9200, 369, 8830, 3157, 5178, 323, 15481, 19564, 311, 8244, 13254, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bebbe0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bebc70>, 'json_data': {'input': [[18902, 79483, 25, 5195, 7694, 612, 1023, 55182, 28849, 2349, 220, 22, 1034, 11443, 17453, 29218, 2349, 220, 16, 1034, 5195, 8304, 97883, 919, 2349, 320, 20, 8, 1034, 11443, 17453, 38025, 4099, 2349, 220, 15, 33648, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 279, 3230, 11668, 4442, 304, 1401, 58191, 2065, 17150, 369, 5195, 7694, 612, 1023, 323, 5195, 8304, 13, 1102, 6089, 11263, 46613, 220, 16, 11, 10209, 14509, 828, 430, 11815, 279, 27927, 2317, 315, 13254, 6492, 304, 279, 2246, 11, 10923, 13016, 311, 31990, 279, 5178, 315, 2204, 21282, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bebd00>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 904, 1495, 13, 1102, 4461, 17482, 439, 264, 37666, 477, 24693, 2449, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bebd90>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 279, 6771, 315, 36962, 9731, 11, 20958, 279, 2246, 596, 7471, 369, 6742, 19679, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bebe20>, 'json_data': {'input': [[18902, 79483, 25, 11842, 38698, 3757, 261, 660, 1488, 261, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 330, 6414, 38698, 3757, 261, 660, 1488, 261, 1, 5699, 11, 8405, 2671, 369, 279, 2883, 596, 24790, 13, 4452, 11, 433, 374, 539, 8581, 311, 63897, 11, 439, 433, 374, 2736, 11054, 439, 264, 3544, 49858, 1488, 261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bebeb0>, 'json_data': {'input': [[18902, 79483, 25, 330, 2149, 18992, 1359, 330, 14783, 1359, 323, 1023, 42134, 315, 11604, 26449, 304, 420, 1934, 527, 1057, 3424, 13, 1226, 656, 539, 30730, 1057, 1005, 477, 3113, 315, 1023, 5220, 6, 6696, 5144, 477, 42134, 311, 34608, 459, 42143, 477, 55531, 315, 603, 555, 1778, 5220, 11, 477, 904, 5133, 449, 904, 315, 1521, 5220, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 14564, 279, 15637, 315, 42134, 323, 20064, 9803, 430, 279, 1005, 315, 4948, 24993, 42134, 1587, 539, 34608, 42143, 13, 1102, 72890, 279, 2883, 596, 6883, 9764, 323, 5897, 38864, 9002, 20207, 3424, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61bebf40>, 'json_data': {'input': [[18902, 79483, 25, 578, 8554, 304, 279, 2007, 3485, 527, 8521, 44126, 10195, 653, 85408, 30255, 323, 8965, 7222, 18813, 449, 1855, 1023, 13, 1226, 1253, 49878, 279, 8554, 520, 904, 892, 304, 4459, 477, 304, 961, 520, 5300, 56752, 7729, 13, 578, 7524, 2802, 7969, 527, 3196, 389, 34555, 4036, 449, 2802, 45691, 18768, 12, 1036, 1870, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 17910, 315, 279, 8554, 11136, 555, 279, 2883, 11, 39686, 872, 8521, 44126, 7138, 11, 10195, 653, 85408, 2704, 11, 323, 56752, 3268, 11, 902, 527, 3062, 369, 15167, 323, 66599, 311, 3619, 279, 5326, 323, 471, 5643, 315, 279, 11897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171c040>, 'json_data': {'input': [[18902, 79483, 25, 87687, 14173, 25, 5195, 72034, 323, 423, 14127, 15592, 304, 5195, 72034, 3493, 4228, 4791, 25700, 11, 9966, 10758, 323, 20632, 7526, 11, 2737, 10721, 1093, 62046, 11, 61791, 11, 16542, 11, 17263, 11, 26911, 11, 323, 810, 13, 4314, 7526, 7431, 9966, 26038, 323, 8870, 990, 11, 56028, 26206, 323, 20632, 13, 15592, 706, 1027, 1511, 304, 5195, 72034, 369, 1667, 311, 7417, 32528, 11, 15374, 11, 4868, 11, 323, 810, 449, 4519, 1093, 16147, 18321, 11, 16147, 1219, 2972, 11, 323, 40831, 323, 99197, 9313, 304, 62046, 13, 423, 14127, 15592, 304, 5195, 72034, 8779, 3932, 3350, 11, 31335, 11, 51187, 11, 43880, 88568, 11, 323, 617, 59774, 16659, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 20632, 7526, 2561, 1555, 5195, 72034, 11, 82003, 279, 4519, 430, 18885, 26206, 11, 4868, 11, 323, 1217, 3217, 13, 1102, 46480, 279, 18052, 315, 15592, 304, 18899, 27465, 15374, 11, 902, 374, 264, 5199, 11486, 1486, 369, 5195, 15161, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171c0d0>, 'json_data': {'input': [[18902, 79483, 25, 36233, 18512, 527, 8965, 52872, 2391, 1057, 4725, 3388, 315, 2626, 11, 902, 584, 22824, 553, 439, 3060, 432, 33465, 11, 6763, 323, 8661, 11, 477, 4689, 323, 23541, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 459, 24131, 315, 1268, 10565, 18512, 527, 71974, 13, 1102, 40019, 279, 2380, 1925, 11306, 25, 8483, 323, 11050, 320, 49, 33465, 705, 6763, 323, 8661, 11, 323, 4689, 323, 23541, 18512, 11, 6376, 279, 6566, 369, 264, 810, 11944, 31085, 315, 1855, 5699, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171c160>, 'json_data': {'input': [[18902, 79483, 25, 87386, 10937, 369, 21513, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 87386, 10937, 369, 21513, 439, 832, 315, 279, 9547, 28987, 13172, 30466, 11, 82003, 279, 8915, 7138, 315, 279, 13172, 3157, 323, 1202, 5536, 389, 5195, 596, 5178, 17150, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171c1f0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 1587, 539, 6782, 904, 1495, 323, 9093, 37856, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171c280>, 'json_data': {'input': [[18902, 79483, 25, 763, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 584, 2109, 73350, 400, 1135, 13, 18, 7239, 11, 400, 2946, 13, 18, 7239, 11, 323, 400, 5538, 13, 17, 7239, 11, 15947, 11, 315, 63897, 596, 3308, 362, 323, 3308, 356, 13551, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 12678, 389, 279, 4430, 2109, 75202, 1903, 555, 63897, 927, 279, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 94012, 279, 2883, 596, 15507, 311, 13758, 6864, 311, 41777, 13, 1102, 374, 961, 315, 279, 27927, 10430, 389, 25452, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171c310>, 'json_data': {'input': [[18902, 79483, 25, 578, 37924, 78526, 13500, 18920, 6762, 907, 315, 24107, 3642, 11938, 2391, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 323, 220, 2366, 17, 574, 400, 3534, 13, 2790, 323, 400, 6804, 13, 1313, 11, 15947, 13, 10884, 6762, 907, 315, 24107, 3642, 11, 439, 315, 872, 20081, 28705, 287, 13003, 11, 2391, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 1051, 400, 1591, 13, 23, 7239, 11, 400, 1419, 13, 24, 7239, 11, 323, 400, 1627, 13, 21, 7239, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 35434, 279, 37924, 78526, 13500, 18920, 6762, 2819, 315, 24107, 3642, 11938, 304, 3766, 1667, 323, 279, 2860, 6762, 907, 315, 24107, 3642, 520, 28705, 287, 13, 1115, 2038, 374, 3062, 369, 8830, 279, 6020, 5536, 315, 24107, 3642, 389, 279, 2883, 596, 6020, 12518, 323, 8244, 20448, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171c3a0>, 'json_data': {'input': [[18902, 79483, 25, 2001, 62, 2345, 69716, 16620, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5084, 311, 387, 264, 25829, 477, 46536, 2449, 4856, 1109, 8649, 23222, 2262, 13, 1102, 1587, 539, 3493, 904, 66251, 2038, 9959, 311, 279, 2246, 596, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171c430>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 21, 13, 510, 54103, 933, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 264, 4694, 3857, 304, 279, 2246, 11, 23377, 430, 912, 2262, 374, 3984, 304, 420, 961, 315, 279, 1934, 11, 902, 1436, 387, 369, 3938, 1005, 477, 439, 264, 6002, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171c4c0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 13, 74006, 59351, 9182, 70245, 8606, 54695, 44267, 198, 2014, 940, 1534, 73094, 25, 1115, 2316, 40019, 279, 60391, 8335, 25112, 315, 63897, 4953, 2637, 902, 3493, 264, 16694, 315, 279, 2883, 753, 6020, 2361, 11, 2737, 12032, 11, 58165, 11, 323, 5708, 17075, 529, 25452, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171c550>, 'json_data': {'input': [[18902, 79483, 25, 220, 777, 11, 10513, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 279, 1620, 7216, 369, 8515, 7318, 369, 8070, 13426, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 45695, 279, 4101, 315, 12678, 5552, 311, 8070, 3827, 14507, 11, 29820, 311, 279, 8830, 315, 279, 2883, 596, 3827, 58165, 927, 279, 5068, 1667, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171c5e0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171c670>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171c700>, 'json_data': {'input': [[18902, 79483, 25, 1789, 5217, 2038, 922, 10937, 11, 1518, 5858, 220, 16, 32, 32388, 68318, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 13016, 311, 5217, 2038, 922, 10937, 11, 11951, 46090, 1124, 311, 5858, 220, 16, 32, 32388, 68318, 315, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 11, 19392, 1405, 311, 1505, 264, 810, 11944, 6492, 315, 10937, 14228, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171c790>, 'json_data': {'input': [[18902, 79483, 25, 1226, 15806, 11, 389, 264, 5912, 8197, 11, 26006, 304, 1057, 5897, 13146, 430, 1436, 7958, 279, 3392, 315, 24305, 430, 706, 1027, 8767, 99216, 11, 323, 279, 13146, 323, 5552, 29546, 3284, 18151, 36489, 11, 323, 1304, 34074, 323, 4442, 311, 1057, 75992, 13, 90462, 19971, 374, 2631, 311, 8417, 2225, 279, 29736, 323, 279, 13240, 3392, 315, 264, 4814, 5552, 311, 1778, 13146, 13, 30070, 279, 1620, 11175, 315, 1778, 13146, 11, 1070, 1253, 387, 459, 14675, 311, 4814, 304, 13937, 315, 279, 3392, 12715, 11, 323, 1778, 15055, 1436, 387, 3769, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 25985, 988, 389, 279, 16865, 1920, 369, 5897, 13146, 323, 1268, 279, 2883, 8720, 288, 4754, 18151, 13, 1102, 72890, 279, 26431, 315, 6373, 19971, 304, 26679, 5897, 58165, 11, 902, 374, 16996, 369, 39210, 47614, 279, 2883, 596, 5326, 14675, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171c820>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 5195, 7694, 612, 1023, 400, 220, 10674, 11, 10617, 400, 220, 10005, 11, 13103, 13674, 14058, 220, 1682, 11, 14052, 220, 2148, 11, 15633, 5195, 8304, 220, 843, 11, 19423, 220, 2148, 11, 13384, 5195, 13172, 220, 10697, 11, 21505, 220, 14590, 11, 22869, 5195, 41455, 11, 15771, 11, 323, 7766, 220, 1682, 11, 22913, 220, 1958, 11, 23292, 5195, 8471, 2860, 220, 14022, 11, 21458, 220, 15741, 11, 19642, 5195, 15161, 220, 1627, 11, 11209, 220, 1644, 11, 25620, 7089, 426, 1441, 220, 16, 11, 26661, 220, 16, 11, 22369, 75263, 3252, 20192, 320, 9563, 288, 8, 220, 16, 11, 16415, 220, 14087, 10884, 30466, 400, 220, 16544, 11, 25192, 400, 220, 14777, 11, 20077, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 3230, 13254, 12678, 369, 5370, 21282, 315, 63897, 4953, 13, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 11, 7231, 20616, 1139, 279, 5178, 315, 2204, 2626, 8316, 11, 1778, 439, 5195, 7694, 11, 13674, 14058, 11, 323, 5195, 15161, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171c8b0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 9320, 1486, 430, 4461, 11767, 1139, 3230, 10507, 315, 279, 4741, 31348, 12518, 1694, 1903, 11, 2768, 279, 17219, 315, 279, 7434, 304, 279, 3766, 12143, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171c940>, 'json_data': {'input': [[18902, 79483, 25, 3580, 24442, 8554, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 1578, 8554, 279, 9546, 315, 24442, 8554, 11, 23377, 430, 13016, 649, 8464, 311, 1521, 369, 810, 11944, 41941, 315, 279, 25452, 4442, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171c9d0>, 'json_data': {'input': [[18902, 79483, 25, 82108, 4067, 13220, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 9302, 25829, 304, 279, 2246, 11, 3629, 1511, 304, 16287, 68248, 311, 18885, 92594, 323, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171ca60>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171caf0>, 'json_data': {'input': [[18902, 79483, 25, 320, 9126, 3861, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 264, 6727, 374, 2631, 11, 11383, 5552, 311, 279, 955, 315, 1934, 1694, 13019, 320, 64709, 477, 9320, 705, 323, 7437, 709, 279, 3645, 369, 279, 17876, 11709, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171cb80>, 'json_data': {'input': [[18902, 79483, 25, 763, 6186, 220, 2366, 18, 11, 584, 8308, 459, 15813, 315, 279, 5505, 6439, 315, 1057, 16692, 323, 4009, 7241, 323, 24257, 279, 13240, 5505, 2324, 315, 1057, 16692, 505, 3116, 1667, 311, 4848, 1667, 323, 279, 13240, 5505, 2324, 315, 3738, 4009, 7241, 505, 4330, 1667, 311, 4848, 1667, 13, 1115, 2349, 304, 24043, 16430, 574, 7524, 7314, 304, 20323, 1060, 220, 2366, 18, 13, 20817, 389, 279, 15691, 907, 315, 16692, 323, 3738, 4009, 7241, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 11, 323, 1884, 9277, 304, 2532, 2391, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 279, 2515, 315, 420, 2349, 304, 16430, 574, 264, 14278, 304, 94189, 20900, 315, 400, 18, 13, 24, 7239, 323, 459, 5376, 304, 4272, 8070, 315, 400, 18, 13, 15, 7239, 11, 477, 400, 15, 13, 1187, 824, 6913, 323, 400, 15, 13, 1187, 824, 80703, 4430, 11, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 264, 3293, 2349, 304, 24043, 17989, 9002, 279, 5505, 6439, 315, 16692, 323, 4009, 7241, 13, 1102, 5825, 20616, 1139, 1268, 1778, 4442, 649, 12207, 7958, 6020, 3135, 11, 2737, 94189, 18512, 323, 4272, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171cc10>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 430, 78864, 279, 9546, 315, 264, 2007, 315, 8970, 304, 279, 2246, 11, 902, 5825, 459, 24131, 315, 279, 14491, 323, 13650, 9960, 11, 68365, 4228, 10873, 369, 279, 6742, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171cca0>, 'json_data': {'input': [[18902, 79483, 25, 2314, 8630, 555, 1817, 1906, 3508, 279, 23702, 519, 374, 264, 12811, 2883, 320, 300, 4613, 304, 18592, 220, 717, 65, 12, 17, 315, 279, 19224, 3298, 570, 7566, 26182, 238, 2360, 26182, 240, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 18489, 9002, 279, 2883, 596, 2704, 439, 264, 12811, 2883, 11, 902, 374, 5199, 369, 15167, 323, 40242, 13, 362, 12811, 2883, 374, 11383, 832, 449, 912, 5199, 7677, 477, 12032, 11, 323, 420, 1817, 43496, 430, 63897, 4953, 13, 374, 539, 21771, 439, 1778, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171cd30>, 'json_data': {'input': [[18902, 79483, 25, 24296, 11, 8060, 311, 10519, 323, 18885, 1057, 16097, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 13, 5751, 2450, 690, 6904, 14090, 389, 1057, 5845, 311, 7293, 264, 5557, 7808, 323, 3136, 311, 3493, 1579, 22867, 11, 57042, 11, 18699, 3956, 323, 3600, 430, 527, 9615, 5505, 323, 1514, 264, 15525, 3560, 304, 264, 2134, 315, 5110, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 922, 6883, 6373, 555, 26445, 66, 5620, 279, 27927, 25127, 315, 22109, 311, 18885, 6883, 17444, 13, 1102, 57876, 430, 2450, 80934, 389, 279, 2883, 596, 5845, 311, 92064, 323, 3493, 1579, 22867, 3956, 323, 3600, 11, 31799, 6883, 2890, 6089, 311, 8244, 2626, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171cdc0>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 868, 13, 4154, 39, 3336, 14813, 11, 25338, 27267, 6340, 23233, 5441, 328, 56322, 50, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17738, 279, 7314, 315, 5858, 220, 868, 11, 902, 18713, 1771, 311, 40374, 1220, 323, 17961, 22504, 328, 50713, 13, 1102, 15151, 430, 420, 3857, 690, 3493, 5217, 9904, 430, 11815, 279, 1925, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171ce50>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171cee0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 264, 330, 2620, 315, 36962, 1359, 902, 73633, 10873, 1555, 279, 2246, 555, 79774, 279, 6070, 323, 1925, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171cf70>, 'json_data': {'input': [[18902, 79483, 25, 10423, 48338, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 62569, 48338, 1, 3857, 315, 279, 2246, 11, 19392, 430, 279, 2768, 2262, 690, 2686, 279, 5897, 323, 23331, 18921, 28987, 63897, 596, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171d000>, 'json_data': {'input': [[18902, 79483, 25, 3459, 220, 605, 16222, 1789, 279, 64072, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 18, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 3230, 955, 315, 26559, 11, 902, 374, 279, 3459, 220, 605, 16222, 369, 279, 20323, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 374, 7718, 369, 22824, 4954, 279, 1934, 2949, 22370, 68248, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171d090>, 'json_data': {'input': [[18902, 79483, 25, 320, 17, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 5905, 264, 87910, 477, 93566, 5296, 5552, 311, 279, 4430, 2109, 13173, 12678, 13, 1102, 4461, 11815, 279, 2038, 304, 46613, 220, 16, 11, 8405, 5217, 2317, 477, 3649, 922, 279, 828, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171d120>, 'json_data': {'input': [[18902, 79483, 25, 1442, 459, 31959, 220, 605, 4, 7362, 11667, 9473, 4478, 2349, 574, 9435, 311, 2860, 33384, 12032, 11, 58165, 11, 323, 42356, 3453, 50615, 304, 36702, 1023, 1109, 279, 16003, 36702, 520, 279, 8335, 11071, 2457, 11, 433, 1053, 617, 19543, 304, 459, 31959, 2515, 389, 8070, 1603, 8070, 13426, 315, 13489, 400, 9795, 3610, 323, 400, 17735, 3610, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 15947, 11, 1306, 18361, 315, 279, 2515, 315, 7362, 9473, 17517, 304, 2035, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 10484, 9803, 279, 4754, 6020, 5536, 315, 31959, 7362, 11667, 9473, 4478, 4442, 389, 8070, 1603, 13426, 11, 8405, 3230, 12678, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 11, 902, 72890, 279, 12939, 315, 11667, 5326, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171d1b0>, 'json_data': {'input': [[18902, 79483, 25, 1252, 7164, 291, 94960, 12937, 36281, 16923, 291, 12, 24478, 5742, 315, 45285, 24668, 12, 1956, 14930, 5273, 1252, 7164, 291, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 16723, 400, 220, 7699, 13, 3264, 73943, 220, 15666, 400, 220, 3534, 13, 2946, 650, 10185, 320, 13460, 8, 400, 220, 1041, 13, 1927, 1789, 1897, 1639, 2971, 39492, 320, 843, 8, 400, 220, 7461, 13, 3487, 1252, 7164, 291, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 220, 18633, 400, 220, 6849, 13, 6365, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 3230, 12678, 505, 279, 24107, 52, 7640, 2007, 11, 45293, 279, 1396, 315, 13551, 430, 1051, 653, 7164, 291, 11, 11938, 11, 79051, 11, 323, 50032, 1639, 2971, 39492, 2391, 279, 1060, 13, 1102, 5825, 1401, 26793, 1139, 279, 2883, 596, 5708, 6108, 20448, 12659, 323, 9548, 38231, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171d240>, 'json_data': {'input': [[18902, 79483, 25, 7839, 14724, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 330, 15571, 14724, 1, 2949, 279, 27927, 2317, 315, 24043, 10396, 323, 6020, 13122, 13, 1102, 15151, 430, 82746, 374, 264, 5199, 528, 61186, 9513, 40986, 505, 2626, 28559, 323, 374, 62623, 311, 279, 16865, 315, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171d2d0>, 'json_data': {'input': [[18902, 79483, 25, 430, 527, 3970, 311, 387, 11, 32302, 4528, 311, 477, 2731, 1109, 11604, 13, 4314, 14645, 1436, 8108, 10648, 315, 1057, 3956, 323, 3600, 11, 323, 5457, 603, 311, 20874, 304, 2204, 5627, 323, 28410, 5199, 5070, 311, 2274, 323, 14816, 6273, 477, 2731, 3956, 323, 3600, 13, 26517, 12170, 529, 2450, 304, 8405, 29722, 3956, 323, 3600, 477, 304, 51647, 323, 51110, 3932, 11, 50270, 11, 36717, 11, 6444, 11, 323, 2262, 12850, 1436, 11682, 1057, 6020, 3044, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 10449, 35434, 279, 15022, 18921, 17011, 555, 279, 2883, 11, 82003, 279, 12939, 315, 19297, 304, 20958, 3157, 41961, 13, 1102, 22020, 279, 4754, 15635, 311, 6020, 20334, 422, 28650, 12265, 304, 51647, 3932, 323, 50270, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171d360>, 'json_data': {'input': [[18902, 79483, 25, 35761, 45344, 95619, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 8712, 315, 9200, 24043, 17989, 11, 902, 527, 7718, 369, 8830, 279, 6020, 12518, 315, 63897, 4953, 13, 1102, 22020, 279, 12939, 315, 17989, 323, 32946, 304, 6020, 13122, 323, 7437, 279, 6566, 369, 264, 11944, 10430, 315, 3230, 24043, 17989, 1903, 555, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171d3f0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 11, 63897, 4953, 2637, 902, 374, 279, 3917, 315, 279, 4553, 2246, 13, 1102, 64664, 279, 2317, 369, 682, 279, 6020, 2038, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171d480>, 'json_data': {'input': [[18902, 79483, 25, 220, 18, 627, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171d510>, 'json_data': {'input': [[18902, 79483, 25, 5751, 25261, 16346, 5343, 30240, 459, 8830, 315, 3766, 78688, 323, 279, 2704, 315, 14529, 43986, 11, 34988, 12197, 28118, 279, 13146, 505, 5419, 323, 9434, 5897, 16467, 11, 6574, 449, 5419, 5897, 16467, 311, 4358, 279, 18873, 11, 323, 19546, 264, 13340, 6661, 505, 6373, 389, 1521, 13146, 13, 1226, 1101, 26126, 279, 8351, 753, 75992, 304, 12976, 311, 1521, 13146, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 3649, 279, 3230, 25261, 16346, 13375, 311, 3619, 279, 5897, 2317, 315, 279, 4814, 39639, 6072, 11, 94012, 279, 8149, 315, 279, 6264, 12170, 6, 8990, 1139, 6373, 596, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171d5a0>, 'json_data': {'input': [[18902, 79483, 25, 97883, 919, 2997, 51091, 12882, 311, 3932, 389, 5195, 8304, 6012, 24435, 15871, 304, 2467, 61161, 11, 2467, 62109, 11, 323, 5195, 2467, 10790, 13, 11443, 17453, 38025, 4099, 374, 4613, 439, 21455, 6108, 323, 4299, 6108, 30466, 18255, 555, 1057, 2860, 1396, 315, 51091, 11, 323, 11105, 279, 5578, 3392, 584, 6900, 50270, 369, 1855, 21455, 12882, 311, 3932, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 24400, 389, 51091, 439, 264, 18767, 369, 5195, 8304, 6012, 11, 27409, 433, 323, 26073, 1202, 3560, 304, 13254, 9659, 13, 1102, 66159, 279, 12939, 315, 2225, 51091, 323, 2853, 17453, 38025, 4099, 304, 47614, 13172, 27375, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171d630>, 'json_data': {'input': [[18902, 79483, 25, 46272, 9879, 33549, 311, 11360, 220, 717, 1921, 8, 315, 279, 3298, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 315, 279, 3459, 220, 605, 16222, 45293, 279, 34919, 9879, 1234, 11360, 220, 717, 1921, 8, 315, 279, 46272, 19224, 3298, 315, 220, 7285, 19, 13, 1102, 7437, 279, 6566, 369, 279, 2768, 2038, 922, 63897, 596, 34919, 10212, 389, 5708, 30098, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171d6c0>, 'json_data': {'input': [[18902, 79483, 25, 18505, 1372, 4716, 13990, 30603, 2891, 40702, 67777, 469, 5876, 3414, 11, 85447, 83751, 95729, 25832, 85267, 11, 3651, 37496, 52, 643, 7480, 76259, 50, 3083, 469, 5876, 3414, 22370, 1539, 37744, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 279, 3157, 369, 279, 2883, 596, 4279, 25452, 11, 5708, 4346, 13146, 11, 323, 5708, 2109, 13173, 7640, 11, 902, 527, 3062, 369, 8830, 279, 2883, 596, 6020, 2890, 323, 63342, 30295, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171d750>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 330, 2149, 18992, 4953, 1210, 78864, 279, 836, 315, 279, 2883, 430, 374, 279, 3917, 315, 279, 6020, 25261, 323, 1934, 11, 31692, 279, 2317, 369, 682, 2768, 2038, 5552, 311, 420, 5502, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171d7e0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 312, 2058, 988, 279, 3917, 330, 2149, 18992, 4953, 1210, 311, 10519, 5357, 389, 279, 5502, 1694, 14407, 6957, 279, 2246, 11, 23391, 32373, 389, 279, 1934, 596, 41961, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171d870>, 'json_data': {'input': [[18902, 79483, 25, 1952, 5887, 220, 972, 11, 220, 679, 23, 11, 279, 21283, 7376, 1202, 5597, 430, 3738, 19705, 304, 5195, 753, 8682, 14228, 8141, 20038, 45119, 291, 7665, 10937, 2383, 13, 578, 21283, 5597, 27070, 264, 13281, 19, 13, 18, 7239, 1746, 20, 13, 16, 7239, 439, 315, 5651, 220, 966, 11, 220, 679, 23, 8, 7060, 323, 15910, 279, 35508, 315, 279, 6929, 520, 4360, 13, 1952, 6664, 220, 24, 11, 220, 679, 23, 11, 584, 53382, 279, 21283, 5597, 11, 323, 389, 6664, 220, 1682, 11, 220, 679, 23, 11, 584, 11798, 4442, 311, 3738, 315, 1057, 8682, 8141, 12659, 13, 1952, 6250, 220, 975, 11, 220, 2366, 17, 11, 279, 3331, 7301, 11293, 279, 7060, 505, 13281, 19, 13, 18, 7239, 311, 13281, 19, 13, 16, 7239, 13, 1226, 28520, 13019, 459, 14638, 449, 279, 7665, 7301, 315, 12007, 13, 763, 220, 679, 23, 11, 584, 15324, 264, 6900, 315, 400, 20, 13, 16, 7239, 369, 279, 7060, 11, 902, 584, 11293, 555, 400, 13460, 3610, 304, 220, 2366, 17, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 2500, 5199, 3276, 85971, 1162, 16239, 5195, 596, 8682, 8141, 20038, 13, 1102, 3649, 279, 35018, 23464, 1142, 323, 279, 2883, 596, 9045, 311, 14638, 323, 26069, 11, 19392, 279, 14529, 7138, 315, 23331, 11774, 323, 872, 5536, 389, 2626, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171d900>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2246, 439, 47031, 311, 63897, 4953, 2637, 8405, 2317, 922, 279, 7471, 1694, 30239, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171d990>, 'json_data': {'input': [[18902, 79483, 25, 45704, 304, 279, 549, 815, 2637, 4987, 12126, 11, 323, 18403, 430, 7958, 5195, 7199, 753, 34631, 10396, 11, 12718, 11, 323, 2626, 1646, 26, 439, 1664, 439, 39725, 323, 502, 14640, 1234, 18361, 304, 264, 2134, 315, 56043, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 14529, 5897, 323, 23331, 11774, 430, 63897, 4953, 13, 12580, 11, 11951, 5552, 311, 5195, 7199, 596, 34631, 10396, 323, 12659, 13, 1102, 22020, 279, 4754, 5536, 315, 39725, 323, 14640, 389, 279, 2883, 596, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171da20>, 'json_data': {'input': [[18902, 79483, 25, 11683, 2739, 291, 18512, 323, 1023, 1510, 58165, 44660, 315, 279, 2768, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 311, 4358, 99216, 18512, 323, 1510, 58165, 11, 6376, 709, 264, 11944, 1160, 315, 1521, 6020, 30255, 13, 1102, 17482, 439, 459, 17219, 311, 279, 49449, 315, 1148, 42675, 63897, 4953, 3238, 82, 1510, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171dab0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 7694, 612, 1023, 30466, 7319, 400, 717, 13, 21, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 13, 578, 8244, 6650, 574, 16625, 555, 958, 9920, 9547, 2737, 12992, 304, 2778, 20126, 13239, 505, 6650, 304, 1217, 25375, 323, 10648, 389, 6505, 7766, 26, 6650, 304, 87386, 10374, 26, 323, 18637, 584, 617, 1903, 304, 1008, 20447, 323, 9889, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 9547, 10043, 279, 6650, 315, 30466, 304, 279, 5195, 7694, 612, 1023, 5699, 505, 220, 2366, 17, 311, 220, 2366, 18, 13, 1102, 5825, 2317, 369, 8830, 279, 30295, 315, 1217, 20392, 323, 87386, 10374, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171db40>, 'json_data': {'input': [[18902, 79483, 25, 1226, 15870, 8720, 279, 29736, 315, 31959, 20124, 13239, 505, 1521, 69570, 311, 8417, 279, 41228, 2826, 315, 1057, 17575, 369, 8070, 13426, 13, 1226, 3136, 311, 8891, 279, 5208, 315, 14529, 20954, 449, 3827, 11527, 323, 279, 2515, 11, 422, 904, 11, 315, 279, 3685, 32792, 315, 279, 35786, 315, 9669, 304, 5370, 88004, 56043, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 2883, 753, 15813, 1920, 9002, 279, 29736, 315, 31959, 20124, 505, 3827, 69570, 11, 19392, 264, 59314, 5603, 311, 18646, 3827, 15635, 323, 19705, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171dbd0>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 8, 45285, 2109, 73350, 2997, 68770, 839, 2109, 75202, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 430, 279, 13551, 2109, 73350, 2997, 68770, 839, 14463, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 8405, 28330, 9002, 279, 24043, 6514, 315, 1521, 14463, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171dc60>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 264, 330, 2620, 315, 36962, 1359, 902, 73633, 10873, 1555, 279, 2246, 555, 79774, 279, 6070, 323, 1925, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171dcf0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 36233, 8515, 6530, 574, 400, 4645, 13, 22, 7239, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 7216, 369, 10565, 8515, 6530, 11, 902, 374, 264, 9200, 6767, 315, 279, 2883, 596, 53113, 323, 25605, 15374, 13, 1102, 10109, 988, 5196, 2949, 279, 27927, 6020, 5178, 24131, 11, 39686, 279, 2883, 596, 5845, 311, 7068, 8515, 505, 1202, 6332, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171dd80>, 'json_data': {'input': [[18902, 79483, 25, 77595, 5742, 7817, 220, 19, 13, 2589, 24078, 42427, 2538, 23314, 11, 30105, 6664, 220, 17, 11, 220, 679, 20, 11, 1990, 279, 75659, 519, 323, 16645, 469, 13, 52165, 323, 3738, 315, 1202, 32133, 220, 19, 13, 2318, 3308, 356, 99773, 1802, 11, 30105, 6664, 220, 17, 11, 220, 679, 20, 11, 16070, 555, 279, 75659, 519, 220, 19, 13, 2545, 2314, 306, 554, 11, 30105, 7552, 220, 717, 11, 220, 679, 21, 11, 1990, 279, 75659, 519, 323, 578, 8715, 315, 1561, 4356, 88487, 17236, 8351, 11, 452, 885, 2637, 439, 17236, 2176, 220, 19, 13, 605, 75659, 519, 25532, 10734, 23314, 30105, 6790, 220, 975, 11, 220, 679, 20, 220, 19, 13, 806, 5629, 43491, 278, 2314, 306, 554, 11, 30105, 5936, 220, 1544, 11, 220, 679, 21, 11, 1990, 279, 75659, 519, 323, 578, 8715, 315, 1561, 4356, 88487, 17236, 8351, 11, 452, 885, 2637, 439, 76866, 220, 19, 13, 717, 3459, 315, 279, 75659, 519, 753, 220, 18, 13, 12935, 4, 18559, 4245, 220, 2366, 19, 320, 83722, 304, 77595, 220, 19, 13, 806, 8, 220, 19, 13, 1032, 3459, 315, 279, 75659, 519, 753, 220, 16, 13, 19416, 4, 7181, 4245, 220, 2366, 21, 220, 19, 13, 975, 3459, 315, 8121, 7181, 14393, 279, 75659, 519, 753, 220, 15, 13, 10617, 4, 8554, 4245, 220, 2366, 20, 220, 19, 13, 868, 3459, 315, 8121, 7181, 14393, 279, 75659, 519, 753, 220, 15, 13, 4728, 4, 8554, 4245, 220, 2366, 22, 220, 19, 13, 845, 3459, 315, 8121, 7181, 14393, 279, 75659, 519, 753, 220, 16, 13, 1041, 4, 8554, 4245, 220, 9639, 15, 220, 19, 13, 1114, 3459, 315, 8121, 7181, 14393, 279, 75659, 519, 753, 220, 16, 13, 7467, 4, 8554, 4245, 220, 7854, 15, 220, 19, 13, 972, 3459, 315, 8121, 7181, 14393, 279, 75659, 519, 753, 220, 17, 13, 16193, 4, 8554, 4245, 220, 10866, 15, 220, 19, 13, 777, 3459, 315, 8121, 7181, 14393, 279, 75659, 519, 753, 220, 17, 13, 5154, 4, 8554, 4245, 220, 11056, 15, 220, 19, 13, 508, 7817, 315, 75659, 519, 753, 46272, 220, 605, 13, 1721, 577, 3459, 315, 2314, 336, 77, 2461, 23314, 10862, 1139, 1990, 279, 75659, 519, 11, 1202, 32133, 323, 1202, 28454, 323, 9808, 220, 605, 13, 2437, 577, 353, 3459, 315, 25510, 27757, 369, 46085, 220, 605, 13, 2839, 577, 25510, 27757, 11, 30105, 5587, 220, 508, 11, 220, 679, 20, 11, 1990, 42893, 20388, 266, 323, 5195, 4953, 2637, 439, 19655, 555, 279, 75659, 519, 389, 6664, 220, 17, 11, 220, 679, 20, 220, 605, 13, 2371, 577, 70396, 9878, 23314, 11, 30105, 6664, 220, 17, 11, 220, 679, 20, 11, 1990, 5195, 4953, 13, 323, 279, 75659, 519, 220, 605, 13, 2304, 577, 10783, 18925, 526, 3808, 23314, 11, 30105, 6664, 220, 17, 11, 220, 679, 20, 11, 1990, 5195, 4953, 13, 323, 279, 75659, 519, 220, 605, 13, 2705, 577, 63897, 4953, 13, 76615, 70396, 9878, 220, 605, 13, 2589, 577, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 679, 17, 12937, 9878, 220, 605, 13, 2589, 13, 16, 577, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 679, 17, 12937, 9878, 482, 3459, 315, 63897, 94960, 12937, 8113, 23314, 220, 605, 13, 2589, 13, 17, 577, 63897, 4953, 13, 220, 679, 17, 12937, 9878, 482, 3459, 315, 63897, 94960, 12937, 8113, 23314, 67795, 555, 5905, 36881, 3459, 2696, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 17, 11, 220, 679, 20, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 17, 11, 220, 679, 20, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 25532, 22504, 389, 7552, 220, 717, 11, 220, 679, 21, 3459, 328, 12, 18, 320, 1738, 2360, 13, 220, 8765, 12, 12652, 15633, 8, 25532, 22504, 389, 7552, 220, 717, 11, 220, 679, 21, 3459, 328, 12, 18, 320, 1738, 2360, 13, 220, 8765, 12, 12652, 21312, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 5936, 220, 1544, 11, 220, 679, 21, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6287, 220, 24, 11, 220, 679, 21, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6287, 220, 20, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6287, 220, 20, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6287, 220, 20, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6287, 220, 20, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6287, 220, 20, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6287, 220, 20, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 25992, 8423, 389, 3459, 220, 605, 16222, 7552, 220, 18, 11, 220, 2366, 18, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 17, 11, 220, 679, 20, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 5587, 220, 1627, 11, 220, 679, 20, 320, 1738, 2360, 13, 220, 4119, 12, 18199, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 17, 11, 220, 679, 20, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 17, 11, 220, 679, 20, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 17, 11, 220, 679, 20, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 5651, 220, 20, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 25992, 8423, 389, 3459, 220, 605, 16222, 7552, 220, 19, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 75483, 8423, 389, 3459, 220, 605, 12, 6841, 220, 18, 11, 1229, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 220, 679, 21, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 1160, 315, 50829, 11, 45293, 5217, 8481, 20020, 20038, 11, 17962, 1439, 11, 323, 5708, 35537, 11, 902, 527, 3062, 369, 8830, 279, 2883, 596, 6020, 24198, 323, 63342, 20038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171de10>, 'json_data': {'input': [[18902, 79483, 25, 578, 8351, 374, 15870, 3917, 311, 8349, 11, 43986, 11, 23331, 323, 3109, 26969, 11, 1023, 29407, 11, 323, 14771, 10373, 16239, 10937, 11, 20207, 3424, 11, 828, 12625, 323, 4868, 11, 3827, 323, 5552, 8907, 11, 9511, 323, 14740, 11, 8518, 42254, 11, 2262, 8066, 555, 1202, 3932, 11, 11822, 323, 3600, 9076, 555, 50270, 477, 36717, 1701, 872, 15771, 11, 4443, 11134, 11, 11761, 9313, 11, 323, 1023, 13146, 13, 1666, 7633, 304, 7181, 220, 605, 311, 279, 60391, 6020, 12518, 1054, 34541, 1392, 323, 39639, 6072, 863, 1778, 8349, 11, 43986, 11, 23331, 323, 3109, 26969, 11, 1023, 29407, 11, 323, 14771, 10373, 1436, 1121, 304, 31959, 16296, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 6264, 12170, 37067, 389, 279, 5370, 5897, 15635, 63897, 4953, 13, 12580, 11, 26073, 279, 84140, 6532, 304, 77472, 4754, 18151, 323, 57616, 264, 3230, 5296, 304, 279, 6020, 12518, 369, 4726, 3649, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171dea0>, 'json_data': {'input': [[18902, 79483, 25, 2360, 3927, 6130, 477, 5315, 315, 37506, 6444, 15609, 810, 1109, 220, 605, 4, 315, 1057, 30466, 304, 220, 2366, 16, 11, 220, 2366, 17, 11, 477, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8554, 430, 912, 3927, 6130, 15609, 264, 5199, 13651, 315, 30466, 11, 902, 72890, 279, 21797, 2461, 315, 63897, 4953, 3238, 82, 13254, 8336, 13, 1115, 2038, 374, 3062, 369, 47614, 5326, 323, 6130, 20545, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171df30>, 'json_data': {'input': [[18902, 79483, 25, 578, 58755, 315, 6918, 45530, 8070, 3827, 4478, 311, 1057, 7524, 8070, 3827, 4478, 574, 439, 11263, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 58755, 315, 279, 6918, 45530, 8070, 3827, 4478, 311, 63897, 4953, 3238, 82, 7524, 3827, 4478, 13, 1115, 2038, 374, 16996, 369, 8830, 1268, 279, 2883, 596, 7524, 3827, 4478, 43565, 311, 279, 45530, 4478, 323, 279, 9547, 66700, 904, 91367, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171dfc0>, 'json_data': {'input': [[18902, 79483, 25, 320, 40, 2056, 815, 13, 75952, 59776, 2360, 29275, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 2440, 369, 279, 469, 691, 11, 20064, 7922, 1202, 7580, 323, 41961, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171e050>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 11, 584, 15870, 3810, 1139, 7447, 4771, 11, 2536, 1824, 84703, 20038, 311, 7782, 33268, 4907, 323, 4907, 8365, 11, 1778, 439, 33268, 4907, 35537, 13, 4314, 20038, 656, 539, 2997, 264, 8187, 18160, 15507, 13, 578, 15055, 311, 387, 7318, 1234, 1521, 20038, 527, 3196, 389, 279, 5150, 27378, 311, 387, 8066, 323, 527, 539, 31368, 6449, 481, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 63897, 4953, 3238, 82, 20038, 5552, 311, 33268, 4907, 24393, 11, 902, 22020, 279, 2883, 596, 15507, 311, 41329, 323, 12434, 12014, 13, 1102, 15151, 430, 1521, 30255, 527, 3977, 323, 539, 6847, 10484, 23444, 11, 8405, 20616, 1139, 3938, 6020, 9293, 5552, 311, 41329, 28271, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171e0e0>, 'json_data': {'input': [[18902, 79483, 25, 763, 6287, 220, 679, 24, 11, 584, 6137, 12588, 8431, 47736, 18651, 505, 279, 549, 815, 13, 6011, 315, 12007, 320, 5989, 41, 8, 35792, 2038, 323, 9477, 23343, 311, 1057, 4972, 3276, 85971, 26969, 323, 3738, 13878, 315, 1057, 2626, 13, 578, 61910, 323, 264, 1396, 315, 1614, 7867, 27910, 3331, 13019, 264, 19831, 304, 279, 549, 815, 13, 11182, 7301, 369, 279, 11182, 315, 19326, 389, 6664, 220, 508, 11, 220, 2366, 15, 62546, 430, 5195, 34521, 549, 815, 13, 3276, 85971, 7016, 23343, 311, 7694, 323, 7694, 13172, 13, 578, 9269, 9670, 389, 6841, 220, 845, 11, 220, 2366, 18, 11, 323, 584, 1755, 264, 5597, 304, 220, 2366, 19, 13, 15903, 11, 304, 5651, 220, 2366, 17, 11, 279, 13673, 42321, 323, 26262, 9849, 320, 1741, 3791, 8, 323, 279, 3723, 15422, 596, 42321, 323, 47910, 22677, 320, 34, 4940, 8, 1855, 9107, 459, 8990, 1139, 7694, 8141, 12659, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 8431, 47736, 18651, 505, 279, 549, 815, 13, 6011, 315, 12007, 9002, 5195, 596, 3276, 85971, 12659, 323, 34945, 264, 5199, 19831, 13019, 2403, 279, 2883, 13, 1102, 10109, 988, 5195, 753, 5897, 11774, 2949, 279, 2317, 315, 549, 815, 13, 3276, 85971, 7016, 323, 50729, 279, 25845, 315, 4455, 6522, 709, 311, 264, 9269, 430, 20536, 304, 3389, 220, 2366, 18, 11, 19392, 279, 14529, 5897, 25572, 279, 2883, 12580, 98890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171e170>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 701, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171e200>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1047, 400, 5120, 13, 24, 7239, 304, 8515, 11, 8515, 86106, 11, 323, 2875, 9860, 3157, 481, 34919, 13, 23139, 86106, 323, 3157, 481, 34919, 527, 40056, 315, 892, 34751, 11, 3300, 3157, 10736, 11, 7701, 14812, 3109, 27460, 11, 13166, 11897, 34919, 11, 21515, 46128, 323, 9513, 46128, 34919, 11, 323, 3157, 481, 25452, 34919, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 12678, 9002, 63897, 4953, 3238, 82, 8515, 11, 8515, 86106, 11, 323, 2875, 9860, 3157, 481, 34919, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 11725, 279, 6956, 315, 1521, 12032, 11, 66251, 4954, 279, 2883, 596, 53113, 2361, 2949, 279, 6020, 3044, 10430, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171e290>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 13596, 2937, 315, 279, 6771, 315, 36962, 11, 420, 54515, 13533, 430, 279, 2246, 1253, 387, 34030, 311, 2187, 4062, 10873, 311, 5370, 14491, 11, 91115, 279, 12939, 315, 279, 33740, 13650, 369, 13016, 11125, 3230, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171e320>, 'json_data': {'input': [[18902, 79483, 25, 22037, 315, 25927, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 7138, 315, 7677, 369, 63897, 4953, 2637, 8405, 13970, 2317, 922, 279, 2883, 596, 18488, 11, 312, 86719, 39382, 367, 11, 323, 5199, 24693, 4442, 13, 1102, 8779, 4124, 63897, 753, 25605, 18921, 369, 13016, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171e3b0>, 'json_data': {'input': [[18902, 79483, 25, 578, 6762, 907, 30022, 7612, 459, 5502, 311, 35608, 279, 1005, 315, 40635, 11374, 323, 30437, 279, 1005, 315, 653, 34595, 11374, 994, 30090, 6762, 907, 13, 578, 26314, 315, 6762, 907, 18065, 279, 1005, 315, 8475, 51262, 5528, 323, 9959, 11374, 1139, 51262, 4211, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 6762, 907, 19179, 1920, 11, 82003, 279, 12939, 315, 1701, 40635, 11374, 28578, 3284, 13, 1102, 20405, 3871, 279, 6931, 20954, 389, 279, 6762, 907, 30022, 323, 279, 16565, 51346, 6762, 907, 22323, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171e440>, 'json_data': {'input': [[18902, 79483, 25, 14700, 3083, 36868, 50, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 279, 2316, 369, 279, 6771, 315, 36962, 3857, 11, 312, 2058, 1113, 279, 6070, 323, 7471, 315, 279, 2246, 369, 8831, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171e4d0>, 'json_data': {'input': [[18902, 79483, 25, 220, 2983, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 477, 1963, 11381, 13, 1102, 374, 539, 6089, 9959, 311, 279, 2262, 719, 17482, 439, 961, 315, 279, 2246, 596, 7471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171e560>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2626, 14117, 389, 3831, 16097, 11, 323, 22109, 311, 10519, 323, 18885, 1057, 16097, 1053, 13194, 1057, 5845, 311, 9407, 1057, 2385, 315, 3932, 11, 50270, 11, 6444, 11, 2262, 12850, 11, 323, 1023, 8717, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 12939, 315, 6883, 8333, 311, 279, 2883, 596, 2626, 1646, 11, 39686, 279, 4754, 8389, 16296, 315, 22109, 311, 10519, 323, 18885, 6883, 17444, 304, 12976, 311, 1217, 323, 8427, 20392, 13, 1102, 374, 961, 315, 264, 27927, 10430, 389, 10937, 323, 25605, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171e5f0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 279, 2883, 836, 11, 63897, 4953, 2637, 902, 78864, 279, 2317, 315, 279, 6020, 12518, 323, 24043, 10396, 1694, 14407, 304, 420, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171e680>, 'json_data': {'input': [[18902, 79483, 25, 7817, 315, 279, 34464, 198, 2014, 940, 1534, 73094, 25, 763, 420, 3857, 11, 279, 6264, 12170, 3493, 5217, 2317, 389, 279, 3230, 5897, 13146, 279, 2883, 374, 6532, 304, 11, 45293, 279, 7138, 315, 8349, 323, 872, 4754, 25127, 369, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171e710>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 10968, 389, 4857, 459, 1524, 810, 11190, 5195, 369, 5127, 11, 323, 584, 84611, 311, 3041, 5127, 279, 7526, 814, 1205, 311, 5376, 872, 6677, 11, 2890, 11, 23871, 11, 323, 2450, 13, 5195, 7694, 8779, 1274, 1505, 2038, 323, 1304, 5647, 315, 279, 1917, 304, 810, 5933, 323, 42779, 5627, 11, 449, 490, 91387, 315, 27573, 389, 5195, 1475, 1060, 13, 13674, 5825, 1274, 449, 16924, 11, 2038, 11, 323, 10708, 311, 4048, 2555, 502, 13, 5195, 22103, 6209, 279, 1888, 1648, 311, 636, 2574, 2884, 61440, 4028, 2204, 7766, 11, 8405, 25530, 1520, 6957, 264, 1732, 596, 1938, 11, 912, 5030, 1405, 814, 527, 13, 5195, 15161, 8779, 6444, 11886, 3432, 753, 2626, 11774, 11, 7417, 26206, 11, 8108, 7194, 11, 323, 15405, 502, 6650, 21787, 13, 1226, 527, 35611, 9721, 1113, 323, 4857, 502, 3956, 323, 4519, 430, 690, 1520, 1057, 3932, 11, 8717, 11, 6444, 11, 323, 10977, 323, 617, 29091, 810, 1109, 400, 3965, 7239, 304, 3495, 323, 4500, 304, 279, 1566, 4330, 1667, 304, 1862, 315, 1521, 9045, 627, 2014, 940, 1534, 73094, 25, 763, 420, 13651, 11, 279, 2246, 25985, 988, 389, 3230, 5195, 3956, 323, 3600, 11, 82003, 872, 15919, 323, 5536, 389, 3932, 6, 7446, 6439, 13, 1115, 4726, 46480, 63897, 596, 15507, 311, 19297, 323, 9341, 304, 432, 33465, 311, 18885, 1202, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171e7a0>, 'json_data': {'input': [[18902, 79483, 25, 5129, 8323, 25492, 304, 1063, 5961, 11, 7319, 6807, 5326, 11, 323, 5190, 5990, 315, 8323, 16515, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 6020, 15635, 5938, 449, 6625, 7677, 11, 11951, 279, 11774, 315, 5129, 8323, 25492, 323, 7319, 6807, 5326, 304, 3738, 5961, 13, 1102, 66159, 279, 4754, 25949, 389, 8515, 6530, 323, 6020, 20334, 11, 47594, 279, 8830, 315, 279, 6020, 84140, 304, 3728, 11987, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171e830>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 14393, 279, 2883, 836, 11, 63897, 4953, 2637, 902, 17482, 439, 279, 14836, 369, 279, 4553, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171e8c0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 15161, 5764, 14054, 323, 5452, 3600, 11, 20632, 7526, 11, 323, 1023, 3600, 369, 20790, 6444, 13, 5195, 15161, 27983, 30466, 15871, 505, 15652, 6108, 12718, 323, 41455, 4036, 369, 5195, 15161, 17916, 3600, 11, 5195, 72034, 10758, 323, 20632, 7526, 11, 323, 1023, 20790, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 5195, 15161, 10449, 11, 45293, 279, 3600, 9076, 323, 279, 13254, 9659, 1646, 11, 39686, 1202, 3560, 304, 279, 2883, 596, 8244, 2626, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171e950>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 11680, 323, 14016, 400, 220, 2287, 11, 24777, 400, 220, 5728, 11, 25077, 8245, 5557, 12032, 220, 2287, 11, 16567, 220, 1490, 11, 23428, 24987, 304, 5208, 220, 1544, 11, 23480, 220, 1758, 11, 14378, 81751, 6416, 18637, 220, 605, 11, 21228, 220, 806, 11, 17837, 30339, 323, 38764, 220, 16104, 220, 21757, 8825, 323, 7241, 11, 20547, 220, 11123, 11, 19027, 220, 679, 11, 20899, 9865, 25, 41165, 94189, 320, 2946, 11, 22349, 8, 320, 3080, 11, 21209, 8, 8825, 323, 7241, 11, 4272, 400, 220, 7261, 11, 24427, 400, 220, 9565, 11, 12901, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 12399, 315, 63897, 4953, 3238, 82, 3424, 323, 7241, 439, 315, 6790, 220, 2148, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 18911, 11944, 12678, 389, 5370, 9513, 11306, 11, 2737, 4363, 11, 14016, 11, 323, 2038, 5557, 12032, 11, 323, 48517, 279, 4272, 907, 1306, 24043, 369, 41165, 94189, 13, 1115, 2038, 374, 961, 315, 279, 6020, 12518, 323, 8779, 8720, 279, 2883, 596, 6864, 9341, 323, 9513, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171e9e0>, 'json_data': {'input': [[18902, 79483, 25, 4206, 15680, 315, 13031, 344, 5983, 198, 2014, 940, 1534, 73094, 25, 578, 2316, 330, 6582, 1303, 315, 13031, 344, 5983, 1, 15151, 264, 3857, 25394, 1268, 279, 2883, 29972, 6020, 43645, 11, 8104, 21760, 389, 279, 12659, 2212, 4445, 1303, 1521, 24198, 311, 50460, 5326, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171ea70>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 717, 13, 71710, 69569, 4419, 69154, 3083, 63457, 6979, 83934, 15229, 84004, 69569, 4419, 3651, 94378, 3651, 85447, 83751, 95729, 25832, 85267, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 8398, 86036, 11, 902, 11383, 35434, 279, 4430, 15637, 315, 5199, 39210, 323, 6373, 11, 439, 1664, 439, 13146, 5552, 311, 5708, 4346, 12034, 13, 1115, 3857, 374, 7718, 369, 28330, 922, 889, 10187, 2410, 2949, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171eb00>, 'json_data': {'input': [[18902, 79483, 25, 1789, 5217, 2038, 11, 2737, 264, 58755, 315, 279, 549, 815, 13, 6918, 45530, 4478, 311, 1057, 7524, 3827, 4478, 11, 1518, 7181, 220, 975, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 1405, 311, 1505, 4726, 2038, 323, 58755, 9002, 279, 2883, 596, 7524, 3827, 4478, 11, 902, 374, 3062, 369, 39210, 42118, 3827, 15374, 323, 8907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171eb90>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171ec20>, 'json_data': {'input': [[18902, 79483, 25, 18880, 1398, 3825, 42204, 323, 2009, 2315, 198, 2014, 940, 1534, 73094, 25, 578, 2316, 330, 64693, 1398, 3825, 42204, 323, 2009, 2315, 1, 40019, 264, 10430, 389, 279, 2883, 596, 22538, 304, 12032, 323, 3424, 13, 1115, 3857, 374, 16996, 369, 8830, 1268, 63897, 5691, 988, 1202, 5070, 369, 6650, 323, 14054, 4500, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171ecb0>, 'json_data': {'input': [[18902, 79483, 25, 1442, 34919, 527, 9879, 33549, 311, 11360, 220, 717, 1921, 8, 315, 279, 3298, 11, 13519, 555, 1817, 1906, 3508, 279, 6020, 12518, 315, 279, 23702, 519, 5343, 304, 279, 26559, 8881, 279, 27358, 315, 459, 1493, 311, 8767, 11136, 6020, 12518, 13, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 13708, 315, 279, 6020, 12518, 5343, 304, 279, 26559, 11, 11951, 3508, 814, 8881, 51479, 315, 904, 6103, 505, 8767, 11136, 6020, 12518, 13, 1115, 374, 3062, 369, 20958, 279, 38769, 315, 279, 6020, 13122, 1920, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171ed40>, 'json_data': {'input': [[18902, 79483, 25, 35185, 315, 362, 65083, 11, 4272, 315, 8070, 3827, 11, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 311, 11203, 704, 279, 3230, 6956, 315, 362, 65083, 11, 4272, 315, 8070, 3827, 11, 45293, 279, 50204, 1534, 20192, 323, 18151, 505, 2561, 15548, 58637, 22538, 11, 7362, 11667, 14807, 34074, 11, 323, 8515, 6530, 305, 17327, 13, 1115, 828, 374, 9200, 369, 8830, 279, 9547, 28987, 279, 8244, 25452, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171edd0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 11, 63897, 4953, 2637, 323, 17482, 439, 264, 4342, 369, 279, 2246, 11, 31692, 279, 2317, 315, 279, 17876, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171ee60>, 'json_data': {'input': [[18902, 79483, 25, 1057, 1317, 9860, 41329, 323, 20057, 9021, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 19813, 311, 279, 2883, 596, 1317, 9860, 26470, 9002, 41329, 323, 20057, 13, 1102, 374, 961, 315, 279, 27927, 19775, 389, 13166, 12014, 323, 19092, 9021, 11, 19392, 1268, 1521, 9547, 5398, 449, 63897, 596, 9131, 323, 2819, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171eef0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 44694, 279, 2316, 11, 330, 2149, 18992, 4953, 13, 1359, 73100, 2923, 287, 279, 3917, 315, 279, 6020, 12518, 11, 4528, 311, 46613, 220, 1032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171ef80>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1057, 10565, 73657, 1047, 264, 37924, 5578, 9861, 26120, 4751, 315, 220, 23, 13, 16, 1667, 323, 264, 37924, 5578, 11336, 4478, 315, 220, 18, 13, 16, 14697, 12781, 26120, 14507, 1234, 10565, 73657, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 20616, 1139, 279, 2883, 596, 10565, 26120, 42356, 439, 315, 279, 842, 315, 220, 2366, 18, 11, 902, 374, 961, 315, 279, 27927, 6020, 75992, 9002, 279, 2883, 596, 30255, 323, 58165, 5552, 311, 82280, 6012, 13, 1102, 22020, 1401, 17150, 1778, 439, 279, 5578, 9861, 26120, 4751, 323, 11336, 4478, 11, 6376, 279, 6566, 369, 8830, 3938, 6020, 42356, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171f010>, 'json_data': {'input': [[18902, 79483, 25, 763, 6186, 220, 2366, 18, 11, 584, 8308, 459, 15813, 315, 279, 5505, 6439, 315, 1057, 16692, 323, 4009, 7241, 13239, 304, 264, 2349, 304, 279, 13240, 5505, 2324, 315, 1057, 16692, 323, 3738, 4009, 7241, 311, 4848, 1667, 13, 1115, 2349, 304, 24043, 16430, 574, 7524, 7314, 20323, 1060, 220, 2366, 18, 13, 1789, 5217, 2038, 11, 1518, 7181, 220, 16, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 3230, 2349, 304, 24043, 16430, 9002, 279, 5505, 6439, 315, 16692, 323, 4009, 7241, 11, 39686, 264, 5199, 2713, 430, 22223, 279, 20323, 1060, 220, 2366, 18, 6020, 82, 13, 1102, 1101, 19813, 279, 6742, 311, 5217, 2038, 304, 279, 8554, 311, 279, 60391, 6020, 12518, 11, 82003, 1202, 12939, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171f0a0>, 'json_data': {'input': [[18902, 79483, 25, 220, 2721, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 5905, 11, 19392, 1202, 2361, 2949, 279, 8244, 2246, 13, 1102, 78864, 430, 279, 2038, 2768, 433, 17623, 311, 279, 220, 2721, 339, 2199, 315, 279, 2246, 11, 902, 374, 4279, 304, 35306, 6821, 1093, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171f130>, 'json_data': {'input': [[18902, 79483, 25, 36233, 26120, 12032, 323, 58165, 527, 5343, 389, 1057, 79980, 660, 31946, 61572, 13, 578, 1510, 13651, 315, 1057, 10565, 26120, 58165, 374, 5343, 304, 99216, 18512, 323, 1023, 1510, 58165, 11, 323, 279, 1317, 9860, 13651, 374, 5343, 304, 10565, 26120, 58165, 13, 23261, 26120, 12032, 527, 5343, 304, 3424, 323, 7241, 11, 4272, 13, 23261, 26120, 58165, 527, 5343, 304, 99216, 18512, 323, 1023, 1510, 58165, 477, 1317, 9860, 11897, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 1268, 10565, 26120, 12032, 323, 58165, 527, 10666, 389, 63897, 4953, 3238, 82, 79980, 660, 31946, 61572, 13, 1102, 20064, 9803, 279, 24790, 315, 26120, 58165, 323, 12032, 11, 902, 374, 16595, 369, 39210, 311, 3619, 279, 2883, 596, 6020, 30255, 5552, 311, 73657, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171f1c0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 904, 1495, 11, 13788, 439, 264, 37666, 2449, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171f250>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6186, 220, 1419, 11, 220, 2366, 19, 11, 1070, 1051, 220, 20, 11, 26088, 3610, 13551, 315, 63897, 753, 3308, 362, 5708, 19310, 11, 220, 26497, 3610, 13551, 315, 63897, 753, 3308, 426, 5708, 19310, 11, 323, 220, 20, 11, 23403, 3610, 13551, 315, 279, 63897, 753, 3308, 356, 5708, 19310, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 6821, 279, 1396, 315, 19310, 13551, 369, 63897, 753, 3308, 362, 11, 426, 11, 323, 356, 23301, 439, 315, 6186, 220, 1419, 11, 220, 2366, 19, 13, 1115, 2038, 374, 9959, 369, 8830, 279, 2883, 596, 6864, 6070, 323, 279, 8141, 315, 25452, 4315, 2204, 6989, 315, 5708, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171f2e0>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 1057, 6864, 53869, 690, 5376, 11, 2737, 279, 3685, 5376, 304, 1057, 11156, 14054, 9341, 311, 1862, 279, 6650, 315, 1057, 2626, 323, 1057, 1317, 9860, 28271, 11, 304, 4040, 304, 1862, 315, 21075, 11478, 320, 15836, 8, 3956, 323, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 22020, 279, 2883, 596, 31293, 315, 7319, 6864, 53869, 11, 8104, 304, 11156, 14054, 323, 15592, 28271, 13, 1102, 18809, 2949, 279, 27927, 19775, 315, 279, 2883, 753, 15507, 311, 19297, 323, 6650, 11, 23377, 19092, 22538, 311, 1862, 3938, 2626, 26006, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171f370>, 'json_data': {'input': [[18902, 79483, 25, 3580, 7181, 220, 18, 369, 279, 24043, 4947, 47031, 311, 32905, 6020, 24198, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 7181, 220, 18, 369, 279, 24043, 4947, 389, 32905, 6020, 24198, 11, 23377, 430, 1070, 374, 3230, 11944, 19351, 3984, 18403, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171f400>, 'json_data': {'input': [[18902, 79483, 25, 5751, 5845, 311, 20874, 13750, 323, 1057, 3938, 2450, 6904, 389, 1057, 14691, 311, 10765, 11, 18467, 11, 2274, 11, 62425, 11, 323, 14389, 7701, 26611, 17274, 369, 682, 5789, 315, 1057, 7471, 13, 42321, 304, 1057, 5064, 369, 15337, 8420, 374, 19428, 11, 323, 3738, 315, 1057, 28650, 617, 6089, 17550, 11, 323, 1253, 3136, 311, 2218, 11, 1057, 8420, 13, 763, 5369, 11, 1057, 20448, 28904, 11, 1778, 439, 1057, 25452, 10292, 7620, 11, 1253, 539, 2744, 387, 6992, 304, 51647, 502, 8420, 323, 51110, 323, 89689, 1057, 6484, 8420, 13, 42427, 858, 535, 15443, 4947, 323, 23331, 4442, 1253, 1101, 7958, 1057, 5845, 311, 18467, 11, 29905, 553, 11, 477, 14389, 1063, 315, 1057, 3728, 11005, 13, 2052, 315, 1057, 11145, 9808, 323, 1401, 8420, 527, 520, 2695, 484, 8420, 11, 323, 584, 656, 539, 10519, 904, 1401, 29145, 2324, 8276, 10396, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 11774, 63897, 12580, 304, 32959, 323, 51110, 11005, 304, 264, 15022, 5064, 13, 1102, 35434, 279, 5536, 315, 9434, 9547, 11, 1778, 439, 15443, 10396, 11, 389, 11005, 24279, 11, 902, 374, 16996, 369, 20958, 25605, 27375, 323, 6650, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171f490>, 'json_data': {'input': [[18902, 79483, 25, 70128, 315, 79980, 367, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 70128, 315, 79980, 367, 11, 902, 15100, 279, 24043, 16565, 1511, 369, 28230, 1113, 6020, 12518, 13, 1102, 374, 7718, 369, 8830, 1268, 63897, 9815, 369, 1202, 15086, 323, 22538, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171f520>, 'json_data': {'input': [[18902, 79483, 25, 220, 6083, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 2199, 1396, 320, 6083, 8, 304, 279, 6771, 315, 36962, 11, 29820, 311, 279, 6070, 315, 279, 2246, 323, 86387, 304, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:24 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-11-30 23:53:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171f5b0>, 'json_data': {'input': [[18902, 79483, 25, 5560, 315, 95619, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 5560, 315, 95619, 304, 6020, 13122, 11, 82003, 279, 12939, 315, 32946, 304, 20646, 279, 60391, 6020, 12518, 13, 1102, 22020, 279, 4754, 54709, 304, 6020, 3135, 4245, 311, 1521, 17989, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e80d0>, 'json_data': {'input': [[18902, 79483, 25, 1789, 14058, 9277, 389, 5195, 8304, 6012, 11, 584, 15806, 3508, 584, 527, 279, 12717, 320, 72, 1770, 2637, 1934, 30466, 389, 264, 20547, 8197, 8, 477, 8479, 320, 72, 1770, 2637, 1934, 30466, 389, 264, 4272, 8197, 570, 44493, 11, 584, 1934, 13172, 30466, 369, 14058, 9277, 389, 5195, 8304, 6012, 389, 264, 20547, 8197, 11, 430, 374, 11, 279, 15055, 50546, 311, 1057, 6444, 527, 12715, 439, 30466, 345, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 24790, 315, 13254, 13122, 439, 3060, 20547, 477, 4272, 3196, 389, 3508, 63897, 14385, 439, 264, 12717, 477, 459, 8479, 304, 13172, 14463, 13, 1102, 20064, 9803, 279, 6020, 13122, 25127, 315, 1521, 13073, 304, 872, 13172, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:25 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-11-30 23:53:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8160>, 'json_data': {'input': [[18902, 79483, 25, 578, 60391, 6020, 12518, 315, 63897, 2997, 279, 9815, 315, 63897, 323, 15086, 60391, 1234, 279, 3977, 2802, 323, 16043, 4211, 13, 5783, 10348, 39954, 323, 14463, 617, 1027, 34373, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 4726, 15100, 279, 60732, 1920, 11, 2737, 279, 44032, 315, 958, 10348, 14463, 323, 39954, 13, 1102, 20064, 9803, 1268, 63897, 18911, 1202, 6020, 2361, 304, 279, 60391, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8b80>, 'json_data': {'input': [[18902, 79483, 25, 10884, 1510, 13651, 315, 1317, 9860, 11897, 374, 5343, 2949, 1023, 99216, 18512, 323, 1510, 58165, 13, 3580, 7181, 220, 22, 369, 4726, 3649, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 24790, 315, 279, 1510, 13651, 315, 1317, 9860, 11897, 11, 19392, 430, 420, 13651, 374, 5068, 1234, 99216, 18512, 323, 1510, 58165, 13, 1115, 374, 3062, 369, 6020, 5224, 6492, 11, 439, 433, 22223, 53113, 41300, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171f640>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 345, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 264, 2007, 477, 3857, 32644, 279, 8515, 6530, 828, 369, 63897, 4953, 13, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 902, 690, 2997, 10565, 11, 26012, 11, 323, 29642, 8515, 28555, 11, 7718, 369, 8830, 279, 2883, 753, 8515, 9659, 323, 45426, 7640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8c10>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 922, 5195, 15161, 11, 19392, 264, 6541, 505, 25394, 5195, 8471, 311, 45293, 279, 9624, 25213, 10449, 315, 63897, 596, 2626, 11, 902, 374, 264, 5199, 3158, 315, 6650, 323, 19297, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8ca0>, 'json_data': {'input': [[18902, 79483, 25, 220, 5313, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 264, 2199, 1396, 477, 3857, 11381, 2949, 279, 2246, 11, 23377, 430, 433, 374, 961, 315, 279, 10873, 6070, 369, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8d30>, 'json_data': {'input': [[18902, 79483, 25, 10884, 19310, 11897, 374, 69729, 3770, 320, 258, 11990, 11, 3734, 54208, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 12399, 315, 279, 2883, 753, 19310, 11897, 11, 19392, 430, 279, 17876, 2038, 690, 7872, 279, 15055, 323, 4595, 315, 11897, 30255, 63897, 4953, 13, 706, 11, 902, 374, 9959, 369, 47614, 279, 2883, 596, 6020, 33164, 323, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8dc0>, 'json_data': {'input': [[18902, 79483, 25, 7089, 13031, 344, 5983, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 4461, 17482, 439, 264, 4342, 369, 264, 3857, 389, 7089, 13031, 344, 5983, 11, 19392, 430, 4726, 3649, 922, 5217, 32905, 24198, 1511, 555, 63897, 4953, 13, 690, 387, 3984, 13, 1102, 13533, 264, 42271, 315, 20954, 389, 5326, 6373, 15174, 7953, 279, 8767, 9932, 305, 17327, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8e50>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1101, 6056, 311, 10519, 3738, 20207, 3424, 439, 6696, 24511, 13, 578, 61059, 315, 1778, 6696, 24511, 323, 1023, 16614, 2038, 1436, 387, 44500, 11, 902, 1436, 5353, 603, 311, 9229, 279, 15022, 9610, 13239, 505, 1521, 6696, 24511, 13, 1226, 1101, 3663, 15635, 5938, 449, 1057, 42134, 13, 1789, 3187, 11, 1070, 374, 264, 5326, 430, 279, 3492, 1054, 14783, 863, 1436, 3719, 779, 17037, 1511, 430, 433, 9221, 69593, 449, 279, 3492, 1054, 1874, 2029, 4427, 19359, 617, 21989, 430, 330, 14783, 1, 374, 264, 6144, 481, 32464, 11, 719, 433, 374, 3284, 430, 1023, 19359, 11, 8104, 1884, 4994, 315, 279, 549, 815, 2637, 1253, 5662, 264, 2204, 26314, 13, 1442, 420, 8741, 11, 584, 1436, 9229, 9313, 369, 420, 32464, 11, 902, 1436, 1121, 304, 1023, 1274, 1701, 279, 3492, 1054, 14783, 863, 311, 8464, 311, 872, 1866, 3956, 11, 8617, 84153, 1057, 6883, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 12939, 315, 20958, 6696, 24511, 323, 42134, 11, 8104, 21760, 389, 279, 15635, 5938, 449, 279, 4754, 4814, 315, 6883, 9764, 13, 1102, 22020, 279, 27927, 25127, 315, 32464, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8ee0>, 'json_data': {'input': [[18902, 79483, 25, 12781, 17452, 26120, 14507, 527, 4272, 315, 737, 19849, 2802, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 430, 3938, 17452, 26120, 14507, 527, 10666, 4272, 315, 737, 19849, 2802, 11, 902, 374, 9959, 369, 8830, 1268, 279, 2883, 9815, 369, 1202, 71419, 30255, 2949, 1202, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8f70>, 'json_data': {'input': [[18902, 79483, 25, 1328, 42483, 6101, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 264, 1584, 19392, 279, 842, 315, 264, 3857, 477, 2246, 11, 902, 374, 4279, 304, 16287, 6821, 311, 89522, 7471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9000>, 'json_data': {'input': [[18902, 79483, 25, 9489, 386, 1894, 11, 4846, 4562, 315, 279, 8925, 315, 46085, 11, 32372, 1077, 11380, 3197, 389, 6664, 220, 966, 11, 220, 2366, 18, 11, 7524, 449, 1077, 44734, 505, 279, 8925, 315, 46085, 13, 578, 11380, 3197, 8767, 15480, 279, 6412, 315, 220, 717, 11, 18216, 13551, 315, 3308, 356, 18880, 12937, 323, 1053, 617, 1027, 7524, 3156, 5651, 220, 17, 11, 220, 2366, 19, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 430, 1070, 1051, 912, 2536, 11151, 1130, 220, 605, 65, 20, 12, 16, 11380, 28904, 2391, 279, 20323, 8502, 11, 33449, 287, 8907, 449, 55465, 11380, 10396, 13, 1102, 66159, 279, 2883, 596, 71628, 311, 14640, 323, 279, 28330, 315, 55465, 11380, 7640, 11, 902, 374, 16996, 369, 20958, 30693, 7095, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9090>, 'json_data': {'input': [[18902, 79483, 25, 7436, 1952, 6790, 220, 845, 11, 220, 2366, 15, 11, 264, 1396, 315, 1614, 7867, 27910, 3331, 13019, 459, 3276, 85971, 12458, 304, 279, 549, 815, 13, 11182, 7301, 369, 279, 18516, 11182, 315, 8421, 11, 62546, 430, 5195, 34521, 549, 815, 13, 3276, 85971, 7016, 439, 1664, 439, 1614, 81374, 6696, 7016, 23343, 311, 1202, 13172, 5557, 11, 323, 264, 9269, 374, 13847, 369, 5587, 220, 2366, 20, 13, 23212, 11, 389, 6186, 220, 1187, 11, 220, 2366, 18, 11, 279, 61910, 11, 3235, 449, 264, 1396, 315, 1614, 7867, 27910, 3331, 11, 13019, 459, 3276, 85971, 12458, 304, 279, 549, 815, 13, 11182, 7301, 369, 279, 18516, 11182, 315, 13286, 62546, 430, 5195, 753, 7528, 13172, 5557, 3956, 41587, 549, 815, 13, 3276, 85971, 7016, 11, 323, 389, 5936, 220, 1114, 11, 220, 2366, 18, 11, 264, 1396, 315, 5217, 1614, 7867, 27910, 3331, 11096, 279, 12458, 13, 578, 21283, 11, 279, 356, 4940, 11, 323, 279, 26925, 34, 1855, 9107, 264, 16287, 8990, 1139, 5195, 596, 13172, 5557, 2626, 12659, 389, 5651, 220, 1313, 11, 220, 2366, 16, 11, 3297, 220, 914, 11, 220, 2366, 17, 11, 323, 5651, 220, 1682, 11, 220, 2366, 17, 11, 15947, 13, 1952, 5651, 220, 975, 11, 220, 2366, 18, 11, 279, 21283, 11136, 264, 22504, 315, 4761, 25593, 320, 14202, 8, 63025, 5195, 315, 1202, 33269, 1684, 430, 5195, 34521, 7665, 3276, 85971, 7016, 23343, 311, 1202, 13172, 5557, 13, 1226, 16846, 311, 279, 5745, 389, 6790, 220, 16, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 5217, 3276, 85971, 21859, 13019, 555, 1614, 7867, 27910, 3331, 2403, 5195, 11, 45293, 3230, 18873, 323, 279, 56043, 6532, 13, 1102, 22020, 14529, 39725, 323, 26969, 1139, 5195, 753, 13172, 5557, 323, 12659, 11, 29820, 311, 279, 8244, 19775, 315, 279, 2883, 596, 5897, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9120>, 'json_data': {'input': [[18902, 79483, 25, 20448, 18512, 369, 8420, 304, 17452, 11, 3823, 5070, 11, 2038, 5557, 11, 5897, 11, 323, 1023, 23541, 1862, 5865, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 18713, 1771, 311, 279, 4689, 323, 23541, 18512, 3857, 315, 279, 2246, 11, 45293, 279, 20448, 18512, 52872, 369, 8420, 304, 5370, 1862, 5865, 11, 902, 44072, 311, 8830, 279, 8244, 10565, 18512, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e91b0>, 'json_data': {'input': [[18902, 79483, 25, 1102, 374, 539, 3284, 311, 1304, 264, 13579, 16430, 315, 279, 7340, 4754, 3392, 1234, 1521, 90108, 2461, 20038, 4245, 311, 279, 5016, 13363, 323, 13463, 6532, 304, 1855, 4040, 9306, 13, 23212, 11, 279, 14507, 584, 617, 1903, 1234, 1778, 20038, 617, 539, 1047, 264, 3769, 31959, 2515, 389, 1057, 3135, 315, 7677, 11, 8515, 28555, 11, 477, 6020, 2361, 13, 4452, 11, 311, 279, 13112, 430, 2764, 90108, 2461, 8349, 31889, 304, 279, 3938, 11, 3938, 14507, 555, 603, 1436, 387, 5199, 323, 1436, 617, 264, 3769, 31959, 2515, 389, 1057, 3135, 315, 7677, 477, 8515, 28555, 304, 264, 4040, 4261, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 27924, 14932, 279, 4754, 6020, 5536, 315, 90108, 2461, 20038, 13, 1102, 15151, 430, 1418, 912, 3769, 31959, 6372, 617, 1027, 10534, 311, 2457, 11, 3938, 8349, 1436, 3063, 311, 5199, 6020, 16296, 11, 26445, 66, 5620, 279, 50235, 7138, 315, 1778, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9240>, 'json_data': {'input': [[18902, 79483, 25, 6104, 584, 617, 12514, 5199, 5070, 311, 12625, 323, 4868, 10672, 2077, 17357, 11, 2737, 12514, 15603, 10672, 2077, 7411, 11, 1057, 2077, 1920, 11, 8104, 2391, 3115, 315, 264, 5933, 21426, 477, 28522, 11, 1253, 539, 387, 26613, 11, 1253, 3775, 311, 30357, 8720, 279, 31020, 315, 459, 10672, 11, 1253, 539, 387, 5043, 3403, 311, 5471, 477, 4017, 11682, 11, 477, 1253, 3775, 311, 40044, 34630, 6629, 459, 10672, 13, 1666, 264, 1121, 11, 584, 1253, 7831, 5199, 5897, 11, 43839, 1697, 11, 477, 6020, 14675, 11, 902, 1436, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 2883, 596, 9341, 304, 12625, 323, 4868, 10672, 2077, 17357, 1418, 61708, 4754, 40206, 447, 27121, 304, 2077, 9045, 2391, 58187, 13, 1102, 72890, 279, 14529, 11774, 304, 23391, 7524, 10672, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e92d0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 4441, 374, 264, 4342, 19392, 279, 2883, 836, 11, 63897, 4953, 13, 1102, 64664, 279, 9764, 315, 279, 23702, 519, 369, 279, 22370, 26559, 323, 15151, 430, 279, 1934, 18713, 1771, 311, 420, 3230, 5502, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9360>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 26, 912, 1495, 311, 24564, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e93f0>, 'json_data': {'input': [[18902, 79483, 25, 70128, 369, 60767, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 57916, 4920, 279, 6264, 12170, 6, 9647, 11, 31692, 279, 16665, 369, 872, 41300, 323, 14955, 9002, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9480>, 'json_data': {'input': [[18902, 79483, 25, 71760, 28674, 311, 279, 8670, 315, 11360, 220, 1032, 477, 220, 868, 1528, 8, 315, 279, 46272, 19224, 3298, 315, 220, 7285, 19, 11, 279, 75659, 519, 706, 77903, 9057, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 311, 387, 8667, 389, 1202, 17981, 555, 279, 26445, 1571, 11, 1070, 26494, 77903, 19144, 627, 2014, 940, 1534, 73094, 25, 71760, 28674, 311, 279, 8670, 315, 11360, 220, 1032, 477, 220, 868, 1528, 8, 315, 279, 46272, 19224, 3298, 315, 220, 7285, 19, 11, 279, 75659, 519, 706, 77903, 9057, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 311, 387, 8667, 389, 1202, 17981, 555, 279, 26445, 1571, 11, 1070, 26494, 77903, 19144, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9510>, 'json_data': {'input': [[18902, 79483, 25, 8292, 315, 11835, 320, 269, 34630, 7246, 315, 2585, 72946, 705, 16346, 11, 323, 10396, 520, 279, 19426, 2883, 280, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 12143, 35434, 279, 8292, 315, 5995, 11835, 323, 16346, 304, 279, 19426, 2883, 11, 22364, 311, 279, 15635, 5938, 449, 23391, 8907, 323, 25605, 29237, 13, 1115, 18809, 1139, 264, 8294, 2317, 315, 4245, 63582, 323, 6373, 11774, 430, 31889, 2391, 279, 18052, 10474, 315, 63948, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171ff40>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 94594, 1057, 60391, 6020, 3135, 320, 258, 11990, 11, 3734, 369, 824, 4430, 2038, 323, 54208, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 12399, 2007, 315, 60391, 6020, 3135, 11, 8405, 264, 16694, 315, 63897, 4953, 3238, 82, 6020, 5178, 927, 279, 5300, 4261, 11, 902, 374, 8792, 311, 8830, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171feb0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 11, 63897, 4953, 2637, 23377, 430, 279, 2246, 374, 264, 1934, 5552, 311, 279, 2883, 596, 7677, 323, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171fe20>, 'json_data': {'input': [[18902, 79483, 25, 17961, 58513, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 17961, 58513, 11, 902, 50729, 5370, 4595, 315, 6020, 24198, 430, 63897, 4953, 13, 60880, 13, 1102, 17482, 439, 264, 4342, 369, 279, 2768, 11944, 41941, 9002, 3230, 11306, 315, 6020, 24198, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171fd90>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 3308, 362, 323, 3308, 356, 13551, 2109, 73350, 323, 28520, 22311, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 264, 2007, 430, 94594, 279, 3649, 315, 3308, 362, 323, 3308, 356, 13551, 2109, 73350, 555, 63897, 11, 8405, 47616, 828, 311, 1862, 279, 19775, 389, 4430, 2109, 13173, 7640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171fd00>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 1587, 539, 6782, 904, 1495, 323, 9093, 37856, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171fc70>, 'json_data': {'input': [[18902, 79483, 25, 578, 9200, 25261, 5030, 59035, 3770, 374, 264, 5030, 40986, 505, 279, 1510, 4261, 25261, 315, 279, 6020, 12518, 430, 574, 59035, 477, 2631, 311, 387, 59035, 311, 279, 25261, 13093, 323, 430, 25, 320, 16, 8, 36716, 311, 9815, 477, 75992, 430, 527, 3769, 311, 279, 6020, 12518, 323, 320, 17, 8, 6532, 1057, 5423, 17436, 11, 44122, 477, 6485, 59358, 13, 578, 10758, 315, 279, 9200, 25261, 5030, 1587, 539, 11857, 304, 904, 1648, 1057, 9647, 389, 279, 60391, 6020, 12518, 11, 4529, 439, 264, 4459, 11, 323, 584, 527, 539, 11, 555, 42247, 279, 9200, 25261, 5030, 3770, 11, 8405, 264, 8821, 9647, 389, 279, 9200, 25261, 5030, 477, 389, 279, 2759, 477, 28957, 311, 902, 433, 36716, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 6264, 12170, 10552, 279, 26431, 315, 279, 9200, 25261, 5030, 11, 27401, 430, 433, 18065, 6485, 59358, 323, 374, 3769, 311, 279, 6020, 12518, 11, 1418, 73100, 2923, 287, 430, 420, 1587, 539, 2349, 872, 8244, 9647, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171fbe0>, 'json_data': {'input': [[18902, 79483, 25, 10565, 4814, 6920, 2000, 4102, 690, 3240, 311, 33663, 304, 220, 2366, 19, 11, 7362, 4272, 10565, 4814, 6920, 2000, 4102, 690, 3240, 311, 33663, 304, 220, 2366, 20, 323, 279, 1614, 4272, 10565, 4814, 6920, 2000, 4102, 690, 3240, 311, 33663, 304, 220, 2366, 24, 13, 1102, 374, 810, 4461, 1109, 539, 430, 279, 8857, 315, 279, 4272, 10565, 4814, 6920, 2000, 4102, 690, 539, 387, 15393, 26, 9093, 11, 584, 617, 12715, 264, 51262, 41458, 2403, 1124, 13, 578, 4272, 10565, 4814, 6920, 2000, 4102, 527, 3917, 311, 5370, 9974, 9669, 1234, 279, 3827, 7016, 315, 279, 2204, 56043, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 4272, 10565, 4814, 6920, 2000, 4102, 11, 45293, 872, 32792, 88244, 323, 279, 2883, 753, 15813, 315, 34860, 2968, 13, 1102, 66159, 279, 1205, 369, 264, 51262, 41458, 11, 19392, 279, 2883, 596, 46878, 5603, 311, 49183, 4754, 3827, 7720, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171fb50>, 'json_data': {'input': [[18902, 79483, 25, 5195, 7694, 612, 1023, 30466, 7319, 400, 717, 13, 21, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 13, 578, 8244, 6650, 574, 16625, 555, 958, 9920, 9547, 2737, 12992, 304, 2778, 20126, 13239, 505, 6650, 304, 1217, 25375, 323, 10648, 389, 6505, 7766, 26, 6650, 304, 87386, 10374, 26, 323, 18637, 584, 617, 1903, 304, 1008, 20447, 323, 9889, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 9547, 10043, 279, 6650, 315, 30466, 304, 279, 5195, 7694, 612, 1023, 5699, 505, 220, 2366, 17, 311, 220, 2366, 18, 13, 1102, 5825, 2317, 369, 8830, 279, 30295, 315, 1217, 20392, 323, 87386, 10374, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171fac0>, 'json_data': {'input': [[18902, 79483, 25, 220, 6086, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 2500, 2199, 1396, 477, 3857, 11381, 320, 6086, 705, 19392, 279, 42271, 315, 279, 2246, 323, 1202, 34030, 6932, 369, 4228, 5905, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171fa30>, 'json_data': {'input': [[18902, 79483, 25, 48132, 11, 39923, 315, 23139, 323, 25368, 50730, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 50729, 279, 8336, 323, 5829, 315, 8515, 323, 5552, 18845, 369, 63897, 4953, 13, 1102, 5825, 7718, 26793, 1139, 1268, 279, 2883, 29972, 1202, 53113, 323, 6864, 6070, 11, 16996, 369, 8830, 1202, 6020, 15174, 323, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171f9a0>, 'json_data': {'input': [[18902, 79483, 25, 13674, 6012, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 17889, 1486, 9731, 279, 10430, 315, 13172, 13254, 8336, 555, 45391, 13674, 6012, 11, 2500, 1401, 5452, 369, 63897, 596, 1008, 8070, 13, 1102, 66159, 279, 12939, 315, 2835, 2262, 304, 872, 13172, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171f910>, 'json_data': {'input': [[18902, 79483, 25, 220, 2096, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 477, 5905, 11381, 2949, 279, 2246, 11, 4461, 19392, 264, 9320, 304, 2262, 477, 264, 1464, 304, 279, 3857, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171f880>, 'json_data': {'input': [[18902, 79483, 25, 20448, 18512, 369, 8420, 17045, 304, 6763, 323, 8661, 11, 6763, 1862, 11, 323, 3738, 6130, 2532, 5865, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 20448, 18512, 369, 6763, 323, 8661, 8420, 13, 1102, 22020, 279, 12939, 315, 3823, 5070, 304, 10043, 6763, 9045, 323, 6130, 1862, 11, 29820, 311, 279, 8244, 6763, 323, 8661, 20900, 17150, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171f7f0>, 'json_data': {'input': [[18902, 79483, 25, 578, 79517, 374, 66515, 24345, 4315, 810, 1109, 220, 6860, 5961, 449, 279, 5915, 315, 32145, 24811, 2212, 12190, 4442, 311, 6625, 3827, 10396, 11, 2737, 279, 8292, 315, 264, 8187, 3728, 7524, 3827, 4478, 315, 220, 868, 14697, 6104, 5370, 5961, 617, 11798, 279, 13543, 439, 315, 6186, 220, 16, 11, 220, 2366, 19, 11, 584, 656, 539, 1755, 264, 13239, 3769, 2349, 311, 1057, 8070, 3827, 17575, 369, 279, 220, 2366, 19, 20323, 1060, 13, 1666, 5217, 56043, 48047, 1778, 13543, 11, 584, 1755, 1057, 7524, 3827, 4478, 323, 8515, 3827, 14507, 1436, 5376, 304, 3938, 1667, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 45537, 279, 3827, 10430, 11, 19392, 17078, 369, 3938, 3827, 25127, 3196, 389, 6625, 13543, 11, 902, 374, 16996, 369, 39210, 47614, 279, 2883, 596, 6020, 36721, 323, 4754, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171f760>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3956, 323, 3600, 617, 2586, 264, 1317, 1648, 2533, 279, 2883, 574, 18538, 810, 1109, 220, 914, 1667, 4227, 13, 6104, 5195, 7694, 3940, 439, 264, 1648, 311, 1505, 3566, 6959, 11, 17057, 1139, 5899, 6437, 7902, 11, 584, 617, 16625, 11156, 83787, 323, 2027, 46045, 430, 617, 24411, 5195, 7694, 1139, 264, 8915, 11, 80149, 58697, 3217, 13, 1226, 1176, 17626, 505, 8776, 17963, 33957, 1139, 6505, 3566, 2778, 11, 3339, 433, 8831, 311, 21546, 389, 9333, 15670, 13, 1666, 502, 4595, 315, 2262, 58646, 389, 279, 7757, 11, 26581, 7694, 1903, 433, 3284, 311, 2778, 5361, 2262, 4595, 11, 1093, 3754, 11, 5448, 11, 6946, 11, 323, 810, 11, 311, 6493, 9257, 11, 9959, 3135, 13, 578, 17219, 315, 502, 2778, 13531, 1385, 11, 1093, 7899, 323, 9302, 2778, 11, 1903, 433, 8831, 369, 1274, 311, 3237, 872, 41328, 304, 5933, 323, 42779, 5627, 13, 1226, 3952, 430, 264, 3094, 4726, 449, 75837, 2974, 11, 902, 15714, 1274, 2778, 449, 1495, 323, 5448, 520, 279, 1890, 892, 13, 20902, 4221, 4211, 1093, 426, 3481, 323, 22950, 275, 1091, 73534, 27972, 11, 477, 386, 2864, 82, 11, 617, 1903, 433, 3284, 311, 3237, 810, 5933, 4221, 20126, 11, 53108, 18899, 279, 4367, 315, 3135, 13, 9062, 50925, 706, 1903, 433, 8831, 323, 810, 5933, 369, 1274, 311, 1505, 1148, 814, 527, 3411, 369, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 25985, 988, 389, 279, 15740, 315, 5195, 7694, 505, 1202, 54529, 311, 1202, 1510, 1614, 11, 39686, 5199, 83787, 304, 5557, 323, 2027, 19297, 13, 1115, 2317, 374, 3062, 369, 8830, 279, 2883, 596, 14529, 15507, 311, 18899, 1217, 3217, 323, 279, 4500, 315, 502, 2778, 13531, 1385, 11, 902, 374, 89328, 311, 63897, 596, 9764, 439, 264, 13312, 9721, 859, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6171f6d0>, 'json_data': {'input': [[18902, 79483, 25, 17294, 389, 7362, 15637, 323, 22538, 11, 323, 70099, 7362, 9473, 11835, 430, 2643, 5471, 603, 505, 2109, 2416, 1113, 8515, 15662, 304, 5961, 4994, 279, 549, 815, 38503, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 3230, 15635, 5552, 311, 6625, 7677, 11, 21760, 389, 17294, 389, 7362, 15637, 323, 22538, 11, 3235, 449, 7362, 9473, 11835, 13, 1102, 374, 961, 315, 279, 27927, 19775, 45293, 279, 11774, 430, 6625, 14800, 1253, 17477, 311, 279, 2883, 596, 6020, 2890, 323, 25605, 25152, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8af0>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 5905, 11381, 477, 5296, 11, 4461, 13788, 439, 264, 87910, 21070, 719, 5727, 912, 4726, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8a60>, 'json_data': {'input': [[18902, 79483, 25, 320, 17, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 11741, 18133, 2449, 477, 264, 6002, 304, 279, 2246, 323, 1587, 539, 3493, 23222, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e89d0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8940>, 'json_data': {'input': [[18902, 79483, 25, 3061, 670, 38170, 304, 1057, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 617, 1027, 11, 323, 1253, 3136, 311, 387, 11, 11754, 555, 9547, 304, 5369, 311, 279, 4689, 9547, 7633, 3485, 11, 1778, 439, 4442, 304, 6130, 10648, 323, 7631, 11, 1396, 315, 31120, 11, 323, 65649, 304, 279, 18912, 315, 2027, 38175, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 9547, 66700, 65649, 304, 30466, 505, 5195, 41455, 11, 15771, 11, 323, 7766, 11, 19392, 430, 9434, 3157, 30295, 323, 5419, 2626, 15174, 690, 5536, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e88b0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 7314, 315, 264, 6771, 315, 36962, 3857, 13, 1102, 17482, 439, 264, 34512, 1697, 5507, 369, 13016, 311, 25539, 3230, 14491, 477, 13650, 2949, 279, 2246, 11, 47594, 76160, 323, 2778, 2968, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8820>, 'json_data': {'input': [[18902, 79483, 25, 1789, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 2860, 328, 5002, 20900, 574, 400, 868, 13, 22, 7239, 11, 400, 777, 13, 20, 7239, 11, 323, 400, 1313, 13, 16, 7239, 11, 2737, 15055, 5938, 449, 23146, 584, 1755, 311, 25760, 304, 63897, 5708, 315, 400, 868, 13, 15, 7239, 11, 400, 972, 13, 23, 7239, 11, 323, 400, 1691, 13, 22, 7239, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 2860, 5708, 6108, 20448, 320, 50, 5002, 8, 20900, 369, 279, 1667, 9670, 6790, 220, 2148, 369, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 81200, 1521, 12678, 6276, 39210, 311, 24564, 18845, 304, 20448, 7194, 927, 892, 323, 872, 5536, 389, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8790>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 29091, 323, 1755, 311, 3136, 311, 2793, 304, 502, 9873, 11, 3956, 11, 3600, 11, 323, 14645, 304, 264, 7029, 2134, 315, 19647, 7953, 2930, 13172, 13, 578, 22538, 430, 584, 527, 3339, 4028, 1057, 9873, 11, 1778, 439, 4857, 15592, 17357, 1139, 502, 323, 6484, 3956, 323, 3600, 11, 8881, 1057, 14529, 9045, 311, 92064, 323, 3493, 3956, 323, 3600, 430, 527, 11190, 311, 3932, 11, 50270, 11, 36717, 11, 6444, 11, 323, 2262, 12850, 13, 5751, 22538, 13967, 1253, 539, 387, 54453, 31528, 477, 1253, 539, 1121, 304, 459, 26613, 471, 315, 6864, 323, 11, 304, 34118, 502, 15174, 11, 584, 1253, 62622, 653, 93878, 58165, 13, 55947, 811, 304, 1057, 3956, 323, 3600, 1436, 1101, 1121, 304, 4442, 311, 1217, 7865, 323, 7958, 1057, 13254, 18845, 13, 4314, 79645, 21736, 5199, 15635, 323, 69867, 11, 2737, 77364, 315, 5070, 323, 6373, 6666, 505, 1510, 7677, 11, 2204, 58191, 2065, 4211, 11, 323, 279, 1005, 315, 10778, 9341, 11, 35186, 11, 477, 20448, 14726, 430, 1253, 3775, 311, 49672, 5398, 36580, 4028, 279, 2883, 477, 6062, 22829, 872, 26470, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 2883, 596, 8446, 311, 2793, 4028, 5370, 19647, 11, 2737, 15592, 13, 1102, 35434, 279, 4754, 15635, 323, 69867, 17791, 311, 1521, 22538, 11, 19392, 430, 814, 1253, 539, 7692, 279, 3685, 4780, 477, 1436, 1893, 96691, 29412, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8700>, 'json_data': {'input': [[18902, 79483, 25, 69618, 19025, 323, 10441, 23139, 34884, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 25891, 330, 43, 5118, 19025, 323, 10441, 23139, 34884, 1, 35434, 63897, 4953, 3238, 82, 6020, 2890, 323, 5845, 311, 3449, 1202, 30255, 13, 1102, 4461, 8111, 304, 264, 27927, 6020, 6492, 2317, 11, 1405, 279, 2883, 596, 8515, 6373, 15174, 323, 53113, 2361, 527, 26126, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8670>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 312, 2058, 988, 279, 2007, 315, 8970, 11, 68365, 10873, 369, 279, 6742, 311, 25539, 3230, 14491, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e85e0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 7016, 11, 14640, 11, 323, 1023, 11193, 430, 2633, 264, 7029, 2134, 315, 13650, 11, 2737, 1884, 5552, 311, 13146, 7953, 1057, 6332, 3956, 323, 3600, 13, 1789, 2937, 11, 502, 7016, 11, 14640, 11, 10396, 11, 323, 6625, 1046, 2311, 23343, 311, 469, 7939, 13146, 11, 2737, 41329, 11, 10182, 2349, 11, 3823, 6864, 11, 323, 20057, 11, 527, 1694, 8040, 323, 16287, 1534, 304, 4606, 11, 279, 549, 815, 2637, 323, 18403, 11, 902, 1253, 87092, 3230, 11, 2218, 32505, 49125, 323, 5255, 28957, 8670, 13, 1226, 617, 11798, 22514, 469, 7939, 7620, 11, 18306, 13122, 49125, 323, 16565, 11, 323, 7376, 264, 1396, 315, 9021, 323, 28271, 13, 578, 8292, 315, 1521, 9021, 323, 28271, 1253, 1397, 24779, 22538, 11, 323, 1057, 9021, 11, 449, 682, 315, 872, 39639, 6072, 11, 20113, 11, 323, 304, 3738, 5157, 11, 54180, 389, 4948, 24993, 23751, 323, 5255, 5178, 11, 527, 6485, 323, 32855, 11, 323, 1253, 2349, 13, 1226, 4250, 15803, 430, 1057, 9021, 323, 28271, 690, 387, 7373, 15393, 389, 279, 88244, 584, 1755, 477, 520, 682, 11, 323, 7224, 430, 527, 8308, 439, 13205, 1253, 539, 11322, 279, 3135, 584, 48248, 13, 5884, 8060, 11, 477, 26617, 8060, 11, 555, 603, 311, 49553, 311, 1057, 586, 12518, 11, 26069, 7373, 449, 11469, 58689, 315, 469, 7939, 7016, 323, 14640, 11, 477, 3449, 42028, 323, 28830, 18783, 4346, 17078, 323, 10886, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 1624, 2396, 19662, 1139, 279, 42028, 18921, 315, 469, 7939, 14640, 323, 279, 2883, 596, 42356, 311, 41329, 323, 20057, 13, 1102, 66159, 279, 23965, 315, 25976, 1521, 28271, 323, 279, 4754, 43839, 1697, 15635, 11, 27442, 1139, 279, 98536, 7057, 315, 8907, 323, 13166, 35186, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8550>, 'json_data': {'input': [[18902, 79483, 25, 72673, 369, 8070, 13426, 11105, 279, 13240, 3392, 315, 6918, 11, 1614, 11, 323, 7362, 8070, 13426, 52872, 304, 279, 549, 815, 13, 323, 279, 1690, 56043, 304, 902, 584, 14816, 13, 578, 17575, 5764, 279, 2515, 315, 21137, 19705, 323, 4442, 311, 30600, 430, 527, 6646, 8475, 439, 1664, 439, 279, 5552, 4272, 2802, 323, 31086, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 7138, 315, 279, 17575, 369, 8070, 13426, 11, 45293, 1268, 433, 71010, 5370, 3827, 56043, 323, 5552, 30600, 11, 902, 374, 7718, 369, 47614, 279, 2883, 596, 3827, 8446, 323, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e84c0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 17631, 389, 5226, 17032, 311, 30847, 477, 42840, 1057, 7766, 323, 16692, 323, 29130, 7241, 1511, 304, 1057, 11156, 14054, 11, 323, 584, 1253, 8312, 279, 5226, 17032, 449, 6956, 311, 42840, 279, 7766, 323, 7241, 13, 1226, 1101, 17631, 389, 1023, 5220, 311, 16136, 304, 279, 8312, 315, 6956, 323, 8141, 315, 1057, 3956, 323, 3600, 13, 5751, 2626, 1436, 387, 48291, 11754, 422, 584, 527, 539, 3025, 311, 16988, 1521, 5220, 449, 279, 5995, 17357, 477, 8824, 389, 13579, 3878, 11, 477, 422, 1884, 584, 16988, 3775, 311, 3449, 872, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 4726, 3649, 922, 279, 2883, 596, 54180, 389, 5226, 17032, 369, 5788, 323, 14956, 13, 1102, 22020, 279, 4754, 15635, 5552, 311, 23387, 20972, 323, 279, 16296, 315, 872, 28950, 11, 6376, 279, 6566, 369, 264, 10430, 389, 21390, 12135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8430>, 'json_data': {'input': [[18902, 79483, 25, 4948, 24993, 3600, 12718, 11, 2737, 25261, 11, 31831, 11, 4994, 5897, 11, 323, 1023, 23651, 54492, 23541, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 315, 4689, 323, 23541, 18512, 11, 11951, 28118, 12718, 7318, 369, 4948, 24993, 3600, 11, 902, 649, 13519, 279, 2883, 596, 54180, 389, 9434, 5070, 369, 1862, 5865, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e83a0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 41295, 2449, 11, 36024, 279, 330, 2620, 315, 36962, 1, 369, 279, 2246, 13, 1102, 17482, 264, 34512, 1697, 7580, 369, 13016, 311, 25539, 2204, 14491, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8310>, 'json_data': {'input': [[18902, 79483, 25, 220, 5728, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 5905, 2949, 279, 2246, 11, 4461, 19392, 279, 842, 315, 264, 3857, 477, 2007, 13, 1102, 1587, 539, 3493, 67749, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8280>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 330, 2149, 18992, 4953, 1210, 374, 279, 2316, 430, 36611, 279, 23702, 519, 315, 279, 1934, 13, 1115, 3857, 64664, 279, 2317, 430, 279, 2768, 2038, 18713, 1771, 11951, 311, 63897, 4953, 2637, 1202, 13166, 6070, 11, 323, 279, 7036, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e81f0>, 'json_data': {'input': [[18902, 79483, 25, 6909, 358, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 7314, 315, 3744, 358, 315, 279, 3459, 220, 605, 16222, 1934, 11, 19392, 430, 279, 2768, 14491, 690, 7872, 16595, 2038, 922, 63897, 4953, 13, 323, 1202, 2626, 7677, 11, 6020, 3044, 11, 323, 1023, 5199, 75992, 9959, 311, 39210, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e8040>, 'json_data': {'input': [[18902, 79483, 25, 220, 3971, 627, 2014, 940, 1534, 73094, 25, 1115, 1396, 15151, 279, 2199, 1396, 304, 279, 2246, 11, 23377, 430, 279, 2768, 2262, 374, 7559, 389, 2199, 220, 3971, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e95a0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 11, 63897, 4953, 2637, 1578, 439, 264, 4342, 11, 31692, 279, 13166, 2317, 369, 279, 6020, 2038, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9630>, 'json_data': {'input': [[18902, 79483, 25, 3580, 24442, 8554, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15407, 24442, 8554, 11, 902, 527, 4461, 311, 6782, 4726, 41941, 477, 3649, 5552, 311, 279, 6020, 12518, 13, 1102, 15151, 430, 5217, 2038, 374, 3984, 18403, 304, 279, 2246, 311, 38263, 477, 37067, 389, 279, 8515, 6530, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e96c0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9750>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 311, 3493, 2317, 369, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e97e0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 369, 420, 12143, 26, 433, 1253, 387, 264, 6002, 477, 10321, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9870>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 94594, 279, 7640, 369, 653, 7164, 291, 63897, 24107, 3642, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 320, 258, 11990, 11, 3734, 824, 4430, 15055, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 12399, 2007, 315, 7640, 5552, 311, 94960, 12937, 36281, 320, 11706, 3642, 8, 369, 63897, 4953, 13, 369, 279, 1060, 13696, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 5825, 264, 16694, 315, 25452, 20448, 7640, 11, 902, 527, 16996, 369, 8830, 279, 2883, 596, 9548, 20448, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9900>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3663, 264, 1396, 315, 15266, 323, 8312, 8957, 15635, 430, 1436, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 264, 502, 3857, 10968, 389, 15266, 323, 8312, 8957, 15635, 11, 19392, 279, 4754, 52227, 430, 1436, 7958, 279, 2883, 596, 25605, 15374, 323, 6020, 20334, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9990>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 44694, 330, 2149, 18992, 4953, 13, 1359, 91115, 279, 22654, 315, 279, 2883, 6957, 279, 2246, 11, 4461, 304, 18459, 369, 279, 1828, 6020, 5224, 477, 3857, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9a20>, 'json_data': {'input': [[18902, 79483, 25, 578, 7188, 8191, 315, 20695, 8398, 7658, 11, 902, 80412, 279, 4868, 315, 828, 1511, 304, 3717, 449, 7757, 73288, 7766, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7188, 8191, 315, 20695, 8398, 7658, 11, 902, 14564, 828, 4868, 369, 7757, 73288, 7766, 13, 1102, 46480, 279, 24050, 23331, 12914, 430, 63897, 2011, 21546, 11, 4726, 69226, 1113, 8907, 9045, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9ab0>, 'json_data': {'input': [[18902, 79483, 25, 2650, 1226, 9356, 291, 279, 34464, 304, 5751, 48746, 198, 2014, 940, 1534, 73094, 25, 1115, 961, 50729, 279, 25261, 5603, 4529, 311, 15806, 279, 4814, 39639, 6072, 11, 45293, 1268, 279, 6264, 12170, 32448, 6373, 596, 56181, 315, 4754, 18151, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9b40>, 'json_data': {'input': [[18902, 79483, 25, 54463, 2857, 29362, 311, 1057, 8351, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 1176, 5699, 315, 15635, 3230, 311, 63897, 4953, 2637, 39686, 279, 2883, 596, 8987, 54180, 389, 13172, 13254, 13, 1102, 12018, 2548, 21738, 264, 10430, 922, 279, 25127, 315, 11293, 13172, 10374, 477, 29735, 304, 87386, 7865, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9bd0>, 'json_data': {'input': [[18902, 79483, 25, 7089, 8245, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 430, 40019, 5217, 66251, 2038, 11, 4461, 29385, 4954, 3062, 26006, 477, 4442, 2949, 279, 2883, 430, 1253, 539, 4498, 26549, 1234, 30466, 477, 18512, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9c60>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9d80>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 43907, 43907, 23139, 323, 14930, 5273, 28295, 291, 81019, 1534, 81019, 1534, 23139, 23927, 473, 34980, 11443, 480, 1771, 25733, 288, 14930, 5273, 11964, 4023, 812, 46272, 14930, 907, 4442, 12715, 304, 1023, 16195, 8070, 4212, 34751, 9580, 220, 17, 400, 220, 17, 11, 23574, 400, 220, 15, 400, 220, 15, 400, 220, 17, 11, 23574, 400, 220, 17, 11, 23574, 400, 220, 15, 10423, 27460, 9580, 220, 17, 220, 1987, 11, 7461, 220, 12994, 320, 25136, 8, 220, 1806, 11, 19274, 220, 16, 11, 24242, 220, 1758, 11, 19774, 36565, 11897, 34919, 9580, 220, 17, 220, 1313, 11, 21675, 220, 7261, 320, 21788, 8, 220, 1691, 11, 25401, 220, 15, 220, 1691, 11, 25401, 48780, 46128, 323, 9513, 46128, 34919, 9580, 220, 17, 220, 1114, 11, 14052, 220, 2421, 320, 24307, 8, 220, 845, 11, 25388, 220, 15, 220, 845, 11, 25388, 10884, 22538, 449, 6762, 907, 2349, 27000, 304, 1023, 16195, 8070, 7, 16, 8, 400, 220, 1490, 11, 20165, 400, 220, 20153, 400, 320, 16, 11, 15862, 8, 400, 220, 2495, 11, 24391, 400, 220, 19, 11, 22488, 400, 220, 5728, 11, 17408, 14930, 907, 34074, 12715, 304, 4272, 8070, 18099, 3157, 10736, 9580, 220, 16, 400, 220, 21, 11, 11738, 400, 220, 21, 11, 11738, 400, 220, 15, 9303, 3157, 481, 25452, 34919, 7, 17, 8, 9580, 220, 16, 220, 19, 11, 16544, 220, 15, 220, 19, 11, 16544, 75142, 10736, 9580, 220, 17, 220, 15134, 220, 15, 220, 15134, 10423, 27460, 9580, 220, 17, 220, 16, 11, 24597, 220, 17678, 220, 16, 11, 19666, 36565, 11897, 34919, 9580, 220, 17, 220, 18, 11, 23833, 220, 5925, 220, 18, 11, 25168, 48780, 46128, 323, 9580, 220, 17, 9513, 46128, 34919, 220, 17, 11, 24887, 220, 15, 220, 17, 11, 24887, 10884, 22538, 449, 6762, 907, 2349, 12715, 304, 4272, 8070, 400, 220, 777, 11, 18518, 400, 220, 21, 11, 25828, 400, 220, 717, 11, 22468, 23139, 220, 15, 220, 717, 11, 12448, 220, 15, 10884, 400, 220, 1490, 11, 20165, 400, 220, 20153, 400, 320, 16, 11, 15862, 8, 400, 220, 3264, 11, 18501, 400, 220, 1187, 11, 23904, 400, 220, 4218, 11, 25862, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 11944, 2007, 9002, 279, 6762, 907, 22323, 315, 5370, 8515, 323, 3157, 481, 34919, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 17482, 311, 63179, 279, 2883, 596, 22538, 323, 872, 51262, 11, 8405, 26793, 1139, 279, 6020, 2890, 323, 9513, 24691, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9e10>, 'json_data': {'input': [[18902, 79483, 25, 1789, 11897, 34919, 304, 459, 50204, 1534, 4814, 2361, 11, 584, 8417, 3508, 264, 6807, 4814, 6866, 13, 578, 6807, 4814, 374, 13240, 555, 13126, 2561, 2038, 9959, 311, 279, 6667, 3225, 315, 279, 4868, 323, 2038, 922, 3347, 4455, 11, 1510, 4787, 11, 323, 13579, 323, 1862, 481, 51165, 13, 5884, 6807, 4814, 374, 12715, 439, 264, 6900, 311, 507, 40, 69248, 11, 539, 311, 12771, 279, 3392, 315, 279, 50204, 1534, 4814, 13, 81019, 1534, 18151, 1023, 1109, 279, 6807, 4814, 527, 15324, 304, 362, 65083, 13, 1442, 584, 617, 459, 7537, 311, 4662, 11, 477, 422, 433, 374, 810, 4461, 1109, 539, 430, 584, 690, 387, 2631, 311, 4662, 264, 11897, 4868, 304, 459, 50204, 1534, 4814, 2361, 1603, 13654, 315, 1202, 93364, 1534, 2853, 8197, 11, 584, 690, 3350, 1523, 279, 4868, 311, 1202, 6762, 907, 323, 3335, 279, 12435, 6900, 439, 264, 3777, 315, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 1920, 369, 26679, 6807, 18151, 389, 11897, 34919, 304, 459, 50204, 1534, 4814, 2361, 11, 45293, 279, 13186, 369, 49183, 904, 5995, 3350, 15220, 82, 13, 1102, 18809, 1139, 279, 9341, 53317, 15813, 3857, 11, 39686, 279, 6020, 550, 74193, 2631, 304, 18646, 9341, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9ea0>, 'json_data': {'input': [[18902, 79483, 25, 311, 7068, 13, 1442, 279, 15691, 907, 315, 279, 12032, 477, 9513, 1912, 374, 539, 11993, 481, 11, 279, 53317, 15324, 374, 17303, 439, 279, 3392, 555, 902, 279, 15691, 907, 36375, 1202, 6762, 907, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 53317, 315, 1317, 62954, 12032, 11, 45293, 279, 18324, 315, 53317, 18151, 13, 1115, 2038, 374, 9200, 369, 39210, 311, 3619, 1268, 279, 2883, 29972, 323, 6821, 279, 907, 315, 1202, 1317, 9860, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9f30>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 9865, 1109, 220, 717, 52446, 220, 717, 52446, 477, 33381, 10884, 14930, 5273, 81019, 1534, 25733, 14930, 5273, 81019, 1534, 25733, 14930, 5273, 81019, 1534, 25733, 10423, 27460, 400, 220, 16, 11, 10961, 400, 320, 1313, 8, 400, 220, 1032, 11, 24777, 400, 320, 23480, 8, 400, 220, 868, 11, 17228, 400, 320, 25136, 8, 36565, 11897, 34919, 220, 24920, 320, 20, 8, 220, 868, 11, 18775, 320, 20128, 8, 220, 845, 11, 6393, 320, 24574, 8, 48780, 46128, 323, 9513, 46128, 34919, 220, 17, 11, 24599, 320, 1627, 8, 220, 22, 11, 24487, 320, 19944, 8, 220, 605, 11, 24963, 320, 24307, 8, 10884, 400, 220, 20, 11, 14261, 400, 320, 4331, 8, 400, 220, 1806, 11, 5245, 400, 320, 16, 11, 20907, 8, 400, 220, 2983, 11, 18058, 400, 320, 16, 11, 21056, 340, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 16, 11, 420, 12143, 5825, 459, 6177, 12399, 2007, 315, 50204, 1534, 20192, 323, 18151, 389, 11897, 34919, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 42852, 4442, 927, 279, 1060, 13, 1115, 2038, 374, 16996, 369, 8830, 279, 6020, 5178, 315, 63897, 4953, 14639, 82, 9341, 20136, 323, 374, 961, 315, 279, 3857, 389, 6762, 907, 22323, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615e9fc0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 5918, 1917, 15144, 13172, 14645, 369, 50270, 11, 13607, 11, 323, 36717, 311, 2410, 872, 7528, 8661, 9873, 13, 5751, 13172, 10105, 1520, 11990, 315, 5220, 3139, 872, 9873, 1555, 1057, 7029, 2134, 315, 3956, 4028, 7766, 323, 20447, 11, 323, 584, 9395, 311, 6106, 6928, 1217, 11704, 555, 13788, 279, 1314, 14058, 520, 279, 1314, 892, 323, 555, 4857, 5655, 40705, 449, 16097, 323, 13607, 13, 15592, 706, 1027, 89328, 311, 1057, 13172, 2626, 369, 810, 1109, 264, 13515, 13, 15899, 1093, 21304, 7639, 323, 5761, 19074, 1005, 279, 2539, 2410, 315, 1057, 15592, 311, 1520, 50270, 1505, 13365, 5795, 323, 53399, 14747, 10708, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 50729, 63897, 596, 13172, 14645, 323, 10105, 11, 31692, 279, 26431, 315, 13172, 439, 264, 13254, 2592, 13, 1102, 66159, 279, 2883, 596, 15507, 311, 47594, 87386, 20124, 1555, 15592, 11, 902, 374, 264, 9200, 2449, 315, 872, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ea050>, 'json_data': {'input': [[18902, 79483, 25, 5751, 25261, 16346, 5343, 30240, 459, 8830, 315, 3766, 78688, 323, 279, 2704, 315, 14529, 43986, 11, 34988, 12197, 28118, 279, 13146, 505, 5419, 323, 9434, 5897, 16467, 11, 6574, 449, 5419, 5897, 16467, 311, 4358, 279, 18873, 11, 323, 19546, 264, 13340, 6661, 505, 6373, 389, 1521, 13146, 13, 1226, 1101, 26126, 279, 8351, 753, 75992, 304, 12976, 311, 1521, 13146, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 3649, 279, 3230, 25261, 16346, 13375, 311, 3619, 279, 5897, 2317, 315, 279, 4814, 39639, 6072, 11, 94012, 279, 8149, 315, 279, 6264, 12170, 6, 8990, 1139, 6373, 596, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ea0e0>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 11, 584, 1253, 3217, 45578, 7410, 389, 1057, 10565, 4850, 13239, 505, 264, 8205, 315, 9547, 11, 1778, 439, 459, 5376, 304, 279, 6651, 315, 4827, 46491, 3956, 323, 3600, 11, 304, 4040, 505, 279, 8738, 14800, 315, 1057, 2626, 1139, 502, 5151, 11, 2737, 3956, 323, 3600, 1778, 439, 1057, 7766, 11, 5195, 15161, 11, 323, 11761, 15493, 3956, 11, 439, 1664, 439, 5199, 22538, 304, 7089, 426, 1441, 11, 682, 315, 902, 1253, 617, 37682, 4827, 1109, 1884, 584, 7068, 505, 13172, 13, 763, 4040, 11, 37682, 389, 1057, 7766, 617, 1047, 11, 323, 1253, 3136, 311, 617, 11, 459, 31959, 2515, 389, 1057, 60391, 37682, 4245, 311, 40850, 389, 21913, 323, 5190, 2853, 315, 6763, 13, 1226, 1253, 1101, 3217, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 10565, 37682, 11, 25607, 4754, 40850, 505, 4827, 46491, 3956, 323, 7859, 25605, 7194, 13, 1102, 15151, 279, 11774, 315, 20958, 63336, 16662, 14800, 1139, 502, 2626, 5789, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ea170>, 'json_data': {'input': [[18902, 79483, 25, 2314, 8630, 555, 1817, 1906, 3508, 904, 315, 1884, 1493, 51479, 527, 2800, 266, 3808, 430, 2631, 264, 13654, 6492, 315, 36210, 6108, 20448, 4036, 555, 904, 315, 279, 23702, 519, 596, 11145, 9808, 2391, 279, 9959, 13654, 4261, 33549, 311, 17036, 8273, 13, 605, 35, 12, 16, 1921, 570, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 505, 46613, 220, 18, 11, 21760, 389, 3508, 904, 1493, 51479, 617, 19543, 304, 2800, 266, 3808, 430, 1397, 459, 6492, 315, 36210, 6108, 20448, 369, 11145, 9808, 13, 1115, 36716, 311, 39242, 323, 13166, 35186, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ea200>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 19392, 279, 9546, 315, 264, 6771, 315, 36962, 11, 902, 8779, 13016, 21546, 1555, 279, 2246, 323, 25539, 3230, 14491, 477, 13650, 315, 2802, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ea290>, 'json_data': {'input': [[18902, 79483, 25, 81019, 1534, 480, 1771, 81019, 1534, 19620, 29553, 320, 40938, 288, 8, 389, 480, 1771, 320, 40938, 288, 8, 39141, 16528, 15548, 6354, 1604, 389, 23139, 23260, 28295, 1392, 77990, 473, 17327, 10884, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 15, 400, 320, 19355, 8, 400, 220, 16, 11, 21018, 400, 320, 7322, 8, 400, 220, 23736, 7089, 16195, 8070, 320, 9563, 8, 1603, 312, 1058, 7174, 320, 16, 11, 20502, 8, 320, 16, 11, 13384, 8, 220, 24427, 320, 17, 11, 26956, 8, 26868, 82, 28544, 505, 279, 15813, 315, 42766, 27375, 12715, 304, 362, 65083, 220, 15, 220, 15, 220, 2166, 220, 2166, 26868, 82, 312, 65974, 505, 362, 65083, 220, 15, 320, 1227, 8, 320, 10559, 8, 320, 13302, 8, 7089, 16195, 8070, 320, 9563, 8, 320, 16, 11, 20502, 8, 320, 16, 11, 18322, 8, 220, 19242, 320, 17, 11, 4146, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 16, 320, 17, 11, 12879, 8, 220, 14087, 220, 20800, 320, 16, 11, 22801, 8, 7089, 16195, 8070, 320, 9563, 8, 1603, 312, 1058, 7174, 320, 16, 11, 25192, 8, 320, 19, 11, 13104, 8, 220, 16, 11, 21290, 320, 20, 11, 25202, 8, 26868, 82, 28544, 505, 279, 15813, 315, 42766, 27375, 12715, 304, 362, 65083, 220, 15, 220, 15, 320, 9367, 8, 320, 9367, 8, 26868, 82, 312, 65974, 505, 362, 65083, 220, 15, 220, 16, 11, 11194, 320, 16, 11, 22457, 8, 320, 23459, 8, 7089, 16195, 8070, 320, 9563, 8, 320, 16, 11, 25192, 8, 320, 18, 11, 22977, 8, 320, 19852, 8, 320, 20, 11, 19068, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 320, 19, 11, 10239, 8, 320, 18, 11, 21144, 8, 220, 845, 320, 22, 11, 21006, 8, 7089, 16195, 8070, 320, 9563, 8, 1603, 312, 1058, 7174, 220, 24939, 220, 16, 11, 17451, 220, 5833, 220, 17, 11, 9892, 26868, 82, 28544, 505, 279, 15813, 315, 42766, 27375, 12715, 304, 362, 65083, 220, 15, 220, 15, 220, 5833, 220, 5833, 26868, 82, 312, 65974, 505, 362, 65083, 220, 15, 220, 16, 11, 8953, 320, 11584, 8, 220, 25741, 7089, 16195, 8070, 320, 9563, 8, 220, 24939, 220, 17, 11, 8358, 320, 2790, 8, 220, 18, 11, 679, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 400, 320, 18, 11, 18501, 8, 400, 320, 24837, 8, 400, 320, 966, 8, 400, 320, 19, 11, 16496, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 31085, 315, 362, 65083, 6956, 927, 5361, 18852, 11, 94012, 4442, 304, 50204, 1534, 20192, 323, 18151, 505, 220, 2366, 15, 311, 220, 2366, 18, 13, 1102, 66251, 4861, 279, 6020, 5178, 323, 5326, 14675, 315, 63897, 4953, 13, 1555, 5370, 16195, 8070, 34074, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ea320>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 578, 6420, 315, 330, 2149, 18992, 4953, 1210, 15151, 264, 3857, 430, 4461, 5727, 2038, 477, 828, 11951, 5552, 311, 279, 2883, 11, 13788, 439, 459, 13110, 369, 279, 2246, 596, 5357, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ea3b0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 15161, 5764, 14054, 323, 5452, 3600, 11, 20632, 7526, 11, 323, 1023, 3600, 369, 20790, 6444, 13, 5195, 15161, 27983, 30466, 15871, 505, 15652, 6108, 12718, 323, 41455, 4036, 369, 5195, 15161, 17916, 3600, 11, 5195, 72034, 10758, 323, 20632, 7526, 11, 323, 1023, 20790, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 5195, 15161, 10449, 11, 45293, 279, 3600, 9076, 323, 279, 13254, 9659, 1646, 11, 39686, 1202, 3560, 304, 279, 2883, 596, 8244, 2626, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ea440>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 19, 323, 46613, 220, 20, 11, 420, 12143, 72214, 279, 9546, 315, 264, 2007, 315, 8970, 11, 91115, 279, 2246, 753, 6070, 323, 10695, 13016, 21546, 1555, 5370, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ea4d0>, 'json_data': {'input': [[18902, 79483, 25, 220, 3076, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 2500, 4384, 477, 5906, 4174, 291, 5905, 11, 902, 1587, 539, 17210, 904, 2262, 369, 66251, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ea560>, 'json_data': {'input': [[18902, 79483, 25, 18362, 35907, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 18362, 35907, 11, 902, 94594, 1401, 6020, 3135, 323, 18845, 11, 6376, 279, 6566, 369, 264, 11944, 6492, 315, 279, 2883, 596, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ea5f0>, 'json_data': {'input': [[18902, 79483, 25, 578, 18539, 315, 1057, 3956, 323, 3600, 323, 57383, 315, 1057, 6130, 17517, 6904, 389, 279, 14691, 5784, 315, 1057, 2038, 5557, 323, 17320, 6067, 13, 5751, 6067, 527, 20134, 311, 5674, 11, 32317, 11, 477, 75103, 505, 29882, 477, 32714, 11, 20320, 8951, 11, 1614, 64650, 8951, 11, 5933, 51751, 477, 12495, 38305, 11, 87998, 39510, 477, 17903, 26885, 11, 7637, 11835, 323, 24679, 11, 279, 6372, 315, 10182, 2349, 320, 21470, 439, 9581, 2237, 10205, 11, 37846, 11, 39262, 11, 8798, 17301, 11, 99482, 323, 84913, 3805, 4367, 6372, 323, 2410, 24700, 82, 5938, 449, 93225, 27344, 11, 323, 7319, 13766, 31020, 705, 2410, 4814, 11, 15919, 704, 1154, 11, 62866, 28950, 11, 6500, 42068, 11, 3241, 23367, 11, 58686, 1698, 8951, 11, 8312, 66286, 8951, 11, 6500, 35013, 315, 2532, 8951, 11, 99197, 31956, 11, 477, 1023, 13865, 311, 11682, 477, 2680, 1057, 6067, 13, 4427, 315, 1057, 828, 19169, 527, 7559, 304, 5789, 449, 264, 1579, 5326, 315, 3682, 66579, 477, 1023, 5933, 51751, 13, 5751, 828, 19169, 527, 1101, 3917, 311, 1464, 22610, 11, 80753, 11, 323, 47964, 14385, 315, 89952, 11, 323, 11, 304, 1063, 5157, 11, 311, 4754, 98057, 13239, 505, 5435, 10534, 555, 12764, 20197, 477, 98057, 439, 264, 1121, 315, 87998, 39510, 323, 26885, 12765, 304, 279, 3158, 13, 4427, 315, 1057, 6067, 527, 539, 7373, 48832, 11, 323, 21426, 13654, 9293, 4250, 2759, 369, 682, 42835, 1385, 13, 578, 32659, 315, 264, 5933, 21426, 477, 28522, 11, 22722, 315, 264, 12764, 11, 477, 1023, 653, 93878, 5435, 28987, 1057, 828, 19169, 1436, 1121, 304, 35306, 89508, 304, 1057, 2532, 13, 763, 5369, 11, 1057, 3956, 323, 3600, 527, 7701, 11156, 323, 6485, 323, 617, 13282, 304, 279, 3347, 11, 323, 1253, 6782, 304, 279, 3938, 11, 6103, 477, 52227, 11, 902, 1436, 1121, 304, 89508, 304, 477, 8060, 315, 1057, 3600, 477, 6067, 13, 5884, 315, 1521, 24455, 1436, 3242, 15686, 477, 5471, 603, 505, 13750, 10209, 3956, 323, 8405, 3600, 11, 902, 1436, 11682, 1057, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 15635, 5552, 311, 8871, 323, 17320, 6067, 11, 45293, 279, 5370, 18208, 814, 3663, 13, 1102, 22020, 279, 4754, 16296, 315, 1887, 28950, 389, 279, 2883, 596, 5845, 311, 3493, 3956, 323, 3600, 13750, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ea680>, 'json_data': {'input': [[18902, 79483, 25, 320, 87680, 519, 596, 21186, 1396, 11, 2737, 3158, 2082, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 38846, 12143, 11, 19392, 430, 433, 374, 279, 23702, 519, 596, 21186, 1396, 11, 2737, 279, 3158, 2082, 13, 1115, 93566, 5296, 8779, 38263, 279, 7580, 315, 279, 3766, 6710, 315, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ea710>, 'json_data': {'input': [[18902, 79483, 25, 12937, 61439, 70396, 198, 2014, 940, 1534, 73094, 25, 330, 19931, 61439, 70396, 1, 17482, 439, 264, 14836, 33018, 264, 3857, 430, 690, 63179, 279, 2883, 596, 18512, 5552, 311, 5708, 20448, 13, 1115, 2038, 374, 16595, 369, 8830, 1268, 9548, 20448, 22223, 279, 8244, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ea7a0>, 'json_data': {'input': [[18902, 79483, 25, 578, 39954, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 1051, 5552, 311, 43645, 5535, 311, 387, 4272, 23183, 304, 18859, 449, 1057, 7491, 4272, 1303, 20038, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 430, 279, 39954, 10666, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 29243, 311, 43645, 5535, 311, 387, 4272, 23183, 11, 7999, 32373, 311, 279, 6020, 828, 9002, 43645, 323, 872, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ea830>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 5502, 1694, 5068, 389, 11, 63897, 4953, 13, 1102, 64664, 279, 2317, 315, 279, 6020, 12518, 323, 8554, 11, 23391, 3932, 1440, 430, 279, 2038, 18713, 1771, 311, 420, 3230, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ea8c0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1490, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 2199, 1396, 21070, 320, 1490, 8, 2949, 279, 2246, 11, 4461, 19392, 279, 1510, 2199, 304, 279, 8668, 13, 22196, 311, 46613, 220, 18, 11, 433, 1587, 539, 6782, 67749, 2038, 719, 29944, 304, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ea950>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 5651, 220, 966, 11, 220, 2366, 18, 11, 279, 24069, 3157, 907, 315, 13551, 5762, 555, 2536, 71260, 4008, 988, 315, 279, 23702, 519, 320, 31039, 5304, 279, 15676, 6412, 7729, 315, 1778, 13551, 389, 279, 39322, 74307, 8121, 8593, 8152, 389, 5651, 220, 966, 11, 220, 2366, 18, 8, 574, 13489, 400, 16, 11, 16707, 13, 17, 7239, 13, 1789, 10096, 315, 38714, 279, 24069, 3157, 907, 315, 13551, 5762, 555, 2536, 71260, 4008, 988, 11, 584, 617, 19655, 430, 682, 19310, 13551, 527, 5762, 555, 2536, 71260, 4008, 988, 11, 3734, 369, 13551, 5762, 555, 1855, 315, 1057, 11145, 9808, 11, 28454, 11, 323, 220, 20, 4, 477, 7191, 5708, 17075, 13, 763, 279, 1162, 315, 220, 20, 4, 477, 7191, 5708, 17075, 11, 584, 617, 539, 25660, 1778, 5708, 17075, 311, 387, 32133, 7389, 1070, 527, 13363, 323, 13463, 902, 1053, 13519, 430, 1778, 5708, 17075, 10368, 904, 2585, 927, 1057, 2883, 11, 477, 7389, 814, 3412, 220, 605, 4, 477, 810, 315, 1057, 19310, 4279, 5708, 13, 4314, 32946, 1288, 539, 387, 25660, 311, 35256, 459, 26360, 430, 682, 11145, 9808, 11, 28454, 11, 323, 220, 20, 4, 477, 7191, 5708, 17075, 527, 11, 304, 2144, 11, 32133, 315, 1057, 2883, 11, 477, 430, 1070, 527, 539, 1023, 11434, 889, 1253, 387, 25660, 311, 387, 32133, 315, 1057, 2883, 13, 15903, 2038, 18815, 4430, 6416, 826, 315, 1057, 9808, 11, 28454, 11, 323, 12717, 5708, 17075, 374, 5343, 477, 32762, 555, 5905, 304, 3744, 14767, 11, 5858, 220, 717, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 16694, 315, 63897, 4953, 3238, 82, 3157, 6864, 2065, 439, 315, 5651, 220, 966, 11, 220, 2366, 18, 13, 1102, 35434, 279, 24069, 3157, 907, 315, 13551, 5762, 555, 2536, 71260, 4008, 988, 11, 902, 374, 264, 9200, 6767, 315, 279, 2883, 596, 6020, 2890, 323, 30693, 2802, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ea9e0>, 'json_data': {'input': [[18902, 79483, 25, 15592, 25, 42089, 323, 14640, 10968, 389, 279, 4500, 11, 1005, 11, 323, 17575, 315, 15592, 14645, 323, 1023, 7528, 3956, 323, 3600, 11, 902, 1436, 1121, 304, 33384, 31086, 477, 1023, 23331, 6299, 13, 1789, 3187, 11, 1418, 27743, 1495, 706, 3686, 311, 387, 61487, 323, 37402, 12054, 11, 78090, 5054, 9306, 389, 264, 11223, 10013, 15592, 3298, 574, 8813, 1990, 1080, 62223, 23265, 3046, 304, 6790, 220, 2366, 18, 11, 2737, 430, 3230, 28330, 323, 1023, 8670, 1053, 387, 11784, 369, 4689, 7580, 15592, 6067, 323, 279, 4211, 389, 902, 1884, 6067, 527, 3196, 13, 763, 5369, 11, 279, 5929, 4783, 596, 18362, 7365, 389, 279, 23088, 11, 35602, 11, 323, 17236, 43629, 11050, 323, 5560, 315, 59294, 22107, 98233, 288, 264, 12914, 369, 279, 549, 815, 13, 3109, 11, 4315, 1023, 2574, 11, 311, 37377, 879, 10706, 1005, 323, 4500, 315, 3738, 16665, 4211, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 14564, 7016, 323, 14640, 10968, 389, 21075, 11478, 320, 15836, 8, 323, 872, 25127, 369, 63897, 4953, 13, 1102, 3585, 704, 3230, 27743, 26006, 11, 1778, 439, 279, 11223, 10013, 15592, 3298, 323, 549, 815, 13, 3109, 49125, 369, 15592, 19812, 11, 19392, 279, 2883, 596, 15507, 311, 8907, 1418, 60499, 264, 6485, 23331, 18921, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eaa70>, 'json_data': {'input': [[18902, 79483, 25, 578, 11380, 3430, 369, 1057, 3308, 362, 5708, 323, 2536, 8437, 11780, 3308, 356, 5708, 1253, 3136, 311, 387, 17509, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 29735, 311, 279, 53838, 315, 5708, 7729, 11, 19392, 430, 15167, 1288, 387, 8010, 315, 39388, 54643, 3157, 4787, 430, 1436, 5536, 5708, 51262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eab00>, 'json_data': {'input': [[18902, 79483, 25, 220, 23, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 3857, 1396, 323, 1587, 539, 6782, 904, 1495, 11, 8617, 32161, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eab90>, 'json_data': {'input': [[18902, 79483, 25, 1023, 20790, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 1023, 20790, 3600, 2949, 5195, 15161, 11, 23377, 430, 1070, 527, 5361, 33935, 29820, 311, 420, 13254, 4365, 323, 19392, 264, 58321, 315, 2532, 2671, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eac20>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 9086, 46613, 220, 17, 11, 420, 12143, 312, 2058, 988, 330, 2149, 18992, 4953, 1210, 439, 279, 14836, 315, 279, 2246, 11, 82003, 279, 9764, 315, 279, 2883, 323, 279, 1934, 596, 4033, 7138, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eacb0>, 'json_data': {'input': [[18902, 79483, 25, 2876, 8581, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 1070, 527, 912, 81261, 5687, 6170, 311, 1934, 11, 902, 1253, 4284, 430, 279, 2883, 374, 304, 1695, 11509, 9002, 23331, 11302, 477, 44983, 520, 420, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ead40>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 264, 2007, 315, 8970, 13, 1102, 17482, 439, 264, 34512, 1697, 5507, 369, 13016, 311, 25539, 3230, 14491, 323, 13650, 2949, 279, 27927, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eadd0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 5708, 6787, 2997, 279, 63897, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 3573, 2149, 18992, 220, 2366, 16, 12937, 9878, 909, 323, 7089, 426, 1441, 5708, 6108, 6787, 13, 9636, 1057, 5708, 6787, 11, 24107, 3642, 323, 1023, 4595, 315, 23146, 1253, 387, 11938, 13, 9636, 279, 63897, 220, 2366, 16, 12937, 9878, 11, 459, 24107, 52, 10292, 374, 459, 9306, 311, 4360, 13551, 315, 1057, 3308, 356, 5708, 520, 279, 892, 279, 10292, 98373, 13, 24107, 3642, 8965, 28705, 927, 3116, 1667, 59575, 5304, 14740, 389, 279, 28705, 287, 2457, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 5825, 2038, 922, 279, 1396, 315, 13551, 4694, 369, 3938, 67599, 1234, 279, 63897, 220, 2366, 16, 12937, 9878, 13, 1102, 22020, 279, 2883, 596, 15507, 311, 5708, 6108, 20448, 323, 1202, 4754, 5536, 389, 63342, 25452, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eae60>, 'json_data': {'input': [[18902, 79483, 25, 1226, 6767, 3738, 6020, 24198, 520, 6762, 907, 389, 264, 2536, 265, 46839, 8197, 11, 31706, 15871, 315, 1057, 2536, 12, 3157, 481, 25452, 34919, 13, 4314, 22538, 527, 41853, 369, 1234, 279, 19179, 10778, 1749, 3573, 1820, 19179, 10778, 909, 323, 527, 17303, 520, 2853, 11, 2753, 53317, 11, 3917, 311, 40872, 323, 45578, 34074, 13239, 505, 40635, 3430, 4442, 369, 20086, 477, 4528, 22538, 315, 279, 1890, 55935, 13, 4314, 34074, 1397, 47616, 41300, 315, 279, 6762, 907, 315, 1057, 34919, 11, 902, 1253, 1397, 279, 1005, 315, 653, 34595, 11374, 13, 28295, 1392, 527, 11075, 15871, 3196, 389, 264, 3157, 5603, 439, 315, 279, 7901, 2457, 323, 21736, 279, 1005, 315, 17989, 1701, 279, 1888, 2038, 2561, 11, 902, 1253, 2997, 8515, 6530, 41579, 477, 1023, 2561, 3157, 828, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 15100, 279, 24043, 6514, 9435, 311, 2536, 30004, 36164, 25452, 34919, 17303, 520, 6762, 907, 13, 1102, 35434, 279, 1005, 315, 279, 19179, 10778, 1749, 323, 279, 9547, 430, 10383, 34074, 311, 279, 6762, 907, 315, 1521, 34919, 13, 1115, 2038, 374, 3062, 369, 8830, 279, 84140, 6532, 304, 1062, 7623, 22538, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eaef0>, 'json_data': {'input': [[18902, 79483, 25, 35390, 45344, 88015, 55364, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 3857, 430, 35434, 3293, 24043, 19126, 55364, 13, 1102, 15151, 430, 279, 2768, 2262, 690, 21782, 502, 24043, 10886, 9959, 311, 63897, 4953, 2637, 902, 374, 3062, 369, 39210, 311, 3619, 4754, 4442, 304, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eaf80>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 330, 2149, 18992, 4953, 1210, 374, 279, 2316, 315, 279, 2246, 11, 19392, 430, 420, 374, 279, 4033, 25992, 8423, 389, 3459, 220, 605, 16222, 369, 279, 2883, 13, 1115, 3857, 11383, 5764, 459, 24131, 315, 279, 2883, 11, 1202, 7677, 11, 323, 279, 4261, 9960, 555, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eb010>, 'json_data': {'input': [[18902, 79483, 25, 15592, 374, 264, 18475, 278, 5557, 430, 649, 4546, 23222, 323, 6928, 2349, 311, 1274, 323, 34775, 4028, 279, 1917, 11, 323, 369, 1057, 2626, 13, 2468, 5195, 11, 584, 617, 1027, 12967, 15592, 1139, 1057, 3956, 323, 3600, 369, 810, 1109, 264, 13515, 323, 3339, 1124, 2561, 311, 1057, 3932, 13, 5751, 11879, 6137, 304, 220, 1049, 16, 11, 994, 5780, 6975, 574, 1176, 32762, 1139, 5195, 7694, 311, 4284, 2731, 13141, 826, 311, 3932, 15389, 279, 3566, 13, 11450, 11, 15592, 304, 1057, 3956, 374, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 35434, 279, 3560, 315, 15592, 2949, 63897, 11, 36024, 279, 7314, 315, 264, 11944, 24481, 315, 1268, 15592, 706, 1027, 18751, 1139, 1202, 3956, 323, 3600, 11, 39686, 1202, 13970, 2317, 323, 14529, 26006, 304, 15592, 5557, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eb0a0>, 'json_data': {'input': [[18902, 79483, 25, 763, 5936, 220, 2366, 18, 11, 279, 8925, 315, 46085, 315, 63897, 19144, 279, 2883, 311, 2109, 13173, 709, 311, 459, 5217, 400, 2031, 13, 15, 7239, 315, 1202, 3308, 362, 323, 3308, 356, 13551, 13, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 400, 1927, 13, 18, 7239, 8625, 2561, 369, 3308, 362, 323, 3308, 356, 4430, 2109, 75202, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 24645, 555, 63897, 596, 8925, 315, 46085, 369, 459, 5217, 4430, 2109, 13173, 2068, 11, 42852, 279, 2883, 596, 14529, 8446, 311, 10299, 1202, 6864, 6070, 13, 1102, 5764, 2038, 389, 279, 9861, 3392, 2561, 369, 2109, 75202, 11, 902, 374, 9200, 369, 15167, 38663, 279, 2883, 596, 3938, 8515, 24047, 6787, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eb130>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5042, 5415, 330, 2620, 315, 36962, 1359, 19392, 279, 7314, 315, 279, 2246, 596, 34512, 1697, 6070, 13, 1102, 374, 7718, 369, 3932, 311, 25539, 3230, 14491, 6288, 2949, 279, 16195, 6020, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eb1c0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 5843, 62954, 12032, 25, 3723, 4273, 400, 220, 6365, 11, 20943, 400, 220, 5120, 11, 25210, 7327, 220, 1644, 11, 20339, 220, 1987, 11, 19230, 10884, 1317, 62954, 12032, 400, 220, 6804, 11, 25307, 400, 220, 10410, 11, 21299, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 12399, 315, 279, 1317, 62954, 12032, 315, 63897, 4953, 13, 439, 315, 6790, 220, 2148, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 11, 11102, 1523, 1139, 13018, 323, 6625, 11306, 13, 1115, 2038, 374, 961, 315, 279, 6020, 12518, 3857, 11, 8405, 26793, 1139, 279, 2883, 596, 9513, 2385, 323, 54001, 8141, 315, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eb250>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 1578, 22020, 430, 279, 2246, 18713, 1771, 311, 63897, 4953, 2637, 13788, 439, 459, 13110, 369, 279, 2038, 13282, 2949, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eb2e0>, 'json_data': {'input': [[18902, 79483, 25, 763, 6186, 220, 2366, 18, 11, 584, 8308, 459, 15813, 315, 279, 5505, 6439, 315, 1057, 16692, 323, 4009, 7241, 11, 13239, 304, 264, 2349, 304, 279, 13240, 5505, 2324, 315, 1057, 16692, 323, 3738, 4009, 7241, 311, 4848, 1667, 13, 578, 2515, 315, 420, 2349, 574, 264, 14278, 304, 94189, 20900, 315, 400, 18, 13, 24, 7239, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 15324, 15871, 304, 2853, 315, 30466, 323, 432, 33465, 18512, 13, 1789, 5217, 2038, 11, 1518, 7181, 220, 16, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 21667, 264, 5199, 2349, 304, 279, 13240, 5505, 6439, 315, 16692, 323, 4009, 7241, 11, 902, 706, 264, 2167, 5536, 389, 94189, 18512, 13, 1102, 5825, 20616, 1139, 279, 2883, 596, 9513, 6373, 8446, 323, 1202, 25127, 369, 6020, 13122, 11, 91115, 279, 12939, 315, 14529, 56181, 315, 25605, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eb370>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 9558, 8515, 3984, 555, 10565, 7640, 400, 220, 5925, 11, 21038, 400, 220, 4645, 11, 25594, 9558, 8515, 1511, 304, 26012, 7640, 400, 320, 508, 11, 17690, 8, 400, 320, 1544, 11, 24254, 8, 9558, 8515, 1511, 304, 29642, 7640, 400, 320, 3076, 11, 23776, 8, 400, 320, 5332, 11, 25202, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 55394, 2007, 315, 8515, 28555, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 94594, 4272, 8515, 3984, 555, 10565, 7640, 11, 1511, 304, 26012, 7640, 11, 323, 1511, 304, 29642, 7640, 11, 8405, 264, 16694, 315, 279, 2883, 596, 8515, 6530, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eb400>, 'json_data': {'input': [[18902, 79483, 25, 70128, 369, 60767, 198, 2014, 940, 1534, 73094, 25, 1054, 33, 10949, 369, 60767, 863, 40019, 279, 57916, 4920, 279, 54406, 596, 31342, 11, 19392, 430, 279, 2768, 14491, 690, 37067, 389, 279, 54406, 596, 38152, 323, 279, 28423, 315, 2225, 279, 6373, 323, 279, 54406, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eb490>, 'json_data': {'input': [[18902, 79483, 25, 220, 23, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 3857, 1396, 323, 1587, 539, 6782, 904, 1495, 11, 8617, 32161, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eb520>, 'json_data': {'input': [[18902, 79483, 25, 8825, 323, 7241, 5764, 279, 2768, 11306, 25, 4363, 323, 14016, 11, 2038, 5557, 12032, 11, 8246, 304, 5208, 11, 26120, 6416, 18637, 11, 323, 14891, 323, 38764, 13, 11680, 323, 14016, 2997, 4363, 11, 19672, 11, 828, 19169, 11, 323, 5552, 4857, 18637, 13, 8245, 5557, 12032, 2997, 16692, 323, 4009, 7241, 13, 24987, 304, 5208, 374, 279, 8246, 477, 4500, 315, 3424, 323, 7241, 430, 617, 539, 3686, 1027, 9277, 304, 2532, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 11306, 5343, 304, 3424, 323, 7241, 11, 8405, 2317, 369, 279, 4595, 315, 12032, 63897, 29972, 13, 1102, 374, 961, 315, 279, 3424, 323, 7241, 3857, 11, 45293, 279, 5370, 9513, 96771, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eb5b0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 10565, 3135, 1253, 39388, 6426, 11, 902, 3727, 1057, 3135, 5107, 311, 7168, 323, 1436, 5353, 1057, 3135, 311, 4498, 2875, 315, 17078, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 38088, 44696, 2968, 315, 63897, 596, 10565, 3135, 11, 23377, 430, 65649, 1436, 3063, 311, 20124, 430, 656, 539, 3449, 3157, 17078, 11, 28592, 28987, 30693, 27065, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eb640>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6020, 3044, 323, 10565, 3135, 1253, 1101, 7831, 422, 1057, 3956, 323, 3600, 527, 539, 27078, 311, 279, 42028, 3966, 323, 32097, 315, 1057, 3932, 11, 50270, 11, 36717, 11, 6444, 11, 323, 2262, 12850, 13, 1666, 502, 323, 6484, 14645, 3136, 311, 2274, 11, 28650, 323, 502, 11751, 1821, 1253, 387, 3025, 311, 3085, 11704, 430, 527, 11, 477, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 311, 13488, 279, 12939, 315, 5398, 287, 3956, 323, 3600, 449, 1217, 3966, 323, 3157, 17078, 13, 1102, 66159, 279, 15635, 5938, 449, 22109, 311, 10737, 311, 42028, 11761, 19882, 323, 30116, 83787, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eb6d0>, 'json_data': {'input': [[18902, 79483, 25, 578, 39954, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 1051, 5552, 311, 43645, 5535, 311, 387, 4272, 23183, 304, 18859, 449, 1057, 7491, 4272, 1303, 20038, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 430, 279, 39954, 10666, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 29243, 311, 43645, 5535, 311, 387, 4272, 23183, 11, 7999, 32373, 311, 279, 6020, 828, 9002, 43645, 323, 872, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:55 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-11-30 23:53:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eb760>, 'json_data': {'input': [[18902, 79483, 25, 72743, 5751, 14969, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 23695, 10968, 389, 1268, 5195, 17482, 1202, 3932, 11, 4461, 6522, 1139, 3230, 10507, 323, 15174, 20011, 555, 5195, 311, 18885, 1217, 20392, 323, 24617, 13, 1102, 5398, 82, 449, 279, 8244, 7057, 315, 1217, 65524, 2027, 4500, 323, 2532, 9889, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138280>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 330, 2149, 18992, 4953, 1210, 78864, 430, 279, 2246, 18713, 1771, 311, 279, 6020, 12518, 477, 6821, 315, 63897, 4953, 2637, 279, 2748, 2883, 315, 5195, 13, 1115, 64664, 279, 2317, 430, 279, 2038, 374, 3230, 311, 420, 27767, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:56 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-11-30 23:53:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138310>, 'json_data': {'input': [[18902, 79483, 25, 220, 845, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 9959, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138d30>, 'json_data': {'input': [[18902, 79483, 25, 220, 5495, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 11741, 18133, 2449, 477, 264, 6002, 304, 279, 2246, 323, 1587, 539, 3493, 23222, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138dc0>, 'json_data': {'input': [[18902, 79483, 25, 12850, 315, 28614, 10758, 323, 31357, 3956, 26, 323, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 17, 11, 420, 12143, 36611, 2500, 43940, 304, 279, 2626, 4676, 2345, 48387, 315, 28614, 10758, 323, 31357, 3956, 13, 1102, 72890, 279, 17226, 2134, 315, 10937, 5195, 12580, 304, 5370, 26593, 11, 74055, 1202, 3157, 4430, 323, 1217, 20392, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138e50>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11105, 2500, 3857, 4342, 369, 279, 6771, 315, 36962, 11, 4726, 19392, 279, 7471, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ebf40>, 'json_data': {'input': [[18902, 79483, 25, 10884, 2536, 778, 16608, 12034, 320, 10153, 40, 8, 304, 1057, 60391, 72202, 1051, 400, 18, 13, 23, 7239, 323, 400, 18, 13, 19, 7239, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 15947, 11, 315, 902, 400, 16, 13, 16, 7239, 374, 49878, 481, 2536, 778, 16608, 2802, 320, 49, 10153, 40, 8, 369, 2225, 18852, 13, 452, 11487, 323, 432, 10153, 40, 527, 5343, 2949, 5217, 7318, 3502, 6864, 13, 9558, 4814, 71526, 311, 2536, 778, 16608, 12034, 574, 539, 3769, 369, 904, 4261, 10666, 323, 374, 5343, 2949, 279, 330, 1605, 1, 3777, 315, 507, 40, 69248, 13, 3580, 7181, 220, 22, 369, 4726, 3649, 389, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 2536, 778, 16608, 12034, 304, 60391, 72202, 11, 10209, 12678, 430, 17210, 311, 8830, 279, 25452, 6070, 323, 279, 6020, 5133, 449, 23413, 41777, 13, 1102, 20405, 1203, 311, 279, 8244, 25452, 323, 6020, 13122, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eb7f0>, 'json_data': {'input': [[18902, 79483, 25, 45578, 7410, 389, 1057, 10565, 37682, 505, 7859, 14640, 11, 7859, 10937, 11, 323, 7859, 7194, 369, 1690, 13878, 315, 1057, 2626, 13, 15903, 11, 3738, 315, 1057, 7194, 323, 18512, 527, 8965, 2753, 3977, 304, 7138, 323, 1253, 539, 81584, 311, 4442, 304, 13254, 13, 1226, 1253, 1101, 539, 387, 3025, 311, 9203, 1057, 9045, 311, 312, 50725, 261, 1057, 2853, 2385, 7946, 477, 304, 264, 32100, 11827, 13, 24586, 311, 1521, 9547, 323, 279, 42028, 7138, 315, 1057, 2626, 11, 1057, 13970, 13254, 6650, 4478, 323, 13970, 10565, 4850, 1253, 539, 387, 64005, 315, 1057, 3938, 5178, 13, 1789, 5217, 2038, 11, 1518, 50730, 304, 5751, 8184, 323, 17961, 13756, 323, 1050, 46469, 323, 3206, 295, 2065, 55290, 304, 3744, 8105, 11, 5858, 220, 22, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 10449, 35434, 279, 14529, 40850, 389, 10565, 37682, 4245, 311, 5370, 9547, 11, 2737, 23331, 7194, 323, 10937, 13, 1102, 72890, 279, 27924, 315, 3938, 6020, 5178, 3196, 389, 1510, 18845, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ebeb0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 1050, 46469, 25, 5195, 8471, 400, 220, 14590, 11, 21618, 400, 220, 14022, 11, 21458, 400, 220, 15741, 11, 19642, 5195, 15161, 220, 777, 11, 11056, 220, 1627, 11, 11209, 220, 1644, 11, 25620, 7089, 426, 1441, 220, 25504, 220, 16, 11, 26661, 220, 16, 11, 22369, 75263, 3252, 20192, 320, 9563, 288, 8, 220, 10161, 220, 16, 11, 16415, 220, 14087, 10884, 30466, 400, 220, 15574, 11, 21788, 400, 220, 16544, 11, 25192, 400, 220, 14777, 11, 20077, 36233, 8070, 320, 9563, 1680, 5195, 8471, 400, 220, 2421, 11, 9413, 400, 220, 6086, 11, 23459, 400, 220, 2721, 11, 23805, 5195, 15161, 320, 17, 11, 16544, 8, 320, 16, 11, 20275, 8, 220, 16, 11, 23929, 7089, 426, 1441, 320, 19, 11, 23545, 8, 320, 19, 11, 22422, 8, 320, 19, 11, 26421, 8, 63897, 11852, 7640, 320, 18, 11, 24646, 8, 320, 16, 11, 15531, 8, 320, 24, 11, 9714, 8, 10884, 8070, 505, 7677, 400, 220, 2495, 11, 23193, 400, 220, 5728, 11, 25377, 400, 220, 5833, 11, 17313, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 6020, 828, 320, 265, 46469, 323, 10565, 8070, 14, 9563, 8, 369, 63897, 4953, 3238, 82, 21282, 927, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 10923, 369, 264, 55394, 6492, 315, 10449, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ebe20>, 'json_data': {'input': [[18902, 79483, 25, 279, 3685, 54709, 315, 20192, 323, 18151, 5552, 311, 61316, 3252, 7640, 1234, 1057, 7362, 9473, 5326, 6373, 2068, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 35434, 279, 54709, 304, 20192, 323, 18151, 505, 61316, 3252, 7640, 5552, 311, 7362, 9473, 13, 1102, 66159, 279, 84140, 323, 11774, 279, 2883, 12580, 304, 18646, 6020, 15635, 323, 374, 4461, 961, 315, 264, 3857, 42118, 6020, 5178, 323, 5326, 6373, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ebd90>, 'json_data': {'input': [[18902, 79483, 25, 5751, 63948, 323, 1023, 19092, 28904, 1436, 1101, 1121, 304, 19371, 6844, 53066, 3095, 315, 1057, 25452, 34919, 11, 279, 3709, 21201, 315, 11897, 11, 59575, 58165, 11, 477, 93364, 2065, 18512, 11, 477, 53317, 315, 82746, 323, 5255, 15075, 1317, 62954, 12032, 11, 323, 69027, 10405, 11, 904, 315, 902, 1436, 11682, 1057, 6020, 3044, 323, 10565, 3135, 13, 7429, 11, 279, 30199, 7720, 477, 907, 315, 1057, 63948, 323, 1023, 19092, 28904, 1253, 539, 3769, 553, 13, 763, 3717, 449, 1057, 3512, 478, 42204, 11, 584, 617, 7378, 11, 323, 1253, 304, 279, 3938, 7655, 11, 311, 3493, 90108, 2461, 369, 3738, 4754, 58165, 11, 902, 1436, 11682, 1057, 6020, 3044, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 6020, 25127, 315, 63948, 323, 19092, 28904, 11, 45293, 5370, 16296, 1778, 439, 19371, 1516, 315, 25452, 11, 11897, 3709, 21201, 11, 323, 4754, 38974, 1392, 13, 1102, 95593, 279, 2246, 596, 5357, 389, 279, 84140, 323, 15635, 6532, 304, 63897, 596, 6650, 15174, 323, 279, 12939, 315, 16994, 6020, 9293, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ebd00>, 'json_data': {'input': [[18902, 79483, 25, 220, 6086, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 2500, 2199, 1396, 477, 3857, 11381, 320, 6086, 705, 19392, 279, 42271, 315, 279, 2246, 323, 1202, 34030, 6932, 369, 4228, 5905, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:53:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ebc70>, 'json_data': {'input': [[18902, 79483, 25, 7766, 11, 902, 15871, 2997, 6763, 315, 279, 28569, 3070, 315, 7766, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 30466, 8066, 505, 279, 6412, 315, 7766, 11, 11951, 279, 28569, 3070, 11, 19392, 2500, 13254, 4365, 369, 279, 2883, 323, 82003, 1202, 12035, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ebbe0>, 'json_data': {'input': [[18902, 79483, 25, 12850, 315, 7528, 2835, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 330, 48387, 315, 7528, 2835, 3600, 1359, 19392, 2500, 3158, 315, 10937, 369, 279, 2883, 11, 8104, 9959, 2728, 279, 10205, 315, 2835, 2262, 15652, 323, 1202, 25127, 369, 5195, 596, 15771, 1093, 13674, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ebb50>, 'json_data': {'input': [[18902, 79483, 25, 15903, 11, 584, 527, 3917, 311, 42028, 7016, 323, 14640, 430, 62974, 3508, 11, 1268, 11, 323, 1234, 1148, 13463, 584, 649, 8481, 11, 1920, 323, 5255, 5371, 4443, 828, 11, 439, 1664, 439, 14529, 13627, 6299, 505, 15945, 87003, 11527, 5552, 311, 5425, 28117, 31711, 315, 4443, 828, 13, 578, 32939, 315, 5370, 828, 8481, 24717, 584, 5131, 17631, 5304, 8625, 3917, 311, 5897, 11, 23331, 11, 323, 5054, 26006, 304, 2225, 4606, 323, 279, 549, 815, 2637, 902, 1253, 1397, 603, 311, 10737, 1057, 6484, 28904, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 84140, 323, 5897, 11774, 5938, 449, 828, 8481, 323, 8863, 14640, 11, 8104, 304, 3177, 315, 42028, 7016, 304, 4606, 323, 279, 549, 815, 13, 1102, 22020, 279, 4754, 1205, 369, 279, 2883, 311, 10737, 1202, 828, 11850, 12659, 11, 19392, 279, 27927, 7057, 315, 23331, 8907, 323, 1202, 25127, 369, 279, 2883, 596, 7677, 323, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615ebac0>, 'json_data': {'input': [[18902, 79483, 25, 220, 5547, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 33243, 477, 40815, 5905, 323, 1587, 539, 3493, 5217, 2317, 369, 8830, 279, 6020, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eba30>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3956, 323, 3600, 21736, 279, 5942, 11, 11850, 11, 323, 18874, 315, 34333, 323, 1023, 16614, 2038, 13, 4476, 23367, 11, 28483, 11, 62851, 11, 42655, 11, 52227, 304, 1057, 3956, 323, 3600, 11, 323, 4868, 69140, 29241, 603, 311, 264, 5326, 315, 4814, 477, 41086, 1005, 323, 28957, 315, 1778, 2038, 11, 902, 1436, 1121, 304, 39725, 323, 1023, 4754, 58165, 11, 2737, 23331, 35018, 323, 31086, 11, 439, 1664, 439, 43839, 1697, 11682, 13, 23212, 11, 1057, 3956, 33435, 7701, 11156, 323, 6485, 14645, 11, 323, 8617, 1057, 14645, 323, 3241, 617, 13282, 11, 323, 527, 4461, 304, 279, 3938, 311, 6782, 11, 2073, 295, 1599, 6103, 11, 23367, 11, 323, 5255, 52227, 13, 1226, 3136, 311, 923, 502, 4519, 16239, 15592, 311, 1057, 33935, 323, 5419, 6067, 11, 323, 4519, 430, 17631, 389, 15592, 1253, 387, 47281, 311, 653, 93878, 4868, 18208, 439, 1057, 323, 279, 3157, 753, 8830, 315, 15592, 65524, 4868, 15635, 323, 9313, 5528, 3136, 311, 2274, 13, 1226, 617, 304, 279, 3347, 11352, 11, 323, 1253, 304, 279, 3938, 7142, 11, 1063, 6103, 304, 1057, 3241, 2082, 1193, 1306, 584, 617, 6004, 279, 2082, 13, 15264, 323, 2585, 28950, 11, 4868, 69140, 11, 8060, 311, 26069, 449, 1057, 12625, 10396, 11, 323, 5255, 59928, 306, 28957, 315, 1217, 828, 1436, 1121, 304, 3109, 323, 5897, 14675, 11, 14243, 11682, 1057, 17444, 11, 6883, 11, 323, 2626, 11, 323, 38974, 1057, 5845, 311, 9504, 323, 14389, 3932, 477, 6444, 13, 15483, 24455, 617, 10222, 304, 279, 3347, 323, 1253, 3136, 311, 12446, 4245, 311, 279, 5569, 323, 7138, 315, 1057, 3956, 323, 3600, 13, 6104, 1070, 374, 912, 15803, 430, 1778, 24455, 690, 539, 5353, 5199, 5674, 11, 584, 1755, 311, 3136, 311, 28410, 5199, 5070, 311, 10519, 4868, 37424, 430, 4017, 279, 2515, 315, 23367, 11, 28483, 11, 62851, 11, 323, 4868, 52227, 477, 69140, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 15635, 5938, 449, 11850, 16614, 2038, 11, 45293, 279, 52227, 323, 4754, 58165, 430, 1436, 31889, 505, 3241, 42655, 477, 4868, 69140, 13, 1102, 59623, 279, 12939, 315, 20958, 22514, 4868, 11193, 311, 6144, 2225, 279, 2883, 323, 1202, 3932, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eb9a0>, 'json_data': {'input': [[18902, 79483, 25, 47064, 304, 99216, 20448, 323, 7720, 389, 279, 79980, 660, 31946, 61572, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 1405, 279, 3285, 685, 58165, 527, 12715, 304, 279, 6020, 12518, 11, 11951, 27401, 430, 814, 527, 5343, 304, 99216, 20448, 323, 7720, 13, 1102, 8779, 2723, 279, 6020, 828, 311, 1202, 15864, 304, 279, 8335, 11071, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eb910>, 'json_data': {'input': [[18902, 79483, 25, 2052, 1023, 37869, 617, 1027, 40542, 1606, 814, 527, 539, 2631, 11, 539, 8581, 11, 477, 279, 2631, 2038, 374, 6062, 5343, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 430, 3738, 37869, 617, 1027, 40542, 505, 279, 2246, 13, 1102, 24897, 430, 279, 2246, 1253, 539, 2997, 682, 279, 5410, 6956, 11383, 1766, 304, 6020, 6821, 11, 902, 1253, 7958, 1268, 279, 2038, 374, 26617, 555, 13016, 323, 31499, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e615eb880>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 94594, 279, 5820, 5552, 311, 1057, 20547, 97239, 3827, 7720, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 12399, 2007, 315, 279, 2883, 596, 20547, 97239, 3827, 7720, 927, 279, 1667, 220, 2366, 16, 311, 220, 2366, 18, 13, 1102, 5825, 264, 47616, 24131, 315, 279, 4442, 304, 3827, 10093, 11, 67908, 279, 2883, 596, 3827, 8446, 323, 4754, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138ee0>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 24, 34, 13, 12244, 34, 38658, 4622, 97667, 1753, 82456, 622, 1539, 1669, 18091, 37868, 26336, 21626, 6927, 26776, 1777, 37868, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 330, 34590, 14767, 1359, 902, 374, 264, 3857, 315, 279, 9974, 1934, 430, 11383, 5727, 2038, 922, 13166, 35186, 11, 11145, 20448, 11, 323, 7690, 2038, 11, 8405, 26793, 1139, 279, 6373, 323, 38189, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138ca0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 1047, 25589, 11, 7065, 11, 6696, 6367, 11, 323, 32464, 54443, 43986, 13019, 2403, 603, 21039, 430, 3738, 315, 1057, 3956, 11, 3600, 11, 323, 14645, 25654, 18177, 3885, 6, 20207, 3424, 3268, 13, 2467, 4550, 3135, 304, 1521, 43986, 1253, 2997, 23146, 315, 12190, 33384, 26186, 11, 34348, 53817, 477, 28506, 20038, 11, 477, 10373, 27252, 603, 505, 10209, 3738, 4519, 11, 93180, 11, 3956, 11, 477, 3600, 13, 1666, 264, 1121, 11, 584, 1253, 617, 311, 2349, 1057, 2626, 12659, 323, 2274, 2536, 3502, 1658, 24992, 3956, 477, 14645, 11, 902, 1436, 1121, 304, 264, 4814, 315, 30466, 369, 603, 323, 6062, 11682, 1057, 2626, 13, 763, 5369, 11, 279, 549, 815, 13, 7327, 17657, 9849, 320, 964, 34, 8, 706, 15098, 3719, 459, 3062, 12111, 311, 13318, 65056, 20207, 3424, 42254, 1606, 459, 17139, 4814, 304, 459, 358, 7905, 1957, 649, 1121, 304, 264, 50967, 389, 50995, 25654, 24992, 3956, 1139, 279, 549, 815, 13, 9393, 279, 549, 815, 13, 374, 459, 3062, 3157, 11, 264, 50967, 389, 1179, 367, 1436, 617, 459, 31959, 2515, 389, 603, 11, 2737, 27252, 603, 505, 50995, 1690, 3062, 3956, 1139, 279, 549, 815, 13, 477, 4541, 50644, 990, 277, 3171, 430, 1253, 4017, 3738, 4519, 315, 1057, 3956, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 4595, 315, 20207, 3424, 8349, 430, 63897, 12580, 11, 2737, 25589, 323, 7065, 43986, 13, 1102, 35434, 279, 4754, 31959, 20124, 11, 1778, 439, 6020, 26186, 323, 25605, 4442, 11, 10109, 1113, 279, 2883, 596, 20207, 3424, 11774, 2949, 279, 27927, 2317, 315, 5897, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138c10>, 'json_data': {'input': [[18902, 79483, 25, 3061, 670, 38170, 304, 1057, 13172, 30466, 11, 439, 1664, 439, 279, 2349, 304, 7318, 28849, 323, 2853, 17453, 29218, 389, 5195, 7694, 612, 1023, 6012, 323, 279, 2349, 304, 51091, 323, 2853, 17453, 38025, 4099, 389, 5195, 8304, 6012, 323, 279, 26670, 1990, 1521, 3673, 617, 1027, 11, 323, 1253, 3136, 311, 387, 11, 11754, 555, 9547, 304, 5369, 311, 279, 4689, 9547, 7633, 3485, 11, 1778, 439, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 9547, 430, 1253, 10383, 65649, 304, 13172, 30466, 11, 7318, 28849, 11, 323, 2853, 17453, 29218, 17150, 13, 1102, 15151, 264, 9320, 311, 264, 810, 11944, 10430, 315, 9434, 7482, 28987, 5195, 596, 2626, 5178, 304, 279, 13172, 10706, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138b80>, 'json_data': {'input': [[18902, 79483, 25, 2876, 8581, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 330, 12236, 220, 605, 13, 20843, 10022, 11, 63347, 1406, 6674, 18076, 1341, 4419, 11, 3651, 80483, 2390, 12890, 87470, 8606, 1359, 43080, 264, 11944, 10430, 9002, 279, 2883, 753, 35186, 6070, 11, 2737, 279, 13073, 315, 28454, 323, 29509, 13, 1115, 2038, 374, 16996, 369, 41777, 38663, 279, 11692, 323, 35186, 12659, 315, 279, 7471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138af0>, 'json_data': {'input': [[18902, 79483, 25, 1789, 2536, 30004, 36164, 25452, 34919, 11, 2737, 25452, 1749, 22538, 11, 584, 2980, 3508, 53317, 34824, 3073, 555, 38663, 279, 5220, 6, 6020, 323, 53113, 2361, 323, 2680, 311, 6864, 5070, 11, 4315, 1023, 34824, 13, 1442, 279, 15813, 15151, 430, 279, 9341, 374, 50160, 11, 584, 3350, 1523, 279, 9341, 311, 1202, 6762, 907, 555, 14975, 279, 12435, 6900, 439, 264, 3777, 315, 507, 40, 69248, 13, 1226, 10772, 47616, 22323, 315, 279, 6762, 907, 315, 1057, 25452, 22538, 1701, 264, 3157, 5603, 477, 459, 8070, 5603, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 5603, 311, 47614, 53317, 34824, 369, 2536, 30004, 36164, 25452, 34919, 13, 1102, 9731, 279, 10430, 389, 9341, 53317, 11, 82003, 279, 16865, 315, 6020, 2890, 323, 53113, 315, 2793, 2176, 5220, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138a60>, 'json_data': {'input': [[18902, 79483, 25, 94189, 20900, 5552, 311, 1057, 11156, 14054, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 34945, 94189, 18512, 5552, 311, 11156, 14054, 11, 91115, 279, 4623, 430, 1070, 527, 5199, 7194, 6532, 304, 20958, 323, 10565, 63897, 596, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e611389d0>, 'json_data': {'input': [[18902, 79483, 25, 72673, 369, 33620, 72837, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 17575, 369, 8070, 13426, 3857, 11, 902, 374, 16595, 369, 8830, 279, 2883, 596, 3827, 30255, 323, 872, 5536, 389, 8244, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138940>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 904, 1495, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e611388b0>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 87910, 5905, 11, 902, 1253, 3493, 5217, 2317, 477, 64784, 369, 279, 5552, 828, 10666, 304, 279, 38846, 2007, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138820>, 'json_data': {'input': [[18902, 79483, 25, 54463, 2857, 29362, 311, 1057, 8351, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 1176, 5699, 315, 15635, 3230, 311, 63897, 4953, 2637, 39686, 279, 2883, 596, 8987, 54180, 389, 13172, 13254, 13, 1102, 12018, 2548, 21738, 264, 10430, 922, 279, 25127, 315, 11293, 13172, 10374, 477, 29735, 304, 87386, 7865, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138790>, 'json_data': {'input': [[18902, 79483, 25, 32499, 26572, 4158, 448, 7174, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 264, 3857, 25394, 4972, 4261, 312, 1058, 7174, 13, 1102, 15151, 430, 279, 17876, 2262, 690, 2686, 4442, 1903, 311, 8767, 5068, 6020, 828, 11, 902, 374, 16595, 369, 8830, 279, 29237, 323, 7809, 2968, 315, 6020, 12518, 927, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138700>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 323, 1253, 3136, 311, 387, 3917, 311, 8349, 11, 43986, 11, 23331, 323, 3109, 26969, 11, 13627, 6299, 11, 14771, 10373, 11, 323, 1023, 7739, 315, 23331, 36752, 323, 5897, 24305, 430, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 17482, 439, 264, 4689, 5224, 19392, 430, 63897, 4953, 13, 374, 3917, 311, 5370, 5897, 323, 23331, 11774, 430, 1436, 5536, 1202, 2626, 7677, 323, 17444, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138670>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6625, 7677, 527, 5199, 311, 1057, 30466, 323, 4272, 8070, 11, 323, 584, 3197, 311, 3136, 311, 3139, 37545, 13, 7327, 30466, 41853, 369, 13489, 220, 4331, 4, 315, 1057, 60391, 30466, 304, 220, 2366, 18, 13, 763, 5369, 311, 15635, 7633, 18403, 304, 420, 3857, 11, 1057, 6625, 7677, 29241, 603, 311, 1023, 15635, 11, 2737, 279, 2768, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 26431, 315, 63897, 4953, 3238, 82, 6625, 7677, 11, 39686, 430, 814, 20162, 13489, 220, 4331, 4, 311, 279, 2883, 596, 60391, 30466, 304, 220, 2366, 18, 13, 1102, 7437, 279, 6566, 369, 264, 10430, 389, 279, 5370, 15635, 5938, 449, 6625, 7677, 11, 19392, 430, 279, 2768, 27855, 690, 13555, 1521, 3230, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e611385e0>, 'json_data': {'input': [[18902, 79483, 25, 16207, 323, 8661, 18512, 7319, 400, 16, 13, 19, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 15871, 16625, 555, 459, 5376, 304, 20448, 18512, 315, 400, 16, 13, 21, 7239, 11, 26310, 4445, 555, 264, 18979, 304, 13172, 323, 35382, 7640, 315, 400, 18495, 3610, 13, 578, 400, 16, 13, 21, 7239, 5376, 304, 20448, 18512, 574, 14090, 279, 1121, 315, 400, 22640, 3610, 304, 9548, 3285, 685, 10405, 5938, 449, 279, 14278, 304, 1057, 32027, 304, 5369, 311, 264, 10824, 315, 1023, 9547, 11, 7000, 315, 902, 1051, 32399, 5199, 627, 2014, 940, 1534, 73094, 25, 1115, 19775, 35434, 279, 5376, 304, 16207, 323, 18729, 18512, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 45293, 279, 9547, 4920, 279, 5376, 11, 2737, 20448, 323, 3285, 685, 10405, 13, 1115, 2317, 374, 16595, 369, 66744, 279, 6020, 828, 304, 279, 38846, 2007, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138550>, 'json_data': {'input': [[18902, 79483, 25, 5195, 8304, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 5195, 8304, 13254, 5699, 11, 19392, 264, 5357, 389, 279, 5178, 315, 30466, 8066, 505, 8427, 6732, 323, 14488, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e611384c0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e611383a0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138430>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1550, 539, 617, 904, 3769, 90108, 2461, 8349, 430, 1051, 35977, 477, 29546, 3284, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5415, 430, 11, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1070, 1051, 912, 3769, 90108, 2461, 8349, 15639, 430, 1436, 5536, 279, 2883, 13, 1102, 17482, 311, 50460, 10742, 555, 19392, 264, 6996, 315, 14247, 6020, 5326, 505, 90108, 2461, 8349, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e611381f0>, 'json_data': {'input': [[18902, 79483, 25, 29240, 304, 15774, 7935, 927, 17961, 47793, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 430, 35434, 904, 4442, 304, 5419, 2585, 927, 6020, 13122, 11, 902, 374, 3062, 369, 38663, 279, 2883, 596, 8907, 323, 5326, 6373, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138160>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 7694, 612, 1023, 11, 902, 5764, 30466, 8066, 389, 5195, 2778, 6012, 320, 16564, 30466, 505, 9629, 8066, 555, 2778, 8141, 8717, 889, 1005, 5195, 916, 439, 872, 1670, 2778, 304, 33957, 11, 5507, 25995, 11, 5099, 25390, 323, 1023, 5195, 13234, 323, 24026, 6012, 1093, 62046, 11, 5195, 28508, 11, 323, 5195, 7199, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 13254, 11306, 369, 5195, 7694, 612, 1023, 6012, 11, 8405, 264, 89328, 8830, 315, 279, 4595, 315, 30466, 8066, 505, 5195, 596, 5370, 2778, 14228, 3600, 323, 3956, 13, 1102, 7437, 279, 6566, 369, 4726, 3649, 389, 13254, 23914, 304, 17876, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e611380d0>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 5905, 1396, 304, 279, 2246, 323, 1587, 539, 6782, 67749, 2262, 13, 1102, 4461, 15151, 264, 87910, 477, 42271, 315, 264, 5552, 3857, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138040>, 'json_data': {'input': [[18902, 79483, 25, 1789, 5217, 2038, 922, 10937, 11, 1518, 5858, 220, 16, 32, 32388, 68318, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 13016, 311, 5217, 2038, 922, 10937, 11, 11951, 46090, 1124, 311, 5858, 220, 16, 32, 32388, 68318, 315, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 11, 19392, 1405, 311, 1505, 264, 810, 11944, 6492, 315, 10937, 14228, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61138f70>, 'json_data': {'input': [[18902, 79483, 25, 36233, 26120, 12032, 323, 58165, 527, 5343, 389, 1057, 79980, 660, 31946, 61572, 13, 578, 1510, 13651, 315, 1057, 10565, 26120, 58165, 374, 5343, 304, 99216, 18512, 323, 1023, 1510, 58165, 11, 323, 279, 1317, 9860, 13651, 374, 5343, 304, 10565, 26120, 58165, 13, 23261, 26120, 12032, 527, 5343, 304, 3424, 323, 7241, 11, 4272, 13, 23261, 26120, 58165, 527, 5343, 304, 99216, 18512, 323, 1023, 1510, 58165, 477, 1317, 9860, 11897, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 1268, 10565, 26120, 12032, 323, 58165, 527, 10666, 389, 63897, 4953, 3238, 82, 79980, 660, 31946, 61572, 13, 1102, 20064, 9803, 279, 24790, 315, 26120, 58165, 323, 12032, 11, 902, 374, 16595, 369, 39210, 311, 3619, 279, 2883, 596, 6020, 30255, 5552, 311, 73657, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139000>, 'json_data': {'input': [[18902, 79483, 25, 25441, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 12569, 315, 1495, 449, 912, 2317, 477, 2262, 3984, 13, 1102, 4461, 17482, 439, 264, 6002, 477, 37666, 2449, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139090>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 432, 33465, 18512, 320, 258, 11990, 11, 3734, 54208, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 71261, 311, 279, 11944, 6020, 828, 9002, 432, 33465, 18512, 13, 1102, 15151, 430, 264, 2007, 690, 1833, 11, 902, 690, 3493, 264, 2867, 35876, 31085, 315, 432, 33465, 53869, 369, 279, 5300, 1667, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139120>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 369, 279, 3857, 11951, 47031, 311, 63897, 4953, 2637, 19392, 430, 279, 2768, 2038, 690, 29243, 311, 279, 2883, 596, 6020, 5178, 323, 2704, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e611391b0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 3308, 362, 323, 3308, 356, 13551, 2109, 73350, 323, 28520, 22311, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 2007, 430, 94594, 279, 13551, 315, 3308, 362, 323, 3308, 356, 5708, 2109, 73350, 555, 63897, 4953, 13, 1115, 828, 374, 7718, 369, 15167, 323, 31499, 889, 1390, 311, 3839, 279, 2883, 596, 4430, 2109, 13173, 5820, 927, 892, 323, 8720, 1202, 5536, 389, 4430, 907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139240>, 'json_data': {'input': [[18902, 79483, 25, 35211, 19310, 13146, 6056, 66836, 11, 12190, 477, 1280, 65324, 33384, 15055, 11, 12190, 4442, 311, 1057, 2626, 12659, 323, 3956, 11, 477, 24693, 51236, 13, 90462, 19971, 374, 2631, 311, 8417, 2225, 279, 29736, 315, 1070, 1694, 264, 4814, 323, 279, 13240, 3392, 315, 264, 4814, 5552, 311, 1778, 13146, 11, 323, 584, 1253, 387, 12153, 311, 16430, 279, 29546, 3284, 4814, 477, 2134, 315, 18151, 13, 578, 20124, 315, 19310, 5897, 13146, 527, 49188, 50235, 323, 3917, 311, 5199, 69867, 11, 323, 1436, 11, 3060, 32399, 477, 304, 24069, 11, 617, 264, 3769, 31959, 2515, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 38088, 44696, 2968, 315, 5897, 13146, 323, 279, 11774, 304, 77472, 4754, 18151, 13, 1102, 66159, 279, 5199, 19971, 2631, 304, 47614, 5897, 15635, 323, 279, 3284, 3769, 6372, 389, 279, 2883, 596, 6020, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e611392d0>, 'json_data': {'input': [[18902, 79483, 25, 24679, 11, 1179, 323, 7637, 11835, 11, 1023, 3157, 2680, 30740, 11, 5054, 59322, 11, 87998, 39510, 11, 4442, 304, 61911, 11, 477, 17903, 12324, 320, 21470, 439, 14529, 26885, 304, 279, 12877, 6460, 323, 19278, 705, 904, 315, 902, 1253, 7958, 1057, 2626, 50106, 11, 5376, 1057, 10565, 7194, 11, 4017, 7631, 369, 1057, 3956, 323, 3600, 11, 4017, 1057, 5845, 311, 2592, 6956, 477, 1620, 3956, 11, 477, 5471, 477, 3242, 15686, 603, 505, 10565, 304, 3738, 56043, 11, 89506, 449, 2254, 7016, 11, 477, 10209, 3956, 477, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 5217, 15635, 77044, 505, 87998, 4819, 11, 1778, 439, 24679, 11, 5054, 59322, 11, 323, 17903, 26885, 11, 430, 1436, 5536, 279, 2883, 596, 25605, 17357, 11, 7194, 11, 323, 3157, 7631, 13, 1102, 22890, 389, 279, 3766, 12143, 555, 4726, 94012, 279, 6485, 3728, 18921, 304, 902, 63897, 27149, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139360>, 'json_data': {'input': [[18902, 79483, 25, 8825, 323, 7241, 527, 11224, 520, 2853, 2753, 41165, 94189, 13, 4241, 2827, 7246, 374, 12715, 1701, 279, 7833, 8614, 1749, 927, 279, 13240, 5505, 6439, 315, 279, 12032, 11, 902, 584, 15870, 15806, 13, 11680, 374, 539, 73058, 660, 13, 1226, 73058, 349, 14016, 927, 18852, 315, 8254, 311, 220, 914, 1667, 13, 1226, 73058, 349, 2038, 5557, 12032, 8965, 927, 264, 4261, 315, 4848, 1667, 369, 16692, 323, 4009, 7241, 13, 1226, 73058, 349, 26120, 6416, 18637, 927, 279, 24210, 315, 279, 9861, 26120, 4751, 477, 279, 13240, 5505, 6439, 315, 279, 12032, 13, 4241, 2827, 7246, 369, 14016, 11, 2038, 5557, 12032, 11, 26120, 6416, 18637, 11, 323, 14891, 323, 38764, 1081, 2436, 3131, 814, 527, 5644, 369, 1057, 10825, 1005, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 51262, 323, 94189, 5528, 9435, 311, 3424, 323, 7241, 13234, 555, 63897, 13, 1102, 374, 961, 315, 279, 3424, 323, 7241, 24043, 10396, 11, 39686, 279, 2883, 596, 5603, 311, 9513, 51262, 323, 279, 5536, 389, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e611393f0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 25261, 16346, 5343, 30240, 459, 8830, 315, 3766, 78688, 323, 279, 2704, 315, 14529, 43986, 11, 34988, 12197, 28118, 279, 13146, 505, 5419, 323, 9434, 5897, 16467, 11, 6574, 449, 5419, 5897, 16467, 311, 4358, 279, 18873, 11, 323, 19546, 264, 13340, 6661, 505, 6373, 389, 1521, 13146, 13, 1226, 1101, 26126, 279, 8351, 753, 75992, 304, 12976, 311, 1521, 13146, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 3649, 279, 3230, 25261, 16346, 13375, 311, 3619, 279, 5897, 2317, 315, 279, 4814, 39639, 6072, 11, 94012, 279, 8149, 315, 279, 6264, 12170, 6, 8990, 1139, 6373, 596, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139480>, 'json_data': {'input': [[18902, 79483, 25, 5751, 7928, 2592, 315, 8515, 3984, 555, 7677, 527, 13172, 30466, 8066, 555, 5195, 7694, 612, 1023, 6012, 11, 5195, 8304, 6012, 11, 323, 13674, 6012, 13, 763, 5195, 8471, 11, 584, 1101, 7068, 8515, 1555, 11761, 41455, 323, 279, 6412, 315, 10721, 323, 304, 20624, 24393, 323, 7766, 13, 763, 5195, 15161, 584, 7068, 8515, 1555, 15652, 6108, 12718, 323, 41455, 369, 14054, 11, 5452, 11, 20632, 7526, 11, 323, 1023, 9624, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 6156, 8336, 315, 8515, 3984, 555, 10565, 7640, 11, 39686, 279, 26431, 315, 13172, 30466, 323, 1023, 8070, 8336, 369, 63897, 4953, 3238, 82, 6020, 20334, 323, 6650, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139510>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 1317, 9860, 18845, 617, 20162, 311, 279, 3135, 315, 1057, 60391, 7677, 11, 323, 584, 48248, 430, 814, 690, 3136, 311, 7958, 1057, 3938, 3135, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 279, 2768, 3585, 690, 7872, 3230, 1317, 9860, 18845, 430, 617, 35901, 40028, 63897, 596, 7677, 323, 527, 3685, 311, 3136, 3815, 779, 11, 8405, 264, 69917, 369, 279, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e611395a0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 701, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139630>, 'json_data': {'input': [[18902, 79483, 25, 17961, 18591, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 17961, 18591, 11, 6376, 279, 6566, 369, 11944, 6020, 5178, 17150, 323, 6492, 369, 63897, 4953, 2637, 2737, 30466, 11, 7194, 11, 323, 1023, 6020, 34824, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e611396c0>, 'json_data': {'input': [[18902, 79483, 25, 5874, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 2199, 1396, 21070, 11, 86387, 13016, 304, 72991, 3230, 14491, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139750>, 'json_data': {'input': [[18902, 79483, 25, 11842, 30004, 36164, 25452, 34919, 40944, 4272, 8895, 320, 9563, 8, 374, 40056, 315, 400, 845, 13, 23, 7239, 20192, 323, 400, 19, 13, 20, 7239, 18151, 320, 16564, 38974, 1392, 8, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 400, 972, 13, 16, 7239, 20192, 323, 400, 21, 13, 24, 7239, 18151, 320, 16564, 38974, 1392, 8, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 40944, 4272, 20192, 323, 18151, 369, 2536, 30004, 36164, 25452, 34919, 11, 8405, 11944, 12678, 369, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 11815, 279, 6931, 20954, 315, 25452, 22538, 323, 22020, 279, 5178, 315, 1521, 34919, 927, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e611397e0>, 'json_data': {'input': [[18902, 79483, 25, 12948, 78354, 71760, 28674, 311, 11360, 220, 1032, 2666, 8, 315, 279, 19224, 3298, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 1070, 374, 912, 8581, 2038, 369, 279, 38846, 1537, 11, 23377, 430, 279, 2883, 1587, 539, 617, 75992, 5552, 311, 7362, 56043, 430, 5471, 58074, 11, 28592, 15858, 7922, 279, 1934, 369, 13016, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139870>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 4384, 11, 19392, 264, 4754, 6002, 369, 4726, 7872, 477, 264, 7554, 6710, 315, 2038, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139900>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 6807, 5326, 15871, 505, 8515, 86106, 11, 3157, 481, 11897, 34919, 11, 32905, 6020, 24198, 11, 2737, 7362, 9473, 17517, 11, 323, 9815, 2215, 43672, 13, 1226, 10299, 1057, 6807, 5326, 14675, 1555, 32100, 15813, 315, 1057, 5663, 34057, 6807, 20069, 1918, 11, 6807, 13693, 323, 1005, 315, 52508, 6373, 13, 19620, 9473, 17517, 527, 1380, 22955, 449, 5370, 6020, 14673, 449, 1579, 6807, 11509, 13, 41755, 2215, 43672, 527, 11383, 653, 85408, 323, 527, 14592, 505, 30466, 15662, 505, 6444, 7559, 2212, 279, 1917, 13, 1226, 10299, 1057, 6807, 5326, 14675, 555, 16785, 14529, 56181, 311, 8417, 6130, 6807, 323, 584, 4017, 279, 3392, 315, 6807, 584, 13334, 13, 1226, 8965, 656, 539, 1397, 52508, 505, 1057, 6444, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 2883, 596, 14675, 311, 6807, 5326, 11, 45293, 279, 3230, 6020, 24198, 520, 5326, 323, 1268, 279, 2883, 29972, 1521, 15635, 1555, 41300, 323, 6807, 13693, 13, 1102, 5825, 20616, 1139, 279, 2883, 596, 5326, 6373, 12659, 11, 902, 527, 16996, 369, 39210, 47614, 6020, 20334, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139990>, 'json_data': {'input': [[18902, 79483, 25, 50270, 11, 15871, 3196, 389, 1057, 5845, 311, 7068, 6763, 11767, 11, 323, 13967, 6444, 11, 323, 311, 6493, 872, 43749, 304, 459, 11297, 323, 7524, 11827, 4028, 264, 8205, 315, 8141, 12006, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 12939, 315, 50270, 311, 5195, 596, 2626, 1646, 13, 1102, 22020, 279, 1205, 369, 5195, 311, 3493, 7524, 13172, 10105, 430, 7068, 11767, 323, 6444, 11, 9200, 369, 80184, 13254, 6650, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139a20>, 'json_data': {'input': [[18902, 79483, 25, 3061, 670, 38170, 304, 1057, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 617, 1027, 11, 323, 1253, 3136, 311, 387, 11, 11754, 555, 9547, 304, 5369, 311, 279, 4689, 9547, 7633, 3485, 11, 1778, 439, 4442, 304, 6130, 10648, 323, 7631, 11, 1396, 315, 31120, 11, 323, 65649, 304, 279, 18912, 315, 2027, 38175, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 9547, 66700, 65649, 304, 30466, 505, 5195, 41455, 11, 15771, 11, 323, 7766, 11, 19392, 430, 9434, 3157, 30295, 323, 5419, 2626, 15174, 690, 5536, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139ab0>, 'json_data': {'input': [[18902, 79483, 25, 7528, 2262, 323, 3851, 5452, 12850, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 330, 58369, 2262, 323, 3851, 5452, 12850, 1, 439, 28650, 11, 26445, 66, 5620, 279, 8815, 37260, 555, 15086, 430, 6493, 2262, 323, 8522, 6089, 311, 3932, 11, 13893, 18189, 54180, 389, 5195, 596, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139b40>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 1032, 13, 70396, 35695, 198, 2014, 940, 1534, 73094, 25, 330, 9290, 220, 1032, 13, 70396, 35695, 1, 15151, 264, 3230, 3857, 315, 279, 2246, 5552, 311, 279, 2883, 596, 9548, 20448, 15174, 13, 1115, 5296, 3629, 5727, 9200, 2038, 9002, 5708, 2671, 11, 5708, 6108, 20448, 11, 323, 1023, 5552, 6020, 42356, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139bd0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139c60>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 26559, 279, 1934, 439, 63897, 4953, 2637, 902, 374, 7718, 369, 31692, 279, 3917, 315, 279, 26559, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139cf0>, 'json_data': {'input': [[18902, 79483, 25, 1050, 46469, 11, 3738, 7194, 11, 1778, 439, 7194, 5938, 449, 2262, 323, 9629, 24279, 11, 3738, 15009, 7640, 11, 323, 7766, 11, 439, 1664, 439, 3738, 10565, 18512, 527, 6089, 71526, 311, 1057, 21282, 13, 24586, 311, 279, 18751, 7138, 315, 63897, 11, 1023, 7194, 323, 18512, 11, 1778, 439, 11156, 14054, 323, 5274, 13077, 11, 527, 9152, 85413, 520, 264, 60391, 2237, 13, 4314, 7194, 11, 2737, 279, 5938, 94189, 323, 53317, 11, 527, 20816, 311, 10565, 21282, 439, 264, 2532, 2853, 8965, 3196, 389, 10648, 11, 2010, 1868, 11, 477, 13254, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 24691, 315, 30466, 323, 7194, 5938, 449, 279, 21282, 11, 439, 1664, 439, 279, 58983, 6373, 315, 3738, 18512, 11, 8405, 20616, 1139, 279, 6020, 13122, 6070, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139d80>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1550, 539, 617, 904, 3769, 90108, 2461, 8349, 430, 1051, 35977, 477, 29546, 3284, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5415, 430, 11, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1070, 1051, 912, 3769, 90108, 2461, 8349, 15639, 430, 1436, 5536, 279, 2883, 13, 1102, 17482, 311, 50460, 10742, 555, 19392, 264, 6996, 315, 14247, 6020, 5326, 505, 90108, 2461, 8349, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139e10>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139ea0>, 'json_data': {'input': [[18902, 79483, 25, 8825, 323, 20849, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 1212, 315, 264, 3857, 389, 330, 3128, 323, 20849, 1359, 23377, 430, 279, 2768, 2262, 690, 7872, 63897, 596, 10396, 9002, 279, 24043, 323, 6373, 315, 1202, 50401, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139f30>, 'json_data': {'input': [[18902, 79483, 25, 1789, 264, 12399, 315, 5199, 24043, 10396, 323, 279, 2515, 389, 1057, 6020, 12518, 11, 1518, 7181, 220, 16, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 67146, 13016, 311, 5217, 2038, 9002, 5199, 24043, 10396, 304, 279, 8554, 3857, 315, 279, 6020, 12518, 13, 1102, 17482, 439, 264, 5425, 73723, 369, 13016, 889, 1390, 311, 82845, 19662, 1139, 279, 3230, 24043, 5528, 323, 872, 25127, 369, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e61139fc0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 13019, 279, 2768, 9477, 439, 961, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 1160, 315, 9477, 13019, 439, 961, 315, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 13, 1102, 64252, 13016, 430, 279, 17876, 3673, 690, 6782, 3230, 6020, 323, 24043, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113a050>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 18908, 264, 51262, 41458, 449, 5201, 311, 7188, 27334, 3827, 12032, 11, 3738, 6918, 4272, 10565, 18151, 11, 3738, 1614, 4272, 10565, 18151, 323, 3827, 20746, 11, 4272, 27334, 3827, 12032, 23343, 311, 7089, 13315, 5220, 11, 323, 3738, 7362, 4272, 10565, 18151, 430, 584, 4510, 527, 539, 4461, 311, 387, 15393, 13, 1226, 3136, 311, 32834, 434, 279, 9861, 51262, 41458, 51534, 11, 323, 422, 3938, 6029, 6276, 369, 264, 7276, 477, 2539, 4984, 315, 279, 51262, 41458, 11, 264, 3827, 8935, 690, 387, 12715, 28178, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 2883, 596, 51262, 90120, 5552, 311, 5370, 3827, 6920, 2000, 4102, 323, 27334, 3827, 12032, 13, 1102, 15151, 264, 46878, 5603, 304, 49183, 4754, 3827, 7720, 323, 279, 14529, 15813, 315, 34860, 2968, 11, 902, 374, 7718, 369, 8830, 279, 2883, 596, 6020, 36721, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113a0e0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 5217, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113a170>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1047, 10195, 653, 85408, 8554, 19310, 449, 264, 2860, 15691, 907, 315, 400, 717, 13, 24, 7239, 449, 2875, 9860, 323, 1317, 9860, 3938, 2802, 14507, 315, 400, 11584, 3610, 323, 400, 18, 13, 21, 7239, 11, 15947, 13, 1789, 5217, 2038, 11, 1518, 7181, 220, 21, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3649, 922, 63897, 4953, 3238, 82, 6020, 30255, 11, 11951, 9002, 10195, 653, 85408, 8554, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 22020, 279, 15691, 907, 315, 1521, 8554, 323, 3938, 2802, 14507, 11, 19392, 279, 2883, 596, 11897, 6671, 13, 1115, 2038, 374, 9959, 311, 15167, 323, 39210, 47614, 279, 2883, 596, 6020, 2890, 323, 6864, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113a200>, 'json_data': {'input': [[18902, 79483, 25, 1322, 41115, 304, 1057, 38124, 9477, 323, 1234, 40838, 2383, 1436, 66087, 264, 64310, 430, 5708, 17075, 1253, 2980, 37849, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 13166, 35186, 323, 4754, 30740, 311, 33615, 1935, 9146, 13, 1102, 15151, 430, 279, 2883, 596, 38124, 323, 40838, 2383, 1253, 1893, 32116, 369, 5708, 17075, 889, 2643, 6062, 4799, 3738, 64310, 44599, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113a290>, 'json_data': {'input': [[18902, 79483, 25, 29140, 315, 22765, 36639, 3142, 45344, 38725, 320, 4977, 19268, 33, 3110, 25, 220, 2983, 8, 17961, 70816, 25, 79980, 660, 31946, 61572, 79980, 660, 70816, 315, 33620, 79980, 660, 70816, 315, 67963, 33620, 79980, 660, 70816, 315, 12937, 17075, 529, 58588, 79980, 660, 70816, 315, 23139, 3061, 4336, 18559, 311, 79980, 660, 17961, 70816, 5874, 220, 2166, 220, 3971, 220, 4103, 220, 4331, 220, 4370, 220, 2131, 220, 3487, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 279, 6821, 315, 279, 9678, 9879, 586, 24043, 7626, 323, 279, 6020, 12518, 5343, 304, 279, 2246, 13, 1102, 17482, 439, 264, 12399, 315, 279, 25261, 323, 6020, 13122, 6956, 11, 902, 527, 7718, 369, 69963, 279, 13708, 323, 31638, 315, 279, 6020, 2038, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113a320>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 439, 330, 2149, 18992, 4953, 1210, 323, 374, 4461, 961, 315, 279, 2316, 477, 14836, 3857, 315, 279, 2246, 11, 31692, 279, 2317, 2949, 902, 279, 1934, 374, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113a3b0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 94594, 279, 7640, 369, 653, 7164, 291, 63897, 24107, 3642, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 320, 258, 11990, 11, 3734, 824, 4430, 15055, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 12399, 2007, 315, 7640, 5552, 311, 94960, 12937, 36281, 320, 11706, 3642, 8, 369, 63897, 4953, 13, 369, 279, 1060, 13696, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 5825, 264, 16694, 315, 25452, 20448, 7640, 11, 902, 527, 16996, 369, 8830, 279, 2883, 596, 9548, 20448, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113a440>, 'json_data': {'input': [[18902, 79483, 25, 1226, 48582, 3477, 1057, 11897, 323, 2536, 30004, 36164, 25452, 34919, 369, 53317, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 10015, 24131, 315, 279, 39445, 3477, 1920, 369, 11897, 323, 2536, 30004, 36164, 25452, 34919, 311, 10765, 38974, 1392, 13, 1102, 374, 961, 315, 279, 27927, 10430, 389, 9341, 51262, 323, 5326, 15813, 2949, 63897, 596, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113a4d0>, 'json_data': {'input': [[18902, 79483, 25, 8825, 323, 7241, 11, 4272, 11, 44660, 315, 279, 2768, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 31085, 315, 3424, 323, 7241, 11, 4272, 11, 2737, 6956, 323, 872, 20081, 2819, 13, 1115, 6020, 828, 374, 7718, 369, 38663, 279, 2883, 753, 9513, 2385, 323, 9341, 304, 14054, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113a560>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 2262, 369, 66251, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113a5f0>, 'json_data': {'input': [[18902, 79483, 25, 220, 2031, 627, 2014, 940, 1534, 73094, 25, 1115, 8111, 311, 387, 264, 2199, 1396, 5905, 11, 902, 2643, 13519, 1405, 279, 2768, 2038, 374, 7559, 2949, 279, 2246, 13, 1102, 4461, 17482, 439, 264, 34512, 1697, 12576, 2949, 279, 8294, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113a680>, 'json_data': {'input': [[18902, 79483, 25, 578, 7188, 8191, 315, 20695, 8398, 7658, 11, 902, 80412, 279, 4868, 315, 828, 1511, 304, 3717, 449, 7757, 73288, 7766, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7188, 8191, 315, 20695, 8398, 7658, 11, 902, 14564, 828, 4868, 369, 7757, 73288, 7766, 13, 1102, 46480, 279, 24050, 23331, 12914, 430, 63897, 2011, 21546, 11, 4726, 69226, 1113, 8907, 9045, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113a710>, 'json_data': {'input': [[18902, 79483, 25, 11761, 41455, 11, 902, 15871, 2997, 30466, 505, 13674, 3600, 11, 1778, 13674, 6007, 11, 13674, 10948, 323, 26745, 11, 323, 12873, 7418, 29497, 11, 439, 1664, 439, 5195, 3861, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 11761, 41455, 13189, 315, 279, 30466, 11, 15182, 3230, 3600, 1093, 13674, 6007, 323, 5195, 3861, 13, 1102, 22020, 279, 20057, 2949, 11761, 15493, 33935, 430, 17210, 311, 13254, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113a7a0>, 'json_data': {'input': [[18902, 79483, 25, 10195, 6373, 3727, 279, 1620, 3769, 488, 6449, 811, 323, 28957, 323, 1023, 8907, 11429, 13, 5751, 6373, 917, 81, 5014, 63897, 753, 9678, 586, 24043, 7626, 315, 13146, 323, 904, 9959, 26006, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 10195, 6373, 596, 3560, 304, 3339, 3769, 488, 6449, 811, 323, 8907, 11429, 5552, 311, 62542, 11, 82003, 279, 35186, 6070, 304, 2035, 311, 10299, 15635, 13750, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113a830>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 5905, 311, 279, 6771, 315, 36962, 315, 279, 2246, 11, 19392, 430, 433, 17482, 439, 459, 41295, 5507, 369, 13016, 311, 21546, 1555, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113a8c0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 7376, 389, 5936, 220, 508, 11, 220, 2366, 18, 11, 584, 7263, 3871, 961, 315, 5195, 8483, 320, 1820, 31417, 2128, 8, 323, 18682, 70738, 311, 12207, 43880, 1057, 5208, 304, 21075, 11478, 320, 15836, 570, 578, 1912, 11, 2663, 5195, 18682, 70738, 11, 374, 5068, 2949, 63897, 11852, 7640, 22199, 3210, 7314, 304, 279, 2132, 8502, 315, 220, 2366, 18, 13, 59787, 11, 279, 31417, 2128, 574, 5343, 2949, 5195, 8471, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 18488, 315, 279, 5195, 18682, 70738, 1912, 505, 279, 47112, 315, 5596, 315, 5195, 8483, 323, 18682, 70738, 11, 36024, 264, 19092, 6541, 9017, 21075, 11478, 4500, 323, 1202, 13122, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113a950>, 'json_data': {'input': [[18902, 79483, 25, 44272, 15215, 50, 198, 2014, 940, 1534, 73094, 25, 44272, 15215, 50]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113a9e0>, 'json_data': {'input': [[18902, 79483, 25, 220, 4643, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 2199, 1396, 21070, 320, 4643, 8, 2949, 279, 2246, 11, 4461, 3453, 11780, 279, 1510, 2199, 304, 279, 8668, 315, 279, 1934, 13, 1102, 1587, 539, 6782, 67749, 2038, 719, 8779, 304, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113aa70>, 'json_data': {'input': [[18902, 79483, 25, 94189, 20900, 5552, 311, 1057, 11156, 14054, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 34945, 94189, 18512, 5552, 311, 11156, 14054, 11, 91115, 279, 4623, 430, 1070, 527, 5199, 7194, 6532, 304, 20958, 323, 10565, 63897, 596, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113ab00>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 578, 6771, 315, 36962, 374, 264, 34512, 1697, 5507, 430, 50729, 279, 6070, 315, 279, 1934, 11, 10695, 13016, 25539, 3230, 14491, 6288, 13, 1102, 17482, 439, 264, 69917, 369, 279, 4553, 2246, 11, 8405, 459, 24131, 315, 279, 13650, 9960, 304, 279, 3459, 220, 605, 16222, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113ab90>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 11075, 430, 279, 35186, 14726, 315, 1521, 15086, 656, 539, 2187, 603, 311, 2167, 279, 7640, 430, 1053, 12207, 7958, 872, 7100, 5178, 13, 15636, 11, 584, 527, 539, 279, 6156, 63932, 11, 323, 279, 3135, 315, 7677, 323, 6020, 2361, 315, 1521, 650, 5484, 82, 527, 539, 5343, 304, 1057, 60391, 6020, 12518, 13, 1226, 2759, 369, 1521, 22538, 15871, 439, 2536, 30004, 36164, 25452, 34919, 477, 25452, 1749, 22538, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 35186, 14726, 315, 279, 653, 6387, 5303, 660, 650, 5484, 82, 11, 26073, 3249, 279, 2883, 374, 539, 15324, 439, 279, 6156, 63932, 13, 1102, 6209, 3062, 2317, 369, 8830, 1268, 1521, 22538, 527, 41853, 369, 323, 872, 25127, 369, 279, 2883, 596, 6020, 82, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113ac20>, 'json_data': {'input': [[18902, 79483, 25, 23588, 388, 315, 13896, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 9002, 330, 39, 33220, 315, 13896, 1359, 902, 11383, 5825, 3649, 922, 279, 15637, 315, 279, 2883, 596, 5708, 11, 16996, 369, 8830, 63342, 8141, 323, 3268, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113acb0>, 'json_data': {'input': [[18902, 79483, 25, 7089, 426, 1441, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 11663, 426, 1441, 1, 10449, 11, 902, 5764, 63897, 596, 5370, 22772, 323, 2536, 24357, 9873, 13, 1102, 15151, 264, 6541, 311, 25394, 420, 2753, 21349, 719, 13893, 1579, 2427, 19632, 3158, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113ad40>, 'json_data': {'input': [[18902, 79483, 25, 279, 8657, 10603, 315, 1057, 8336, 315, 11006, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 17503, 1234, 279, 10430, 315, 6020, 20334, 323, 25605, 8824, 304, 279, 4741, 31348, 12518, 13, 1102, 14564, 279, 2883, 596, 15813, 315, 1202, 11006, 8336, 11, 902, 374, 16996, 369, 80184, 7677, 323, 12899, 6650, 28271, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113add0>, 'json_data': {'input': [[18902, 79483, 25, 36233, 26120, 20900, 320, 80095, 3977, 26120, 7194, 8, 374, 15324, 389, 264, 7833, 8614, 8197, 927, 279, 26120, 4751, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 24043, 6514, 369, 10565, 26120, 18512, 11, 19392, 430, 1521, 7194, 527, 15324, 60826, 927, 279, 26120, 4751, 13, 1115, 374, 9959, 369, 8830, 1268, 26120, 7194, 5536, 279, 2883, 596, 8070, 5224, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113ae60>, 'json_data': {'input': [[18902, 79483, 25, 384, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 11741, 18133, 2449, 477, 264, 6002, 304, 279, 2246, 323, 1587, 539, 3493, 23222, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:28 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-11-30 23:54:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113aef0>, 'json_data': {'input': [[18902, 79483, 25, 220, 777, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2262, 369, 66251, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113b9a0>, 'json_data': {'input': [[18902, 79483, 25, 47064, 304, 99216, 20448, 323, 7720, 389, 279, 79980, 660, 31946, 61572, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 1405, 279, 3285, 685, 58165, 527, 12715, 304, 279, 6020, 12518, 11, 11951, 27401, 430, 814, 527, 5343, 304, 99216, 20448, 323, 7720, 13, 1102, 8779, 2723, 279, 6020, 828, 311, 1202, 15864, 304, 279, 8335, 11071, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:28 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-11-30 23:54:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113b910>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 904, 1495, 11, 14691, 279, 24693, 3645, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113ba30>, 'json_data': {'input': [[18902, 79483, 25, 80625, 7913, 7089, 67963, 33620, 320, 40938, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 25394, 80625, 7913, 7089, 67963, 33620, 320, 40938, 8, 320, 32, 65083, 570, 1102, 17738, 264, 6541, 304, 5357, 311, 279, 6956, 315, 16195, 8070, 430, 527, 539, 5343, 304, 4272, 8070, 11, 8405, 26793, 1139, 279, 27927, 6020, 2890, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113b010>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 578, 330, 2620, 315, 36962, 1, 5825, 264, 34030, 24131, 315, 279, 14491, 323, 3673, 5343, 304, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 369, 63897, 4953, 13, 369, 279, 20323, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 17482, 439, 264, 69917, 369, 13016, 311, 21546, 279, 2246, 30820, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113af80>, 'json_data': {'input': [[18902, 79483, 25, 76615, 33620, 72837, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 76615, 33620, 72837, 11, 19392, 264, 10430, 389, 279, 13643, 12062, 430, 7958, 3827, 13122, 323, 6020, 12518, 11, 902, 374, 9200, 369, 8830, 3827, 58165, 323, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113b0a0>, 'json_data': {'input': [[18902, 79483, 25, 6909, 14767, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 3744, 14767, 315, 279, 2246, 11, 902, 11383, 5764, 35186, 323, 5708, 4346, 14228, 13146, 13, 1102, 17738, 264, 9320, 505, 279, 2626, 24131, 323, 6020, 2038, 311, 810, 11944, 75992, 922, 13166, 35186, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113b130>, 'json_data': {'input': [[18902, 79483, 25, 15771, 11, 902, 15871, 2997, 30466, 505, 5195, 7199, 505, 279, 6763, 315, 10721, 323, 304, 20624, 24393, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 279, 15771, 13254, 11, 8104, 21760, 389, 5195, 7199, 323, 1202, 3560, 304, 24038, 8070, 1555, 917, 6763, 323, 304, 20624, 24393, 11, 4726, 45293, 279, 2883, 753, 13254, 8336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113b1c0>, 'json_data': {'input': [[18902, 79483, 25, 763, 279, 4725, 3388, 315, 2626, 11, 2737, 311, 28696, 14463, 304, 1057, 3600, 323, 3956, 323, 13166, 7640, 11, 584, 90108, 1463, 3738, 9875, 11, 2737, 50270, 11, 5195, 8304, 8717, 11, 8141, 8717, 11, 6444, 315, 5195, 15161, 33935, 11, 2753, 1105, 11, 323, 2532, 12850, 449, 5201, 311, 3738, 13146, 13, 1226, 617, 7378, 311, 10726, 323, 5255, 3412, 3738, 9875, 53997, 2403, 18151, 40986, 505, 264, 31471, 315, 44713, 477, 272, 16651, 1821, 11, 477, 704, 315, 20207, 3424, 54443, 477, 1023, 8349, 1903, 2403, 3738, 9875, 13, 26778, 315, 1521, 20038, 4017, 279, 892, 2949, 902, 459, 90108, 2461, 3802, 649, 387, 1903, 323, 279, 3392, 315, 279, 3802, 13, 763, 5369, 11, 584, 617, 10862, 1139, 90108, 2461, 20038, 449, 1057, 9808, 323, 28454, 11, 323, 1057, 555, 68637, 6782, 4528, 90108, 2461, 30255, 311, 1057, 13307, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 90108, 2461, 12659, 315, 279, 2883, 11, 26073, 279, 9875, 6532, 323, 279, 4595, 315, 15635, 9960, 13, 1102, 22020, 279, 2883, 596, 15507, 311, 22973, 1202, 8717, 323, 39210, 505, 4754, 5897, 8349, 11, 94012, 279, 25605, 15635, 5938, 449, 1202, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113b250>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 5905, 311, 279, 2007, 315, 8970, 11, 902, 5825, 459, 24131, 315, 279, 2246, 596, 6070, 323, 8779, 13016, 21546, 311, 3230, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113b2e0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 1587, 539, 6782, 904, 1495, 323, 9093, 37856, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113b370>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 18, 59316, 685, 323, 25368, 320, 16, 8, 8410, 11746, 10884, 11443, 315, 30466, 400, 220, 21848, 400, 220, 21235, 400, 220, 16415, 8483, 323, 4500, 220, 24951, 220, 22440, 220, 16, 11, 21982, 16207, 323, 8661, 220, 22640, 220, 15574, 220, 23952, 3331, 323, 23541, 220, 12815, 220, 14590, 220, 14408, 10884, 10405, 400, 220, 17, 11, 25620, 400, 220, 16, 11, 24650, 400, 220, 18, 11, 25806, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 11944, 6020, 31085, 315, 3285, 685, 323, 5274, 3634, 4974, 10405, 555, 5699, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 5825, 20616, 1139, 1268, 1521, 7194, 527, 20816, 4028, 2204, 25605, 21282, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113b400>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113b490>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 13, 74006, 59351, 9182, 23233, 29863, 3083, 83751, 39, 8021, 4419, 529, 469, 5876, 3414, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 96594, 59351, 9182, 23233, 29863, 3083, 83751, 39, 8021, 4419, 529, 469, 5876, 3414, 1359, 2500, 1401, 6020, 5224, 430, 50729, 4442, 304, 25452, 369, 5708, 17075, 927, 279, 5300, 18852, 11, 8405, 26793, 1139, 6864, 6070, 323, 63342, 14463, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113b520>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 311, 279, 7194, 5343, 304, 63897, 11852, 7640, 11, 61316, 3252, 20192, 320, 9563, 288, 8, 5552, 311, 13254, 1051, 400, 17, 13, 15, 7239, 323, 400, 14087, 3610, 304, 220, 2366, 17, 323, 220, 2366, 18, 11, 15947, 13, 1789, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 63897, 11852, 7640, 2997, 10405, 5552, 311, 279, 14278, 304, 5457, 323, 1057, 5274, 3634, 26329, 9045, 82223, 400, 18, 13, 24, 7239, 13, 763, 5369, 11, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 52872, 400, 16955, 3610, 304, 49858, 8175, 323, 49858, 94189, 13, 1789, 5217, 2038, 23343, 311, 1057, 32027, 14278, 323, 1023, 28271, 11, 1518, 7181, 220, 23, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 13, 1789, 5217, 2038, 23343, 311, 1057, 21282, 11, 1518, 7181, 220, 868, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 19775, 52956, 389, 279, 10449, 63336, 828, 555, 25394, 61316, 3252, 20192, 323, 18151, 11, 439, 1664, 439, 3230, 10405, 5552, 311, 32027, 14278, 13, 1102, 5825, 3062, 2317, 9002, 279, 6020, 25127, 315, 25605, 11429, 323, 4442, 11, 51346, 13016, 311, 9959, 8554, 369, 810, 11944, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113b5b0>, 'json_data': {'input': [[18902, 79483, 25, 50270, 11, 15871, 3196, 389, 1057, 5845, 311, 7068, 6763, 11767, 11, 323, 13967, 6444, 11, 323, 311, 6493, 872, 43749, 304, 459, 11297, 323, 7524, 11827, 4028, 264, 8205, 315, 8141, 12006, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 12939, 315, 50270, 311, 5195, 596, 2626, 1646, 13, 1102, 22020, 279, 1205, 369, 5195, 311, 3493, 7524, 13172, 10105, 430, 7068, 11767, 323, 6444, 11, 9200, 369, 80184, 13254, 6650, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113b640>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1070, 574, 400, 1644, 13, 20, 7239, 315, 97239, 20448, 2853, 5552, 311, 653, 7164, 291, 24107, 3642, 13, 1115, 3392, 374, 3685, 311, 387, 15324, 927, 264, 37924, 78526, 4261, 315, 220, 17, 13, 20, 1667, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 97239, 20448, 2853, 5938, 449, 653, 7164, 291, 24107, 3642, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 323, 279, 3685, 18324, 4261, 13, 1102, 374, 9959, 369, 47614, 3938, 6020, 30255, 5552, 311, 5708, 6108, 20448, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113b6d0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 5905, 311, 279, 6771, 315, 36962, 315, 279, 2246, 11, 19392, 430, 433, 17482, 439, 459, 41295, 5507, 369, 13016, 311, 21546, 1555, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113b760>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 584, 99216, 400, 18061, 3610, 323, 400, 19808, 3610, 304, 2802, 323, 31086, 304, 17575, 369, 8070, 13426, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 6821, 389, 279, 99216, 2802, 323, 31086, 5552, 311, 17575, 369, 8070, 13426, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 22020, 279, 6020, 5536, 315, 3827, 8907, 323, 4754, 42254, 449, 3827, 11527, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113b7f0>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 1057, 2853, 315, 30466, 11, 3495, 323, 4500, 320, 49, 33465, 8, 18512, 11, 6763, 323, 8661, 18512, 11, 323, 4689, 323, 23541, 18512, 1253, 5376, 304, 3392, 323, 5255, 1253, 5376, 439, 264, 11668, 315, 30466, 323, 1253, 387, 11754, 555, 264, 1396, 315, 9547, 280, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113b880>, 'json_data': {'input': [[18902, 79483, 25, 81751, 12032, 323, 58165, 527, 15324, 520, 279, 3118, 907, 315, 279, 3938, 26120, 14507, 520, 279, 26120, 69544, 2457, 13, 578, 2802, 4478, 1511, 311, 8417, 279, 3118, 907, 315, 279, 3938, 26120, 14507, 374, 1057, 53399, 53675, 4478, 11, 1606, 279, 2802, 4478, 18479, 304, 1057, 73657, 374, 539, 31368, 6449, 481, 13, 5751, 53399, 53675, 4478, 374, 13240, 311, 45968, 279, 2802, 4478, 389, 264, 52508, 1534, 8197, 449, 4528, 3878, 323, 14507, 11, 323, 304, 7100, 22484, 1405, 279, 82280, 9513, 374, 7559, 13, 5751, 26120, 3878, 2997, 18852, 1234, 2671, 311, 13334, 477, 30754, 279, 26120, 994, 433, 374, 29546, 3738, 430, 584, 690, 10368, 430, 3072, 13, 1226, 8965, 1005, 279, 2385, 11, 2536, 86103, 481, 11, 26120, 4751, 994, 26679, 279, 26120, 12032, 323, 58165, 13, 81751, 12032, 1101, 2997, 904, 83776, 26120, 14507, 323, 26120, 36580, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 1268, 26120, 12032, 323, 58165, 527, 15324, 304, 279, 6020, 12518, 11, 82003, 279, 12939, 315, 3118, 907, 29217, 323, 279, 26314, 315, 2802, 7969, 13, 1102, 1234, 8128, 279, 26431, 315, 26120, 3878, 304, 24043, 12659, 323, 872, 5536, 389, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113bac0>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 11, 584, 4510, 430, 1057, 13166, 7829, 37413, 388, 19297, 11, 28697, 11, 323, 84633, 13, 1666, 1057, 7471, 28815, 323, 93054, 11, 584, 1253, 1205, 311, 10737, 1057, 13166, 7829, 323, 990, 22484, 311, 3596, 49961, 13463, 11, 1778, 439, 2391, 3115, 315, 264, 5933, 21426, 477, 28522, 11, 323, 1521, 4442, 1436, 7958, 1057, 5845, 311, 20874, 13750, 477, 617, 459, 31959, 2515, 389, 1057, 13166, 7829, 13, 9636, 1057, 26038, 990, 4211, 11, 584, 1253, 3217, 7319, 7194, 323, 5255, 44219, 11, 304, 5369, 311, 4754, 6372, 389, 1057, 5845, 311, 14816, 13750, 323, 10519, 1057, 13166, 7829, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 2883, 596, 13166, 7829, 323, 1202, 10737, 2968, 304, 264, 10223, 4676, 13, 1102, 22020, 279, 12939, 315, 86644, 459, 18699, 27465, 323, 279, 4754, 98057, 430, 1436, 7958, 7677, 11, 902, 527, 9959, 311, 279, 27927, 10430, 315, 9548, 20392, 323, 41295, 56062, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113bb50>, 'json_data': {'input': [[18902, 79483, 25, 5751, 13254, 6650, 4478, 1436, 18174, 927, 892, 439, 264, 1121, 315, 264, 1396, 315, 9547, 11, 2737, 4442, 304, 279, 7766, 323, 13531, 1385, 1511, 311, 2680, 1057, 3956, 323, 3600, 26, 4442, 304, 46139, 6651, 26, 1654, 8023, 367, 477, 58054, 304, 87386, 10374, 26, 10937, 26, 6130, 10648, 323, 7631, 369, 1057, 3956, 26, 43154, 304, 1057, 21913, 315, 1057, 3956, 323, 3600, 26, 14529, 2027, 323, 4947, 4442, 26, 323, 29735, 311, 4827, 33705, 3956, 323, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 3649, 3230, 9547, 430, 1436, 17210, 311, 279, 18174, 304, 13254, 6650, 11, 2737, 4442, 304, 11761, 7865, 323, 15022, 40850, 13, 1102, 5825, 20616, 1139, 279, 23965, 315, 80184, 6650, 304, 264, 8915, 3157, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113bbe0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6864, 22538, 304, 3424, 323, 7241, 6824, 15871, 315, 279, 2768, 3682, 11306, 512, 2014, 940, 1534, 73094, 25, 1115, 11914, 50729, 279, 3682, 11306, 315, 6864, 22538, 11, 6376, 279, 6566, 369, 264, 810, 11944, 6492, 315, 1405, 63897, 596, 6864, 374, 1694, 20816, 13, 1115, 2317, 374, 3062, 369, 39210, 8173, 304, 279, 2883, 596, 19092, 5357, 5789, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113bc70>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 30466, 555, 54242, 439, 264, 11668, 315, 30466, 11, 11075, 3196, 389, 279, 14564, 315, 1057, 6444, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 18911, 30466, 555, 54242, 439, 264, 11668, 315, 2860, 30466, 13, 1102, 5825, 264, 12914, 369, 42118, 279, 54001, 8141, 315, 30466, 11, 902, 374, 7718, 369, 47614, 3157, 5178, 4028, 2204, 13918, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113bd00>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 264, 2007, 315, 8970, 11, 902, 2942, 4861, 279, 2246, 323, 52797, 304, 10873, 11, 10923, 13016, 311, 25539, 3230, 14491, 6847, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113bd90>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 578, 17571, 330, 2620, 315, 36962, 1, 13533, 430, 420, 12143, 17482, 439, 264, 34512, 1697, 12576, 2949, 279, 2246, 11, 10695, 13016, 25539, 3230, 14491, 477, 13650, 6288, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113be20>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 72214, 279, 2316, 330, 2149, 18992, 4953, 10684, 19392, 279, 2883, 304, 5357, 6957, 279, 2246, 13, 1102, 10109, 988, 279, 2262, 439, 961, 315, 264, 1934, 5552, 311, 63897, 4953, 2637, 4461, 1202, 6020, 5178, 11, 7677, 11, 323, 19092, 24131, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113beb0>, 'json_data': {'input': [[18902, 79483, 25, 220, 2096, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 477, 5905, 11381, 2949, 279, 2246, 11, 4461, 19392, 264, 9320, 304, 2262, 477, 264, 1464, 304, 279, 3857, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6113bf40>, 'json_data': {'input': [[18902, 79483, 25, 2467, 4550, 3135, 304, 904, 315, 1521, 43986, 1253, 2997, 23146, 315, 33384, 26186, 11, 34348, 53817, 477, 28506, 20038, 320, 333, 21746, 527, 2561, 520, 682, 705, 477, 10373, 33994, 1057, 5845, 311, 4662, 1057, 3956, 323, 3600, 304, 279, 549, 815, 13, 477, 18403, 11, 2737, 555, 27252, 603, 505, 10209, 3738, 4519, 11, 93180, 11, 3956, 11, 477, 3600, 304, 3738, 56043, 13, 2435, 1253, 1101, 5353, 603, 311, 2349, 1057, 2626, 12659, 304, 5627, 430, 1436, 1121, 304, 264, 4814, 315, 30466, 369, 603, 323, 6062, 11682, 1057, 2626, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 31959, 20124, 430, 649, 31889, 505, 20207, 3424, 43986, 11, 2737, 6020, 31086, 323, 25605, 17294, 13, 1102, 34161, 311, 279, 3766, 27855, 555, 94012, 279, 16296, 315, 39725, 11, 902, 1253, 4541, 20227, 4442, 304, 2626, 12659, 323, 5536, 13254, 9659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecc040>, 'json_data': {'input': [[18902, 79483, 25, 3308, 362, 11, 3308, 426, 11, 3308, 356, 12937, 323, 24086, 55182, 32600, 18880, 80625, 7913, 7089, 67963, 10608, 2692, 10884, 12937, 17075, 529, 45285, 26868, 33620, 320, 40938, 8, 469, 15202, 58588, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 15, 220, 1032, 11, 18048, 400, 220, 2970, 11, 15633, 400, 220, 23736, 400, 220, 9892, 11, 10841, 400, 220, 9716, 11, 21239, 12937, 11136, 220, 9591, 220, 717, 220, 15, 220, 15, 220, 717, 12937, 6108, 20448, 20900, 220, 15, 220, 868, 11, 23033, 220, 15, 220, 15, 220, 868, 11, 23033, 15545, 81612, 5552, 311, 28705, 287, 315, 22486, 5708, 8316, 323, 1023, 220, 15, 320, 605, 11, 15451, 8, 220, 15, 220, 15, 320, 605, 11, 15451, 8, 3402, 75202, 315, 5708, 320, 18501, 8, 320, 17, 11, 16723, 8, 220, 15, 320, 2618, 11, 15862, 8, 320, 1135, 11, 16590, 8, 13618, 315, 2802, 304, 60391, 15086, 220, 15, 220, 12226, 220, 15, 220, 15, 220, 12226, 9558, 8070, 220, 15, 220, 15, 220, 15, 220, 4767, 11, 13103, 220, 4767, 11, 13103, 7089, 16195, 8070, 320, 9563, 8, 220, 15, 220, 15, 320, 17, 11, 4146, 8, 220, 15, 320, 17, 11, 4146, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 16, 220, 1032, 11, 12754, 220, 5547, 11, 24472, 320, 16, 11, 22801, 8, 220, 7529, 11, 20339, 220, 13860, 11, 22276, 12937, 11136, 220, 10148, 220, 23, 220, 15, 220, 15, 220, 23, 12937, 6108, 20448, 20900, 220, 15, 220, 777, 11, 18415, 220, 15, 220, 15, 220, 777, 11, 18415, 15545, 81612, 5552, 311, 28705, 287, 315, 22486, 5708, 8316, 323, 1023, 220, 15, 320, 24, 11, 23952, 8, 220, 15, 320, 16, 8, 320, 24, 11, 23532, 8, 3402, 75202, 315, 5708, 320, 17252, 8, 320, 18, 11, 7507, 8, 220, 15, 320, 2131, 11, 24110, 8, 320, 2946, 11, 17408, 8, 13618, 315, 2802, 304, 60391, 15086, 220, 15, 220, 1758, 220, 15, 220, 15, 220, 1758, 9558, 8070, 220, 15, 220, 15, 220, 15, 220, 2946, 11, 24425, 220, 2946, 11, 24425, 7089, 16195, 8070, 320, 9563, 8, 220, 15, 220, 15, 320, 20, 11, 19068, 8, 220, 15, 320, 20, 11, 19068, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 717, 11, 26537, 220, 2614, 11, 10336, 320, 22, 11, 21006, 8, 220, 6280, 11, 21789, 220, 4146, 11, 8929, 12937, 11136, 220, 10125, 220, 15, 220, 15, 220, 15, 220, 15, 12937, 6108, 20448, 20900, 220, 15, 220, 1313, 11, 22915, 220, 15, 220, 15, 220, 1313, 11, 22915, 15545, 81612, 5552, 311, 28705, 287, 315, 22486, 5708, 8316, 323, 1023, 220, 15, 320, 605, 11, 10513, 8, 220, 15, 220, 24, 320, 605, 11, 9992, 8, 3402, 75202, 315, 5708, 320, 21458, 8, 320, 19, 11, 20478, 8, 220, 15, 320, 2970, 11, 4364, 8, 320, 5538, 11, 10336, 8, 9558, 8070, 220, 15, 220, 15, 220, 15, 220, 5958, 11, 25808, 220, 5958, 11, 25808, 7089, 16195, 8070, 320, 9563, 8, 220, 15, 220, 15, 220, 18, 11, 679, 220, 15, 220, 18, 11, 679, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 220, 717, 11, 16551, 400, 220, 4767, 11, 22467, 400, 320, 19, 11, 16496, 8, 400, 220, 11483, 11, 14125, 400, 220, 16085, 11, 19867, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 11944, 2038, 9002, 279, 5708, 17075, 6, 25452, 315, 63897, 4953, 13, 927, 3892, 1667, 11, 2737, 5708, 67599, 11, 5708, 6108, 20448, 11, 3827, 81612, 11, 5708, 2109, 75202, 11, 323, 16195, 8070, 11, 902, 527, 7718, 369, 8830, 25452, 4442, 323, 63342, 907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecc0d0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 6824, 315, 30466, 505, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 6956, 430, 1304, 709, 13254, 505, 41455, 11, 15771, 11, 323, 7766, 11, 23377, 264, 31085, 315, 5370, 13254, 23914, 304, 420, 5699, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecc160>, 'json_data': {'input': [[18902, 79483, 25, 7089, 426, 1441, 10565, 4814, 25983, 400, 22058, 3610, 505, 220, 2366, 17, 311, 220, 2366, 18, 15871, 4245, 311, 6650, 304, 30466, 439, 1664, 439, 264, 14278, 304, 51262, 6108, 20448, 58165, 5552, 311, 7089, 13315, 5220, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 279, 6020, 5178, 315, 279, 7089, 426, 1441, 10449, 11, 19392, 264, 14278, 304, 10565, 18151, 13, 1115, 2317, 374, 5199, 439, 433, 27053, 279, 10449, 596, 4754, 369, 6650, 323, 63336, 11, 75055, 449, 1202, 3766, 18151, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecc1f0>, 'json_data': {'input': [[18902, 79483, 25, 4314, 3135, 1288, 387, 6646, 304, 5369, 311, 11, 539, 439, 264, 28779, 369, 11, 3135, 5068, 304, 18859, 449, 27438, 2599, 13, 18591, 389, 264, 6926, 11667, 8197, 11, 439, 584, 3118, 1124, 11, 1253, 539, 387, 30139, 311, 30293, 25891, 11193, 1511, 555, 1023, 5220, 323, 527, 539, 264, 6767, 315, 5178, 10666, 304, 18859, 449, 27438, 2599, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 279, 12939, 315, 27438, 2599, 320, 77641, 64389, 45344, 58014, 8, 304, 6020, 13122, 323, 20064, 9803, 430, 279, 6926, 11667, 3135, 527, 80506, 311, 27438, 2599, 3135, 13, 1102, 22020, 279, 9669, 315, 6926, 11667, 11193, 11, 39825, 1124, 2949, 279, 8244, 12914, 315, 63897, 4953, 3238, 82, 6020, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecc280>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 16, 34, 13, 30669, 9745, 26629, 38331, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 62542, 3857, 315, 279, 2246, 11, 19392, 264, 5357, 389, 5326, 6373, 5552, 311, 62542, 18208, 13, 1102, 7437, 279, 6566, 369, 264, 11944, 10430, 315, 1268, 63897, 14564, 1521, 15635, 439, 961, 315, 1202, 8244, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecc310>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 6771, 315, 36962, 315, 279, 2246, 11, 902, 17482, 439, 264, 34512, 1697, 5507, 311, 1520, 13016, 25539, 3230, 14491, 323, 13650, 2949, 279, 27927, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecc3a0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 9865, 1109, 220, 717, 52446, 220, 717, 52446, 477, 33381, 10884, 14930, 5273, 81019, 1534, 25733, 14930, 5273, 81019, 1534, 25733, 14930, 5273, 81019, 1534, 25733, 10423, 27460, 400, 220, 16, 11, 10961, 400, 320, 1313, 8, 400, 220, 1032, 11, 24777, 400, 320, 23480, 8, 400, 220, 868, 11, 17228, 400, 320, 25136, 8, 36565, 11897, 34919, 220, 24920, 320, 20, 8, 220, 868, 11, 18775, 320, 20128, 8, 220, 845, 11, 6393, 320, 24574, 8, 48780, 46128, 323, 9513, 46128, 34919, 220, 17, 11, 24599, 320, 1627, 8, 220, 22, 11, 24487, 320, 19944, 8, 220, 605, 11, 24963, 320, 24307, 8, 10884, 400, 220, 20, 11, 14261, 400, 320, 4331, 8, 400, 220, 1806, 11, 5245, 400, 320, 16, 11, 20907, 8, 400, 220, 2983, 11, 18058, 400, 320, 16, 11, 21056, 340, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 16, 11, 420, 12143, 5825, 459, 6177, 12399, 2007, 315, 50204, 1534, 20192, 323, 18151, 389, 11897, 34919, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 42852, 4442, 927, 279, 1060, 13, 1115, 2038, 374, 16996, 369, 8830, 279, 6020, 5178, 315, 63897, 4953, 14639, 82, 9341, 20136, 323, 374, 961, 315, 279, 3857, 389, 6762, 907, 22323, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecc430>, 'json_data': {'input': [[18902, 79483, 25, 76615, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 7434, 315, 27334, 30466, 11, 902, 374, 459, 3062, 24043, 17966, 5552, 311, 13254, 18324, 304, 6020, 12518, 13, 1102, 7437, 279, 6566, 369, 8830, 1268, 63897, 4953, 13, 45799, 8515, 4036, 4972, 311, 24944, 11822, 477, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecc4c0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 2620, 315, 36962, 1359, 902, 50729, 279, 6070, 315, 279, 2246, 323, 11725, 279, 5370, 14491, 323, 13650, 9960, 11, 10695, 13016, 21546, 279, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecc550>, 'json_data': {'input': [[18902, 79483, 25, 5195, 7694, 612, 1023, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5144, 279, 3230, 13254, 5699, 330, 14783, 7694, 612, 1023, 1359, 22364, 311, 264, 11944, 6492, 315, 420, 10449, 596, 5178, 323, 1202, 5536, 389, 8244, 13172, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecc5e0>, 'json_data': {'input': [[18902, 79483, 25, 220, 4161, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 18, 11, 420, 374, 2500, 2199, 1396, 5905, 11, 19392, 279, 2246, 596, 7471, 13, 1102, 72214, 430, 279, 17876, 2038, 374, 7559, 389, 279, 220, 4161, 339, 2199, 315, 279, 2246, 11, 29820, 311, 279, 8244, 6070, 323, 34512, 2968, 315, 279, 25992, 8423, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecc670>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 13031, 344, 5983, 304, 8515, 6530, 61316, 3252, 5133, 25, 19620, 9473, 17517, 26868, 5343, 304, 279, 15813, 315, 27375, 400, 220, 22397, 400, 220, 16, 11, 23459, 400, 220, 1954, 26868, 28544, 505, 279, 15813, 315, 27375, 220, 2166, 320, 9367, 8, 220, 5833, 13031, 344, 5983, 304, 4272, 9341, 61316, 3252, 5133, 25, 19620, 9473, 17517, 26868, 5343, 304, 279, 15813, 315, 27375, 220, 23952, 220, 19944, 320, 17897, 8, 10884, 400, 220, 16, 11, 19944, 400, 220, 17, 11, 9079, 400, 320, 8190, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 2007, 29385, 4954, 20192, 323, 18151, 505, 43645, 304, 8515, 6530, 323, 4272, 9341, 61316, 3252, 12135, 369, 279, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 5825, 7718, 828, 369, 8830, 279, 27375, 315, 279, 2883, 753, 61316, 3252, 15174, 927, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecc700>, 'json_data': {'input': [[18902, 79483, 25, 61647, 459, 36218, 3827, 2361, 18065, 5370, 62129, 38864, 11, 2737, 16865, 315, 30139, 323, 20250, 3827, 70530, 11, 4666, 2968, 315, 3827, 7016, 11, 323, 29736, 315, 17516, 13, 1226, 15806, 36218, 3827, 10093, 48582, 11, 13126, 4442, 304, 13363, 323, 13463, 11, 1778, 439, 502, 14640, 477, 3293, 31752, 18463, 11, 439, 1664, 439, 279, 2704, 315, 25261, 7640, 555, 88004, 11527, 13, 10541, 584, 4510, 584, 617, 49672, 4694, 369, 1057, 36218, 3827, 10093, 11, 912, 44701, 649, 387, 2728, 430, 279, 1620, 3827, 15632, 315, 1521, 13146, 690, 539, 387, 2204, 13, 2057, 279, 13112, 430, 279, 1620, 3827, 15632, 315, 1521, 13146, 374, 2204, 1109, 279, 15055, 12715, 11, 1778, 12062, 690, 7958, 279, 17575, 369, 8070, 13426, 323, 279, 7524, 3827, 4478, 304, 279, 4261, 304, 902, 1778, 26314, 374, 1903, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 15100, 1268, 36218, 3827, 10093, 527, 12715, 323, 279, 62129, 9547, 6646, 304, 872, 16865, 13, 1115, 11621, 8149, 311, 279, 10430, 389, 3827, 24043, 323, 279, 4754, 25127, 369, 279, 2883, 596, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecc790>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 10321, 11, 323, 8617, 1587, 539, 3493, 904, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecc820>, 'json_data': {'input': [[18902, 79483, 25, 2758, 6055, 311, 279, 41458, 369, 6807, 18151, 527, 11684, 311, 20900, 13, 2758, 6055, 311, 279, 41458, 369, 6763, 20746, 527, 11684, 2403, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 24043, 6514, 369, 38314, 311, 279, 41458, 369, 6807, 18151, 323, 6763, 20746, 13, 1102, 374, 4461, 961, 315, 279, 6020, 13122, 3857, 315, 279, 2246, 11, 8405, 26793, 1139, 1268, 279, 2883, 29972, 1202, 18512, 323, 13254, 18324, 11, 902, 374, 3062, 369, 15167, 323, 39210, 42118, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecc8b0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5415, 330, 2149, 18992, 4953, 1210, 4461, 19392, 279, 2316, 477, 4342, 315, 279, 2246, 13, 1102, 10109, 988, 279, 2262, 439, 33152, 311, 63897, 4953, 2637, 279, 2748, 2883, 315, 5195, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecc940>, 'json_data': {'input': [[18902, 79483, 25, 20817, 389, 420, 16865, 11, 1057, 10388, 11145, 9640, 323, 10388, 6020, 9640, 20536, 430, 11, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1057, 28957, 11835, 323, 16346, 527, 6319, 520, 264, 13579, 44701, 2237, 323, 527, 7524, 311, 3493, 13579, 44701, 430, 2038, 584, 527, 2631, 311, 36333, 304, 6821, 430, 584, 1052, 477, 9502, 1234, 279, 19224, 3298, 374, 12715, 11, 15590, 11, 69729, 11, 323, 5068, 2949, 279, 892, 18852, 5300, 304, 279, 22370, 753, 5718, 323, 7739, 11, 323, 430, 1778, 2038, 374, 41165, 323, 59035, 311, 1057, 6373, 11, 2737, 1057, 10388, 11145, 9640, 323, 10388, 6020, 9640, 11, 439, 8475, 11, 311, 2187, 32100, 11429, 9002, 2631, 28957, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 17102, 315, 279, 12432, 323, 94852, 9002, 279, 27375, 315, 279, 2883, 596, 28957, 11835, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 8405, 264, 2237, 315, 44701, 311, 15167, 922, 279, 31638, 315, 279, 6020, 2038, 36489, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecc9d0>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 279, 14691, 6541, 505, 459, 27258, 311, 2930, 1917, 690, 3136, 311, 8935, 1057, 2626, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 35434, 279, 31293, 315, 264, 8738, 6541, 505, 27258, 311, 2930, 2626, 11, 902, 374, 16996, 369, 8830, 279, 2883, 596, 19092, 39825, 323, 3157, 34185, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecca60>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 311, 3493, 2317, 369, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60eccaf0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 10321, 11, 323, 8617, 1587, 539, 3493, 904, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60eccb80>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3857, 4342, 19392, 279, 7314, 315, 264, 502, 961, 315, 279, 2246, 11, 4461, 5552, 311, 279, 2007, 315, 8970, 477, 41295, 6070, 11, 719, 1587, 539, 6782, 904, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60eccc10>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1495, 12143, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60eccca0>, 'json_data': {'input': [[18902, 79483, 25, 3580, 330, 10464, 315, 11842, 12279, 84016, 19863, 29553, 8245, 1, 3770, 369, 3649, 23343, 311, 1057, 1005, 315, 6926, 11667, 2038, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 264, 3857, 25394, 279, 1005, 315, 2536, 12279, 84016, 6926, 11667, 2038, 11, 902, 11335, 264, 16996, 3560, 304, 8830, 279, 2883, 753, 6020, 5178, 555, 44878, 279, 6372, 315, 11667, 65649, 13, 1102, 15151, 430, 4726, 3649, 690, 1833, 304, 279, 2246, 11, 82003, 279, 12939, 315, 420, 2038, 369, 6020, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60eccd30>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 12920, 63179, 1057, 8515, 11, 8515, 86106, 11, 323, 3157, 481, 34919, 17303, 520, 6762, 907, 389, 264, 46350, 8197, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 12399, 2007, 430, 18911, 279, 8515, 11, 8515, 86106, 11, 323, 3157, 481, 34919, 17303, 520, 6762, 907, 13, 1102, 7437, 709, 279, 6742, 311, 1755, 11944, 35876, 828, 430, 46480, 279, 2883, 753, 6020, 2361, 304, 1521, 5789, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60eccdc0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecce50>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 279, 2262, 36716, 311, 63897, 4953, 2637, 8405, 264, 4342, 430, 36611, 279, 2883, 1694, 14407, 304, 279, 2246, 13, 1102, 10109, 988, 279, 2038, 304, 279, 2317, 315, 63897, 596, 8244, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60eccee0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 4384, 11, 19392, 264, 4754, 6002, 369, 4726, 7872, 477, 264, 7554, 6710, 315, 2038, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60eccf70>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 19392, 279, 1212, 315, 264, 502, 3857, 304, 279, 2246, 11, 4461, 5552, 311, 63897, 4953, 2637, 719, 1587, 539, 3493, 2262, 369, 66251, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecd000>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3663, 264, 1396, 315, 15266, 323, 8312, 8957, 15635, 430, 1436, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 264, 502, 3857, 10968, 389, 15266, 323, 8312, 8957, 15635, 11, 19392, 279, 4754, 52227, 430, 1436, 7958, 279, 2883, 596, 25605, 15374, 323, 6020, 20334, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecd090>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 868, 13, 8245, 922, 17652, 1392, 323, 66542, 56816, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3230, 5296, 320, 9290, 220, 868, 8, 2949, 279, 6020, 1934, 430, 35434, 279, 2038, 5552, 311, 63897, 4953, 3238, 82, 10565, 21282, 323, 46139, 5789, 11, 8405, 264, 31085, 315, 279, 2883, 596, 2626, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecd120>, 'json_data': {'input': [[18902, 79483, 25, 5843, 9469, 4289, 58654, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3857, 4342, 369, 279, 1317, 9860, 11897, 10430, 11, 19392, 430, 279, 2768, 2262, 690, 7872, 279, 2883, 596, 1317, 9860, 6020, 42356, 323, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecd1b0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1057, 9341, 3827, 6807, 6920, 2000, 4102, 369, 1614, 8070, 3827, 10096, 1051, 13489, 400, 16, 13, 15, 7239, 323, 690, 3240, 311, 33663, 304, 220, 2366, 24, 13, 1226, 1005, 279, 6530, 43847, 1749, 315, 24043, 369, 9341, 3827, 20746, 13, 1226, 4510, 420, 3827, 6807, 374, 539, 4461, 311, 387, 15393, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 9341, 3827, 6807, 6920, 2000, 4102, 369, 1614, 8070, 13426, 11, 2737, 872, 3685, 32792, 13, 1102, 22020, 279, 2883, 596, 5603, 311, 18646, 3827, 20746, 323, 279, 25127, 369, 3938, 6020, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecd240>, 'json_data': {'input': [[18902, 79483, 25, 29240, 304, 7318, 28849, 323, 51091, 527, 16625, 555, 264, 1396, 315, 958, 9920, 9547, 11, 2737, 4442, 304, 87386, 10374, 26, 14529, 2027, 323, 4947, 4442, 26, 323, 11, 439, 433, 36716, 311, 7318, 28849, 11, 65649, 304, 2778, 20126, 13239, 505, 4442, 304, 1217, 25375, 323, 10648, 11, 15871, 389, 6505, 7766, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 9547, 66700, 4442, 304, 7318, 28849, 323, 51091, 13, 1102, 5825, 62129, 2317, 311, 279, 47616, 828, 10666, 304, 279, 3766, 27855, 11, 26073, 279, 30295, 4920, 279, 5219, 11, 8617, 47594, 279, 6742, 596, 8830, 315, 3157, 7865, 323, 13172, 18845, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecd2d0>, 'json_data': {'input': [[18902, 79483, 25, 33620, 72837, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 59998, 72837, 1, 3857, 11, 19392, 264, 6541, 304, 5357, 311, 279, 2883, 596, 3827, 24043, 12659, 13, 1102, 21667, 279, 12939, 315, 3827, 38864, 304, 6020, 13122, 323, 279, 25127, 369, 279, 2883, 596, 8244, 6020, 2361, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecd360>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 2440, 369, 279, 330, 2620, 315, 36962, 1359, 19392, 279, 7471, 315, 279, 2246, 323, 279, 14491, 5343, 369, 10873, 10096, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecd3f0>, 'json_data': {'input': [[18902, 79483, 25, 7766, 11, 902, 15871, 2997, 6763, 315, 279, 28569, 3070, 315, 7766, 26, 323, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 16, 11, 420, 12143, 25985, 988, 389, 279, 13254, 8066, 505, 279, 6412, 315, 7766, 11, 11951, 45391, 279, 28569, 3070, 13, 1102, 44072, 311, 279, 8830, 315, 63897, 596, 17226, 13254, 23914, 11, 82003, 12035, 6763, 16662, 3241, 323, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecd480>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 6771, 315, 36962]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecd510>, 'json_data': {'input': [[18902, 79483, 25, 1322, 41115, 304, 1057, 38124, 9477, 323, 1234, 40838, 2383, 1436, 66087, 264, 64310, 430, 5708, 17075, 1253, 2980, 37849, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 13166, 35186, 323, 4754, 30740, 311, 33615, 1935, 9146, 13, 1102, 15151, 430, 279, 2883, 596, 38124, 323, 40838, 2383, 1253, 1893, 32116, 369, 5708, 17075, 889, 2643, 6062, 4799, 3738, 64310, 44599, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecd5a0>, 'json_data': {'input': [[18902, 79483, 25, 47064, 304, 99216, 20448, 323, 7720, 389, 279, 79980, 660, 31946, 61572, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 1405, 279, 3285, 685, 58165, 527, 12715, 304, 279, 6020, 12518, 11, 11951, 27401, 430, 814, 527, 5343, 304, 99216, 20448, 323, 7720, 13, 1102, 8779, 2723, 279, 6020, 828, 311, 1202, 15864, 304, 279, 8335, 11071, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecd630>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecd6c0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3566, 3914, 4669, 1057, 30693, 4398, 3997, 1057, 24608, 6880, 323, 3738, 4455, 584, 16136, 304, 477, 3552, 449, 3697, 315, 279, 9341, 4029, 13, 5751, 30693, 4398, 3997, 1101, 5825, 22736, 315, 3754, 477, 45976, 9002, 1057, 6020, 5178, 323, 1023, 3673, 430, 1253, 387, 3769, 477, 315, 2802, 311, 1057, 15167, 11, 2737, 22370, 68248, 11, 30693, 4455, 11, 3577, 323, 24608, 19786, 11, 323, 26743, 13, 1226, 1101, 4430, 5195, 3754, 323, 2027, 9013, 389, 5195, 596, 50070, 5117, 520, 3788, 1129, 2185, 31168, 5831, 35645, 902, 1253, 387, 315, 2802, 477, 3769, 311, 1057, 15167, 13, 15903, 11, 13166, 35186, 2038, 11, 2737, 1057, 16125, 315, 88465, 11, 555, 68637, 11, 35186, 17959, 11, 4580, 13093, 9676, 388, 11, 323, 2082, 315, 6929, 11, 374, 1101, 2561, 389, 1057, 30693, 4398, 3997, 1234, 279, 14836, 330, 78706, 685, 1210, 578, 2262, 315, 1057, 13335, 527, 539, 32762, 555, 5905, 1139, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 477, 304, 904, 1023, 1934, 477, 2246, 584, 1052, 449, 279, 22370, 11, 323, 904, 15407, 311, 1057, 13335, 527, 10825, 311, 387, 32899, 63633, 15407, 1193, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 50729, 279, 5370, 5070, 2561, 389, 279, 30693, 4398, 3997, 11, 2737, 24608, 6880, 11, 6020, 5178, 22736, 11, 323, 13166, 35186, 2038, 13, 1102, 66159, 279, 2883, 596, 15507, 311, 28330, 323, 10758, 449, 1202, 15167, 323, 39210, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecd750>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecd7e0>, 'json_data': {'input': [[18902, 79483, 25, 578, 11380, 3430, 369, 1057, 3308, 362, 5708, 323, 2536, 8437, 11780, 3308, 356, 5708, 1253, 3136, 311, 387, 17509, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 29735, 311, 279, 53838, 315, 5708, 7729, 11, 19392, 430, 15167, 1288, 387, 8010, 315, 39388, 54643, 3157, 4787, 430, 1436, 5536, 5708, 51262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecd870>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecd900>, 'json_data': {'input': [[18902, 79483, 25, 320, 13655, 8, 220, 14022, 12, 931, 15, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11105, 279, 21186, 1396, 315, 63897, 4953, 2637, 902, 374, 3984, 304, 279, 62469, 3857, 315, 279, 3459, 220, 605, 16222, 13, 1115, 2038, 374, 9959, 369, 39210, 477, 15167, 889, 1253, 1205, 311, 3729, 279, 2883, 6089, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecd990>, 'json_data': {'input': [[18902, 79483, 25, 220, 1954, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4461, 264, 6002, 477, 11381, 2949, 279, 2246, 11, 11000, 19392, 264, 2199, 1396, 477, 3857, 1464, 11, 323, 1587, 539, 6782, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecda20>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1101, 1440, 9873, 315, 682, 12562, 2212, 279, 1917, 17631, 389, 5195, 43283, 311, 1505, 6444, 323, 3139, 872, 9873, 2001, 323, 584, 1304, 430, 1524, 8831, 449, 15592, 13, 3161, 21304, 7639, 11, 50270, 5042, 3371, 603, 872, 4901, 9021, 323, 4430, 872, 11782, 12032, 11, 323, 15592, 690, 9651, 8356, 323, 1629, 264, 7701, 7524, 1008, 4901, 4028, 682, 315, 5195, 753, 6012, 11, 311, 3449, 872, 8199, 13, 5761, 19074, 12716, 279, 7720, 315, 15592, 311, 9873, 315, 682, 12562, 11, 10695, 1124, 6847, 1893, 42329, 2442, 607, 3093, 41545, 16850, 872, 3956, 2001, 369, 1949, 13, 23212, 11, 584, 527, 60257, 449, 7694, 323, 30064, 14058, 430, 527, 6089, 18751, 1139, 279, 15592, 41503, 16694, 323, 7669, 1697, 3941, 304, 7694, 2672, 1413, 21460, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 3560, 315, 15592, 304, 74142, 5195, 43283, 369, 9873, 13, 1102, 16964, 1268, 15592, 7526, 1093, 21304, 7639, 323, 5761, 19074, 40821, 13172, 11618, 11, 21583, 433, 311, 279, 8244, 7057, 315, 77582, 5557, 369, 2626, 6650, 323, 47594, 1217, 11704, 2949, 279, 13172, 10706, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecdab0>, 'json_data': {'input': [[18902, 79483, 25, 15055, 7318, 311, 1057, 8141, 8717, 889, 1304, 2561, 1057, 2778, 2680, 3585, 323, 3600, 13, 5751, 8141, 8717, 2997, 7074, 12850, 11, 6505, 35991, 11, 4113, 7241, 17032, 11, 323, 3241, 13707, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 832, 315, 279, 6956, 315, 350, 1741, 11, 45293, 14507, 1903, 311, 8141, 8717, 13, 1102, 20064, 9803, 279, 4595, 315, 8717, 6532, 11, 902, 374, 5199, 369, 8830, 279, 26031, 315, 5195, 596, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecdb40>, 'json_data': {'input': [[18902, 79483, 25, 220, 24, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 3857, 11381, 304, 279, 2246, 11, 4461, 369, 41295, 10096, 323, 1587, 539, 6782, 67749, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecdbd0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1644, 627, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 439, 912, 1495, 374, 3984, 369, 46613, 220, 1032, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecdc60>, 'json_data': {'input': [[18902, 79483, 25, 5751, 7677, 323, 6020, 3135, 527, 3917, 311, 5370, 15635, 323, 69867, 11, 2737, 719, 539, 7347, 311, 1884, 7633, 3770, 11, 902, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 11, 323, 7958, 279, 11380, 3430, 315, 1057, 3308, 362, 323, 3308, 356, 5708, 627, 2014, 940, 1534, 73094, 25, 1115, 1495, 94594, 279, 7138, 315, 15635, 430, 63897, 4953, 13, 35006, 11, 19392, 430, 1521, 15635, 1436, 69214, 7958, 279, 2883, 596, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 5708, 5178, 13, 1102, 17482, 439, 264, 71261, 311, 264, 810, 11944, 24481, 315, 3230, 5326, 9547, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecdcf0>, 'json_data': {'input': [[18902, 79483, 25, 220, 18, 627, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecdd80>, 'json_data': {'input': [[18902, 79483, 25, 220, 868, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 9959, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecde10>, 'json_data': {'input': [[18902, 79483, 25, 4689, 7100, 4787, 323, 5370, 9434, 30295, 11, 2737, 87998, 4455, 11, 14640, 11, 323, 1023, 11193, 323, 872, 2515, 389, 87386, 11, 11761, 11, 323, 20790, 10374, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 10383, 315, 330, 25615, 7100, 4787, 1, 323, 9434, 9547, 389, 13254, 65649, 13, 1102, 72890, 279, 83416, 2136, 315, 63897, 596, 5178, 449, 27927, 7100, 323, 87998, 26006, 11, 6376, 279, 6566, 369, 279, 10430, 315, 9434, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecdea0>, 'json_data': {'input': [[18902, 79483, 25, 77595, 5742, 7817, 220, 4645, 1087, 793, 353, 55335, 75760, 4833, 15545, 17404, 27571, 51968, 6074, 3231, 12051, 220, 6849, 18230, 5874, 42966, 2956, 2958, 320, 70964, 2949, 279, 55335, 75760, 4833, 2246, 323, 13282, 304, 77595, 220, 4645, 8, 67795, 555, 5905, 36881, 3459, 2696, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 31324, 1160, 323, 3649, 3230, 9477, 5552, 311, 279, 2883, 596, 6020, 13122, 11, 2737, 75760, 4833, 72906, 20300, 11, 902, 527, 5199, 369, 7528, 6020, 13122, 323, 8907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:54:59 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-11-30 23:54:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecdf30>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 6771, 315, 36962, 11, 13788, 439, 264, 34512, 1697, 5507, 369, 13016, 311, 25539, 3230, 14491, 315, 279, 2246, 11, 47594, 92594, 323, 40800, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:00 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-11-30 23:55:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ece9e0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 11, 63897, 4953, 2637, 323, 17482, 439, 264, 4342, 369, 279, 2246, 11, 19392, 430, 279, 2768, 2262, 374, 5552, 311, 420, 3230, 5502, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecf400>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 5905, 1396, 304, 279, 2246, 323, 1587, 539, 6782, 67749, 2262, 13, 1102, 4461, 15151, 264, 87910, 477, 42271, 315, 264, 5552, 3857, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecf490>, 'json_data': {'input': [[18902, 79483, 25, 12850, 315, 28614, 10758, 323, 31357, 3956, 26, 323, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 17, 11, 420, 12143, 36611, 2500, 43940, 304, 279, 2626, 4676, 2345, 48387, 315, 28614, 10758, 323, 31357, 3956, 13, 1102, 72890, 279, 17226, 2134, 315, 10937, 5195, 12580, 304, 5370, 26593, 11, 74055, 1202, 3157, 4430, 323, 1217, 20392, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecdfc0>, 'json_data': {'input': [[18902, 79483, 25, 40741, 16195, 549, 815, 13, 1614, 323, 7362, 12625, 7016, 11, 902, 3041, 502, 828, 12625, 3268, 311, 872, 20081, 11062, 320, 16564, 11, 304, 7188, 11, 264, 879, 1314, 315, 1957, 304, 279, 1567, 315, 264, 828, 31471, 13239, 505, 1057, 8060, 311, 4305, 323, 10519, 13579, 4868, 16346, 323, 12659, 8, 323, 33330, 5199, 30255, 389, 27319, 323, 37686, 315, 11761, 828, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 549, 815, 13, 1614, 323, 7362, 12625, 7016, 430, 13500, 502, 3268, 311, 11062, 11, 8104, 21760, 389, 7188, 596, 2383, 430, 6276, 879, 6299, 304, 828, 31471, 5157, 13, 1102, 22020, 279, 5199, 30255, 27070, 389, 9873, 11, 21583, 1203, 311, 279, 27927, 7057, 315, 23331, 8907, 323, 1202, 5536, 389, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecf520>, 'json_data': {'input': [[18902, 79483, 25, 1023, 3956, 323, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 34945, 1023, 3956, 323, 3600, 430, 17210, 311, 279, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 11, 23377, 430, 279, 13254, 6070, 374, 17226, 323, 5764, 5370, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecf5b0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3932, 527, 32888, 1057, 3956, 323, 3600, 4669, 17226, 7766, 323, 13531, 1385, 11, 1778, 439, 36122, 11, 10051, 4893, 11, 8599, 60866, 11, 323, 7941, 2162, 7766, 11, 323, 1390, 311, 387, 3025, 311, 387, 8599, 912, 5030, 1405, 814, 527, 477, 1148, 814, 527, 3815, 13, 1226, 527, 10968, 389, 24050, 1057, 3956, 323, 3600, 311, 4822, 304, 4156, 315, 1521, 18845, 304, 2015, 311, 10519, 323, 3139, 1057, 2626, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 4726, 16964, 279, 12939, 315, 70817, 311, 10223, 1217, 28198, 323, 19882, 4028, 5370, 7766, 11, 82003, 63897, 596, 15507, 311, 42028, 1202, 2027, 33935, 311, 14201, 323, 9407, 1202, 3157, 9546, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecf640>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 1057, 8515, 28555, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 18911, 63897, 4953, 14639, 82, 8515, 28555, 11, 902, 374, 26154, 369, 8830, 279, 2883, 596, 6020, 5178, 927, 279, 5300, 18852, 13, 1102, 7437, 279, 6566, 369, 264, 810, 11944, 31085, 315, 8515, 6530, 7640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecf6d0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecf760>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 34692, 311, 279, 1828, 3230, 31293, 5552, 311, 5178, 17150, 11, 20958, 279, 5357, 389, 6020, 13878, 315, 279, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecf7f0>, 'json_data': {'input': [[18902, 79483, 25, 4476, 11050, 64141, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 502, 3857, 21760, 389, 4476, 11050, 64141, 11, 23377, 264, 6541, 304, 10430, 7119, 279, 18512, 5938, 449, 3241, 4500, 11, 902, 374, 12742, 505, 279, 8767, 14407, 7194, 315, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecf880>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 23139, 14507, 369, 10565, 73657, 400, 220, 17, 11, 22418, 400, 220, 17, 11, 23024, 400, 220, 18, 11, 11908, 1561, 10565, 26120, 12032, 12457, 304, 9473, 369, 10565, 26120, 58165, 400, 220, 17, 11, 24989, 400, 220, 19, 11, 19230, 400, 220, 17, 11, 23873, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 18911, 11944, 6020, 828, 5552, 311, 8515, 14507, 1903, 369, 10565, 73657, 323, 502, 73657, 27528, 11, 44087, 1113, 279, 2883, 596, 8515, 6530, 5552, 311, 71419, 7640, 927, 279, 1667, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecf910>, 'json_data': {'input': [[18902, 79483, 25, 578, 8191, 374, 832, 315, 279, 1917, 753, 1455, 8147, 6273, 12509, 26, 433, 2047, 2053, 6848, 11, 1274, 11, 323, 9873, 3544, 323, 2678, 13, 5751, 9131, 311, 31335, 279, 1917, 753, 2038, 323, 1304, 433, 61528, 15987, 323, 5505, 374, 439, 9959, 3432, 439, 433, 574, 994, 584, 1051, 18538, 304, 220, 2550, 23, 13, 8876, 1243, 11, 584, 617, 28995, 505, 264, 2883, 430, 8779, 1274, 1505, 11503, 311, 264, 2883, 430, 1101, 8779, 1274, 636, 2574, 2884, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 312, 2058, 988, 63897, 596, 6332, 9131, 311, 31335, 2038, 323, 18885, 40800, 13, 1102, 66251, 4861, 279, 2883, 596, 15740, 323, 15507, 311, 18899, 1217, 11704, 555, 8405, 7526, 430, 28696, 6677, 323, 26206, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecf9a0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 30466, 555, 955, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 2007, 430, 94594, 279, 30466, 8066, 555, 2204, 21282, 315, 63897, 4953, 13, 369, 279, 20323, 1667, 220, 2366, 17, 323, 220, 2366, 18, 11, 8405, 264, 55394, 6020, 24131, 5995, 369, 47614, 13254, 6650, 323, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecfa30>, 'json_data': {'input': [[18902, 79483, 25, 58654, 34919, 527, 17303, 520, 6762, 907, 323, 21771, 2949, 9580, 220, 17, 304, 279, 6762, 907, 30022, 11, 1606, 584, 1005, 24116, 3157, 7729, 311, 279, 13112, 2561, 477, 10778, 21913, 8336, 323, 4211, 35988, 3157, 40635, 11374, 311, 8417, 6762, 907, 13, 1789, 3738, 3157, 481, 11897, 34919, 11, 584, 617, 16689, 279, 6762, 907, 3072, 369, 902, 4442, 304, 6762, 907, 527, 12715, 304, 507, 40, 69248, 13, 578, 6762, 907, 3072, 574, 16689, 369, 1521, 34919, 311, 5398, 449, 279, 50204, 1534, 20192, 323, 18151, 505, 5552, 32905, 17517, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3649, 389, 1268, 11897, 34919, 527, 17303, 323, 21771, 304, 279, 6762, 907, 30022, 11, 2737, 279, 1005, 315, 40635, 3157, 7729, 323, 10778, 21913, 8336, 13, 1115, 2038, 374, 3062, 369, 8830, 279, 23965, 323, 38152, 4920, 279, 2883, 753, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecfac0>, 'json_data': {'input': [[18902, 79483, 25, 611, 50, 14, 328, 13508, 946, 393, 33929, 15836, 198, 2014, 940, 1534, 73094, 25, 611, 50, 14, 328, 13508, 946, 393, 33929, 15836]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecfb50>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 19, 11, 420, 374, 264, 4342, 477, 2316, 19392, 279, 2883, 836, 13, 1102, 17482, 439, 961, 315, 279, 2246, 596, 37666, 2085, 12190, 2262, 315, 1202, 1866, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecfbe0>, 'json_data': {'input': [[18902, 79483, 25, 8825, 323, 20849, 11, 9558, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 18815, 3424, 323, 7241, 11, 19392, 430, 279, 2768, 2038, 690, 7872, 279, 2883, 753, 8521, 9513, 22538, 11, 902, 527, 1401, 311, 8830, 1202, 6864, 53869, 323, 9513, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecfc70>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3810, 1139, 7491, 4272, 1303, 28904, 323, 52508, 4868, 28904, 311, 8108, 6807, 5326, 13, 23139, 52508, 4036, 5552, 311, 32905, 24198, 1234, 1057, 52508, 4868, 28904, 527, 5343, 304, 1023, 1510, 12032, 449, 264, 12435, 24305, 13, 23139, 323, 2536, 1824, 1003, 52508, 43347, 5552, 311, 32905, 24198, 1234, 1057, 52508, 4868, 28904, 527, 5343, 304, 1023, 1510, 12032, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 6020, 5326, 6373, 15174, 20011, 555, 279, 2883, 11, 11951, 9002, 32905, 24198, 13, 1102, 16964, 279, 1005, 315, 7491, 4272, 1303, 28904, 323, 52508, 4868, 28904, 311, 8108, 6807, 5326, 11, 8405, 20616, 1139, 279, 2883, 596, 5603, 311, 6020, 5326, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecfd00>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 264, 1396, 315, 12625, 14228, 7016, 323, 14640, 11, 323, 584, 5131, 527, 4717, 311, 264, 1396, 315, 12625, 26969, 323, 43986, 14529, 304, 5361, 56043, 13, 1789, 3187, 11, 1070, 527, 14529, 26969, 323, 39725, 304, 279, 549, 815, 13, 323, 279, 10013, 11, 2737, 1884, 23343, 311, 1057, 4526, 323, 1005, 315, 3813, 2038, 323, 13172, 12659, 11, 902, 1436, 1121, 304, 5199, 35018, 11, 59358, 11, 323, 2027, 4442, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 14529, 12625, 14228, 26969, 323, 43986, 430, 63897, 374, 6532, 304, 11, 8104, 21760, 389, 872, 4526, 323, 1005, 315, 828, 13, 1102, 22020, 279, 4754, 16296, 1521, 26969, 1253, 617, 389, 279, 2883, 596, 7677, 11, 59049, 279, 27927, 2317, 315, 8907, 323, 5897, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecfd90>, 'json_data': {'input': [[18902, 79483, 25, 1226, 75224, 7362, 11667, 4741, 17517, 439, 4272, 9341, 305, 17327, 311, 42766, 279, 7362, 11667, 15635, 5552, 311, 1057, 9341, 304, 7362, 72202, 13, 9558, 9341, 42766, 15055, 5343, 304, 279, 15813, 315, 42766, 27375, 527, 15324, 304, 362, 65083, 3235, 449, 279, 7362, 11667, 14807, 28174, 13, 1226, 22429, 4741, 3585, 505, 279, 15813, 315, 42766, 27375, 323, 15641, 4442, 304, 279, 28544, 3777, 304, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 43851, 315, 7362, 11667, 4741, 17517, 439, 4272, 9341, 305, 17327, 323, 1268, 1521, 15055, 527, 41853, 369, 13, 1102, 34161, 279, 61316, 3252, 15174, 311, 279, 27927, 5699, 315, 7362, 22538, 11, 79774, 1268, 63897, 4953, 13, 29972, 15635, 304, 1202, 6625, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecfe20>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecf370>, 'json_data': {'input': [[18902, 79483, 25, 578, 7340, 14675, 315, 1521, 653, 6387, 5303, 660, 650, 5484, 82, 374, 8965, 3196, 389, 279, 1510, 15691, 907, 315, 279, 22538, 323, 904, 3938, 11006, 42356, 13, 578, 7340, 14675, 323, 15691, 907, 315, 1521, 653, 6387, 5303, 660, 650, 5484, 82, 1051, 400, 17, 13, 23, 7239, 323, 400, 17, 13, 22, 7239, 11, 15947, 11, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 400, 20, 13, 22, 7239, 323, 400, 19, 13, 15, 7239, 11, 15947, 11, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 578, 6811, 1990, 279, 7340, 14675, 323, 279, 15691, 907, 36716, 15871, 311, 3938, 11006, 42356, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 47616, 828, 389, 279, 7340, 14675, 323, 15691, 907, 315, 653, 6387, 5303, 660, 650, 5484, 82, 11, 39686, 279, 6020, 15507, 279, 2883, 706, 1903, 311, 1521, 15086, 13, 1102, 17482, 311, 41468, 279, 4754, 6020, 15635, 323, 22538, 5938, 449, 1521, 40705, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecf2e0>, 'json_data': {'input': [[18902, 79483, 25, 578, 48746, 323, 60270, 10554, 706, 38189, 12014, 369, 15635, 323, 24455, 23343, 311, 62542, 18208, 11, 2737, 8907, 449, 28957, 8670, 11, 23915, 449, 2383, 13627, 11, 323, 5552, 6372, 389, 6020, 323, 1023, 15635, 11, 323, 433, 6821, 904, 14955, 323, 19075, 11, 439, 8475, 11, 311, 279, 2539, 8925, 369, 18361, 13, 19903, 6373, 15870, 35434, 21516, 15635, 323, 18845, 323, 11, 1288, 814, 31889, 11, 904, 3769, 24455, 449, 279, 48746, 323, 60270, 10554, 13, 15774, 48746, 33095, 264, 12514, 62542, 93596, 2128, 430, 29235, 7177, 1057, 62542, 11835, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 38189, 28423, 315, 279, 48746, 323, 60270, 10554, 9002, 62542, 18208, 13, 1102, 66159, 279, 12939, 315, 35186, 323, 5912, 10758, 1990, 10195, 6373, 323, 279, 4580, 11, 27210, 449, 279, 27927, 7057, 315, 5326, 6373, 6957, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecf250>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 2316, 19392, 279, 9546, 315, 264, 2007, 315, 8970, 2949, 279, 2246, 13, 1102, 17482, 439, 264, 34512, 1697, 12576, 369, 279, 6742, 719, 1587, 539, 6782, 904, 2262, 9959, 311, 279, 6020, 828, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecf1c0>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 806, 13, 12937, 17075, 6, 58588, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 7181, 220, 806, 11, 902, 24400, 389, 12937, 17075, 6, 58588, 13, 1102, 17738, 264, 9320, 311, 25394, 25452, 14228, 13146, 11, 2737, 5708, 96771, 323, 3268, 315, 41777, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecf130>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 13, 71046, 5257, 74006, 59351, 9182, 25338, 27267, 6340, 23233, 29863, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 72214, 279, 3857, 315, 279, 2246, 430, 5764, 279, 8554, 311, 279, 60391, 6020, 12518, 13, 1115, 3857, 5825, 7718, 20064, 7174, 11, 10396, 11, 323, 5217, 3649, 430, 1862, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecf0a0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 15161, 5764, 14054, 323, 5452, 3600, 11, 20632, 7526, 11, 323, 1023, 3600, 369, 20790, 6444, 13, 5195, 15161, 27983, 30466, 15871, 505, 15652, 6108, 12718, 323, 41455, 4036, 369, 5195, 15161, 17916, 3600, 11, 5195, 72034, 10758, 323, 20632, 7526, 11, 323, 1023, 20790, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 5195, 15161, 10449, 11, 45293, 279, 3600, 9076, 323, 279, 13254, 9659, 1646, 11, 39686, 1202, 3560, 304, 279, 2883, 596, 8244, 2626, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecf010>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 6771, 315, 36962, 315, 279, 2246, 11, 902, 17482, 439, 264, 34512, 1697, 5507, 311, 1520, 13016, 25539, 3230, 14491, 323, 13650, 2949, 279, 27927, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecef80>, 'json_data': {'input': [[18902, 79483, 25, 1226, 15870, 8720, 279, 29736, 315, 31959, 20124, 13239, 505, 1521, 69570, 311, 8417, 279, 41228, 2826, 315, 1057, 17575, 369, 8070, 13426, 13, 1226, 3136, 311, 8891, 279, 5208, 315, 14529, 20954, 449, 3827, 11527, 323, 279, 2515, 11, 422, 904, 11, 315, 279, 3685, 32792, 315, 279, 35786, 315, 9669, 304, 5370, 88004, 56043, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 2883, 753, 15813, 1920, 9002, 279, 29736, 315, 31959, 20124, 505, 3827, 69570, 11, 19392, 264, 59314, 5603, 311, 18646, 3827, 15635, 323, 19705, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60eceef0>, 'json_data': {'input': [[18902, 79483, 25, 578, 3827, 1667, 220, 679, 21, 1555, 220, 2366, 17, 7293, 3917, 311, 24481, 555, 279, 8475, 52811, 13607, 369, 18088, 3827, 10096, 13, 2684, 527, 1023, 14529, 75620, 304, 5370, 1023, 56043, 430, 527, 539, 3769, 311, 1057, 6020, 12518, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 14529, 75620, 304, 5370, 56043, 11, 82003, 279, 2883, 596, 3827, 8907, 11774, 323, 279, 4754, 6020, 25127, 315, 1521, 75620, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecee60>, 'json_data': {'input': [[18902, 79483, 25, 6104, 584, 617, 1027, 54952, 15592, 1139, 1057, 3956, 369, 1667, 11, 584, 527, 1457, 40188, 279, 2410, 315, 1803, 1413, 15592, 311, 3136, 10695, 1057, 3932, 3237, 5694, 323, 636, 2574, 2884, 13, 1789, 3187, 11, 423, 14127, 15592, 304, 5195, 72034, 8779, 3932, 3350, 11, 31335, 11, 51187, 11, 43880, 88568, 11, 323, 617, 59774, 16659, 13, 64304, 6276, 3932, 311, 51696, 449, 22772, 15592, 449, 502, 4519, 430, 2997, 2217, 17357, 11, 11058, 1862, 11, 323, 917, 18052, 13, 18308, 14275, 11, 264, 502, 22772, 4668, 304, 13674, 11, 6276, 369, 279, 9886, 315, 15592, 16581, 2835, 477, 2217, 36576, 311, 91782, 555, 20061, 459, 4623, 1139, 264, 10137, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 3230, 10507, 315, 1268, 63897, 4953, 13, 374, 40188, 1803, 1413, 15592, 1139, 1202, 3956, 311, 18885, 1217, 16628, 323, 26206, 13, 1102, 34945, 3230, 7526, 1093, 423, 14127, 15592, 304, 5195, 72034, 323, 22772, 4519, 304, 13674, 11, 39825, 433, 2949, 279, 27927, 19775, 315, 18699, 2027, 4500, 323, 1217, 20392, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecedd0>, 'json_data': {'input': [[18902, 79483, 25, 77595, 5742, 7817, 220, 19, 13, 2589, 24078, 42427, 2538, 23314, 11, 30105, 6664, 220, 17, 11, 220, 679, 20, 11, 1990, 279, 75659, 519, 323, 16645, 469, 13, 52165, 323, 3738, 315, 1202, 32133, 220, 19, 13, 2318, 3308, 356, 99773, 1802, 11, 30105, 6664, 220, 17, 11, 220, 679, 20, 11, 16070, 555, 279, 75659, 519, 220, 19, 13, 2545, 2314, 306, 554, 11, 30105, 7552, 220, 717, 11, 220, 679, 21, 11, 1990, 279, 75659, 519, 323, 578, 8715, 315, 1561, 4356, 88487, 17236, 8351, 11, 452, 885, 2637, 439, 17236, 2176, 220, 19, 13, 605, 75659, 519, 25532, 10734, 23314, 30105, 6790, 220, 975, 11, 220, 679, 20, 220, 19, 13, 806, 5629, 43491, 278, 2314, 306, 554, 11, 30105, 5936, 220, 1544, 11, 220, 679, 21, 11, 1990, 279, 75659, 519, 323, 578, 8715, 315, 1561, 4356, 88487, 17236, 8351, 11, 452, 885, 2637, 439, 76866, 220, 19, 13, 717, 3459, 315, 279, 75659, 519, 753, 220, 18, 13, 12935, 4, 18559, 4245, 220, 2366, 19, 320, 83722, 304, 77595, 220, 19, 13, 806, 8, 220, 19, 13, 1032, 3459, 315, 279, 75659, 519, 753, 220, 16, 13, 19416, 4, 7181, 4245, 220, 2366, 21, 220, 19, 13, 975, 3459, 315, 8121, 7181, 14393, 279, 75659, 519, 753, 220, 15, 13, 10617, 4, 8554, 4245, 220, 2366, 20, 220, 19, 13, 868, 3459, 315, 8121, 7181, 14393, 279, 75659, 519, 753, 220, 15, 13, 4728, 4, 8554, 4245, 220, 2366, 22, 220, 19, 13, 845, 3459, 315, 8121, 7181, 14393, 279, 75659, 519, 753, 220, 16, 13, 1041, 4, 8554, 4245, 220, 9639, 15, 220, 19, 13, 1114, 3459, 315, 8121, 7181, 14393, 279, 75659, 519, 753, 220, 16, 13, 7467, 4, 8554, 4245, 220, 7854, 15, 220, 19, 13, 972, 3459, 315, 8121, 7181, 14393, 279, 75659, 519, 753, 220, 17, 13, 16193, 4, 8554, 4245, 220, 10866, 15, 220, 19, 13, 777, 3459, 315, 8121, 7181, 14393, 279, 75659, 519, 753, 220, 17, 13, 5154, 4, 8554, 4245, 220, 11056, 15, 220, 19, 13, 508, 7817, 315, 75659, 519, 753, 46272, 220, 605, 13, 1721, 577, 3459, 315, 2314, 336, 77, 2461, 23314, 10862, 1139, 1990, 279, 75659, 519, 11, 1202, 32133, 323, 1202, 28454, 323, 9808, 220, 605, 13, 2437, 577, 353, 3459, 315, 25510, 27757, 369, 46085, 220, 605, 13, 2839, 577, 25510, 27757, 11, 30105, 5587, 220, 508, 11, 220, 679, 20, 11, 1990, 42893, 20388, 266, 323, 5195, 4953, 2637, 439, 19655, 555, 279, 75659, 519, 389, 6664, 220, 17, 11, 220, 679, 20, 220, 605, 13, 2371, 577, 70396, 9878, 23314, 11, 30105, 6664, 220, 17, 11, 220, 679, 20, 11, 1990, 5195, 4953, 13, 323, 279, 75659, 519, 220, 605, 13, 2304, 577, 10783, 18925, 526, 3808, 23314, 11, 30105, 6664, 220, 17, 11, 220, 679, 20, 11, 1990, 5195, 4953, 13, 323, 279, 75659, 519, 220, 605, 13, 2705, 577, 63897, 4953, 13, 76615, 70396, 9878, 220, 605, 13, 2589, 577, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 679, 17, 12937, 9878, 220, 605, 13, 2589, 13, 16, 577, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 679, 17, 12937, 9878, 482, 3459, 315, 63897, 94960, 12937, 8113, 23314, 220, 605, 13, 2589, 13, 17, 577, 63897, 4953, 13, 220, 679, 17, 12937, 9878, 482, 3459, 315, 63897, 94960, 12937, 8113, 23314, 67795, 555, 5905, 36881, 3459, 2696, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 17, 11, 220, 679, 20, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 17, 11, 220, 679, 20, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 25532, 22504, 389, 7552, 220, 717, 11, 220, 679, 21, 3459, 328, 12, 18, 320, 1738, 2360, 13, 220, 8765, 12, 12652, 15633, 8, 25532, 22504, 389, 7552, 220, 717, 11, 220, 679, 21, 3459, 328, 12, 18, 320, 1738, 2360, 13, 220, 8765, 12, 12652, 21312, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 5936, 220, 1544, 11, 220, 679, 21, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6287, 220, 24, 11, 220, 679, 21, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6287, 220, 20, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6287, 220, 20, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6287, 220, 20, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6287, 220, 20, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6287, 220, 20, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6287, 220, 20, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 25992, 8423, 389, 3459, 220, 605, 16222, 7552, 220, 18, 11, 220, 2366, 18, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 17, 11, 220, 679, 20, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 5587, 220, 1627, 11, 220, 679, 20, 320, 1738, 2360, 13, 220, 4119, 12, 18199, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 17, 11, 220, 679, 20, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 17, 11, 220, 679, 20, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 17, 11, 220, 679, 20, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 9303, 8423, 389, 3459, 220, 23, 16222, 5651, 220, 20, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 25992, 8423, 389, 3459, 220, 605, 16222, 7552, 220, 19, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 75483, 8423, 389, 3459, 220, 605, 12, 6841, 220, 18, 11, 1229, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 220, 679, 21, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 1160, 315, 50829, 11, 45293, 5217, 8481, 20020, 20038, 11, 17962, 1439, 11, 323, 5708, 35537, 11, 902, 527, 3062, 369, 8830, 279, 2883, 596, 6020, 24198, 323, 63342, 20038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60eced40>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 30466, 7319, 400, 21, 13, 23, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 13, 34871, 574, 15871, 16625, 555, 5195, 15161, 17916, 8272, 555, 5195, 72034, 33935, 13, 5195, 15161, 596, 14054, 323, 5452, 3600, 1051, 279, 7928, 12050, 315, 6650, 304, 5195, 15161, 17916, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 6020, 6650, 315, 5195, 15161, 30466, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 17780, 10831, 279, 5376, 311, 3230, 3600, 13, 1102, 22020, 279, 12939, 315, 9624, 33935, 304, 63897, 596, 8446, 11, 82003, 872, 3560, 304, 10043, 13254, 6650, 304, 264, 15022, 3157, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ececb0>, 'json_data': {'input': [[18902, 79483, 25, 34711, 17476, 25, 8779, 6444, 11388, 11, 6144, 11, 323, 6013, 311, 264, 7353, 2134, 315, 62542, 18208, 11, 449, 15592, 18751, 311, 4726, 20259, 4868, 20124, 11, 63652, 902, 18208, 311, 19874, 11, 323, 10765, 3440, 13006, 11, 439, 1664, 439, 43880, 11175, 315, 62542, 18208, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 2500, 23099, 315, 5195, 15161, 11, 21760, 389, 62542, 10105, 13, 1102, 22020, 279, 18052, 315, 15592, 304, 47594, 4868, 11193, 11, 67908, 5195, 15161, 596, 15507, 311, 22973, 6130, 828, 2403, 18208, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecec20>, 'json_data': {'input': [[18902, 79483, 25, 220, 2983, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 477, 1963, 11381, 13, 1102, 374, 539, 6089, 9959, 311, 279, 2262, 719, 17482, 439, 961, 315, 279, 2246, 596, 7471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60eceb90>, 'json_data': {'input': [[18902, 79483, 25, 22395, 63897, 4953, 2637, 279, 328, 43945, 220, 2636, 8167, 11, 279, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 279, 12593, 690, 387, 1903, 4315, 63897, 4953, 13, 323, 279, 5300, 3157, 15285, 320, 50, 43945, 220, 2636, 11, 16473, 63981, 41739, 11, 323, 39092, 38, 8191, 41739, 570, 1115, 2317, 374, 9959, 369, 15167, 3411, 311, 31990, 63897, 596, 5708, 5178, 8844, 311, 27927, 3157, 18845, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60eceb00>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 16, 34, 13, 30669, 9745, 26629, 38331, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 62542, 3857, 315, 279, 2246, 11, 19392, 264, 5357, 389, 5326, 6373, 5552, 311, 62542, 18208, 13, 1102, 7437, 279, 6566, 369, 264, 11944, 10430, 315, 1268, 63897, 14564, 1521, 15635, 439, 961, 315, 1202, 8244, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecea70>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 11, 63897, 4953, 2637, 323, 17482, 439, 264, 4342, 369, 279, 2246, 11, 19392, 430, 279, 2768, 2262, 374, 5552, 311, 420, 3230, 5502, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ece950>, 'json_data': {'input': [[18902, 79483, 25, 17331, 1057, 5195, 15161, 17916, 323, 5195, 72034, 33935, 11, 5195, 15161, 27983, 30466, 15871, 505, 15652, 6108, 12718, 323, 41455, 369, 14054, 11, 5452, 11, 20632, 7526, 323, 1023, 9624, 3600, 13, 40689, 1005, 4330, 1401, 17357, 505, 5195, 15161, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 1268, 5195, 15161, 27983, 1202, 30466, 11, 45293, 279, 4595, 315, 12718, 323, 41455, 6532, 13, 1102, 17482, 439, 459, 17219, 311, 279, 17357, 9076, 555, 5195, 15161, 11, 35744, 279, 95844, 369, 4726, 25985, 367, 304, 17876, 27855, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ece8c0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 6771, 315, 36962, 11, 13788, 439, 264, 34512, 1697, 5507, 369, 13016, 311, 25539, 3230, 14491, 315, 279, 2246, 11, 47594, 92594, 323, 40800, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ece830>, 'json_data': {'input': [[18902, 79483, 25, 5751, 7677, 323, 6020, 3135, 527, 3917, 311, 5370, 15635, 323, 69867, 11, 2737, 719, 539, 7347, 311, 1884, 7633, 3770, 11, 902, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 11, 323, 7958, 279, 11380, 3430, 315, 1057, 3308, 362, 323, 3308, 356, 5708, 627, 2014, 940, 1534, 73094, 25, 1115, 1495, 94594, 279, 7138, 315, 15635, 430, 63897, 4953, 13, 35006, 11, 19392, 430, 1521, 15635, 1436, 69214, 7958, 279, 2883, 596, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 5708, 5178, 13, 1102, 17482, 439, 264, 71261, 311, 264, 810, 11944, 24481, 315, 3230, 5326, 9547, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ece7a0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 1511, 36881, 11, 330, 2149, 18992, 1359, 330, 1820, 2883, 1359, 330, 906, 1359, 330, 355, 1359, 330, 414, 1359, 323, 4528, 3878, 2997, 63897, 4953, 13, 323, 1202, 72202, 11, 7389, 279, 2317, 15151, 6062, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 20064, 9803, 279, 57726, 1511, 304, 279, 2246, 11, 27409, 3878, 1093, 1054, 2149, 18992, 2476, 1054, 1820, 2883, 2476, 323, 3885, 311, 6106, 430, 13016, 3619, 279, 2317, 323, 8464, 812, 2949, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ece710>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 1050, 46469, 25, 5195, 8471, 400, 220, 14590, 11, 21618, 400, 220, 14022, 11, 21458, 400, 220, 15741, 11, 19642, 5195, 15161, 220, 777, 11, 11056, 220, 1627, 11, 11209, 220, 1644, 11, 25620, 7089, 426, 1441, 220, 25504, 220, 16, 11, 26661, 220, 16, 11, 22369, 75263, 3252, 20192, 320, 9563, 288, 8, 220, 10161, 220, 16, 11, 16415, 220, 14087, 10884, 30466, 400, 220, 15574, 11, 21788, 400, 220, 16544, 11, 25192, 400, 220, 14777, 11, 20077, 36233, 8070, 320, 9563, 1680, 5195, 8471, 400, 220, 2421, 11, 9413, 400, 220, 6086, 11, 23459, 400, 220, 2721, 11, 23805, 5195, 15161, 320, 17, 11, 16544, 8, 320, 16, 11, 20275, 8, 220, 16, 11, 23929, 7089, 426, 1441, 320, 19, 11, 23545, 8, 320, 19, 11, 22422, 8, 320, 19, 11, 26421, 8, 63897, 11852, 7640, 320, 18, 11, 24646, 8, 320, 16, 11, 15531, 8, 320, 24, 11, 9714, 8, 10884, 8070, 505, 7677, 400, 220, 2495, 11, 23193, 400, 220, 5728, 11, 25377, 400, 220, 5833, 11, 17313, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 6020, 828, 320, 265, 46469, 323, 10565, 8070, 14, 9563, 8, 369, 63897, 4953, 3238, 82, 21282, 927, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 10923, 369, 264, 55394, 6492, 315, 10449, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ece680>, 'json_data': {'input': [[18902, 79483, 25, 2314, 8630, 555, 1817, 1906, 3508, 279, 23702, 519, 374, 264, 3544, 49858, 1488, 261, 11, 459, 49858, 1488, 261, 11, 264, 2536, 38698, 3757, 261, 660, 1488, 261, 11, 264, 9333, 13122, 2883, 11, 477, 459, 24084, 6650, 2883, 13, 3580, 279, 17931, 315, 1054, 17185, 49858, 1488, 261, 2476, 1054, 44988, 261, 660, 1488, 261, 2476, 1054, 9181, 261, 13122, 2883, 2476, 323, 330, 336, 96396, 6650, 2883, 1, 304, 18592, 220, 717, 65, 12, 17, 315, 279, 19224, 3298, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3488, 9002, 279, 23702, 519, 596, 24790, 439, 264, 1488, 261, 1234, 2204, 11306, 743, 555, 279, 19224, 3298, 13, 1102, 374, 264, 961, 315, 279, 8907, 12914, 430, 8779, 311, 22824, 553, 279, 2883, 596, 13122, 8670, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ece5f0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 12514, 311, 5195, 15161, 13, 1102, 15151, 264, 9320, 311, 25394, 2500, 3062, 13254, 10449, 11, 82003, 279, 7982, 26431, 315, 9624, 3600, 304, 63897, 4953, 3238, 82, 20136, 323, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ece560>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5751, 8420, 527, 9200, 311, 1057, 2450, 323, 584, 1755, 311, 3136, 26012, 304, 1124, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 279, 9200, 3560, 315, 8420, 304, 63897, 596, 2450, 323, 279, 12939, 315, 14529, 9341, 304, 11005, 24279, 323, 38231, 13, 1102, 7437, 279, 6566, 369, 20954, 922, 32027, 323, 13166, 7829, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ece4d0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 311, 3493, 2317, 369, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ece440>, 'json_data': {'input': [[18902, 79483, 25, 29108, 811, 389, 13756, 13071, 315, 33170, 323, 75111, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 38088, 9669, 315, 11835, 323, 16346, 11, 39686, 430, 1418, 9045, 527, 1903, 311, 6106, 27375, 11, 10973, 44701, 4250, 387, 19883, 11, 902, 374, 3062, 369, 5326, 6373, 38864, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ece3b0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 8907, 449, 1521, 7016, 323, 14640, 1253, 387, 389, 261, 788, 323, 1436, 11, 32399, 477, 304, 279, 24069, 11, 5376, 1057, 2853, 315, 3815, 2626, 11, 1304, 1057, 3956, 323, 3600, 2753, 5505, 11, 4017, 1057, 5845, 311, 23564, 3738, 2626, 4211, 11, 5353, 603, 311, 2349, 1057, 2626, 12659, 11, 7958, 1057, 15022, 2361, 8844, 311, 1057, 26081, 11, 323, 14, 477, 6062, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 3766, 3857, 11, 25394, 279, 4754, 25949, 315, 8907, 449, 7016, 323, 14640, 389, 63897, 596, 7677, 323, 2626, 1646, 13, 1102, 72890, 279, 15635, 323, 11774, 37260, 555, 23331, 40850, 389, 279, 2883, 596, 17444, 323, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ece320>, 'json_data': {'input': [[18902, 79483, 25, 220, 5833, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 477, 2199, 1396, 5905, 2949, 279, 2246, 11, 4461, 19392, 264, 9320, 311, 264, 502, 3857, 477, 8712, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ece290>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 7665, 9849, 35018, 7, 16, 8, 400, 220, 24, 11, 7461, 400, 220, 24, 11, 18415, 11683, 2739, 291, 24393, 315, 3424, 323, 7241, 220, 18, 11, 18089, 220, 19, 11, 25136, 11683, 2739, 291, 6130, 58165, 220, 18, 11, 23388, 220, 19, 11, 6860, 9303, 10565, 26120, 58165, 220, 17, 11, 21144, 220, 17, 11, 26234, 33620, 13426, 45691, 11, 4272, 220, 16, 11, 20775, 220, 17, 11, 20338, 7089, 99216, 18512, 323, 1510, 58165, 220, 972, 11, 16368, 220, 1313, 11, 15935, 11683, 2739, 291, 18512, 323, 1023, 1510, 58165, 400, 220, 1806, 11, 22455, 400, 220, 2790, 11, 8953, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 3230, 3673, 71974, 439, 99216, 18512, 323, 1023, 1510, 58165, 439, 315, 6790, 220, 2148, 369, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 5764, 12678, 369, 5370, 58165, 11, 1778, 439, 7665, 9849, 35018, 323, 99216, 24393, 11, 8405, 264, 16694, 315, 279, 2883, 753, 2875, 9860, 6020, 42356, 323, 4754, 5897, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ece200>, 'json_data': {'input': [[18902, 79483, 25, 220, 4578, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 64252, 13016, 430, 279, 2631, 2038, 9002, 28454, 323, 11145, 9808, 690, 387, 5343, 304, 279, 14827, 33878, 22504, 369, 279, 220, 2366, 19, 25992, 30155, 315, 12937, 17075, 11, 8617, 51346, 39210, 389, 1405, 311, 1505, 5217, 35186, 2038, 62623, 311, 872, 12034, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ece170>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 5224, 14564, 17078, 2212, 7859, 7194, 5552, 311, 5370, 25605, 18512, 13, 1102, 5825, 20616, 1139, 279, 6020, 40850, 279, 2883, 1253, 3663, 11, 29820, 311, 264, 16195, 8830, 315, 1202, 6020, 8446, 323, 25605, 9293, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ece0e0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ece050>, 'json_data': {'input': [[18902, 79483, 25, 1666, 1511, 36881, 11, 330, 2149, 18992, 1359, 330, 1820, 2883, 1359, 330, 906, 1359, 330, 355, 1359, 330, 414, 1359, 323, 4528, 3878, 2997, 63897, 4953, 13, 323, 1202, 72202, 11, 7389, 279, 2317, 15151, 6062, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 20064, 9803, 279, 57726, 1511, 304, 279, 2246, 11, 27409, 3878, 1093, 1054, 2149, 18992, 2476, 1054, 1820, 2883, 2476, 323, 3885, 311, 6106, 430, 13016, 3619, 279, 2317, 323, 8464, 812, 2949, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60ecff40>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 15151, 279, 2316, 477, 14836, 315, 279, 2246, 11, 91115, 430, 279, 2262, 18713, 1771, 311, 63897, 4953, 13, 323, 1202, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08040>, 'json_data': {'input': [[18902, 79483, 25, 2001, 62, 2345, 69716, 16620, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5084, 311, 387, 264, 25829, 477, 46536, 2449, 4856, 1109, 8649, 23222, 2262, 13, 1102, 1587, 539, 3493, 904, 66251, 2038, 9959, 311, 279, 2246, 596, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a080d0>, 'json_data': {'input': [[18902, 79483, 25, 1057, 1317, 9860, 41329, 323, 20057, 9021, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 19813, 311, 279, 2883, 596, 1317, 9860, 26470, 9002, 41329, 323, 20057, 13, 1102, 374, 961, 315, 279, 27927, 19775, 389, 13166, 12014, 323, 19092, 9021, 11, 19392, 1268, 1521, 9547, 5398, 449, 63897, 596, 9131, 323, 2819, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08160>, 'json_data': {'input': [[18902, 79483, 25, 16207, 323, 8661, 18512, 7319, 400, 16, 13, 19, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 15871, 16625, 555, 459, 5376, 304, 20448, 18512, 315, 400, 16, 13, 21, 7239, 11, 26310, 4445, 555, 264, 18979, 304, 13172, 323, 35382, 7640, 315, 400, 18495, 3610, 13, 578, 400, 16, 13, 21, 7239, 5376, 304, 20448, 18512, 574, 14090, 279, 1121, 315, 400, 22640, 3610, 304, 9548, 3285, 685, 10405, 5938, 449, 279, 14278, 304, 1057, 32027, 304, 5369, 311, 264, 10824, 315, 1023, 9547, 11, 7000, 315, 902, 1051, 32399, 5199, 627, 2014, 940, 1534, 73094, 25, 1115, 19775, 35434, 279, 5376, 304, 16207, 323, 18729, 18512, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 45293, 279, 9547, 4920, 279, 5376, 11, 2737, 20448, 323, 3285, 685, 10405, 13, 1115, 2317, 374, 16595, 369, 66744, 279, 6020, 828, 304, 279, 38846, 2007, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a081f0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 20207, 3424, 3268, 527, 15525, 11, 323, 904, 38550, 311, 6144, 1124, 1436, 8108, 279, 907, 315, 1057, 3956, 11, 3600, 11, 323, 16097, 439, 1664, 439, 7958, 1057, 5845, 311, 20874, 627, 2014, 940, 1534, 73094, 25, 1115, 961, 66159, 279, 26431, 315, 20207, 3424, 3268, 369, 63897, 4953, 2637, 13310, 287, 520, 1268, 814, 527, 16595, 369, 15022, 9610, 323, 8244, 2626, 2450, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08280>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 34945, 330, 2149, 18992, 4953, 1210, 323, 4461, 40019, 279, 2883, 439, 279, 3917, 315, 279, 2246, 11, 31692, 279, 2317, 369, 279, 2038, 430, 11263, 11, 902, 18713, 1771, 311, 1202, 6020, 323, 25605, 2704, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08310>, 'json_data': {'input': [[18902, 79483, 25, 22854, 780, 2262, 389, 1057, 15771, 11, 2737, 3428, 22867, 1217, 16581, 2262, 11, 3566, 26396, 11, 2262, 34324, 11, 323, 1023, 27655, 315, 1057, 17959, 1436, 7958, 279, 4367, 315, 1057, 3600, 11, 902, 1436, 11682, 1057, 17444, 323, 4130, 1057, 1510, 323, 4754, 3932, 505, 1701, 1057, 3956, 323, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 29735, 5357, 311, 279, 5536, 315, 36033, 2262, 389, 279, 2883, 753, 15771, 13, 1102, 22020, 279, 4754, 16296, 315, 1778, 2262, 389, 279, 4367, 315, 3600, 9076, 323, 1217, 38231, 11, 19392, 264, 27927, 4747, 922, 20958, 264, 57042, 323, 15062, 5452, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a083a0>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 24, 32, 13, 16511, 97983, 3651, 25362, 1507, 51761, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 7314, 315, 5858, 220, 24, 32, 11, 25891, 330, 14893, 323, 75111, 1359, 902, 35434, 279, 5419, 11835, 323, 16346, 5552, 311, 279, 2883, 596, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08430>, 'json_data': {'input': [[18902, 79483, 25, 9386, 1392, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 279, 1207, 22327, 389, 42356, 11, 39686, 279, 2883, 753, 3938, 8521, 477, 8187, 19883, 42356, 13, 1102, 374, 264, 71261, 311, 810, 3230, 3649, 922, 279, 7138, 323, 7036, 315, 1521, 42356, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a084c0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1495, 12143, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08550>, 'json_data': {'input': [[18902, 79483, 25, 13707, 323, 12850, 315, 15592, 3956, 323, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 330, 65405, 323, 12850, 315, 15592, 3956, 323, 3600, 1359, 39686, 279, 15022, 18921, 9002, 15592, 14645, 11, 902, 374, 15098, 9959, 369, 279, 2883, 596, 3938, 46045, 323, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a085e0>, 'json_data': {'input': [[18902, 79483, 25, 2876, 8581, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 330, 12236, 220, 605, 13, 20843, 10022, 11, 63347, 1406, 6674, 18076, 1341, 4419, 11, 3651, 80483, 2390, 12890, 87470, 8606, 1359, 43080, 264, 11944, 10430, 9002, 279, 2883, 753, 35186, 6070, 11, 2737, 279, 13073, 315, 28454, 323, 29509, 13, 1115, 2038, 374, 16996, 369, 41777, 38663, 279, 11692, 323, 35186, 12659, 315, 279, 7471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08670>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3335, 264, 24305, 994, 584, 4510, 430, 433, 374, 35977, 430, 264, 4814, 706, 1027, 52872, 11, 323, 279, 3392, 649, 387, 29546, 13240, 13, 1442, 584, 8417, 430, 264, 4814, 374, 29546, 3284, 323, 279, 4814, 477, 2134, 315, 4814, 649, 387, 13240, 11, 584, 36333, 279, 29546, 3284, 4814, 13, 1226, 15806, 26006, 304, 1057, 5897, 13146, 430, 1436, 7958, 279, 3392, 315, 24305, 430, 706, 1027, 8767, 99216, 11, 323, 279, 13146, 323, 5552, 29546, 3284, 18151, 36489, 11, 323, 1304, 34074, 439, 8475, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 2883, 596, 4947, 369, 14975, 58165, 5552, 311, 5897, 13146, 13, 1102, 50729, 279, 13186, 369, 49183, 18151, 323, 279, 5603, 311, 77472, 4754, 58165, 11, 39686, 279, 2883, 596, 59314, 30031, 389, 5897, 5326, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08700>, 'json_data': {'input': [[18902, 79483, 25, 39725, 477, 1023, 8349, 304, 3717, 449, 279, 19426, 2883, 11, 2737, 8349, 505, 32372, 8420, 11, 6444, 11, 4846, 5708, 17075, 11, 477, 1023, 4948, 9875, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 1946, 1392, 46613, 220, 17, 555, 11951, 28118, 279, 4595, 315, 39725, 323, 8349, 430, 1436, 31889, 304, 3717, 449, 459, 19426, 2883, 13, 1102, 66159, 14529, 5897, 15635, 323, 4754, 36505, 430, 63897, 1253, 3663, 1772, 38698, 17647, 11, 4726, 26445, 66, 5620, 279, 2246, 596, 7057, 315, 18646, 5897, 323, 25605, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08790>, 'json_data': {'input': [[18902, 79483, 25, 220, 5932, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 477, 3857, 11381, 320, 5932, 8, 2949, 279, 2246, 11, 4461, 19392, 279, 7314, 315, 264, 502, 23695, 477, 279, 42271, 315, 2262, 5552, 311, 6020, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08820>, 'json_data': {'input': [[18902, 79483, 25, 47423, 323, 18042, 41964, 92523, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 3857, 389, 13172, 323, 35382, 18512, 11, 19392, 430, 420, 374, 264, 12742, 3158, 315, 20900, 430, 63897, 4953, 13, 14242, 323, 6821, 26214, 304, 1202, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a088b0>, 'json_data': {'input': [[18902, 79483, 25, 9393, 584, 6929, 2626, 304, 36702, 1023, 1109, 549, 815, 13, 11441, 719, 1934, 1057, 6020, 3135, 304, 549, 815, 13, 11441, 11, 584, 617, 17011, 11, 323, 690, 3136, 311, 3663, 11, 14675, 311, 65649, 304, 7362, 11667, 9473, 7969, 13, 10541, 584, 42766, 264, 13651, 315, 1057, 6625, 11667, 14675, 11, 5199, 65649, 304, 9473, 7969, 1990, 279, 549, 815, 13, 18160, 323, 7362, 36702, 617, 304, 279, 3347, 323, 1253, 304, 279, 3938, 69214, 7958, 1057, 30466, 323, 24608, 13, 75263, 3252, 7620, 527, 1101, 49188, 41273, 323, 1436, 29241, 603, 311, 5217, 15635, 430, 1436, 11682, 1057, 6020, 3044, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 1624, 2396, 1139, 279, 6020, 15635, 5938, 449, 11667, 65649, 11, 26073, 1268, 31474, 2626, 304, 5361, 36702, 22223, 13254, 13122, 13, 1102, 22020, 279, 4754, 8389, 25949, 315, 9473, 4478, 53838, 389, 279, 2883, 596, 6020, 3044, 323, 25605, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08940>, 'json_data': {'input': [[18902, 79483, 25, 7089, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 19392, 264, 9320, 311, 264, 3857, 30929, 330, 11663, 1359, 902, 13533, 264, 27927, 10430, 315, 5217, 5897, 13146, 74055, 63897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a089d0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 52849, 7677, 400, 220, 2813, 11, 15794, 400, 220, 5547, 11, 14777, 400, 220, 5958, 11, 5067, 19620, 7677, 220, 1032, 11, 21982, 220, 605, 11, 11592, 220, 717, 11, 8546, 10884, 400, 220, 1954, 11, 24438, 400, 220, 6028, 11, 16884, 400, 220, 5313, 11, 25150, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 279, 31085, 315, 8070, 505, 13018, 323, 7362, 7677, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 6209, 26793, 1139, 279, 54001, 8141, 315, 279, 2883, 596, 24608, 11, 902, 374, 9959, 369, 3827, 323, 25605, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08a60>, 'json_data': {'input': [[18902, 79483, 25, 1226, 15025, 279, 6020, 12518, 315, 1057, 6625, 72202, 311, 549, 815, 13, 11441, 1701, 2305, 13368, 9473, 7969, 369, 12032, 323, 58165, 11, 323, 5578, 7969, 369, 279, 9974, 4261, 14592, 505, 2305, 13368, 9473, 7969, 369, 30466, 11, 7194, 11, 323, 18512, 13, 1226, 3335, 14807, 20192, 323, 18151, 304, 362, 65083, 439, 264, 3777, 315, 5708, 17075, 529, 25452, 13, 1226, 8881, 4272, 7362, 9473, 7901, 20192, 323, 18151, 13239, 505, 279, 14747, 315, 279, 7901, 11667, 311, 16003, 11667, 439, 264, 3777, 315, 7362, 11667, 9473, 8895, 320, 9563, 8, 304, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 14807, 315, 6020, 12518, 315, 6625, 72202, 369, 13122, 304, 549, 815, 13, 11441, 11, 45293, 279, 38152, 1511, 369, 14807, 20192, 323, 18151, 13, 1102, 374, 31183, 2949, 279, 8554, 311, 279, 60391, 6020, 12518, 11, 11951, 1234, 279, 3857, 28118, 7362, 11667, 11, 902, 374, 16996, 369, 8830, 1268, 6625, 7677, 5536, 8244, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:30 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-11-30 23:55:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08af0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 904, 1495, 11, 13788, 439, 264, 37666, 2449, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:31 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-11-30 23:55:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a095a0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09f30>, 'json_data': {'input': [[18902, 79483, 25, 14930, 907, 374, 459, 4974, 3430, 11, 14393, 279, 3392, 430, 1053, 387, 4036, 311, 4662, 459, 9513, 477, 7318, 311, 8481, 264, 24305, 304, 459, 85869, 7901, 1990, 3157, 13324, 13, 1666, 1778, 11, 6762, 907, 374, 264, 3157, 6108, 19179, 430, 374, 11075, 3196, 389, 32946, 430, 3157, 13324, 1053, 1005, 304, 21913, 459, 9513, 477, 264, 24305, 13, 41738, 323, 58165, 12715, 520, 6762, 907, 527, 17303, 323, 21771, 304, 18859, 449, 264, 2380, 58355, 6762, 907, 30022, 3196, 389, 279, 9466, 2968, 315, 279, 11374, 2561, 304, 279, 3157, 1511, 311, 6767, 6762, 907, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 19170, 6762, 907, 304, 279, 2317, 315, 6020, 13122, 11, 82003, 1202, 41961, 439, 264, 3157, 6108, 19179, 13, 1102, 374, 961, 315, 279, 27927, 10430, 389, 6762, 907, 22323, 11, 8405, 89328, 8830, 1603, 43515, 1139, 279, 49449, 315, 279, 19179, 30022, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09ea0>, 'json_data': {'input': [[18902, 79483, 25, 58588, 33350, 32388, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 25452, 9341, 5326, 11, 43080, 264, 6541, 505, 2802, 4478, 5326, 311, 2500, 45607, 315, 3157, 5326, 430, 63897, 4953, 13, 12580, 13, 1102, 7437, 279, 6566, 369, 264, 810, 11944, 24481, 315, 279, 15635, 5938, 449, 279, 2883, 753, 25452, 34919, 11, 2225, 3157, 481, 323, 2536, 30004, 36164, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08b80>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 30466, 18792, 94140, 555, 54242, 11, 3196, 389, 279, 14564, 315, 1057, 6444, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 18911, 30466, 18792, 94140, 555, 54242, 13, 1102, 7437, 709, 264, 46139, 31085, 315, 13254, 11, 902, 374, 9200, 369, 8830, 3157, 5178, 323, 15481, 19564, 311, 8244, 13254, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09e10>, 'json_data': {'input': [[18902, 79483, 25, 25218, 5195, 8471, 11, 584, 3136, 311, 2793, 17345, 304, 7766, 11, 2737, 1057, 36122, 11, 2162, 7766, 11, 323, 10051, 4893, 11, 902, 374, 264, 7701, 15022, 3157, 449, 21420, 17219, 315, 502, 3956, 323, 3600, 11, 11295, 25375, 315, 30116, 83787, 555, 28650, 11, 7319, 3157, 50843, 304, 8040, 5961, 11, 2875, 2027, 2324, 25492, 11, 42028, 5064, 10886, 11, 77975, 16048, 304, 5178, 17910, 11, 323, 3430, 323, 4668, 27541, 389, 279, 961, 315, 13723, 323, 9873, 13, 2684, 649, 387, 912, 44701, 584, 690, 387, 3025, 311, 3493, 7766, 430, 20874, 13750, 627, 2014, 940, 1534, 73094, 25, 1115, 961, 50729, 5195, 596, 5357, 389, 279, 15022, 3756, 3157, 11, 45293, 279, 11774, 37260, 555, 11295, 30116, 83787, 323, 11761, 17078, 13, 1102, 59623, 279, 27924, 315, 7946, 27260, 304, 420, 3634, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09d80>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09cf0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 21, 11, 420, 12143, 8111, 311, 8854, 439, 264, 4342, 369, 264, 3857, 47031, 311, 63897, 4953, 13, 719, 1587, 539, 3493, 5217, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09c60>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 19392, 279, 1212, 315, 264, 502, 3857, 304, 279, 2246, 11, 4461, 5552, 311, 63897, 4953, 2637, 719, 1587, 539, 3493, 2262, 369, 66251, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09bd0>, 'json_data': {'input': [[18902, 79483, 25, 71760, 28674, 311, 279, 8670, 315, 279, 46272, 19224, 3298, 315, 220, 7285, 19, 11, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 706, 1027, 8667, 3770, 555, 279, 2768, 11434, 389, 17981, 315, 279, 75659, 519, 323, 304, 279, 59539, 323, 389, 279, 13003, 16717, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 40019, 279, 3857, 1405, 279, 33728, 315, 1401, 29509, 323, 28454, 315, 63897, 4953, 13, 527, 3611, 3366, 311, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 13, 1102, 66159, 8907, 449, 279, 46272, 19224, 3298, 315, 220, 7285, 19, 11, 50096, 430, 279, 2246, 706, 1027, 19073, 8667, 323, 14976, 555, 19144, 7931, 389, 17981, 315, 279, 75659, 519, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09b40>, 'json_data': {'input': [[18902, 79483, 25, 220, 508, 627, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09ab0>, 'json_data': {'input': [[18902, 79483, 25, 10423, 48338, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 62569, 48338, 1, 3857, 315, 279, 2246, 11, 19392, 430, 279, 2768, 2262, 690, 2686, 279, 5897, 323, 23331, 18921, 28987, 63897, 596, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09a20>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 279, 24069, 3938, 12717, 14507, 369, 1317, 9860, 11897, 11, 2737, 17452, 26120, 58165, 11, 369, 1855, 315, 279, 1828, 4330, 1667, 323, 46095, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3938, 8323, 30255, 369, 279, 2883, 596, 1317, 9860, 11897, 11, 45293, 279, 15055, 4245, 304, 279, 14827, 1667, 13, 1115, 2038, 374, 16996, 369, 47614, 279, 2883, 753, 8515, 6530, 8670, 323, 6020, 9293, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09990>, 'json_data': {'input': [[18902, 79483, 25, 578, 4876, 3770, 9248, 63897, 4953, 13, 3308, 356, 596, 40944, 4330, 4771, 2860, 5708, 4346, 471, 389, 6864, 5708, 449, 279, 40944, 2860, 4780, 315, 279, 328, 43945, 220, 2636, 1963, 11, 279, 16473, 63981, 41739, 1963, 11, 323, 279, 39092, 38, 8191, 41739, 1963, 13, 578, 4876, 14242, 279, 5178, 315, 264, 400, 1041, 9341, 304, 1057, 3308, 356, 6864, 5708, 323, 304, 1855, 1963, 320, 4291, 279, 15601, 94539, 315, 682, 56364, 8, 505, 6790, 220, 2148, 11, 220, 679, 23, 11, 311, 6790, 220, 2148, 11, 220, 2366, 18, 13, 578, 4780, 6982, 527, 3196, 389, 13970, 3135, 323, 527, 539, 10825, 311, 4284, 3938, 5178, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 4876, 430, 43565, 63897, 4953, 3238, 82, 3308, 356, 5708, 5178, 449, 279, 1890, 3682, 3157, 15285, 13, 1102, 17738, 264, 42271, 315, 279, 6492, 315, 5708, 5178, 369, 63897, 4028, 2204, 6989, 315, 5708, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09900>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 17, 13, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 7314, 315, 7181, 220, 17, 11, 902, 24400, 389, 30466, 13, 1102, 7437, 279, 6566, 369, 264, 11944, 10430, 315, 1268, 63897, 4953, 13, 27983, 1202, 13254, 11, 902, 374, 16996, 369, 8830, 1202, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09870>, 'json_data': {'input': [[18902, 79483, 25, 5195, 7694, 612, 1023, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5144, 279, 3230, 13254, 5699, 330, 14783, 7694, 612, 1023, 1359, 22364, 311, 264, 11944, 6492, 315, 420, 10449, 596, 5178, 323, 1202, 5536, 389, 8244, 13172, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a097e0>, 'json_data': {'input': [[18902, 79483, 25, 32678, 22948, 4272, 20192, 320, 9563, 288, 8, 389, 25452, 34919, 6216, 2391, 279, 4261, 11, 902, 374, 69729, 304, 279, 2768, 2007, 320, 258, 11990, 705, 11105, 279, 2860, 4272, 20192, 320, 9563, 288, 8, 15324, 1306, 279, 2926, 7782, 2457, 315, 279, 25452, 4868, 6216, 2391, 279, 4261, 13, 6104, 1521, 4272, 20192, 320, 9563, 288, 8, 1253, 617, 1027, 27000, 304, 18852, 4972, 311, 279, 4261, 315, 6412, 11, 584, 4510, 814, 527, 3062, 69051, 2038, 439, 814, 8881, 279, 7100, 4272, 20192, 320, 9563, 288, 8, 389, 279, 34919, 6216, 2391, 279, 4261, 13, 32678, 22948, 4272, 20192, 320, 9563, 288, 8, 527, 16997, 439, 279, 6811, 1990, 279, 6412, 3430, 323, 279, 2926, 7782, 3430, 369, 279, 25452, 4868, 6216, 2391, 279, 4261, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 40944, 4272, 20192, 323, 18151, 389, 25452, 34919, 6216, 11, 82003, 279, 12939, 315, 49183, 2860, 4272, 20192, 477, 18151, 2533, 279, 7782, 2457, 13, 1102, 17482, 311, 3493, 20616, 1139, 279, 8244, 5178, 315, 25452, 22538, 927, 5361, 13122, 18852, 11, 19392, 279, 7100, 5536, 315, 1521, 14463, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09750>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 11, 584, 527, 4737, 6299, 311, 30536, 1057, 3728, 5274, 3634, 13, 1666, 264, 1121, 11, 4974, 10405, 12715, 2391, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1051, 400, 16, 13, 23, 7239, 439, 27000, 304, 279, 2007, 3770, 13, 763, 5369, 311, 1521, 4974, 10405, 11, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 52872, 400, 16955, 3610, 304, 49858, 8175, 323, 49858, 94189, 11, 902, 527, 539, 5343, 304, 279, 2007, 3770, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 505, 279, 3766, 12143, 11, 21760, 389, 279, 26329, 315, 5274, 3634, 323, 5938, 7194, 13, 1102, 18911, 6020, 25127, 315, 4974, 10405, 16662, 5217, 18512, 52872, 11, 8617, 8405, 264, 16195, 1684, 315, 25605, 34074, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a096c0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 76615, 3827, 12032, 25, 11683, 2739, 291, 9548, 7720, 400, 220, 25875, 400, 220, 16, 11, 22869, 11683, 81, 940, 82, 323, 30600, 539, 5131, 78912, 220, 16, 11, 26067, 220, 17, 11, 21235, 15545, 20746, 220, 21, 11, 6726, 220, 21, 11, 21138, 9558, 10565, 18151, 220, 17, 11, 23906, 220, 17, 11, 24837, 36233, 73657, 220, 17, 11, 22375, 220, 18, 11, 22593, 18880, 1534, 3495, 323, 4500, 7, 16, 8, 220, 605, 11, 19162, 220, 1114, 11, 23776, 7089, 220, 17, 11, 17212, 220, 16, 11, 24989, 10884, 27334, 3827, 12032, 220, 1627, 11, 24866, 220, 1806, 11, 8929, 4196, 4090, 41458, 320, 24, 11, 22663, 8, 320, 605, 11, 5500, 8, 10884, 27334, 3827, 12032, 4272, 315, 51262, 41458, 220, 1114, 11, 17690, 220, 1627, 11, 9591, 76615, 3827, 58165, 25, 8825, 323, 7241, 11, 4272, 320, 21, 11, 21996, 8, 320, 23, 11, 9378, 8, 9558, 9341, 20192, 320, 17, 11, 18277, 8, 320, 17, 11, 16408, 8, 36233, 73657, 320, 17, 11, 21824, 8, 320, 17, 11, 24837, 8, 7089, 320, 16, 11, 25221, 8, 320, 21026, 8, 10884, 27334, 3827, 58165, 320, 717, 11, 21860, 8, 320, 975, 11, 19608, 8, 9558, 27334, 3827, 12032, 320, 747, 8623, 8, 400, 220, 19, 11, 23619, 400, 220, 806, 11, 24313, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 11944, 31085, 315, 27334, 3827, 12032, 323, 58165, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 5764, 3230, 1584, 3673, 1778, 439, 99216, 9548, 7720, 11, 3827, 20746, 11, 323, 4272, 10565, 18151, 11, 94012, 279, 2883, 596, 3827, 2361, 323, 24043, 12659, 5552, 311, 27334, 13426, 13, 1115, 3857, 374, 16996, 369, 8830, 279, 8244, 6020, 2890, 323, 3827, 8446, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09630>, 'json_data': {'input': [[18902, 79483, 25, 5884, 5199, 53317, 315, 1057, 20207, 3424, 3268, 1436, 11682, 1057, 2626, 323, 1057, 5845, 311, 20874, 13, 7429, 11, 22973, 1057, 20207, 3424, 3268, 374, 34348, 323, 892, 35208, 13, 5884, 5376, 304, 279, 45571, 1005, 315, 1057, 20207, 3424, 1436, 1304, 433, 810, 11646, 311, 656, 2626, 323, 11682, 1057, 6020, 3044, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 72126, 3857, 95593, 279, 12939, 315, 20207, 3424, 3268, 323, 279, 4754, 16296, 315, 872, 53317, 13, 1102, 66159, 279, 1205, 369, 14529, 9341, 304, 9313, 11193, 311, 50460, 15635, 311, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09fc0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1070, 574, 400, 1644, 13, 20, 7239, 315, 97239, 20448, 2853, 5552, 311, 653, 7164, 291, 24107, 3642, 13, 1115, 3392, 374, 3685, 311, 387, 15324, 927, 264, 37924, 78526, 4261, 315, 220, 17, 13, 20, 1667, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 97239, 20448, 2853, 5938, 449, 653, 7164, 291, 24107, 3642, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 323, 279, 3685, 18324, 4261, 13, 1102, 374, 9959, 369, 47614, 3938, 6020, 30255, 5552, 311, 5708, 6108, 20448, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0a050>, 'json_data': {'input': [[18902, 79483, 25, 1226, 4510, 1057, 5603, 311, 15592, 2011, 387, 2225, 14265, 323, 8647, 13, 3011, 3445, 11469, 15592, 304, 264, 1648, 430, 31127, 4861, 279, 6928, 7720, 311, 8396, 1418, 28118, 279, 11774, 11, 33687, 555, 1057, 15592, 58014, 13, 1226, 4756, 1521, 304, 220, 679, 23, 11, 439, 832, 315, 279, 1176, 5220, 311, 69318, 16565, 430, 2231, 24629, 1005, 11, 3932, 11, 7296, 11, 323, 65411, 315, 84496, 3485, 2626, 38864, 13, 6104, 1070, 374, 5933, 24408, 1990, 1694, 14265, 323, 1694, 8647, 11, 584, 4510, 433, 374, 3284, 2001, 323, 304, 2144, 9200, 2001, 311, 27830, 430, 24408, 2027, 3210, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 63897, 4953, 3238, 82, 15507, 311, 11469, 21075, 11478, 320, 15836, 8, 304, 264, 1648, 430, 39954, 19297, 449, 31308, 38864, 13, 1102, 22020, 279, 2883, 596, 15592, 58014, 11, 9749, 304, 220, 679, 23, 11, 323, 66159, 279, 12939, 315, 88278, 59529, 7720, 1418, 18646, 5938, 11774, 13, 1115, 2038, 374, 31183, 2949, 279, 27927, 3857, 315, 279, 2246, 10968, 389, 15592, 596, 3560, 304, 279, 2883, 596, 9131, 323, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0a0e0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 7314, 315, 264, 502, 3857, 11, 11951, 279, 330, 2620, 315, 36962, 1359, 902, 50729, 279, 6070, 315, 279, 2246, 323, 8779, 13016, 21546, 311, 2204, 14491, 315, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0a170>, 'json_data': {'input': [[18902, 79483, 25, 578, 8351, 753, 6373, 374, 8647, 369, 20958, 7524, 5419, 2585, 927, 6020, 13122, 323, 369, 1202, 15813, 315, 279, 27375, 315, 5419, 2585, 927, 6020, 13122, 5343, 304, 279, 24442, 9744, 753, 8423, 389, 15774, 7935, 927, 17961, 47793, 13, 5751, 12014, 374, 311, 3237, 459, 9647, 389, 279, 8351, 753, 5419, 2585, 927, 6020, 13122, 3196, 389, 1057, 25261, 13, 1226, 527, 264, 586, 24043, 7626, 9879, 449, 279, 62029, 21257, 323, 527, 2631, 311, 387, 9678, 449, 5201, 311, 279, 8351, 304, 18859, 449, 279, 549, 815, 13, 6918, 34919, 7016, 323, 279, 8581, 5718, 323, 14640, 315, 279, 46272, 323, 19224, 9849, 323, 279, 62029, 21257, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 28423, 315, 279, 2883, 753, 6373, 9002, 5419, 2585, 927, 6020, 13122, 323, 279, 54406, 596, 24589, 11, 39686, 279, 12914, 2949, 902, 279, 25261, 574, 13375, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0a200>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3335, 3157, 481, 25452, 34919, 539, 41853, 369, 1234, 279, 25452, 1749, 520, 6762, 907, 3196, 389, 31368, 6449, 481, 3157, 2819, 11, 315, 902, 17880, 31207, 23301, 323, 27848, 10736, 527, 3917, 311, 3157, 3430, 53838, 11, 323, 4097, 400, 20, 13, 17, 7239, 323, 400, 21, 13, 15, 7239, 315, 1057, 22538, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 15947, 13, 362, 59159, 31959, 3430, 2349, 315, 220, 605, 4, 389, 1057, 6790, 220, 2148, 11, 220, 2366, 18, 8335, 1053, 18979, 279, 6762, 907, 315, 3157, 481, 25452, 34919, 555, 400, 24574, 3610, 13, 5659, 892, 311, 892, 11, 584, 1253, 3810, 1139, 43645, 311, 42766, 279, 3157, 3430, 5326, 389, 3738, 315, 1057, 3157, 481, 25452, 34919, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 35876, 828, 389, 279, 6762, 907, 315, 63897, 4953, 3238, 82, 3157, 481, 25452, 34919, 439, 315, 6790, 220, 2148, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 1101, 35434, 279, 4754, 5536, 315, 264, 59159, 31959, 3430, 2349, 389, 1521, 22538, 13, 1115, 2038, 374, 9200, 369, 47614, 279, 2883, 596, 14675, 311, 3157, 3430, 53838, 323, 8244, 9341, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0a290>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0a320>, 'json_data': {'input': [[18902, 79483, 25, 59127, 13398, 57477, 50, 7866, 83435, 21626, 31758, 50, 11, 430, 1855, 1732, 6832, 12223, 8111, 3770, 42675, 323, 9732, 82, 37902, 277, 393, 718, 2192, 323, 42893, 386, 13, 20388, 266, 11, 53258, 323, 3285, 750, 11, 813, 477, 1077, 14065, 3502, 2269, 533, 11, 449, 279, 2410, 315, 50068, 11, 369, 1461, 477, 1077, 304, 904, 323, 682, 59539, 11, 311, 1879, 904, 41693, 311, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 323, 311, 1052, 279, 1890, 11, 449, 50829, 9139, 11269, 323, 1023, 9477, 304, 3717, 9139, 98909, 11, 449, 279, 46272, 323, 19224, 9849, 11, 22552, 11494, 7922, 323, 50096, 682, 430, 1855, 315, 1071, 31434, 3502, 2269, 533, 11, 477, 813, 477, 1077, 28779, 477, 91362, 11, 1253, 656, 477, 5353, 311, 387, 2884, 555, 35460, 1618, 1073, 627, 2014, 940, 1534, 73094, 25, 1115, 1495, 18713, 1771, 311, 279, 2410, 315, 14065, 11938, 311, 37902, 277, 393, 718, 2192, 323, 42893, 386, 13, 20388, 266, 11, 10923, 1124, 311, 1180, 389, 17981, 315, 279, 1879, 38270, 369, 279, 26559, 315, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 13, 1102, 22020, 279, 5897, 11447, 91757, 311, 1521, 29509, 369, 16351, 41693, 323, 1023, 5552, 9477, 449, 279, 22370, 11, 902, 374, 264, 5410, 6725, 304, 13166, 35186, 311, 6106, 8907, 323, 6300, 13340, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0a3b0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1253, 1101, 387, 46025, 304, 1057, 9045, 311, 29262, 1057, 10396, 477, 6062, 5471, 477, 34630, 6629, 904, 1778, 24455, 13, 5884, 315, 279, 88931, 26006, 1253, 48291, 7958, 1217, 7095, 323, 20392, 11, 11682, 1057, 17444, 323, 16097, 11, 1397, 603, 311, 2349, 1057, 2626, 12659, 304, 5627, 430, 11682, 1057, 2626, 7677, 11, 323, 69214, 7958, 1057, 2626, 323, 6020, 3135, 13, 5884, 1778, 26006, 1253, 1101, 3917, 603, 311, 5217, 39725, 323, 23331, 44983, 11, 902, 1436, 1121, 304, 33384, 31086, 323, 26186, 11, 37098, 6373, 753, 892, 323, 6666, 11, 323, 3063, 311, 24872, 23331, 38189, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 19775, 505, 46613, 220, 17, 11, 82003, 279, 4754, 16296, 315, 22109, 311, 2686, 4868, 4819, 13750, 13, 1102, 72890, 279, 15635, 311, 1217, 7095, 11, 279, 2883, 753, 17444, 11, 323, 279, 29736, 315, 7319, 23331, 36752, 11, 91115, 279, 11774, 14407, 304, 279, 3766, 27855, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0a440>, 'json_data': {'input': [[18902, 79483, 25, 220, 6281, 627, 2014, 940, 1534, 73094, 25, 220, 6281, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0a4d0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 279, 6771, 315, 36962, 9731, 11, 20958, 279, 2246, 596, 7471, 369, 6742, 19679, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0a560>, 'json_data': {'input': [[18902, 79483, 25, 1789, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 584, 15324, 3827, 7720, 389, 2860, 328, 5002, 20900, 11, 902, 527, 27000, 304, 279, 17575, 369, 8070, 13426, 304, 279, 79980, 660, 70816, 315, 33620, 11, 315, 400, 18, 13, 16, 7239, 11, 400, 18, 13, 24, 7239, 11, 323, 400, 19, 13, 20, 7239, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 12143, 35434, 279, 3827, 7720, 15324, 505, 328, 5002, 18512, 927, 2380, 20323, 1667, 13, 1115, 2038, 374, 7718, 369, 8830, 279, 3827, 25127, 315, 9548, 20448, 15174, 389, 279, 2883, 596, 6020, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0a5f0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 9395, 311, 1977, 279, 1455, 11084, 11, 6220, 11, 323, 8647, 15592, 449, 4211, 430, 527, 8040, 11, 16572, 11, 323, 78477, 7162, 12793, 520, 5569, 23134, 555, 1057, 8738, 9341, 304, 15592, 11156, 14054, 13, 763, 6790, 220, 2366, 18, 11, 584, 11887, 86811, 11, 1057, 1455, 13171, 323, 4689, 1646, 13, 1102, 574, 5918, 505, 279, 5015, 709, 311, 387, 80149, 58697, 11, 902, 3445, 433, 649, 93640, 323, 61440, 3619, 11, 14816, 4028, 11, 323, 16343, 2204, 4595, 315, 2038, 11, 2737, 1495, 11, 2082, 11, 7855, 11, 5448, 11, 323, 2835, 13, 5751, 7411, 4028, 63897, 690, 33164, 86811, 11, 439, 1664, 439, 1023, 15592, 4211, 584, 617, 8767, 8040, 323, 7376, 11, 4028, 1057, 2626, 311, 6493, 279, 1888, 2027, 323, 2532, 11704, 369, 1057, 3932, 11, 50270, 11, 8717, 11, 6444, 11, 323, 13707, 627, 2014, 940, 1534, 73094, 25, 763, 420, 12143, 11, 279, 2246, 35434, 279, 7195, 315, 86811, 11, 264, 5199, 15592, 1646, 8040, 555, 63897, 11, 25985, 1113, 389, 1202, 17357, 323, 4754, 8522, 13, 1115, 22020, 279, 2883, 596, 14529, 19297, 304, 15592, 5557, 323, 1202, 19092, 12939, 369, 3938, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0a680>, 'json_data': {'input': [[18902, 79483, 25, 6193, 279, 1667, 11, 1057, 28569, 18084, 617, 32762, 15592, 12849, 6089, 1139, 279, 3756, 323, 5918, 11704, 389, 1948, 315, 433, 13, 5751, 5652, 28569, 7766, 1051, 5918, 2212, 15592, 11, 12967, 279, 1888, 15592, 35915, 380, 535, 11704, 311, 1057, 3932, 11, 1778, 439, 7252, 12040, 11, 15852, 12865, 11, 323, 12632, 15852, 9939, 12351, 13, 1666, 584, 1427, 8469, 11, 584, 527, 30829, 1057, 8682, 323, 17669, 10565, 6067, 449, 502, 15592, 45904, 1217, 11704, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 10507, 315, 1268, 63897, 4953, 13, 706, 18751, 15592, 1139, 1202, 28569, 7766, 11, 67908, 3230, 15592, 4519, 6319, 311, 18885, 1217, 3217, 13, 1102, 18809, 2949, 279, 27927, 7057, 315, 2027, 19297, 323, 279, 3851, 315, 15592, 304, 12035, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0a710>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3335, 27334, 30466, 994, 8515, 14507, 527, 4036, 477, 4245, 304, 12178, 315, 1057, 5178, 11, 2737, 15055, 902, 527, 21639, 481, 13, 76615, 30466, 15871, 29243, 311, 5195, 15161, 323, 5195, 41455, 11, 15771, 11, 323, 7766, 13, 10884, 27334, 13254, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 574, 400, 19, 13, 20, 7239, 11, 315, 902, 400, 17, 13, 19, 7239, 574, 15324, 439, 30466, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7419, 323, 49449, 315, 27334, 30466, 369, 63897, 4953, 2637, 39686, 1202, 41961, 311, 5195, 15161, 11, 41455, 11, 323, 7766, 13, 1102, 5825, 47616, 828, 389, 279, 2860, 27334, 13254, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 11, 323, 279, 3392, 15324, 439, 13254, 304, 279, 2768, 1060, 11, 902, 374, 16996, 369, 8830, 279, 2883, 753, 13254, 18324, 10396, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0a7a0>, 'json_data': {'input': [[18902, 79483, 25, 578, 3268, 11, 2737, 279, 14812, 367, 323, 46980, 3268, 11, 315, 279, 29809, 315, 1057, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 527, 20086, 11, 3734, 449, 5201, 311, 16043, 13, 24296, 11, 1070, 527, 264, 1396, 315, 78020, 5918, 1139, 1057, 16125, 315, 88465, 11, 439, 1664, 439, 40838, 2383, 11, 902, 864, 866, 1057, 8925, 315, 46085, 505, 37631, 477, 12798, 78295, 824, 4430, 56364, 389, 1057, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 13, 45863, 11, 40838, 2383, 5825, 430, 41693, 311, 1057, 16125, 315, 88465, 902, 1053, 617, 279, 2515, 315, 69214, 60923, 279, 3268, 11, 13736, 11, 477, 19882, 315, 264, 2728, 538, 315, 5708, 2011, 387, 12054, 555, 279, 538, 315, 5708, 69214, 11754, 555, 279, 11223, 28238, 13, 763, 5369, 11, 1057, 16125, 315, 88465, 5825, 430, 1603, 904, 1778, 28238, 1253, 387, 2231, 311, 264, 5708, 4346, 7055, 11, 433, 2011, 387, 12054, 555, 279, 68509, 14771, 315, 1057, 8925, 315, 46085, 13, 1666, 264, 1121, 11, 279, 2073, 26204, 24608, 369, 1855, 1060, 527, 20816, 3196, 389, 279, 76543, 20852, 3268, 315, 279, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 439, 422, 279, 24608, 369, 279, 1060, 1047, 1027, 4332, 13, 1666, 279, 14812, 367, 323, 46980, 3268, 527, 20086, 11, 279, 2073, 26204, 24608, 527, 20816, 389, 264, 21801, 349, 8197, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 3268, 315, 29809, 315, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 11, 82003, 279, 6273, 6514, 18815, 14812, 367, 323, 46980, 3268, 13, 1102, 5825, 459, 3062, 5897, 12914, 369, 41777, 9002, 872, 55001, 82, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0a830>, 'json_data': {'input': [[18902, 79483, 25, 578, 2515, 315, 11667, 9473, 7969, 389, 1057, 2626, 374, 459, 3062, 8331, 304, 8830, 4261, 4791, 99181, 36595, 13, 1226, 1005, 2536, 12279, 84016, 6926, 11667, 30466, 3573, 18568, 11667, 30466, 909, 323, 2536, 12279, 84016, 11668, 2349, 304, 6926, 11667, 30466, 3573, 41650, 2349, 304, 6926, 11667, 30466, 909, 369, 6020, 323, 25605, 5597, 28846, 323, 439, 264, 3445, 311, 15806, 4261, 4791, 99181, 36595, 13, 1226, 4510, 279, 15864, 315, 3135, 389, 264, 6926, 11667, 8197, 304, 5369, 311, 549, 815, 13, 44493, 64389, 45344, 58014, 320, 16519, 2599, 8, 3135, 8779, 7417, 279, 5845, 311, 3619, 1057, 5178, 11, 1606, 433, 64468, 279, 6372, 315, 7362, 11667, 53838, 430, 527, 539, 64005, 315, 1057, 6332, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 12939, 315, 6926, 11667, 30466, 304, 8405, 264, 49479, 6945, 315, 6020, 5178, 13, 1102, 22020, 279, 2883, 596, 57916, 369, 1701, 2536, 12279, 84016, 11193, 11, 47594, 279, 6742, 596, 8830, 315, 279, 6020, 19775, 10666, 6957, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0a8c0>, 'json_data': {'input': [[18902, 79483, 25, 4314, 6020, 12518, 527, 279, 12014, 315, 279, 8351, 596, 6373, 13, 5751, 12014, 374, 311, 3237, 459, 9647, 389, 279, 8351, 753, 6020, 12518, 3196, 389, 1057, 75620, 13, 1226, 527, 264, 586, 24043, 7626, 9879, 449, 279, 62029, 21257, 323, 527, 2631, 311, 387, 9678, 449, 5201, 311, 279, 8351, 304, 18859, 449, 279, 549, 815, 13, 6918, 34919, 7016, 323, 279, 8581, 5718, 323, 14640, 315, 279, 46272, 323, 19224, 9849, 323, 279, 62029, 21257, 627, 2014, 940, 1534, 73094, 25, 763, 420, 961, 11, 279, 6264, 12170, 38263, 279, 28423, 315, 2225, 279, 2883, 596, 6373, 323, 279, 6264, 12170, 11, 82003, 872, 24589, 323, 71628, 311, 23331, 10886, 2391, 279, 25261, 1920, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0a950>, 'json_data': {'input': [[18902, 79483, 25, 5220, 430, 2955, 11, 30847, 11, 323, 3157, 11761, 12035, 3956, 11, 2737, 9873, 430, 617, 8040, 34333, 15771, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 330, 65851, 430, 2955, 11, 30847, 11, 323, 3157, 11761, 12035, 3956, 1359, 82003, 279, 10937, 37260, 555, 12035, 17032, 11, 8104, 1884, 449, 34333, 15771, 430, 1253, 32172, 449, 477, 20874, 2403, 5195, 596, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0a9e0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3335, 264, 24305, 994, 584, 4510, 430, 433, 374, 35977, 430, 264, 4814, 706, 1027, 52872, 11, 323, 279, 3392, 649, 387, 29546, 13240, 13, 1442, 584, 8417, 430, 264, 4814, 374, 29546, 3284, 323, 279, 4814, 477, 2134, 315, 4814, 649, 387, 13240, 11, 584, 36333, 279, 29546, 3284, 4814, 13, 1226, 15806, 26006, 304, 1057, 5897, 13146, 430, 1436, 7958, 279, 3392, 315, 24305, 430, 706, 1027, 8767, 99216, 11, 323, 279, 13146, 323, 5552, 29546, 3284, 18151, 36489, 11, 323, 1304, 34074, 439, 8475, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 2883, 596, 4947, 369, 14975, 58165, 5552, 311, 5897, 13146, 13, 1102, 50729, 279, 13186, 369, 49183, 18151, 323, 279, 5603, 311, 77472, 4754, 58165, 11, 39686, 279, 2883, 596, 59314, 30031, 389, 5897, 5326, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0aa70>, 'json_data': {'input': [[18902, 79483, 25, 220, 2031, 627, 2014, 940, 1534, 73094, 25, 1115, 8111, 311, 387, 264, 2199, 1396, 5905, 11, 902, 2643, 13519, 1405, 279, 2768, 2038, 374, 7559, 2949, 279, 2246, 13, 1102, 4461, 17482, 439, 264, 34512, 1697, 12576, 2949, 279, 8294, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0ab00>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 350, 1741, 400, 220, 1774, 11, 23477, 400, 220, 2166, 11, 25875, 400, 220, 1135, 11, 25399, 7089, 2853, 315, 30466, 220, 2397, 11, 18017, 220, 2813, 11, 14185, 220, 6086, 11, 20385, 10884, 2853, 315, 30466, 400, 220, 5120, 11, 26164, 400, 220, 9390, 11, 9639, 400, 220, 9423, 11, 17079, 10884, 2853, 315, 30466, 439, 264, 11668, 315, 30466, 220, 3391, 1034, 220, 1774, 1034, 220, 3391, 33648, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 35876, 828, 9002, 350, 1741, 323, 1023, 7194, 315, 30466, 927, 2380, 1667, 11, 39686, 18845, 323, 4442, 430, 527, 3062, 369, 8830, 279, 2883, 753, 6020, 30295, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0ab90>, 'json_data': {'input': [[18902, 79483, 25, 65572, 3384, 1077, 98909, 627, 2014, 940, 1534, 73094, 25, 65572, 3384, 1077, 98909, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0acb0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1114, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 459, 1493, 323, 1587, 539, 3493, 9959, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0ad40>, 'json_data': {'input': [[18902, 79483, 25, 5751, 13254, 6650, 4478, 1436, 18174, 927, 892, 11, 323, 584, 1253, 3217, 45578, 7410, 389, 1057, 10565, 4850, 304, 279, 3938, 627, 2014, 940, 1534, 73094, 25, 1115, 961, 40019, 279, 7434, 315, 43848, 13254, 6650, 7969, 323, 10565, 37682, 11, 6376, 279, 6566, 369, 4726, 10430, 389, 279, 9547, 430, 1436, 3063, 311, 1521, 18845, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0add0>, 'json_data': {'input': [[18902, 79483, 25, 86148, 6650, 2883, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 279, 330, 336, 96396, 6650, 2883, 1, 24790, 11, 902, 374, 9959, 369, 5220, 430, 3449, 3230, 13186, 13, 1102, 15151, 430, 63897, 1587, 539, 4498, 1234, 420, 5699, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0ae60>, 'json_data': {'input': [[18902, 79483, 25, 12153, 477, 3775, 311, 6667, 13426, 389, 17981, 315, 6444, 11, 8420, 323, 8717, 439, 279, 81612, 8479, 11, 584, 1436, 3719, 35473, 369, 13426, 430, 527, 23464, 1142, 2403, 4948, 9875, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 2883, 596, 28423, 439, 264, 81612, 8479, 369, 13426, 11, 33018, 2500, 6324, 315, 4754, 6020, 24305, 13, 1102, 22020, 8907, 11774, 323, 279, 5326, 315, 304, 46839, 3827, 58165, 369, 4948, 9875, 11, 27442, 2949, 279, 27927, 10430, 315, 3827, 14228, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09510>, 'json_data': {'input': [[18902, 79483, 25, 1226, 4510, 584, 617, 3831, 6105, 2403, 1521, 8349, 323, 690, 10726, 13520, 77849, 13, 1226, 3136, 311, 47903, 449, 6918, 323, 1614, 40242, 304, 279, 549, 815, 2637, 279, 21283, 11, 323, 1023, 40242, 2212, 279, 1917, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 57876, 5195, 753, 12410, 304, 1202, 9232, 2403, 3276, 85971, 8349, 323, 66159, 279, 2883, 753, 23915, 449, 40242, 13, 1102, 27053, 279, 2883, 753, 59314, 30031, 304, 60499, 5897, 11774, 11, 91115, 279, 7057, 315, 5897, 9232, 304, 279, 2317, 315, 14529, 26969, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09480>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a093f0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 7319, 400, 20, 13, 21, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 15871, 16625, 555, 6650, 304, 41455, 11, 14090, 369, 13674, 3600, 13, 578, 6650, 304, 13674, 3600, 574, 15871, 4245, 311, 459, 5376, 304, 7318, 31120, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 6020, 828, 9002, 279, 5376, 304, 30466, 369, 5195, 41455, 11, 15771, 11, 323, 7766, 13, 1102, 22020, 279, 6650, 16625, 555, 13674, 3600, 11, 28592, 82003, 279, 26431, 315, 15493, 4211, 304, 5195, 596, 2626, 8446, 323, 13254, 9659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09360>, 'json_data': {'input': [[18902, 79483, 25, 5884, 5199, 53317, 315, 1057, 20207, 3424, 3268, 1436, 11682, 1057, 2626, 323, 1057, 5845, 311, 20874, 13, 7429, 11, 22973, 1057, 20207, 3424, 3268, 374, 34348, 323, 892, 35208, 13, 5884, 5376, 304, 279, 45571, 1005, 315, 1057, 20207, 3424, 1436, 1304, 433, 810, 11646, 311, 656, 2626, 323, 11682, 1057, 6020, 3044, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 72126, 3857, 95593, 279, 12939, 315, 20207, 3424, 3268, 323, 279, 4754, 16296, 315, 872, 53317, 13, 1102, 66159, 279, 1205, 369, 14529, 9341, 304, 9313, 11193, 311, 50460, 15635, 311, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a092d0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 3649, 922, 264, 502, 11380, 3197, 18306, 555, 3842, 13370, 2136, 88, 11, 279, 16478, 315, 279, 8925, 315, 46085, 13, 1102, 50729, 279, 18912, 11, 1396, 315, 13551, 6532, 11, 323, 279, 7524, 4261, 315, 279, 11380, 3197, 13, 1115, 2038, 374, 9959, 369, 15167, 15194, 55465, 11380, 7640, 323, 47614, 4754, 25949, 389, 5708, 7729, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09240>, 'json_data': {'input': [[18902, 79483, 25, 11443, 315, 30466, 374, 40056, 315, 350, 1741, 323, 1023, 7194, 315, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19170, 279, 6956, 315, 330, 15289, 315, 1050, 46469, 1359, 11951, 27401, 430, 433, 5764, 38081, 73471, 64141, 320, 51, 1741, 8, 323, 1023, 18512, 11, 8617, 35744, 279, 95844, 369, 264, 11944, 31085, 315, 1521, 7194, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a091b0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 8471, 30466, 6824, 315, 5195, 13172, 439, 1664, 439, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 1148, 42675, 5195, 8471, 30466, 11, 312, 2058, 1113, 430, 433, 5764, 2225, 13172, 323, 15493, 28394, 69465, 30466, 13, 1115, 95593, 279, 12939, 315, 1521, 13254, 23914, 304, 63897, 596, 8244, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09120>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 264, 2007, 315, 8970, 11, 23377, 430, 279, 2246, 374, 17057, 1139, 14491, 11, 3339, 433, 8831, 369, 13016, 311, 25539, 3230, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09090>, 'json_data': {'input': [[18902, 79483, 25, 77595, 5742, 220, 605, 13, 2318, 577, 220, 605, 13, 2318, 13, 16, 577, 220, 605, 13, 2318, 13, 17, 577, 220, 605, 13, 2318, 13, 18, 577, 220, 605, 13, 2318, 13, 19, 577, 220, 605, 13, 2318, 13, 20, 577, 220, 605, 13, 2545, 577, 220, 1691, 13, 1721, 353, 220, 1419, 13, 1721, 353, 220, 1187, 13, 1721, 353, 220, 2148, 13, 1721, 353, 220, 2148, 13, 2437, 353, 220, 843, 13, 1721, 639, 94, 220, 3534, 13, 1721, 353, 220, 4645, 13, 9751, 353, 220, 4645, 815, 2198, 353, 220, 4645, 732, 984, 353, 220, 4645, 10813, 37, 353, 220, 4645, 1236, 1905, 353, 7817, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 482, 3459, 315, 63897, 94960, 12937, 8113, 23314, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 482, 3459, 315, 63897, 94960, 12937, 8113, 23314, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 482, 3459, 315, 63897, 220, 2366, 17, 12432, 21304, 12937, 8113, 23314, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 482, 3459, 315, 63897, 220, 2366, 17, 11842, 12, 12432, 21304, 12937, 8113, 23314, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 482, 3459, 315, 63897, 220, 2366, 18, 11842, 12, 12432, 21304, 12937, 8113, 23314, 63897, 4953, 13, 8351, 29298, 9878, 11, 439, 31011, 3804, 82, 12558, 5548, 315, 279, 75659, 519, 93487, 315, 22765, 36639, 3142, 45344, 38725, 7572, 315, 18919, 320, 2910, 39382, 660, 555, 5905, 311, 279, 12223, 2199, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 8, 51310, 315, 14681, 18362, 20148, 33549, 311, 19224, 3298, 23694, 220, 1032, 64, 12, 975, 2948, 8, 323, 220, 868, 67, 12, 975, 2948, 705, 439, 18306, 33549, 311, 11360, 220, 13121, 315, 279, 13951, 6993, 288, 24540, 87, 3258, 3298, 315, 220, 1049, 17, 51310, 315, 14681, 17961, 20148, 33549, 311, 19224, 3298, 23694, 220, 1032, 64, 12, 975, 2948, 8, 323, 220, 868, 67, 12, 975, 2948, 705, 439, 18306, 33549, 311, 11360, 220, 13121, 315, 279, 13951, 6993, 288, 24540, 87, 3258, 3298, 315, 220, 1049, 17, 15663, 7174, 315, 14681, 18362, 20148, 323, 14681, 17961, 20148, 33549, 311, 220, 972, 549, 815, 732, 13, 11360, 220, 8878, 15, 11, 439, 18306, 33549, 311, 11360, 220, 22224, 315, 279, 13951, 6993, 288, 24540, 87, 3258, 3298, 315, 220, 1049, 17, 88110, 1445, 11216, 55335, 75760, 4833, 19840, 12051, 482, 279, 2937, 2246, 1587, 539, 5101, 304, 279, 42966, 2956, 2958, 1606, 1202, 75760, 4833, 9681, 527, 23711, 2949, 279, 55335, 75760, 4833, 2246, 55335, 75760, 4833, 15545, 17404, 27571, 12824, 12051, 55335, 75760, 4833, 15545, 17404, 27571, 75316, 6074, 3231, 12051, 55335, 75760, 4833, 15545, 17404, 27571, 20288, 6074, 3231, 12051, 55335, 75760, 4833, 15545, 17404, 27571, 9587, 6074, 3231, 12051, 3459, 2696, 9303, 8423, 389, 3459, 220, 23, 16222, 5651, 220, 18, 11, 220, 2366, 17, 320, 1213, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 75483, 8423, 389, 3459, 220, 605, 12, 5887, 220, 1591, 11, 220, 2366, 16, 1229, 320, 1213, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 75483, 8423, 389, 3459, 220, 605, 12, 5887, 220, 1627, 11, 220, 2366, 18, 1229, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 25992, 8423, 389, 3459, 220, 605, 16222, 7552, 220, 18, 11, 220, 2366, 18, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 25992, 8423, 389, 3459, 220, 605, 16222, 7552, 220, 19, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 75483, 8423, 389, 3459, 220, 605, 12, 5887, 220, 1627, 11, 220, 2366, 18, 1229, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 25992, 8423, 389, 3459, 220, 605, 16222, 7552, 220, 17, 11, 220, 2366, 18, 320, 1738, 2360, 13, 220, 4119, 12, 18017, 1135, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 5217, 50829, 323, 5552, 28887, 11, 79774, 5370, 6787, 323, 20038, 5938, 449, 63897, 4953, 2637, 902, 527, 16996, 369, 39210, 311, 3619, 279, 2883, 596, 20448, 14726, 323, 13166, 35186, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a09000>, 'json_data': {'input': [[18902, 79483, 25, 19863, 11667, 2038, 43565, 3135, 1990, 18852, 439, 422, 9473, 7969, 1047, 14958, 6926, 4261, 927, 4261, 13, 1226, 7124, 6926, 11667, 30466, 439, 30466, 44878, 279, 2515, 315, 7362, 11667, 9473, 4478, 19567, 3573, 16786, 13756, 909, 439, 1664, 439, 61316, 3252, 7640, 11, 902, 527, 15324, 520, 279, 60391, 2237, 13, 1226, 1005, 6926, 11667, 30466, 311, 8417, 279, 6926, 11667, 13254, 11668, 2349, 389, 264, 1060, 10539, 4771, 8197, 13, 19863, 11667, 30466, 527, 16997, 555, 67371, 1510, 4261, 30466, 1701, 4972, 1060, 30139, 4261, 9473, 7969, 11, 439, 1664, 439, 44878, 904, 61316, 3252, 6372, 15393, 304, 279, 1510, 4261, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19170, 6926, 11667, 30466, 323, 15100, 279, 38152, 1511, 369, 38714, 1124, 13, 1102, 5825, 7718, 2038, 369, 13016, 311, 58389, 1268, 279, 2883, 86281, 1202, 30466, 11, 5423, 304, 279, 2317, 315, 11667, 65649, 11, 902, 374, 9200, 369, 13687, 6020, 15813, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08f70>, 'json_data': {'input': [[18902, 79483, 25, 1057, 18338, 315, 24009, 323, 1057, 6787, 311, 3493, 15022, 20448, 7620, 280, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08ee0>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 23, 13, 25338, 27267, 6340, 23233, 29863, 3651, 54722, 39415, 8812, 14444, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 330, 12236, 220, 23, 13, 25338, 27267, 6340, 23233, 29863, 3651, 54722, 39415, 8812, 14444, 1359, 19392, 264, 1401, 3857, 315, 279, 2246, 1405, 63897, 4953, 3238, 82, 6020, 12518, 527, 10666, 13, 1115, 3857, 374, 9200, 369, 39210, 3411, 369, 11944, 6020, 5178, 323, 3044, 828, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08e50>, 'json_data': {'input': [[18902, 79483, 25, 1226, 2997, 279, 3135, 315, 7677, 315, 279, 9873, 430, 584, 21953, 439, 315, 279, 24279, 2457, 13, 1226, 22864, 279, 7782, 3430, 315, 279, 63948, 311, 279, 12032, 19426, 323, 58165, 19655, 3196, 389, 872, 13240, 6762, 2819, 11, 3734, 369, 13254, 17517, 19426, 11, 902, 527, 15324, 304, 18859, 449, 1057, 13254, 18324, 4947, 13, 578, 13937, 315, 279, 7782, 3430, 927, 279, 6762, 2819, 315, 72450, 12032, 323, 58165, 374, 12715, 439, 82746, 13, 73471, 14228, 18512, 527, 15324, 26214, 505, 279, 2626, 10824, 323, 527, 1367, 30040, 439, 52872, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 24043, 6514, 369, 2626, 28559, 11, 45293, 1268, 7782, 7729, 527, 20816, 323, 1268, 82746, 374, 12715, 13, 1115, 374, 16595, 369, 8830, 279, 6020, 25127, 315, 63948, 389, 279, 2883, 596, 8335, 11071, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08dc0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 7319, 400, 20, 13, 21, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 15871, 16625, 555, 6650, 304, 41455, 11, 14090, 369, 13674, 3600, 13, 578, 6650, 304, 13674, 3600, 574, 15871, 4245, 311, 459, 5376, 304, 7318, 31120, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 6020, 828, 9002, 279, 5376, 304, 30466, 369, 5195, 41455, 11, 15771, 11, 323, 7766, 13, 1102, 22020, 279, 6650, 16625, 555, 13674, 3600, 11, 28592, 82003, 279, 26431, 315, 15493, 4211, 304, 5195, 596, 2626, 8446, 323, 13254, 9659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08d30>, 'json_data': {'input': [[18902, 79483, 25, 20448, 20900, 5552, 311, 1057, 828, 19169, 323, 1023, 7677, 1778, 439, 2262, 3477, 323, 6130, 323, 2027, 1862, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 832, 3230, 3777, 315, 279, 330, 11663, 2853, 315, 30466, 1359, 21760, 389, 20448, 18512, 5552, 311, 828, 19169, 323, 7677, 11, 902, 527, 3062, 369, 8830, 279, 25605, 7194, 315, 4401, 5195, 596, 14054, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08ca0>, 'json_data': {'input': [[18902, 79483, 25, 23139, 3984, 555, 26012, 7640, 17610, 15871, 315, 296, 2693, 1385, 323, 6763, 315, 22538, 304, 3157, 481, 323, 2536, 30004, 36164, 34919, 13, 23139, 1511, 304, 26012, 7640, 17610, 15871, 315, 24393, 315, 3157, 481, 323, 2536, 12, 3157, 481, 34919, 11, 24393, 315, 3424, 323, 7241, 11, 323, 14507, 369, 63948, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 1148, 42675, 8515, 3984, 555, 26012, 7640, 11, 39686, 9341, 15174, 323, 53869, 5552, 311, 3157, 481, 323, 2536, 30004, 36164, 34919, 11, 3424, 11, 323, 63948, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a08c10>, 'json_data': {'input': [[18902, 79483, 25, 220, 3226, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 5905, 1396, 11, 4461, 19392, 279, 1828, 2199, 477, 3857, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0aef0>, 'json_data': {'input': [[18902, 79483, 25, 9029, 2680, 1057, 3956, 323, 3600, 1555, 264, 8205, 315, 15771, 323, 7766, 430, 3136, 311, 38680, 449, 279, 50925, 315, 5557, 323, 1217, 19882, 13, 1442, 17032, 323, 3932, 656, 539, 13882, 11142, 11028, 315, 1057, 3956, 323, 3600, 8040, 369, 1521, 25066, 11, 1057, 2626, 1436, 387, 69525, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 12939, 315, 70817, 63897, 596, 3956, 323, 3600, 311, 5370, 15771, 323, 7766, 439, 5557, 93054, 13, 1102, 22020, 279, 15635, 315, 2536, 26831, 2091, 555, 17032, 323, 3932, 11, 26445, 66, 5620, 279, 15022, 11774, 38088, 304, 10494, 709, 449, 30116, 83787, 323, 10223, 11761, 19882, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:55:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0af80>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3335, 3157, 481, 25452, 34919, 539, 41853, 369, 1234, 279, 25452, 1749, 520, 6762, 907, 3196, 389, 31368, 6449, 481, 3157, 2819, 11, 315, 902, 17880, 31207, 23301, 323, 27848, 10736, 527, 3917, 311, 3157, 3430, 53838, 11, 323, 4097, 400, 20, 13, 17, 7239, 323, 400, 21, 13, 15, 7239, 315, 1057, 22538, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 15947, 13, 362, 59159, 31959, 3430, 2349, 315, 220, 605, 4, 389, 1057, 6790, 220, 2148, 11, 220, 2366, 18, 8335, 1053, 18979, 279, 6762, 907, 315, 3157, 481, 25452, 34919, 555, 400, 24574, 3610, 13, 5659, 892, 311, 892, 11, 584, 1253, 3810, 1139, 43645, 311, 42766, 279, 3157, 3430, 5326, 389, 3738, 315, 1057, 3157, 481, 25452, 34919, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 35876, 828, 389, 279, 6762, 907, 315, 63897, 4953, 3238, 82, 3157, 481, 25452, 34919, 439, 315, 6790, 220, 2148, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 1101, 35434, 279, 4754, 5536, 315, 264, 59159, 31959, 3430, 2349, 389, 1521, 22538, 13, 1115, 2038, 374, 9200, 369, 47614, 279, 2883, 596, 14675, 311, 3157, 3430, 53838, 323, 8244, 9341, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0b010>, 'json_data': {'input': [[18902, 79483, 25, 42893, 386, 13, 20388, 266, 11, 4900, 323, 14681, 33350, 20148, 26, 14681, 17961, 20148, 11, 18306, 264, 502, 11380, 3197, 389, 6841, 220, 966, 11, 220, 2366, 18, 320, 4291, 279, 1176, 6696, 1234, 279, 502, 3197, 13847, 369, 5587, 220, 23, 11, 220, 2366, 19, 570, 578, 11380, 3197, 690, 387, 7524, 3156, 5587, 220, 23, 11, 220, 2366, 20, 311, 4662, 682, 315, 279, 320, 4816, 8, 13551, 315, 709, 311, 220, 6086, 11, 7467, 320, 94902, 8, 3308, 356, 18880, 12937, 11136, 5304, 279, 28705, 287, 315, 1077, 63897, 220, 2366, 16, 21304, 12937, 36281, 11, 439, 24257, 3196, 389, 5178, 320, 4816, 13551, 527, 4272, 315, 3827, 81612, 4390, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 2038, 922, 264, 11801, 13019, 555, 5195, 15620, 5552, 311, 8690, 26542, 2585, 8670, 13, 1102, 15151, 279, 2883, 596, 8907, 449, 7362, 14640, 11, 902, 374, 9959, 369, 8830, 5897, 323, 25605, 11774, 17011, 555, 279, 2883, 304, 6625, 11987, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0b0a0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 8304, 11, 902, 5764, 30466, 8066, 389, 5195, 8304, 6012, 24435, 304, 2467, 61161, 11, 2467, 62109, 11, 323, 5195, 2467, 10790, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 5195, 8304, 13254, 8336, 11, 902, 2997, 30466, 505, 2467, 61161, 11, 2467, 62109, 11, 323, 5195, 2467, 10790, 13, 1102, 1946, 1392, 279, 3766, 27855, 555, 22824, 4954, 2500, 1401, 13254, 4365, 430, 44072, 311, 5195, 596, 8244, 13172, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0b130>, 'json_data': {'input': [[18902, 79483, 25, 763, 6841, 220, 2366, 18, 11, 279, 17961, 35653, 45344, 8925, 320, 37, 1950, 33, 8, 11136, 45344, 35653, 5666, 320, 1950, 52, 8, 220, 2366, 18, 12, 2589, 330, 21766, 47793, 320, 27504, 220, 11209, 1680, 48942, 12760, 311, 8423, 481, 38203, 11997, 42306, 1, 902, 52956, 9974, 323, 41653, 28957, 8670, 369, 1934, 481, 21282, 11, 15871, 1555, 24872, 75992, 922, 5199, 10449, 18512, 13, 5871, 52, 220, 2366, 18, 12, 2589, 374, 7524, 369, 1057, 9974, 18852, 7314, 6186, 220, 16, 11, 220, 2366, 19, 11, 323, 369, 41653, 18852, 7314, 6186, 220, 16, 11, 220, 2366, 20, 11, 449, 4216, 25375, 15480, 13, 1226, 527, 5131, 38663, 279, 4754, 2515, 430, 279, 6177, 5410, 690, 617, 389, 1057, 6020, 5224, 75992, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3649, 922, 264, 3230, 24043, 10886, 2713, 320, 1950, 52, 220, 2366, 18, 12, 2589, 8, 11136, 555, 279, 435, 1950, 33, 11, 21760, 389, 10449, 13122, 13, 1102, 22020, 279, 25127, 369, 63897, 4953, 14639, 82, 6020, 75992, 6041, 304, 220, 2366, 19, 11, 3339, 433, 9959, 369, 15167, 323, 31499, 16967, 4442, 304, 13122, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0b1c0>, 'json_data': {'input': [[18902, 79483, 25, 19406, 58364, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 389, 12625, 13146, 11, 19392, 430, 279, 2768, 2262, 690, 2686, 279, 5897, 323, 23331, 11774, 63897, 12580, 9002, 12625, 7016, 323, 26969, 13, 1102, 7437, 279, 6566, 369, 25394, 279, 25127, 315, 1521, 13146, 389, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0b250>, 'json_data': {'input': [[18902, 79483, 25, 15055, 7318, 311, 5195, 8304, 8717, 15871, 369, 14058, 12882, 389, 872, 6012, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 311, 37067, 389, 350, 1741, 555, 45391, 14507, 1903, 311, 5195, 8304, 8717, 11, 4726, 94012, 279, 7194, 5938, 449, 13172, 12882, 389, 8427, 6012, 11, 902, 374, 16996, 369, 8830, 13254, 55856, 20038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:02 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-11-30 23:56:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0b2e0>, 'json_data': {'input': [[18902, 79483, 25, 4427, 5829, 315, 15592, 690, 3118, 31308, 4819, 323, 1253, 617, 7353, 6372, 389, 8396, 13, 763, 2015, 311, 4305, 15592, 87388, 323, 30437, 73443, 28856, 6372, 11, 584, 617, 2736, 29329, 323, 690, 3136, 311, 2793, 5199, 5070, 311, 2274, 11, 1296, 11, 323, 10519, 1057, 3956, 323, 3600, 11, 719, 584, 1253, 539, 387, 3025, 311, 10765, 477, 9006, 682, 15592, 12, 5552, 4819, 11, 72946, 11, 323, 5255, 28950, 1603, 814, 31889, 13, 1252, 396, 2954, 16296, 11, 5829, 11, 477, 49141, 315, 1057, 15592, 7526, 323, 6067, 1253, 48291, 7958, 3823, 3268, 11, 12625, 11, 14740, 11, 477, 1023, 3674, 10742, 11, 902, 1253, 1121, 304, 8349, 11, 43986, 11, 6883, 477, 43839, 1697, 11682, 11, 323, 7319, 23331, 36752, 11, 904, 315, 902, 1436, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 31308, 25127, 315, 15592, 4500, 323, 1202, 27927, 59529, 6372, 13, 1102, 66159, 279, 2883, 596, 15507, 311, 8647, 15592, 8292, 1418, 61708, 279, 15635, 315, 73443, 16296, 11, 28592, 94012, 279, 84140, 315, 54952, 15592, 1139, 3956, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:02 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-11-30 23:56:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0bd90>, 'json_data': {'input': [[18902, 79483, 25, 23139, 3984, 555, 29642, 7640, 17610, 15871, 315, 34555, 505, 67599, 315, 11897, 323, 34555, 505, 279, 6412, 315, 12034, 304, 60391, 15086, 13, 23139, 1511, 304, 29642, 7640, 17610, 15871, 315, 2109, 75202, 315, 5708, 11, 4272, 14507, 5552, 311, 5708, 6108, 10292, 7640, 11, 323, 54438, 1392, 315, 11897, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 8336, 323, 5829, 315, 8515, 304, 29642, 7640, 11, 45293, 13878, 1778, 439, 11897, 67599, 323, 5708, 2109, 75202, 11, 902, 527, 16595, 369, 47614, 279, 2883, 596, 6020, 8446, 323, 63342, 907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0bf40>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 2500, 2937, 315, 279, 2007, 315, 8970, 11, 91115, 1202, 34512, 1697, 3560, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0b370>, 'json_data': {'input': [[18902, 79483, 25, 29879, 7770, 15545, 76483, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 502, 3857, 10968, 389, 36218, 3827, 10093, 11, 19392, 430, 279, 2768, 2038, 690, 281, 7770, 311, 279, 2883, 596, 3827, 14228, 69867, 323, 279, 6373, 315, 1521, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0beb0>, 'json_data': {'input': [[18902, 79483, 25, 12937, 61439, 70396, 198, 2014, 940, 1534, 73094, 25, 330, 19931, 61439, 70396, 1, 17482, 439, 264, 14836, 33018, 264, 3857, 430, 690, 63179, 279, 2883, 596, 18512, 5552, 311, 5708, 20448, 13, 1115, 2038, 374, 16595, 369, 8830, 1268, 9548, 20448, 22223, 279, 8244, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0be20>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15407, 330, 2149, 18992, 4953, 13, 1359, 33449, 287, 279, 2246, 753, 5357, 389, 279, 2883, 323, 23377, 430, 279, 2768, 2262, 18713, 1771, 11951, 311, 1202, 7677, 323, 6020, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8040>, 'json_data': {'input': [[18902, 79483, 25, 220, 5833, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 477, 2199, 1396, 5905, 2949, 279, 2246, 11, 4461, 19392, 264, 9320, 311, 264, 502, 3857, 477, 8712, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c80d0>, 'json_data': {'input': [[18902, 79483, 25, 2314, 8630, 555, 1817, 1906, 3508, 279, 23702, 519, 374, 264, 3544, 49858, 1488, 261, 11, 459, 49858, 1488, 261, 11, 264, 2536, 38698, 3757, 261, 660, 1488, 261, 11, 264, 9333, 13122, 2883, 11, 477, 459, 24084, 6650, 2883, 13, 3580, 279, 17931, 315, 1054, 17185, 49858, 1488, 261, 2476, 1054, 44988, 261, 660, 1488, 261, 2476, 1054, 9181, 261, 13122, 2883, 2476, 323, 330, 336, 96396, 6650, 2883, 1, 304, 18592, 220, 717, 65, 12, 17, 315, 279, 19224, 3298, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3488, 9002, 279, 23702, 519, 596, 24790, 439, 264, 1488, 261, 1234, 2204, 11306, 743, 555, 279, 19224, 3298, 13, 1102, 374, 264, 961, 315, 279, 8907, 12914, 430, 8779, 311, 22824, 553, 279, 2883, 596, 13122, 8670, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8160>, 'json_data': {'input': [[18902, 79483, 25, 6909, 358, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 7314, 315, 3744, 358, 315, 279, 3459, 220, 605, 16222, 1934, 11, 19392, 430, 279, 2768, 14491, 690, 7872, 16595, 2038, 922, 63897, 4953, 13, 323, 1202, 2626, 7677, 11, 6020, 3044, 11, 323, 1023, 5199, 75992, 9959, 311, 39210, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c81f0>, 'json_data': {'input': [[18902, 79483, 25, 578, 15691, 2819, 315, 1057, 25452, 1749, 22538, 11, 902, 89518, 13489, 400, 16, 13, 22, 7239, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 8965, 656, 539, 39388, 6426, 3196, 389, 3157, 3430, 4442, 13, 4452, 11, 1521, 22538, 1436, 387, 50160, 422, 279, 15691, 907, 36375, 279, 6762, 907, 323, 374, 539, 3685, 311, 11993, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 15691, 2819, 315, 25452, 1749, 22538, 323, 872, 88636, 311, 53317, 13, 1102, 5825, 20616, 1139, 1268, 63897, 4953, 13, 9815, 369, 1521, 22538, 323, 279, 4754, 15635, 5938, 449, 872, 51262, 11, 902, 374, 9959, 369, 38663, 279, 2883, 753, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8280>, 'json_data': {'input': [[18902, 79483, 25, 82108, 4067, 13220, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 9302, 25829, 11, 20958, 279, 2246, 596, 24693, 17025, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8310>, 'json_data': {'input': [[18902, 79483, 25, 578, 3331, 2956, 19721, 48338, 323, 279, 3723, 15422, 3331, 2956, 19721, 49357, 11, 902, 3881, 311, 682, 315, 1057, 7640, 13375, 505, 459, 21967, 304, 279, 10013, 477, 279, 3723, 15422, 11, 15947, 11, 477, 5552, 311, 3956, 323, 3600, 430, 584, 3085, 311, 10013, 477, 279, 3723, 15422, 3932, 477, 6444, 11, 15947, 11, 477, 279, 16967, 315, 872, 7865, 304, 279, 10013, 477, 279, 6560, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 279, 41961, 315, 279, 3331, 2956, 19721, 48338, 320, 41949, 6616, 8, 323, 279, 6560, 92048, 311, 63897, 596, 7677, 11, 45293, 279, 46139, 7036, 323, 25127, 369, 828, 11850, 5552, 311, 10013, 323, 6560, 6444, 13, 1102, 66251, 4861, 279, 3766, 20954, 2949, 279, 12914, 315, 3230, 27743, 8670, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c83a0>, 'json_data': {'input': [[18902, 79483, 25, 2009, 2315, 198, 2014, 940, 1534, 73094, 25, 578, 2316, 330, 2356, 2315, 1, 40019, 264, 10430, 389, 63897, 596, 71419, 28904, 11, 459, 3062, 13189, 315, 1202, 6020, 42356, 323, 25605, 25152, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8430>, 'json_data': {'input': [[18902, 79483, 25, 5751, 8323, 3878, 369, 9815, 2215, 43672, 13592, 555, 279, 4595, 323, 10687, 315, 1057, 6444, 323, 279, 3956, 477, 3600, 9076, 13, 578, 4751, 1990, 51744, 10332, 323, 994, 8323, 374, 4245, 374, 539, 5199, 13, 1789, 3738, 3956, 477, 3600, 323, 6444, 11, 584, 1397, 8323, 1603, 279, 3956, 477, 3600, 527, 12886, 311, 279, 6130, 13, 23212, 11, 9815, 2215, 43672, 5764, 15055, 369, 3600, 10887, 304, 12178, 315, 279, 1314, 311, 25637, 279, 6130, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 8323, 3878, 369, 9815, 2215, 43672, 11, 39686, 279, 54709, 3196, 389, 6130, 4595, 323, 3600, 9076, 13, 1102, 374, 961, 315, 279, 27927, 3857, 389, 9815, 2215, 43672, 6373, 323, 13254, 18324, 2949, 63897, 4953, 3238, 82, 6020, 13122, 11, 45293, 1268, 279, 2883, 29972, 8515, 6530, 5552, 311, 6130, 14507, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c84c0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 7694, 612, 1023, 11, 902, 5764, 30466, 8066, 389, 5195, 2778, 6012, 320, 16564, 30466, 505, 9629, 8066, 555, 2778, 8141, 8717, 889, 1005, 5195, 916, 439, 872, 1670, 2778, 304, 33957, 11, 5507, 25995, 11, 5099, 25390, 323, 1023, 5195, 13234, 323, 24026, 6012, 1093, 62046, 11, 5195, 28508, 11, 323, 5195, 7199, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 13254, 11306, 369, 5195, 7694, 612, 1023, 6012, 11, 8405, 264, 89328, 8830, 315, 279, 4595, 315, 30466, 8066, 505, 5195, 596, 5370, 2778, 14228, 3600, 323, 3956, 13, 1102, 7437, 279, 6566, 369, 4726, 3649, 389, 13254, 23914, 304, 17876, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8550>, 'json_data': {'input': [[18902, 79483, 25, 19149, 2806, 11, 9362, 220, 21251, 3391, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5764, 279, 3363, 323, 1614, 315, 279, 2883, 596, 12717, 5274, 11, 4726, 38938, 279, 3813, 369, 5897, 323, 23331, 10096, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c85e0>, 'json_data': {'input': [[18902, 79483, 25, 16666, 54463, 2857, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 16666, 54463, 2857, 11, 19392, 279, 2883, 753, 5603, 311, 25607, 323, 18646, 6807, 15635, 5938, 449, 1202, 6020, 24198, 13, 1102, 7437, 279, 6566, 369, 264, 810, 11944, 10430, 315, 279, 15635, 6532, 304, 1202, 6020, 67029, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8670>, 'json_data': {'input': [[18902, 79483, 25, 3842, 13370, 2136, 88, 11, 16478, 315, 279, 8925, 315, 46085, 11, 1555, 279, 3842, 445, 13, 13370, 2136, 88, 612, 41184, 622, 13, 13370, 2136, 88, 10315, 511, 481, 17236, 11, 18306, 264, 502, 11380, 3197, 389, 6841, 220, 16, 11, 220, 2366, 18, 320, 4291, 279, 1176, 6696, 1234, 279, 502, 3197, 13847, 369, 7552, 220, 717, 11, 220, 2366, 19, 570, 578, 11380, 3197, 690, 387, 7524, 3156, 5587, 220, 717, 11, 220, 2366, 20, 311, 4662, 220, 21, 11, 23888, 13551, 315, 3308, 356, 18880, 12937, 323, 220, 806, 11, 17014, 13551, 315, 3308, 362, 7874, 12937, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 35508, 315, 264, 11380, 3197, 555, 9489, 386, 1894, 11, 264, 4846, 4562, 315, 279, 8925, 315, 46085, 13, 578, 3649, 922, 279, 35508, 2457, 323, 279, 1396, 315, 13551, 6532, 527, 5199, 369, 8830, 4442, 304, 55465, 58348, 323, 4754, 3157, 25127, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8700>, 'json_data': {'input': [[18902, 79483, 25, 220, 1591, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 4461, 19813, 311, 264, 2199, 1396, 477, 3857, 11381, 2949, 279, 2246, 11, 13788, 439, 264, 34512, 1697, 12576, 369, 13016, 311, 25539, 3230, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8790>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5042, 5415, 330, 2149, 18992, 4953, 1210, 323, 17482, 439, 264, 4342, 477, 62469, 5905, 311, 279, 2883, 11, 31692, 279, 2317, 369, 279, 4553, 2246, 439, 459, 9974, 1934, 10968, 389, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8820>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c88b0>, 'json_data': {'input': [[18902, 79483, 25, 7837, 16976, 53076, 3083, 356, 2864, 1112, 24093, 220, 20, 30237, 21176, 48062, 31980, 9, 8927, 11079, 1905, 1372, 18610, 13, 29039, 356, 78387, 83751, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 279, 2316, 369, 279, 4876, 11951, 21760, 389, 63897, 4953, 3238, 82, 3308, 356, 6864, 5708, 13, 1115, 2316, 10109, 988, 279, 2768, 2262, 304, 279, 2317, 315, 47614, 279, 5178, 315, 2500, 538, 315, 63897, 596, 5708, 16662, 9959, 15285, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8940>, 'json_data': {'input': [[18902, 79483, 25, 37384, 287, 682, 315, 1521, 2294, 7528, 11704, 527, 24674, 15771, 323, 7766, 13, 3011, 374, 3249, 584, 3136, 311, 2793, 304, 15771, 1093, 1057, 8682, 6505, 10565, 1887, 11, 17669, 7074, 11, 323, 17669, 10565, 1887, 11, 439, 1664, 439, 7982, 1057, 3070, 315, 7766, 13, 1226, 1518, 28040, 4754, 369, 7766, 311, 387, 11190, 323, 1304, 1274, 596, 6439, 8831, 555, 35271, 279, 1888, 315, 1057, 15592, 11, 3241, 11, 323, 12035, 13, 1115, 4754, 374, 27000, 304, 1057, 5652, 9659, 315, 7766, 11, 1778, 439, 279, 502, 28569, 220, 23, 323, 28569, 220, 23, 1322, 11, 323, 279, 28569, 10573, 220, 17, 13, 32406, 3956, 323, 3600, 430, 1274, 17631, 389, 1475, 1938, 374, 264, 11879, 430, 584, 527, 26012, 304, 369, 279, 1317, 9860, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 22020, 63897, 596, 14529, 9341, 304, 5557, 323, 7766, 11, 82003, 279, 18052, 315, 15592, 323, 279, 4500, 315, 502, 12035, 11, 1093, 279, 28569, 220, 23, 323, 28569, 10573, 220, 17, 13, 1102, 10109, 988, 63897, 596, 2027, 8446, 2949, 279, 27927, 7057, 315, 47594, 1217, 3217, 1555, 19297, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c89d0>, 'json_data': {'input': [[18902, 79483, 25, 220, 972, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4461, 2500, 24693, 2449, 477, 264, 42271, 315, 2262, 5552, 311, 14640, 28987, 279, 2883, 11, 719, 2085, 67749, 2038, 3984, 304, 420, 50565, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0bd00>, 'json_data': {'input': [[18902, 79483, 25, 763, 6790, 220, 2366, 18, 11, 279, 435, 1950, 33, 11136, 5871, 52, 220, 2366, 18, 12, 2545, 330, 59998, 72837, 320, 46103, 220, 21112, 1680, 22728, 12760, 311, 33620, 15545, 11997, 42306, 1, 311, 9407, 279, 28957, 8670, 369, 8070, 13426, 11, 11951, 5552, 311, 279, 4478, 58755, 323, 8070, 13426, 7318, 13, 5871, 52, 220, 2366, 18, 12, 2545, 374, 7524, 369, 1057, 9974, 18852, 7314, 6186, 220, 16, 11, 220, 2366, 20, 11, 449, 4216, 25375, 15480, 13, 1226, 527, 5131, 38663, 279, 4754, 2515, 430, 279, 6177, 5410, 690, 617, 389, 1057, 6020, 5224, 75992, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 2500, 24043, 10886, 2713, 320, 1950, 52, 220, 2366, 18, 12, 2545, 8, 5552, 311, 8070, 3827, 75992, 13, 1102, 15151, 14827, 4442, 311, 13122, 8670, 7524, 304, 220, 2366, 20, 11, 902, 374, 16996, 369, 8830, 3938, 3827, 14228, 6020, 75992, 505, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0bc70>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 311, 3493, 2317, 369, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0bbe0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 54515, 315, 279, 22654, 315, 279, 2246, 439, 33152, 311, 63897, 4953, 2637, 4528, 311, 46613, 220, 17, 11, 902, 1253, 8854, 311, 55414, 279, 2317, 304, 2204, 14491, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0bb50>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 10534, 323, 5255, 1253, 304, 279, 3938, 3217, 8312, 67276, 11, 3430, 12992, 11, 4367, 4819, 11, 323, 14, 477, 5129, 3063, 3115, 430, 1436, 48291, 7958, 1057, 7677, 11, 16625, 555, 7257, 3769, 11, 3777, 18539, 11, 15266, 8824, 11, 9511, 67276, 11, 5064, 70742, 11, 43257, 8824, 11, 25544, 11, 7362, 11667, 9473, 7969, 11, 44995, 11, 24679, 323, 7637, 11835, 11, 6696, 42254, 323, 30740, 11, 9770, 9511, 10742, 11, 41329, 74281, 8670, 11, 87998, 39510, 11, 17903, 26885, 11, 5933, 51751, 477, 12495, 38305, 11, 279, 6372, 315, 10182, 2349, 320, 21470, 439, 9581, 2237, 10205, 11, 37846, 11, 39262, 11, 8798, 17301, 11, 99482, 323, 84913, 3805, 4367, 6372, 323, 2410, 24700, 82, 5938, 449, 93225, 27344, 11, 323, 7319, 13766, 31020, 705, 2410, 4814, 11, 323, 5199, 4442, 304, 279, 6020, 477, 2626, 3044, 315, 1057, 20972, 13, 4427, 315, 279, 6956, 584, 1005, 304, 1057, 11156, 14054, 323, 1057, 7766, 527, 2561, 505, 1193, 832, 477, 7347, 8336, 11, 323, 584, 1253, 539, 387, 3025, 311, 1505, 14039, 29629, 389, 37849, 3878, 304, 279, 1567, 315, 264, 8312, 8957, 44219, 13, 362, 5199, 8312, 75103, 430, 22223, 603, 477, 1057, 29629, 1436, 7781, 9200, 828, 4219, 32714, 477, 78588, 323, 7781, 11761, 2027, 18539, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 5370, 8312, 8957, 11774, 430, 279, 2883, 1253, 3663, 11, 1778, 439, 67276, 323, 4367, 4819, 13, 1102, 11725, 5361, 9434, 9547, 430, 1436, 48291, 5536, 7677, 11, 82003, 279, 23965, 315, 18646, 264, 3728, 8312, 8957, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0bac0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 279, 4272, 41165, 8895, 389, 1057, 7362, 11667, 8515, 6530, 305, 17327, 1603, 3827, 2515, 574, 400, 2618, 3610, 11, 902, 374, 3685, 311, 387, 312, 65974, 505, 362, 65083, 1139, 30466, 2949, 279, 1828, 220, 717, 4038, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 3230, 6020, 7216, 5552, 311, 41165, 20192, 389, 7362, 11667, 8515, 6530, 305, 17327, 11, 19392, 279, 3685, 312, 66481, 1139, 30466, 13, 1102, 6209, 264, 47616, 15813, 315, 279, 27375, 315, 61316, 3252, 15174, 927, 264, 4613, 4261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0ba30>, 'json_data': {'input': [[18902, 79483, 25, 578, 1925, 6956, 315, 1057, 432, 33465, 18512, 527, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3230, 6956, 315, 8483, 323, 11050, 320, 49, 33465, 8, 18512, 13, 1102, 374, 961, 315, 264, 11944, 3857, 430, 690, 13555, 279, 5540, 430, 17210, 311, 432, 33465, 7194, 11, 16996, 369, 8830, 9341, 304, 19297, 323, 2027, 4500, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0b9a0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5415, 330, 2149, 18992, 4953, 13, 1359, 43080, 279, 5502, 311, 902, 279, 6020, 12518, 323, 6821, 281, 7770, 11, 31692, 279, 2317, 369, 279, 6020, 2038, 430, 11263, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0b910>, 'json_data': {'input': [[18902, 79483, 25, 1226, 10519, 264, 16195, 1920, 369, 25607, 11, 47614, 11, 323, 18646, 3769, 15635, 505, 62542, 18208, 439, 961, 315, 1057, 27927, 5326, 6373, 1887, 323, 11618, 13, 1226, 6994, 1988, 11, 439, 8475, 11, 369, 1057, 62542, 5326, 6373, 2068, 389, 279, 4868, 5064, 323, 6023, 18845, 505, 5361, 9434, 11909, 323, 5419, 6023, 11478, 7411, 13, 40713, 315, 12514, 12625, 11, 7296, 11, 323, 4868, 15749, 42003, 62542, 5326, 6373, 323, 66860, 11, 10672, 27344, 11, 18468, 11, 323, 34630, 7246, 13, 37263, 369, 1521, 7411, 527, 15749, 449, 5655, 62542, 19248, 4028, 5361, 19647, 11, 2737, 1057, 23270, 4900, 315, 19406, 11, 19220, 11, 323, 8398, 17005, 13, 5751, 11145, 11692, 2128, 11, 3235, 449, 1988, 505, 279, 3485, 7411, 11, 527, 8647, 369, 1057, 8244, 20790, 5326, 6373, 1887, 323, 11618, 323, 15870, 2980, 62542, 15635, 304, 279, 2317, 315, 1023, 3769, 15635, 311, 279, 2883, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 16195, 5603, 63897, 5097, 311, 62542, 5326, 6373, 11, 45293, 279, 22315, 315, 5370, 7411, 323, 11692, 304, 47614, 323, 36090, 1113, 18208, 13, 1102, 66159, 279, 12939, 315, 62542, 304, 22973, 279, 2883, 596, 12032, 323, 17444, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0b880>, 'json_data': {'input': [[18902, 79483, 25, 12220, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 2860, 328, 5002, 20900, 5764, 400, 16739, 3610, 5938, 449, 32027, 14278, 7194, 13, 3580, 7181, 220, 23, 369, 4726, 3649, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 34945, 264, 3230, 328, 5002, 20900, 5938, 449, 32027, 14278, 7194, 304, 220, 2366, 18, 11, 19392, 279, 2883, 596, 69027, 477, 40291, 4954, 9045, 13, 1115, 374, 9959, 369, 8830, 279, 6020, 25127, 315, 1778, 11429, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0b7f0>, 'json_data': {'input': [[18902, 79483, 25, 220, 6069, 627, 2014, 940, 1534, 73094, 25, 1115, 374, 4461, 264, 2199, 1396, 5905, 477, 11381, 2949, 279, 2246, 11, 8405, 912, 12190, 2038, 389, 1202, 1866, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0b760>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 904, 1495, 11, 13788, 439, 264, 37666, 2449, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0b6d0>, 'json_data': {'input': [[18902, 79483, 25, 11443, 315, 30466, 574, 400, 9423, 13, 18, 7239, 11, 459, 5376, 315, 220, 21, 4, 1060, 927, 1060, 11, 15871, 16625, 555, 12992, 304, 2262, 24279, 7194, 11, 20448, 18512, 11, 323, 350, 1741, 13, 578, 5376, 304, 20448, 18512, 5343, 10405, 5552, 311, 9548, 3285, 685, 5938, 449, 279, 14278, 304, 1057, 32027, 13, 23212, 11, 2853, 315, 30466, 56128, 505, 264, 14278, 304, 94189, 4245, 311, 279, 2349, 304, 13240, 5505, 6439, 315, 1057, 16692, 323, 4009, 7241, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 2853, 315, 30466, 369, 279, 1060, 11, 26073, 279, 9547, 29820, 311, 1202, 5376, 11, 2737, 2262, 24279, 7194, 323, 20448, 18512, 13, 1102, 22020, 3230, 6020, 11774, 279, 2883, 17011, 11, 8104, 5552, 311, 32027, 47311, 11, 323, 64252, 13016, 922, 4442, 304, 94189, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0b640>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 12920, 3118, 6762, 2819, 323, 20547, 50204, 1534, 18151, 12715, 311, 362, 65083, 11, 71922, 555, 9341, 5699, 323, 279, 3160, 315, 892, 430, 3927, 34919, 617, 1027, 304, 264, 19815, 4814, 2361, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 12920, 32644, 6762, 2819, 323, 20547, 50204, 1534, 18151, 5552, 311, 5370, 9341, 11306, 11, 10209, 20616, 1139, 279, 5178, 315, 63897, 596, 11897, 34919, 927, 892, 323, 872, 2704, 304, 3878, 315, 3157, 51262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0b5b0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5042, 5415, 330, 2149, 18992, 4953, 1210, 323, 17482, 439, 264, 4342, 477, 62469, 5905, 311, 279, 2883, 11, 31692, 279, 2317, 369, 279, 4553, 2246, 439, 459, 9974, 1934, 10968, 389, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0b520>, 'json_data': {'input': [[18902, 79483, 25, 50270, 11, 15871, 3196, 389, 1057, 5845, 311, 7068, 6763, 11767, 11, 323, 13967, 6444, 11, 323, 311, 6493, 872, 43749, 304, 459, 11297, 323, 7524, 11827, 4028, 264, 8205, 315, 8141, 12006, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 12939, 315, 50270, 311, 5195, 596, 2626, 1646, 13, 1102, 22020, 279, 1205, 369, 5195, 311, 3493, 7524, 13172, 10105, 430, 7068, 11767, 323, 6444, 11, 9200, 369, 80184, 13254, 6650, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0b490>, 'json_data': {'input': [[18902, 79483, 25, 23139, 3984, 555, 26012, 7640, 17610, 15871, 315, 296, 2693, 1385, 323, 6763, 315, 22538, 304, 3157, 481, 323, 2536, 30004, 36164, 34919, 13, 23139, 1511, 304, 26012, 7640, 17610, 15871, 315, 24393, 315, 3157, 481, 323, 2536, 12, 3157, 481, 34919, 11, 24393, 315, 3424, 323, 7241, 11, 323, 14507, 369, 63948, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 1148, 42675, 8515, 3984, 555, 26012, 7640, 11, 39686, 9341, 15174, 323, 53869, 5552, 311, 3157, 481, 323, 2536, 30004, 36164, 34919, 11, 3424, 11, 323, 63948, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e60a0b400>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 15161, 17916, 11, 902, 27983, 15652, 6108, 12718, 323, 41455, 369, 14054, 11, 5452, 11, 323, 1023, 3600, 13, 4314, 3600, 3493, 2680, 311, 10105, 1778, 439, 62542, 11, 32906, 11, 28975, 11, 323, 15592, 33935, 2737, 1057, 15592, 14054, 11, 24103, 15592, 5452, 11, 323, 423, 14127, 15592, 369, 5195, 15161, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 5195, 15161, 17916, 323, 1202, 5938, 13254, 9659, 5528, 11, 82003, 1202, 33935, 304, 14054, 323, 3600, 11, 8104, 304, 24084, 13312, 5789, 1093, 15592, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8a60>, 'json_data': {'input': [[18902, 79483, 25, 55182, 28849, 4097, 20392, 555, 3932, 323, 2997, 28849, 389, 43749, 555, 842, 44480, 389, 5195, 2778, 6012, 323, 1023, 5195, 13234, 323, 24026, 6012, 2737, 62046, 11, 5195, 28508, 11, 323, 5195, 7199, 13, 11443, 12, 824, 29218, 374, 4613, 439, 4299, 32505, 30466, 18255, 555, 1057, 2860, 1396, 315, 7318, 28849, 323, 11105, 279, 5578, 3392, 584, 6900, 50270, 369, 1855, 20392, 555, 3932, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7434, 315, 7318, 28849, 11, 27409, 433, 323, 26073, 1202, 26431, 304, 30090, 1217, 20392, 449, 43749, 13, 1102, 34161, 279, 58191, 2065, 17150, 311, 1217, 22639, 4028, 5195, 596, 5370, 15771, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8af0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 17575, 369, 8070, 13426, 320, 258, 11990, 11, 3734, 369, 7524, 3827, 4478, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 2007, 29385, 4954, 8070, 1603, 13426, 11, 3827, 17575, 15055, 11, 323, 7524, 3827, 7969, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 11, 7718, 369, 42118, 3827, 15374, 323, 4442, 304, 3827, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8b80>, 'json_data': {'input': [[18902, 79483, 25, 14930, 5273, 77917, 315, 11842, 5364, 847, 36164, 58588, 46272, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 8712, 315, 6762, 907, 22323, 369, 2536, 30004, 36164, 25452, 34919, 13, 1102, 15151, 430, 279, 2768, 43743, 690, 4358, 1268, 1521, 22538, 527, 26126, 323, 5068, 11, 902, 374, 16996, 369, 8830, 63897, 4953, 3238, 82, 9341, 20136, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8c10>, 'json_data': {'input': [[18902, 79483, 25, 220, 2813, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 21070, 477, 6002, 11, 4461, 5552, 311, 279, 38846, 5897, 13146, 10430, 13, 1102, 1587, 539, 6782, 67749, 2038, 9959, 311, 8830, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8ca0>, 'json_data': {'input': [[18902, 79483, 25, 59127, 13398, 57477, 50, 7866, 83435, 21626, 31758, 50, 11, 430, 1855, 1732, 6832, 12223, 8111, 3770, 42675, 323, 9732, 82, 37902, 277, 393, 718, 2192, 323, 42893, 386, 13, 20388, 266, 11, 53258, 323, 3285, 750, 11, 813, 477, 1077, 14065, 3502, 2269, 533, 11, 449, 279, 2410, 315, 50068, 11, 369, 1461, 477, 1077, 304, 904, 323, 682, 59539, 11, 311, 1879, 904, 41693, 311, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 323, 311, 1052, 279, 1890, 11, 449, 50829, 9139, 11269, 323, 1023, 9477, 304, 3717, 9139, 98909, 11, 449, 279, 46272, 323, 19224, 9849, 11, 22552, 11494, 7922, 323, 50096, 682, 430, 1855, 315, 1071, 31434, 3502, 2269, 533, 11, 477, 813, 477, 1077, 28779, 477, 91362, 11, 1253, 656, 477, 5353, 311, 387, 2884, 555, 35460, 1618, 1073, 627, 2014, 940, 1534, 73094, 25, 1115, 1495, 18713, 1771, 311, 279, 2410, 315, 14065, 11938, 311, 37902, 277, 393, 718, 2192, 323, 42893, 386, 13, 20388, 266, 11, 10923, 1124, 311, 1180, 389, 17981, 315, 279, 1879, 38270, 369, 279, 26559, 315, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 13, 1102, 22020, 279, 5897, 11447, 91757, 311, 1521, 29509, 369, 16351, 41693, 323, 1023, 5552, 9477, 449, 279, 22370, 11, 902, 374, 264, 5410, 6725, 304, 13166, 35186, 311, 6106, 8907, 323, 6300, 13340, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8d30>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 14393, 279, 2883, 836, 11, 63897, 4953, 2637, 902, 17482, 439, 279, 14836, 369, 279, 4553, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8dc0>, 'json_data': {'input': [[18902, 79483, 25, 3061, 670, 38170, 304, 1057, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 617, 1027, 11, 323, 1253, 3136, 311, 387, 11, 11754, 555, 9547, 304, 5369, 311, 279, 4689, 9547, 7633, 3485, 11, 1778, 439, 4442, 304, 6130, 10648, 323, 7631, 11, 1396, 315, 31120, 11, 323, 65649, 304, 279, 18912, 315, 2027, 38175, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 9547, 66700, 65649, 304, 30466, 505, 5195, 41455, 11, 15771, 11, 323, 7766, 11, 19392, 430, 9434, 3157, 30295, 323, 5419, 2626, 15174, 690, 5536, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8e50>, 'json_data': {'input': [[18902, 79483, 25, 45578, 7410, 389, 1057, 10565, 37682, 505, 7859, 14640, 11, 7859, 10937, 11, 323, 7859, 7194, 369, 1690, 13878, 315, 1057, 2626, 13, 15903, 11, 3738, 315, 1057, 7194, 323, 18512, 527, 8965, 2753, 3977, 304, 7138, 323, 1253, 539, 81584, 311, 4442, 304, 13254, 13, 1226, 1253, 1101, 539, 387, 3025, 311, 9203, 1057, 9045, 311, 312, 50725, 261, 1057, 2853, 2385, 7946, 477, 304, 264, 32100, 11827, 13, 24586, 311, 1521, 9547, 323, 279, 42028, 7138, 315, 1057, 2626, 11, 1057, 13970, 13254, 6650, 4478, 323, 13970, 10565, 4850, 1253, 539, 387, 64005, 315, 1057, 3938, 5178, 13, 1789, 5217, 2038, 11, 1518, 50730, 304, 5751, 8184, 323, 17961, 13756, 323, 1050, 46469, 323, 3206, 295, 2065, 55290, 304, 3744, 8105, 11, 5858, 220, 22, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 10449, 35434, 279, 14529, 40850, 389, 10565, 37682, 4245, 311, 5370, 9547, 11, 2737, 23331, 7194, 323, 10937, 13, 1102, 72890, 279, 27924, 315, 3938, 6020, 5178, 3196, 389, 1510, 18845, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8ee0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 477, 4384, 10449, 323, 1587, 539, 3493, 904, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c8f70>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 279, 6771, 315, 36962, 3857, 11, 19392, 264, 24693, 2449, 315, 279, 2246, 430, 2942, 4861, 1202, 8970, 369, 4228, 10873, 323, 5905, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9000>, 'json_data': {'input': [[18902, 79483, 25, 1226, 75224, 7362, 11667, 4741, 323, 3072, 17517, 320, 16564, 4631, 1590, 8, 439, 8515, 6530, 305, 17327, 311, 42766, 3738, 18057, 291, 13254, 14463, 3453, 50615, 304, 36702, 1023, 1109, 279, 549, 815, 13, 18160, 13, 4314, 17517, 617, 296, 2693, 1385, 315, 220, 1187, 4038, 477, 2753, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 43851, 315, 7362, 11667, 4741, 323, 3072, 17517, 439, 8515, 6530, 305, 17327, 11, 26073, 872, 3230, 1005, 304, 79482, 13254, 14463, 13, 1102, 374, 3062, 369, 8830, 1268, 63897, 4953, 13, 36236, 1202, 13254, 23914, 505, 11667, 65649, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9090>, 'json_data': {'input': [[18902, 79483, 25, 16835, 13172, 8779, 18885, 3932, 6, 17985, 315, 323, 51552, 369, 50270, 6, 3956, 323, 3600, 11, 1555, 6946, 11, 1495, 11, 5448, 11, 323, 1023, 21416, 14058, 430, 1629, 4028, 5370, 7766, 13, 1226, 1520, 6883, 50270, 6493, 7528, 6946, 323, 1023, 4595, 315, 14058, 311, 3230, 30994, 369, 872, 6883, 52499, 8661, 21343, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 3649, 6883, 13172, 11, 26073, 1202, 7580, 304, 47594, 6883, 17985, 323, 51552, 4315, 3932, 13, 1102, 1946, 1392, 279, 3766, 10430, 389, 5178, 13172, 555, 67908, 2500, 45607, 315, 63897, 596, 13172, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9120>, 'json_data': {'input': [[18902, 79483, 25, 90462, 19971, 374, 2631, 311, 8417, 2225, 279, 29736, 11, 323, 279, 13240, 3392, 11, 315, 264, 4814, 5552, 311, 1778, 13146, 13, 15416, 5977, 6373, 753, 24043, 369, 323, 28957, 315, 4814, 39639, 6072, 505, 1521, 13146, 6532, 17436, 323, 44122, 54406, 19971, 304, 47614, 279, 8351, 753, 16865, 315, 279, 19463, 315, 264, 4814, 11, 323, 279, 13240, 3392, 477, 2134, 315, 4814, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 66159, 279, 19971, 2631, 555, 279, 6264, 12170, 311, 8720, 279, 29736, 323, 4754, 6020, 5536, 315, 279, 4814, 39639, 6072, 11, 39686, 279, 44122, 7138, 315, 1521, 56181, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c91b0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 46997, 11, 42134, 11, 6696, 24511, 11, 86918, 11, 323, 1023, 20207, 3424, 3268, 527, 3062, 12032, 369, 603, 13, 40741, 4455, 4994, 315, 1057, 2585, 17477, 264, 6023, 311, 1057, 20207, 3424, 3268, 11, 439, 1664, 439, 311, 1057, 3956, 11, 3600, 11, 323, 14645, 13, 1789, 3187, 11, 7524, 20207, 3424, 9313, 1253, 539, 387, 2561, 304, 1475, 3224, 304, 902, 1057, 3956, 323, 3600, 527, 4332, 477, 1903, 2561, 1555, 279, 8191, 13, 7429, 11, 279, 9045, 584, 617, 4529, 311, 6144, 1057, 34333, 3268, 1253, 539, 387, 14343, 477, 7524, 13, 10541, 584, 6056, 311, 6994, 25589, 9313, 369, 1057, 46045, 11, 433, 374, 3284, 584, 1253, 539, 387, 3025, 311, 6144, 1063, 315, 1521, 46045, 13, 23674, 11, 584, 1253, 539, 617, 26613, 25589, 477, 7065, 9313, 369, 3738, 46045, 430, 3010, 2543, 704, 311, 387, 3062, 13, 2684, 374, 2744, 279, 13336, 430, 279, 7036, 315, 279, 9313, 18661, 690, 387, 39413, 477, 430, 459, 11136, 25589, 1253, 387, 25660, 8482, 477, 653, 268, 9009, 481, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 5900, 1139, 7872, 922, 279, 4595, 315, 20207, 3424, 63897, 4953, 13, 10187, 323, 279, 4754, 18208, 311, 1521, 3268, 13, 1102, 59623, 279, 11774, 315, 22973, 46045, 4028, 2204, 56043, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9240>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 52678, 315, 4741, 31348, 12518, 11, 19392, 430, 279, 2768, 14491, 690, 82845, 19662, 1139, 279, 3230, 9547, 28987, 279, 2883, 596, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c92d0>, 'json_data': {'input': [[18902, 79483, 25, 320, 258, 11990, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 279, 12678, 304, 279, 2768, 12518, 527, 1101, 304, 11990, 11, 20958, 29237, 304, 279, 15864, 315, 6020, 828, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9360>, 'json_data': {'input': [[18902, 79483, 25, 1442, 279, 549, 815, 13, 18160, 58764, 555, 220, 605, 4, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 279, 3392, 12715, 304, 362, 65083, 5552, 311, 1057, 8515, 6530, 305, 17327, 1603, 3827, 2515, 1053, 617, 1027, 13489, 400, 16, 13, 18, 7239, 323, 400, 16, 13, 20, 7239, 4827, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 15947, 13, 578, 2349, 304, 279, 907, 12715, 304, 362, 65083, 1053, 387, 3685, 311, 4445, 264, 12435, 7362, 11667, 2349, 304, 18057, 291, 61316, 3640, 30466, 994, 15324, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 59159, 15398, 311, 41468, 279, 4754, 5536, 315, 264, 58764, 549, 815, 13, 18160, 389, 279, 2883, 753, 41165, 1023, 16195, 8070, 320, 32, 65083, 705, 45296, 279, 6020, 25127, 315, 11667, 61316, 3252, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c93f0>, 'json_data': {'input': [[18902, 79483, 25, 7089, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 44488, 2440, 430, 1587, 539, 6782, 904, 2262, 13, 1102, 1253, 8464, 311, 264, 3857, 14836, 477, 264, 6002, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9480>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 1050, 46469, 400, 220, 15574, 11, 21788, 400, 220, 16544, 11, 25192, 400, 220, 14777, 11, 20077, 64141, 323, 18512, 25, 11443, 315, 30466, 220, 5120, 11, 26164, 220, 9390, 11, 9639, 220, 9423, 11, 17079, 8483, 323, 4500, 220, 2148, 11, 19242, 220, 2137, 11, 2636, 220, 1774, 11, 20465, 16207, 323, 8661, 220, 1313, 11, 22750, 220, 1627, 11, 19282, 220, 1544, 11, 24391, 3331, 323, 23541, 220, 1032, 11, 15633, 220, 868, 11, 24735, 220, 845, 11, 17837, 10884, 7194, 323, 18512, 220, 11256, 11, 22614, 220, 12060, 11, 22897, 220, 12533, 11, 4645, 33620, 505, 7677, 220, 2495, 11, 23193, 220, 5728, 11, 25377, 220, 5833, 11, 17313, 7089, 8070, 320, 59857, 705, 4272, 220, 717, 11, 11139, 320, 18, 11, 20998, 8, 220, 16, 11, 18517, 33620, 1603, 8070, 13426, 220, 1954, 11, 24438, 220, 6028, 11, 16884, 220, 5313, 11, 25150, 72673, 369, 8070, 13426, 220, 975, 11, 19597, 220, 806, 11, 18349, 220, 806, 11, 20275, 9558, 8070, 400, 220, 4767, 11, 13103, 400, 220, 2946, 11, 24425, 400, 220, 5958, 11, 25808, 14967, 4272, 8070, 824, 4430, 315, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 400, 220, 20, 13, 3076, 400, 220, 19, 13, 2946, 400, 220, 20, 13, 5833, 53867, 2844, 4272, 8070, 824, 4430, 315, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 400, 220, 20, 13, 5547, 400, 220, 19, 13, 3487, 400, 220, 20, 13, 1490, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 18911, 11944, 6020, 828, 369, 279, 1667, 9670, 6790, 220, 2148, 369, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 39686, 30466, 11, 7194, 11, 4272, 8070, 11, 323, 24608, 824, 4430, 11, 16996, 369, 42118, 279, 2883, 596, 5178, 927, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9510>, 'json_data': {'input': [[18902, 79483, 25, 54463, 2857, 25368, 311, 86036, 315, 1057, 12937, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 21760, 389, 15635, 5938, 449, 5708, 15637, 11, 19392, 264, 6541, 304, 279, 10430, 9017, 63342, 14228, 4819, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c95a0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 323, 1587, 539, 17210, 2262, 9959, 311, 66251, 8830, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9630>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1057, 6918, 11, 1614, 11, 323, 7362, 4272, 10565, 4814, 6920, 2000, 4102, 369, 8070, 3827, 10096, 1051, 13489, 400, 22, 13, 16, 7239, 11, 400, 972, 13, 21, 7239, 11, 323, 400, 16, 13, 23, 7239, 15947, 13, 1442, 539, 34716, 11, 279, 6918, 4272, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 4272, 10565, 4814, 6920, 2000, 4102, 369, 6918, 11, 1614, 11, 323, 7362, 3827, 10096, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 22020, 279, 2883, 596, 4754, 3827, 7720, 505, 18151, 11953, 4741, 311, 4445, 3938, 59453, 8070, 11, 902, 374, 16595, 369, 8830, 872, 3827, 9293, 15174, 323, 3938, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c96c0>, 'json_data': {'input': [[18902, 79483, 25, 353, 3, 1041, 29091, 389, 6790, 220, 2148, 11, 220, 679, 23, 11, 304, 5708, 477, 304, 1963, 11, 2737, 15601, 94539, 315, 56364, 627, 2014, 940, 1534, 73094, 25, 1115, 87910, 5825, 64784, 389, 279, 9341, 12593, 6982, 304, 279, 4876, 11, 19392, 430, 279, 12678, 4097, 264, 59159, 400, 1041, 9341, 1903, 520, 264, 3230, 892, 11, 902, 8779, 66251, 553, 279, 5178, 17150, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:33 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-11-30 23:56:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9750>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15407, 330, 2149, 18992, 4953, 13, 1359, 33449, 287, 279, 2246, 753, 5357, 389, 279, 2883, 323, 23377, 430, 279, 2768, 2262, 18713, 1771, 11951, 311, 1202, 7677, 323, 6020, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608ca170>, 'json_data': {'input': [[18902, 79483, 25, 2057, 279, 12937, 17075, 323, 279, 8925, 315, 46085, 315, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 62469, 5224, 14564, 279, 5708, 17075, 323, 279, 8925, 315, 46085, 315, 63897, 4953, 2637, 19392, 279, 7580, 315, 279, 1934, 374, 311, 3118, 459, 9678, 25261, 9647, 389, 279, 2883, 596, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:34 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-11-30 23:56:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608ca0e0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2822, 1495, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608ca3b0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6625, 7677, 527, 5199, 311, 1057, 30466, 323, 4272, 8070, 11, 323, 584, 3197, 311, 3136, 311, 3139, 37545, 13, 7327, 30466, 41853, 369, 13489, 220, 4331, 4, 315, 1057, 60391, 30466, 304, 220, 2366, 18, 13, 763, 5369, 311, 15635, 7633, 18403, 304, 420, 3857, 11, 1057, 6625, 7677, 29241, 603, 311, 1023, 15635, 11, 2737, 279, 2768, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 26431, 315, 63897, 4953, 3238, 82, 6625, 7677, 11, 39686, 430, 814, 20162, 13489, 220, 4331, 4, 311, 279, 2883, 596, 60391, 30466, 304, 220, 2366, 18, 13, 1102, 7437, 279, 6566, 369, 264, 10430, 389, 279, 5370, 15635, 5938, 449, 6625, 7677, 11, 19392, 430, 279, 2768, 27855, 690, 13555, 1521, 3230, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608ca290>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 975, 13, 33620, 72837, 198, 2014, 940, 1534, 73094, 25, 1115, 15785, 279, 7314, 315, 264, 3857, 10968, 389, 33620, 72837, 11, 19392, 430, 279, 2768, 27855, 690, 3493, 11944, 2038, 9002, 63897, 4953, 3238, 82, 3827, 14228, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c97e0>, 'json_data': {'input': [[18902, 79483, 25, 220, 843, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 49926, 5905, 11, 4461, 19392, 264, 3857, 477, 1486, 304, 264, 1160, 13, 1102, 1253, 387, 1511, 311, 1520, 21546, 1555, 279, 2246, 11, 719, 555, 5196, 11, 433, 1587, 539, 3493, 67749, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608ca200>, 'json_data': {'input': [[18902, 79483, 25, 1666, 15592, 9731, 311, 7417, 19019, 11, 584, 527, 10968, 389, 7231, 11190, 4519, 311, 1057, 3932, 323, 6444, 439, 584, 6493, 389, 1057, 9131, 311, 31335, 279, 1917, 753, 2038, 323, 1304, 433, 61528, 15987, 323, 5505, 13, 3161, 264, 14265, 323, 8647, 5603, 11, 584, 3136, 311, 1935, 279, 1828, 7504, 311, 1304, 420, 5557, 1524, 810, 11190, 369, 5127, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 63897, 596, 5915, 315, 8405, 11190, 15592, 4519, 1418, 20958, 264, 8647, 5603, 311, 5557, 4500, 13, 1102, 95593, 279, 2883, 596, 9131, 323, 1202, 15507, 311, 31308, 38864, 304, 15592, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9870>, 'json_data': {'input': [[18902, 79483, 25, 1511, 555, 33151, 315, 1274, 31550, 1555, 4519, 1093, 32805, 18726, 304, 5195, 7694, 26, 14807, 4028, 220, 9423, 15823, 304, 5195, 38840, 26, 323, 7471, 11, 15389, 11, 323, 16039, 304, 5195, 16912, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 22020, 279, 16781, 1005, 315, 15592, 4028, 5370, 5195, 3956, 11, 94012, 1202, 24716, 3851, 323, 279, 7720, 433, 6209, 311, 3932, 13, 1115, 3857, 66159, 279, 2883, 596, 15507, 311, 77582, 15592, 369, 1217, 27886, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9900>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 13454, 315, 279, 17219, 311, 63897, 4953, 13, 505, 46613, 220, 17, 11, 8405, 6913, 2038, 922, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9990>, 'json_data': {'input': [[18902, 79483, 25, 220, 4767, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 5905, 1396, 477, 3857, 11381, 19392, 264, 42271, 477, 842, 315, 264, 3857, 11, 719, 433, 37856, 2262, 369, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9a20>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 578, 12262, 16, 10143, 374, 4461, 264, 87910, 477, 5905, 11381, 430, 15151, 5217, 93566, 2038, 477, 64784, 9002, 279, 38846, 828, 11, 47594, 279, 6742, 596, 8830, 315, 279, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9ab0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 1050, 46469, 400, 220, 15574, 11, 21788, 400, 220, 16544, 11, 25192, 400, 220, 14777, 11, 20077, 64141, 323, 18512, 25, 11443, 315, 30466, 220, 5120, 11, 26164, 220, 9390, 11, 9639, 220, 9423, 11, 17079, 8483, 323, 4500, 220, 2148, 11, 19242, 220, 2137, 11, 2636, 220, 1774, 11, 20465, 16207, 323, 8661, 220, 1313, 11, 22750, 220, 1627, 11, 19282, 220, 1544, 11, 24391, 3331, 323, 23541, 220, 1032, 11, 15633, 220, 868, 11, 24735, 220, 845, 11, 17837, 10884, 7194, 323, 18512, 220, 11256, 11, 22614, 220, 12060, 11, 22897, 220, 12533, 11, 4645, 33620, 505, 7677, 220, 2495, 11, 23193, 220, 5728, 11, 25377, 220, 5833, 11, 17313, 7089, 8070, 320, 59857, 705, 4272, 220, 717, 11, 11139, 320, 18, 11, 20998, 8, 220, 16, 11, 18517, 33620, 1603, 8070, 13426, 220, 1954, 11, 24438, 220, 6028, 11, 16884, 220, 5313, 11, 25150, 72673, 369, 8070, 13426, 220, 975, 11, 19597, 220, 806, 11, 18349, 220, 806, 11, 20275, 9558, 8070, 400, 220, 4767, 11, 13103, 400, 220, 2946, 11, 24425, 400, 220, 5958, 11, 25808, 14967, 4272, 8070, 824, 4430, 315, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 400, 220, 20, 13, 3076, 400, 220, 19, 13, 2946, 400, 220, 20, 13, 5833, 53867, 2844, 4272, 8070, 824, 4430, 315, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 400, 220, 20, 13, 5547, 400, 220, 19, 13, 3487, 400, 220, 20, 13, 1490, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 18911, 11944, 6020, 828, 369, 279, 1667, 9670, 6790, 220, 2148, 369, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 39686, 30466, 11, 7194, 11, 4272, 8070, 11, 323, 24608, 824, 4430, 11, 16996, 369, 42118, 279, 2883, 596, 5178, 927, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9b40>, 'json_data': {'input': [[18902, 79483, 25, 77990, 2206, 40412, 520, 14930, 5273, 389, 264, 11842, 265, 46839, 70128, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 25394, 22538, 17303, 520, 6762, 907, 389, 264, 2536, 265, 46839, 8197, 13, 1102, 17738, 264, 6541, 304, 5357, 2949, 279, 2246, 311, 264, 3230, 5699, 315, 22538, 430, 656, 539, 617, 31368, 6449, 481, 3157, 2819, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9bd0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 1226, 3136, 311, 3663, 459, 42028, 23331, 4676, 11, 323, 584, 527, 3917, 311, 8349, 11, 43986, 11, 26969, 11, 323, 1023, 7739, 315, 4754, 5897, 24305, 11, 902, 1436, 7958, 1057, 2626, 12659, 323, 6020, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 42028, 23331, 4676, 439, 264, 5199, 8331, 28987, 63897, 753, 7677, 13, 1102, 17738, 311, 279, 6742, 430, 279, 2883, 12580, 14529, 5897, 323, 23331, 11774, 430, 1436, 5536, 1202, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9c60>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 30466, 6824, 315, 30466, 505, 512, 2014, 940, 1534, 73094, 25, 23548, 279, 4342, 505, 46613, 220, 22, 11, 420, 12143, 12302, 311, 21782, 279, 8336, 315, 13254, 11951, 71526, 311, 5195, 15161, 13, 1102, 7437, 279, 6566, 369, 264, 11944, 31085, 315, 279, 5370, 6956, 430, 17210, 311, 420, 10449, 596, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9cf0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1101, 9395, 311, 35608, 279, 27068, 315, 35326, 5070, 4028, 1057, 7677, 11, 3956, 11, 323, 8312, 27271, 13, 5751, 28029, 488, 16565, 5357, 389, 30829, 704, 12571, 505, 279, 1212, 11, 10494, 7384, 304, 1005, 369, 439, 1317, 439, 3284, 11, 323, 22923, 9498, 7384, 72318, 1057, 828, 19169, 11, 93162, 11, 323, 3956, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 35434, 5195, 596, 16565, 20034, 520, 88278, 5211, 27068, 323, 12571, 14278, 4028, 1202, 7677, 323, 8312, 27271, 13, 1102, 66159, 279, 2883, 596, 15507, 311, 28029, 8752, 12659, 11, 29820, 311, 1202, 8244, 41329, 19775, 323, 12434, 12014, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9d80>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5415, 330, 2149, 18992, 4953, 1210, 4461, 19392, 279, 2316, 477, 4342, 315, 279, 2246, 13, 1102, 10109, 988, 279, 2262, 439, 33152, 311, 63897, 4953, 2637, 279, 2748, 2883, 315, 5195, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9e10>, 'json_data': {'input': [[18902, 79483, 25, 35211, 7194, 527, 539, 20816, 311, 1057, 21282, 1606, 814, 4097, 63897, 11852, 7640, 13, 4314, 7194, 15871, 2997, 15592, 52373, 6222, 432, 33465, 7640, 11, 2737, 4500, 7194, 315, 1057, 4689, 15592, 4211, 26, 13166, 28271, 1778, 439, 1057, 58738, 45036, 7640, 26, 13166, 6222, 7194, 1778, 439, 3738, 17452, 11, 3823, 5211, 11, 323, 5897, 7194, 11, 2737, 3738, 35018, 323, 45704, 13, 79069, 5938, 449, 47311, 304, 1057, 32027, 323, 5274, 3634, 2391, 220, 2366, 18, 1051, 539, 20816, 311, 1057, 21282, 13, 23212, 11, 61316, 3252, 20192, 320, 9563, 288, 8, 5552, 311, 13254, 527, 539, 20816, 311, 1057, 21282, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 430, 3738, 7194, 7293, 653, 58472, 311, 279, 21282, 1606, 814, 281, 7770, 311, 63897, 11852, 7640, 11, 8405, 2317, 369, 8830, 279, 8244, 2853, 12914, 315, 279, 7471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9ea0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 264, 2883, 25480, 5149, 38199, 311, 312, 50725, 261, 1057, 2853, 2385, 13, 1666, 961, 315, 420, 2068, 11, 304, 6186, 220, 2366, 18, 11, 584, 7376, 264, 14278, 315, 1057, 32027, 13, 1666, 264, 1121, 11, 2860, 9548, 3285, 685, 323, 5552, 10405, 12715, 2391, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 1051, 400, 17, 13, 16, 7239, 13, 3804, 4811, 34575, 682, 315, 279, 8420, 11754, 1051, 912, 5129, 5343, 304, 1057, 2010, 1868, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 32027, 14278, 20770, 9932, 304, 7181, 220, 23, 13, 1102, 3649, 279, 2883, 596, 5597, 311, 8108, 5687, 439, 961, 315, 264, 27927, 2853, 5621, 99015, 5149, 11, 8405, 47616, 828, 389, 3285, 685, 7194, 369, 279, 20323, 1060, 220, 2366, 18, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9f30>, 'json_data': {'input': [[18902, 79483, 25, 29108, 811, 389, 13756, 13071, 315, 33170, 323, 75111, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 38088, 9669, 315, 11835, 323, 16346, 11, 39686, 430, 1418, 9045, 527, 1903, 311, 6106, 27375, 11, 10973, 44701, 4250, 387, 19883, 11, 902, 374, 3062, 369, 5326, 6373, 38864, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608c9fc0>, 'json_data': {'input': [[18902, 79483, 25, 59316, 685, 5764, 15055, 311, 387, 23183, 304, 8515, 11, 41853, 369, 439, 832, 7394, 91605, 9548, 35508, 7720, 11, 323, 328, 5002, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 279, 7138, 315, 3285, 685, 14507, 9932, 6931, 11, 26073, 430, 814, 2997, 2225, 8515, 45704, 323, 5708, 6108, 20448, 13, 1102, 11621, 2317, 311, 279, 6020, 25127, 315, 279, 32027, 14278, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608ca050>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 16207, 323, 8661, 18512, 400, 220, 1627, 11, 19282, 400, 220, 1544, 11, 24391, 16207, 323, 8661, 18512, 439, 264, 11668, 315, 30466, 220, 24, 1034, 220, 24, 33648, 2014, 940, 1534, 73094, 25, 1115, 2007, 18911, 3230, 6020, 12678, 369, 16207, 323, 18729, 18512, 11, 68365, 264, 1060, 29352, 4771, 12593, 13, 578, 828, 8779, 39210, 3619, 1268, 1790, 279, 2883, 374, 26012, 304, 1521, 5789, 8844, 311, 1202, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608ca440>, 'json_data': {'input': [[18902, 79483, 25, 1226, 15641, 32905, 24198, 304, 279, 79980, 660, 31946, 61572, 520, 6762, 907, 323, 49229, 279, 43645, 15871, 2949, 9580, 220, 17, 304, 279, 6762, 907, 30022, 13, 1226, 3118, 1057, 37204, 17517, 320, 276, 3072, 8446, 40056, 315, 264, 10824, 315, 15075, 323, 5439, 2671, 8, 520, 4272, 6762, 2819, 323, 3118, 682, 1023, 43645, 520, 20547, 6762, 2819, 13, 578, 24043, 6514, 369, 43645, 374, 3196, 389, 279, 10825, 1005, 323, 42766, 43851, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 1268, 32905, 24198, 527, 15324, 304, 6020, 12518, 11, 82003, 872, 6762, 907, 24790, 13, 1102, 50729, 279, 24043, 6514, 323, 22824, 2065, 315, 43645, 304, 279, 6020, 13122, 30022, 11, 10695, 311, 38263, 279, 6020, 25127, 315, 1521, 24198, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608ca4d0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 279, 2883, 836, 11, 63897, 4953, 2637, 4461, 13788, 439, 264, 4342, 477, 2316, 369, 279, 2246, 477, 264, 3857, 2949, 433, 13, 1102, 64664, 279, 9764, 315, 279, 23702, 519, 369, 279, 1934, 1694, 14407, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608ca560>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 9303, 25, 12411, 323, 1614, 400, 220, 605, 11, 9390, 400, 220, 1114, 11, 4364, 400, 220, 1114, 11, 6549, 19620, 220, 17, 11, 25073, 220, 17, 11, 20165, 220, 17, 11, 22593, 10884, 220, 717, 11, 23141, 220, 777, 11, 22303, 220, 777, 11, 23409, 76615, 25, 12411, 323, 1614, 220, 17, 11, 16745, 320, 23, 11, 24130, 8, 320, 22, 11, 21984, 8, 19620, 320, 8878, 8, 320, 10465, 8, 320, 14125, 8, 10884, 220, 16, 11, 24902, 320, 23, 11, 3753, 8, 320, 22, 11, 22194, 8, 72673, 369, 8070, 13426, 400, 220, 975, 11, 19597, 400, 220, 806, 11, 18349, 400, 220, 806, 11, 20275, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 315, 279, 17575, 369, 8070, 13426, 11, 32644, 11944, 12678, 369, 1510, 323, 27334, 13426, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1115, 2038, 374, 7718, 369, 6020, 6492, 323, 8830, 3827, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608ca5f0>, 'json_data': {'input': [[18902, 79483, 25, 23139, 11, 8515, 86106, 11, 323, 3157, 481, 25452, 34919, 527, 17303, 520, 6762, 907, 323, 21771, 2949, 9580, 220, 16, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 24790, 315, 8515, 11, 8515, 86106, 11, 323, 3157, 481, 25452, 34919, 3196, 389, 872, 6762, 907, 22323, 11, 11951, 2949, 9580, 220, 16, 315, 279, 6762, 907, 30022, 13, 1115, 24790, 374, 3062, 369, 47614, 279, 53113, 323, 5326, 5643, 315, 1521, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608ca680>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 8349, 11, 43986, 11, 23331, 323, 3109, 26969, 11, 1023, 29407, 11, 323, 14771, 10373, 16239, 10937, 11, 20207, 3424, 11, 828, 4868, 11, 3827, 323, 5552, 8907, 11, 9511, 323, 14740, 11, 8518, 42254, 11, 2262, 8066, 555, 1057, 3932, 11, 11822, 323, 3600, 9076, 555, 50270, 477, 36717, 1701, 1057, 15771, 11, 4443, 11134, 11, 11761, 9313, 11, 323, 1023, 13146, 13, 1789, 3187, 11, 304, 6790, 220, 2366, 18, 11, 264, 7188, 21928, 12886, 264, 36543, 304, 40467, 11871, 348, 13, 5195, 9455, 430, 5195, 34521, 3276, 85971, 7016, 5552, 311, 5195, 7199, 596, 2626, 13, 578, 1685, 6714, 11913, 690, 8417, 51236, 304, 220, 2366, 19, 11, 323, 279, 2134, 315, 4754, 51236, 13592, 13882, 13, 1226, 3197, 311, 14638, 13, 1226, 1101, 48582, 617, 828, 24455, 430, 584, 1934, 311, 9959, 40242, 439, 2631, 555, 2383, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 5370, 5897, 15635, 323, 14640, 63897, 12580, 4028, 5361, 31576, 11, 2737, 10937, 11, 20207, 3424, 11, 323, 11761, 9313, 13, 1102, 15407, 264, 5199, 3293, 36543, 2403, 5195, 304, 459, 3276, 85971, 1162, 11, 94012, 279, 4754, 8389, 16296, 315, 14529, 39725, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608ca710>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4689, 4342, 25607, 279, 2246, 439, 5552, 311, 63897, 4953, 13, 1102, 66251, 4861, 279, 2262, 2949, 279, 12914, 315, 279, 2883, 753, 6020, 13122, 323, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608ca7a0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 41738, 7, 16, 8, 14851, 8623, 7, 17, 8, 41738, 7, 16, 8, 14851, 8623, 7, 17, 8, 13031, 344, 5983, 24073, 439, 61316, 3252, 24198, 25, 19620, 9473, 17517, 400, 220, 15828, 400, 220, 20866, 400, 220, 10866, 400, 220, 12754, 13031, 344, 5983, 539, 24073, 439, 61316, 3252, 24198, 25, 19620, 9473, 17517, 220, 12676, 220, 12060, 220, 9565, 220, 10132, 7089, 17517, 220, 1272, 220, 2618, 220, 8011, 220, 2618, 10884, 43645, 539, 24073, 439, 61316, 3252, 24198, 220, 16408, 220, 12375, 220, 14185, 220, 9639, 10884, 400, 220, 24187, 400, 220, 19232, 400, 220, 20235, 400, 220, 19697, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 11944, 2038, 389, 279, 6762, 2819, 315, 19310, 32905, 24198, 11, 2737, 2225, 12032, 323, 58165, 13, 1102, 44072, 311, 279, 8244, 6492, 315, 279, 2883, 753, 32905, 10093, 11, 20064, 7922, 872, 6020, 6372, 389, 279, 8335, 11071, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608ca830>, 'json_data': {'input': [[18902, 79483, 25, 220, 4044, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 3857, 1396, 2949, 279, 2246, 11, 19392, 430, 433, 374, 4461, 961, 315, 264, 1160, 477, 21782, 11, 11000, 5552, 311, 279, 6020, 12518, 477, 8554, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608ca8c0>, 'json_data': {'input': [[18902, 79483, 25, 4442, 304, 3756, 6651, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 3585, 704, 4442, 304, 3756, 6651, 439, 264, 8331, 28987, 13172, 17150, 11, 23377, 430, 29735, 304, 1217, 7865, 323, 5557, 649, 5536, 1268, 14058, 527, 12886, 323, 17045, 449, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608ca950>, 'json_data': {'input': [[18902, 79483, 25, 25074, 20900, 374, 4272, 315, 2802, 98421, 315, 400, 9892, 3610, 11, 400, 4386, 3610, 11, 323, 400, 10562, 3610, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 6020, 3649, 5552, 311, 2802, 20900, 11, 39686, 1268, 1790, 2802, 574, 98421, 304, 6020, 13122, 369, 279, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 374, 961, 315, 279, 69051, 6020, 5224, 2038, 3857, 11, 21760, 389, 279, 2883, 753, 11897, 6373, 323, 1202, 5536, 389, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608ca9e0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 617, 10862, 1139, 73657, 430, 617, 539, 3686, 65362, 449, 2875, 9860, 323, 1317, 12, 4751, 3938, 26120, 14507, 315, 400, 23480, 3610, 323, 400, 18, 13, 18, 7239, 430, 527, 539, 3686, 12715, 389, 1057, 79980, 660, 31946, 61572, 13, 4314, 73657, 690, 56445, 1990, 220, 2366, 19, 323, 220, 2366, 21, 449, 2536, 86103, 481, 26120, 3878, 1990, 832, 323, 220, 914, 1667, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 73657, 430, 527, 539, 3686, 65362, 719, 617, 1027, 7378, 5304, 11, 19392, 3938, 6020, 30255, 430, 527, 539, 3686, 27000, 389, 279, 8335, 11071, 13, 1102, 20405, 1139, 279, 8244, 3857, 389, 73657, 11, 82003, 279, 2883, 596, 59314, 9293, 369, 3938, 3634, 3966, 323, 4754, 6020, 25127, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608caa70>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 311, 1057, 9045, 311, 5471, 323, 50460, 21516, 8951, 11, 584, 527, 3339, 5199, 22538, 304, 7296, 11, 4868, 11, 323, 3477, 9045, 311, 12896, 62851, 315, 1057, 3600, 323, 45571, 2680, 311, 1217, 828, 555, 4948, 9875, 11, 2737, 8990, 323, 3477, 315, 5452, 8522, 430, 1436, 2680, 279, 2038, 315, 3932, 315, 1057, 3600, 13, 1666, 264, 1121, 315, 1521, 9045, 11, 584, 617, 304, 279, 3347, 11352, 11, 323, 1253, 304, 279, 3938, 7142, 11, 24455, 315, 26225, 2680, 311, 477, 62851, 315, 1217, 828, 477, 1023, 77344, 5820, 555, 4948, 9875, 13, 4452, 11, 584, 1253, 539, 617, 11352, 11, 323, 1253, 304, 279, 3938, 539, 7142, 11, 682, 1778, 24455, 477, 5820, 11, 3508, 439, 264, 1121, 315, 1057, 828, 9669, 11, 2737, 1057, 6996, 315, 24035, 927, 1057, 25461, 3600, 11, 279, 5569, 315, 5820, 389, 1057, 5452, 11, 477, 1023, 9547, 11, 2737, 9547, 4994, 315, 1057, 2585, 1778, 439, 264, 5933, 21426, 477, 28522, 11, 323, 584, 1253, 4048, 315, 1778, 24455, 477, 5820, 4669, 4948, 9875, 13, 15483, 24455, 323, 7640, 1253, 2997, 279, 1005, 315, 1217, 828, 477, 1057, 6067, 304, 264, 11827, 40240, 449, 1057, 3878, 11, 17517, 477, 10396, 11, 279, 14209, 315, 905, 477, 77344, 1217, 9815, 11, 6355, 32317, 11, 41086, 1008, 24393, 11, 7640, 430, 40250, 1274, 753, 7296, 389, 12, 477, 1022, 8614, 11, 477, 13422, 315, 26396, 5424, 11, 82538, 11, 477, 31135, 834, 26125, 13, 6104, 584, 1253, 539, 8417, 1063, 315, 1521, 24455, 311, 387, 3769, 520, 279, 892, 814, 10222, 323, 584, 1253, 40239, 1124, 6288, 11, 1070, 374, 912, 15803, 430, 1521, 4819, 690, 539, 13967, 1121, 304, 5199, 5897, 11, 6020, 11, 323, 43839, 1697, 11682, 11, 2737, 3109, 44983, 323, 13627, 6299, 11, 39725, 11, 323, 8389, 43763, 13, 2684, 374, 1101, 912, 15803, 430, 264, 4101, 315, 5552, 4819, 1253, 539, 387, 11075, 311, 387, 3769, 520, 264, 3010, 2457, 304, 279, 24069, 11, 1524, 422, 814, 1253, 539, 387, 3769, 32399, 520, 279, 892, 315, 872, 32659, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 28271, 9932, 304, 46613, 220, 16, 555, 45293, 279, 3230, 9045, 279, 2883, 374, 3339, 311, 12896, 62851, 323, 45571, 2680, 311, 1217, 828, 13, 1102, 22020, 279, 23965, 315, 1521, 9045, 11, 61708, 279, 4754, 369, 2073, 295, 1599, 24455, 8994, 14529, 22538, 11, 323, 12018, 2548, 21738, 279, 25127, 315, 1521, 24455, 389, 5897, 323, 43839, 1697, 13878, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cab00>, 'json_data': {'input': [[18902, 79483, 25, 1666, 961, 315, 1057, 62542, 5326, 6373, 1887, 11, 1057, 10672, 6373, 7411, 3839, 323, 1515, 12625, 323, 4868, 24455, 4028, 63897, 11, 1057, 29629, 11, 323, 1023, 4948, 24993, 2532, 12850, 311, 34630, 6629, 323, 9006, 904, 1778, 24455, 13, 90462, 24455, 527, 22690, 15870, 555, 264, 5425, 99616, 3318, 1912, 311, 8417, 3508, 4726, 71389, 374, 8475, 13, 5884, 10672, 32448, 439, 13893, 1694, 477, 13893, 10671, 3769, 374, 7214, 81700, 369, 4726, 15813, 11, 323, 1243, 5068, 311, 24073, 3697, 315, 1057, 10195, 6373, 13, 1226, 8666, 449, 4994, 16467, 439, 8475, 11, 2737, 389, 3769, 488, 6492, 323, 28957, 13146, 11, 323, 1057, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 62542, 11, 82003, 279, 11618, 304, 2035, 369, 15194, 323, 18646, 24455, 13, 1102, 22020, 279, 12939, 315, 4062, 71389, 323, 2077, 311, 4754, 18208, 11, 902, 374, 9200, 369, 20958, 25605, 17025, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cab90>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5274, 13077, 11, 5015, 5352, 4500, 7224, 11, 323, 4857, 18637, 320, 19171, 14183, 311, 439, 330, 6410, 85075, 39709, 2014, 940, 1534, 73094, 25, 1115, 17889, 1486, 9731, 279, 10430, 315, 6864, 22538, 555, 45391, 5274, 13077, 323, 4500, 7224, 13, 1102, 66159, 279, 2883, 596, 8244, 8446, 369, 7106, 3634, 323, 1268, 433, 11815, 1202, 25605, 9021, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cac20>, 'json_data': {'input': [[18902, 79483, 25, 26572, 2740, 11, 584, 8720, 3508, 904, 4442, 304, 1057, 2802, 477, 5133, 449, 279, 5502, 7958, 1057, 26314, 315, 3508, 279, 5502, 374, 264, 650, 5484, 323, 11, 422, 779, 11, 3508, 584, 527, 279, 6156, 63932, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 1920, 369, 48582, 47614, 4442, 304, 12135, 449, 15086, 311, 8417, 422, 814, 7958, 650, 5484, 2704, 13, 1102, 374, 961, 315, 279, 650, 5484, 6373, 323, 24043, 10396, 11, 82003, 279, 1205, 369, 14529, 16865, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cacb0>, 'json_data': {'input': [[18902, 79483, 25, 480, 1771, 323, 25733, 288, 389, 23927, 323, 11842, 30004, 36164, 58588, 46272, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 430, 94594, 20192, 323, 18151, 389, 2225, 3157, 481, 323, 2536, 30004, 36164, 25452, 34919, 13, 1102, 15151, 264, 5357, 389, 279, 6020, 5178, 315, 25452, 22538, 2949, 279, 8244, 6020, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cad40>, 'json_data': {'input': [[18902, 79483, 25, 68415, 2212, 279, 1917, 617, 18306, 323, 527, 13126, 264, 1396, 315, 27743, 323, 23331, 25243, 18815, 828, 9313, 11, 828, 10648, 11, 323, 26542, 315, 1217, 828, 13, 2467, 4550, 5897, 78688, 11, 13543, 11, 477, 19812, 617, 19543, 304, 11, 323, 1253, 3136, 311, 1121, 304, 11, 35018, 323, 10373, 23537, 430, 584, 2349, 1057, 12659, 11, 902, 617, 1047, 323, 1436, 3136, 311, 617, 459, 31959, 2515, 389, 1268, 584, 3493, 3600, 11, 90255, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 13, 4314, 7016, 323, 14640, 527, 42028, 323, 3917, 311, 23692, 11, 323, 8907, 30255, 1436, 5353, 603, 311, 62622, 12190, 7194, 477, 11682, 279, 4367, 323, 7677, 315, 1057, 3956, 323, 3600, 304, 5627, 430, 11682, 1057, 2626, 13, 26379, 315, 1521, 7016, 2997, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 3728, 2317, 315, 12625, 7016, 323, 279, 4754, 369, 31959, 5897, 20124, 430, 1436, 4541, 20227, 4442, 304, 63897, 596, 2626, 12659, 13, 1102, 22020, 279, 6020, 323, 25605, 64074, 315, 8907, 11, 59049, 279, 10430, 2949, 279, 27927, 25127, 369, 279, 2883, 596, 7677, 323, 17444, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cadd0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 4689, 323, 23541, 18512, 320, 258, 11990, 11, 3734, 54208, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 264, 2007, 690, 1833, 11, 32644, 35876, 828, 5552, 311, 3331, 323, 52941, 18512, 11, 4528, 311, 279, 3766, 14491, 389, 432, 33465, 323, 16207, 323, 18729, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cae60>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 9865, 1109, 220, 717, 52446, 220, 717, 52446, 477, 33381, 10884, 81019, 1534, 81019, 1534, 81019, 1534, 14930, 5273, 25733, 14930, 5273, 25733, 14930, 5273, 25733, 10423, 27460, 400, 220, 1691, 11, 21602, 400, 320, 16, 11, 8759, 8, 400, 220, 1032, 11, 20596, 400, 320, 16, 11, 20945, 8, 400, 220, 1958, 11, 21144, 400, 320, 17, 11, 23785, 8, 36565, 11897, 34919, 220, 806, 11, 14261, 320, 14868, 8, 220, 868, 11, 6549, 320, 16, 11, 24130, 8, 220, 1627, 11, 17228, 320, 16, 11, 21776, 8, 48780, 46128, 323, 9513, 46128, 34919, 220, 22, 11, 23309, 320, 21535, 8, 220, 21, 11, 26281, 320, 23480, 8, 220, 975, 11, 25458, 320, 16, 11, 12754, 8, 10884, 400, 220, 2137, 11, 22992, 400, 320, 17, 11, 23273, 8, 400, 220, 1758, 11, 22369, 400, 320, 17, 11, 11711, 8, 400, 220, 2075, 11, 21851, 400, 320, 19, 11, 25659, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 12399, 2007, 315, 50204, 1534, 20192, 323, 18151, 389, 5370, 11306, 315, 11897, 34919, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 13, 1102, 374, 961, 315, 279, 27927, 3857, 25394, 279, 6762, 907, 22323, 315, 6020, 24198, 11, 11951, 45293, 279, 5178, 315, 3109, 27460, 11, 13166, 11897, 34919, 11, 323, 21515, 46128, 34919, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608caef0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 2883, 836, 320, 2149, 18992, 4953, 25390, 31692, 279, 2317, 369, 279, 4553, 2246, 11, 902, 17610, 315, 279, 6020, 12518, 323, 5552, 75992, 369, 420, 3230, 5502, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608caf80>, 'json_data': {'input': [[18902, 79483, 25, 14727, 1334, 479, 315, 5843, 8288, 2270, 41738, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 330, 26282, 1334, 479, 315, 5843, 8288, 2270, 41738, 1359, 19392, 430, 279, 2883, 15870, 67349, 1202, 12032, 369, 4754, 53317, 13, 1115, 374, 5199, 369, 20958, 279, 17025, 315, 279, 9513, 2819, 5068, 389, 279, 8335, 11071, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cb010>, 'json_data': {'input': [[18902, 79483, 25, 1226, 2997, 279, 3135, 315, 7677, 315, 279, 9873, 430, 584, 21953, 439, 315, 279, 24279, 2457, 13, 1226, 22864, 279, 7782, 3430, 315, 279, 63948, 311, 279, 12032, 19426, 323, 58165, 19655, 3196, 389, 872, 13240, 6762, 2819, 11, 3734, 369, 13254, 17517, 19426, 11, 902, 527, 15324, 304, 18859, 449, 1057, 13254, 18324, 4947, 13, 578, 13937, 315, 279, 7782, 3430, 927, 279, 6762, 2819, 315, 72450, 12032, 323, 58165, 374, 12715, 439, 82746, 13, 73471, 14228, 18512, 527, 15324, 26214, 505, 279, 2626, 10824, 323, 527, 1367, 30040, 439, 52872, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 24043, 6514, 369, 2626, 28559, 11, 45293, 1268, 7782, 7729, 527, 20816, 323, 1268, 82746, 374, 12715, 13, 1115, 374, 16595, 369, 8830, 279, 6020, 25127, 315, 63948, 389, 279, 2883, 596, 8335, 11071, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cb0a0>, 'json_data': {'input': [[18902, 79483, 25, 220, 914, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 477, 3857, 1396, 11, 4461, 1511, 369, 10873, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cb130>, 'json_data': {'input': [[18902, 79483, 25, 36899, 65649, 304, 7757, 10648, 323, 87386, 53869, 11, 16940, 2626, 18845, 1778, 439, 8776, 11040, 3280, 2786, 11, 902, 527, 4461, 311, 5353, 65649, 304, 1057, 51534, 3135, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 9547, 430, 1436, 3063, 311, 65649, 304, 63897, 596, 51534, 3135, 13, 1102, 374, 961, 315, 279, 4741, 31348, 12518, 323, 5326, 9547, 11, 82003, 1268, 36899, 18845, 304, 7757, 10648, 323, 13172, 649, 10383, 6020, 5178, 11, 8104, 2391, 8776, 11040, 15956, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cb1c0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 312, 2058, 988, 279, 2007, 315, 8970, 11, 68365, 10873, 369, 279, 6742, 311, 25539, 3230, 14491, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cb250>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 8, 45285, 2109, 73350, 2997, 68770, 839, 2109, 75202, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5764, 264, 87910, 9002, 279, 13551, 2109, 73350, 11, 19392, 430, 433, 5764, 68770, 839, 2109, 75202, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1115, 64784, 374, 3062, 369, 13687, 6020, 13122, 323, 8830, 279, 18912, 315, 4430, 14463, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cb2e0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1054, 2620, 315, 36962, 863, 15151, 430, 420, 3857, 374, 961, 315, 279, 2246, 596, 41295, 6070, 11, 51346, 13016, 311, 5370, 14491, 2949, 279, 1934, 369, 8831, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cb370>, 'json_data': {'input': [[18902, 79483, 25, 33620, 72837, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 8712, 315, 8070, 13426, 11, 19392, 430, 279, 17876, 10430, 690, 3504, 279, 2883, 596, 3827, 30255, 323, 24043, 12659, 5552, 311, 13426, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cb400>, 'json_data': {'input': [[18902, 79483, 25, 23212, 11, 65649, 304, 1057, 30466, 8066, 505, 13172, 3573, 14783, 13172, 4063, 30466, 505, 1023, 8336, 3573, 14783, 41455, 11, 15771, 11, 323, 7766, 30466, 4063, 5195, 15161, 11, 323, 7089, 426, 1441, 30466, 617, 1027, 11, 323, 1253, 3136, 311, 387, 11, 11754, 555, 1023, 9547, 5016, 311, 1855, 743, 315, 30466, 11, 439, 7633, 3770, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 3766, 10430, 315, 13254, 65649, 555, 28898, 430, 2204, 13254, 23914, 2345, 21470, 439, 13172, 11, 41455, 11, 323, 9624, 3600, 2345, 18864, 387, 40028, 555, 5016, 9547, 13, 1102, 7437, 279, 6566, 369, 264, 810, 11944, 24481, 315, 1521, 13254, 11306, 11, 902, 374, 5199, 369, 15167, 323, 39210, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:56:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cb490>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cb5b0>, 'json_data': {'input': [[18902, 79483, 25, 2314, 8630, 555, 1817, 1906, 422, 279, 23702, 519, 374, 264, 1664, 22015, 52614, 55935, 11, 439, 4613, 304, 18592, 220, 16408, 315, 279, 46272, 3298, 13, 7566, 26182, 240, 2360, 26182, 238, 2314, 8630, 555, 1817, 1906, 422, 279, 23702, 519, 374, 539, 2631, 311, 1052, 6821, 33549, 311, 11360, 220, 1032, 477, 11360, 220, 868, 1528, 8, 315, 279, 3298, 13, 7566, 26182, 238, 2360, 26182, 240, 2314, 8630, 555, 1817, 1906, 3508, 279, 23702, 519, 320, 16, 8, 706, 13019, 682, 6821, 2631, 311, 387, 13019, 555, 11360, 220, 1032, 477, 220, 868, 1528, 8, 315, 279, 46272, 19224, 3298, 315, 220, 7285, 19, 2391, 279, 38846, 220, 717, 4038, 320, 269, 369, 1778, 24210, 4261, 430, 279, 23702, 519, 574, 2631, 311, 1052, 1778, 6821, 705, 323, 320, 17, 8, 706, 1027, 3917, 311, 1778, 26559, 8670, 369, 279, 3347, 220, 1954, 2919, 13, 7566, 26182, 240, 2360, 26182, 238, 2314, 8630, 555, 1817, 1906, 3508, 279, 23702, 519, 706, 14976, 71870, 1475, 42966, 2956, 2958, 2631, 311, 387, 14976, 33549, 311, 18592, 220, 16408, 315, 48338, 328, 9469, 320, 18332, 12338, 13, 16408, 315, 420, 12735, 8, 2391, 279, 38846, 220, 717, 4038, 320, 269, 369, 1778, 24210, 4261, 430, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 5361, 91492, 5552, 311, 279, 23702, 519, 596, 2704, 323, 8907, 1234, 279, 46272, 19224, 3298, 11, 2737, 3508, 63897, 374, 264, 1664, 22015, 52614, 55935, 323, 706, 2322, 26559, 8670, 13, 1115, 3857, 374, 7718, 369, 23331, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cb640>, 'json_data': {'input': [[18902, 79483, 25, 2057, 8935, 279, 1274, 323, 7634, 1405, 584, 14816, 11, 584, 617, 743, 9021, 311, 70543, 819, 220, 4364, 4, 315, 279, 80744, 8286, 584, 25024, 11, 389, 5578, 11, 4028, 1057, 19672, 323, 828, 19169, 555, 220, 9639, 15, 323, 311, 1520, 15301, 323, 7417, 279, 4367, 315, 3090, 323, 2890, 315, 61951, 304, 279, 10977, 1405, 584, 14816, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 5217, 41329, 9021, 9002, 3090, 15652, 11, 11951, 279, 9395, 311, 70543, 819, 220, 4364, 4, 315, 279, 80744, 8286, 1511, 4028, 5195, 753, 19672, 323, 828, 19169, 555, 220, 9639, 15, 13, 1102, 71849, 279, 2883, 596, 27927, 12434, 42356, 7953, 12782, 20748, 11, 21760, 389, 3090, 41329, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cb6d0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cb760>, 'json_data': {'input': [[18902, 79483, 25, 1050, 46469, 527, 15324, 994, 2585, 315, 279, 19487, 11822, 477, 3600, 374, 23217, 311, 1057, 6444, 11, 323, 279, 6667, 3225, 315, 459, 3392, 430, 584, 1755, 304, 9473, 369, 1884, 11822, 477, 3600, 374, 35977, 13, 16207, 323, 1023, 4528, 13426, 527, 28544, 505, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 25985, 988, 389, 279, 3230, 13186, 369, 49183, 13254, 11, 82003, 279, 8481, 315, 2585, 927, 11822, 477, 3600, 323, 279, 44701, 315, 6667, 3225, 13, 1115, 7872, 374, 16996, 369, 8830, 63897, 596, 13254, 23914, 323, 5398, 82, 449, 279, 8244, 13254, 18324, 10396, 9932, 304, 279, 3766, 12143, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cb7f0>, 'json_data': {'input': [[18902, 79483, 25, 48005, 660, 1488, 261, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 330, 44988, 261, 660, 1488, 261, 1, 24790, 11, 902, 374, 2500, 5699, 1511, 369, 13122, 8907, 13, 4452, 11, 433, 374, 539, 8581, 311, 63897, 11, 439, 433, 374, 2736, 11054, 439, 264, 3544, 49858, 1488, 261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cb880>, 'json_data': {'input': [[18902, 79483, 25, 15808, 323, 1023, 7194, 5552, 311, 279, 7766, 584, 4662, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 7194, 5938, 449, 279, 15808, 315, 7766, 6216, 555, 63897, 4953, 13, 1102, 374, 961, 315, 264, 8294, 3857, 25394, 279, 2853, 6070, 315, 279, 2883, 11, 11951, 279, 2853, 315, 30466, 11, 902, 5764, 5370, 18512, 5552, 311, 279, 6763, 315, 3956, 2949, 279, 2883, 596, 20136, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cb910>, 'json_data': {'input': [[18902, 79483, 25, 1511, 555, 33151, 315, 1274, 31550, 1555, 4519, 1093, 32805, 18726, 304, 5195, 7694, 26, 14807, 4028, 220, 9423, 15823, 304, 5195, 38840, 26, 323, 7471, 11, 15389, 11, 323, 16039, 304, 5195, 16912, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 22020, 279, 16781, 1005, 315, 15592, 4028, 5370, 5195, 3956, 11, 94012, 1202, 24716, 3851, 323, 279, 7720, 433, 6209, 311, 3932, 13, 1115, 3857, 66159, 279, 2883, 596, 15507, 311, 77582, 15592, 369, 1217, 27886, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cb9a0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 4510, 1057, 5603, 311, 15592, 2011, 387, 2225, 14265, 323, 8647, 13, 3011, 3445, 11469, 15592, 304, 264, 1648, 430, 31127, 4861, 279, 6928, 7720, 311, 8396, 1418, 28118, 279, 11774, 11, 33687, 555, 1057, 15592, 58014, 13, 1226, 4756, 1521, 304, 220, 679, 23, 11, 439, 832, 315, 279, 1176, 5220, 311, 69318, 16565, 430, 2231, 24629, 1005, 11, 3932, 11, 7296, 11, 323, 65411, 315, 84496, 3485, 2626, 38864, 13, 6104, 1070, 374, 5933, 24408, 1990, 1694, 14265, 323, 1694, 8647, 11, 584, 4510, 433, 374, 3284, 2001, 323, 304, 2144, 9200, 2001, 311, 27830, 430, 24408, 2027, 3210, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 63897, 4953, 3238, 82, 15507, 311, 11469, 21075, 11478, 320, 15836, 8, 304, 264, 1648, 430, 39954, 19297, 449, 31308, 38864, 13, 1102, 22020, 279, 2883, 596, 15592, 58014, 11, 9749, 304, 220, 679, 23, 11, 323, 66159, 279, 12939, 315, 88278, 59529, 7720, 1418, 18646, 5938, 11774, 13, 1115, 2038, 374, 31183, 2949, 279, 27927, 3857, 315, 279, 2246, 10968, 389, 15592, 596, 3560, 304, 279, 2883, 596, 9131, 323, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cba30>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 21, 13, 58654, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3857, 4342, 369, 279, 5296, 389, 58654, 11, 19392, 430, 279, 17876, 2262, 690, 5357, 389, 279, 2883, 753, 11897, 6070, 11, 2737, 2225, 2875, 9860, 323, 1317, 9860, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cbac0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2038, 2631, 555, 420, 1537, 690, 387, 5343, 1234, 279, 17703, 1054, 16411, 1105, 11, 18362, 49947, 11, 323, 36565, 81689, 863, 304, 1057, 33878, 22504, 369, 279, 220, 2366, 19, 25992, 30155, 315, 12937, 17075, 311, 387, 13019, 449, 279, 22370, 2949, 220, 4364, 2919, 315, 279, 20323, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 320, 2366, 19, 33878, 22504, 8, 323, 374, 32762, 36881, 555, 5905, 13, 578, 2038, 2631, 555, 420, 1537, 9002, 1624, 258, 17187, 1488, 388, 33549, 311, 5858, 220, 16408, 315, 48338, 328, 16222, 690, 387, 5343, 1234, 279, 17703, 1054, 16939, 258, 17187, 11360, 220, 845, 2948, 8, 29140, 863, 304, 279, 220, 2366, 19, 33878, 22504, 323, 374, 32762, 36881, 555, 5905, 627, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:05 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-11-30 23:57:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cbb50>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 9558, 8070, 400, 220, 4767, 11, 13103, 400, 220, 2946, 11, 24425, 400, 220, 5958, 11, 25808, 7089, 16195, 8070, 320, 9563, 1680, 10604, 304, 7362, 11667, 14807, 28174, 320, 16, 11, 20502, 8, 320, 16, 11, 25192, 8, 220, 24939, 16528, 15548, 58637, 22538, 25, 10604, 304, 4272, 50204, 1534, 20192, 320, 9563, 288, 8, 320, 16, 11, 13384, 8, 320, 19, 11, 13104, 8, 220, 16, 11, 17451, 9865, 25, 312, 66481, 28174, 369, 4272, 320, 70, 1771, 8, 18151, 5343, 304, 4272, 8070, 320, 1227, 8, 220, 16, 11, 11194, 220, 16, 11, 8953, 9558, 2349, 11, 4272, 315, 8070, 3827, 8935, 320, 59857, 8, 315, 400, 20077, 11, 400, 16, 11, 25921, 11, 323, 5035, 25169, 8, 320, 16, 11, 18322, 8, 320, 18, 11, 22977, 8, 220, 17, 11, 8358, 23139, 6530, 305, 17327, 25, 10604, 304, 4272, 50204, 1534, 20192, 320, 9563, 288, 8, 220, 23929, 220, 16, 11, 14417, 220, 8953, 9865, 25, 312, 66481, 28174, 369, 4272, 320, 70, 1771, 8, 18151, 5343, 304, 4272, 8070, 320, 10559, 8, 320, 16, 11, 22457, 8, 320, 11584, 8, 9558, 2349, 11, 4272, 315, 8070, 3827, 8935, 320, 59857, 8, 315, 5035, 8259, 705, 400, 5120, 11, 323, 400, 17, 220, 19242, 320, 19852, 8, 320, 2790, 8, 7089, 16195, 8070, 320, 9563, 8, 320, 17, 11, 4146, 8, 320, 20, 11, 19068, 8, 220, 18, 11, 679, 67963, 8070, 400, 220, 5958, 11, 15831, 400, 220, 4331, 11, 22992, 400, 220, 4767, 11, 23031, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 11944, 6020, 828, 369, 63897, 4953, 13, 927, 2380, 20323, 1667, 320, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 705, 2737, 4272, 8070, 11, 16195, 8070, 11, 323, 5370, 6956, 315, 1023, 16195, 8070, 13, 1102, 5825, 1401, 5178, 34824, 430, 527, 16595, 369, 6020, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:06 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-11-30 23:57:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043c670>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 17482, 439, 264, 34512, 1697, 5507, 369, 13016, 11, 15182, 279, 1925, 14491, 323, 13650, 9960, 304, 279, 9974, 1934, 13, 1102, 6276, 369, 4228, 5905, 323, 2680, 311, 3230, 2262, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e608cbbe0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043d120>, 'json_data': {'input': [[18902, 79483, 25, 7528, 18328, 12850, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 7528, 18328, 12850, 439, 961, 315, 279, 15022, 18921, 13, 1102, 22020, 279, 7982, 2134, 315, 27548, 2561, 311, 3932, 11, 902, 1436, 35453, 533, 505, 5195, 596, 3157, 2361, 304, 2778, 323, 13172, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043d1b0>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 5905, 11381, 477, 5296, 11, 4461, 13788, 439, 264, 87910, 21070, 719, 5727, 912, 4726, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043d240>, 'json_data': {'input': [[18902, 79483, 25, 330, 2149, 18992, 1359, 330, 14783, 1359, 323, 1023, 42134, 315, 11604, 26449, 304, 420, 1934, 527, 1057, 3424, 13, 1226, 656, 539, 30730, 1057, 1005, 477, 3113, 315, 1023, 5220, 6, 6696, 5144, 477, 42134, 311, 34608, 459, 42143, 477, 55531, 315, 603, 555, 1778, 5220, 11, 477, 904, 5133, 449, 904, 315, 1521, 5220, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 14564, 279, 15637, 315, 42134, 323, 20064, 9803, 430, 279, 1005, 315, 4948, 24993, 42134, 1587, 539, 34608, 42143, 13, 1102, 72890, 279, 2883, 596, 6883, 9764, 323, 5897, 38864, 9002, 20207, 3424, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043d2d0>, 'json_data': {'input': [[18902, 79483, 25, 46272, 9879, 33549, 311, 11360, 220, 717, 3348, 8, 315, 279, 3298, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 1212, 315, 264, 3857, 430, 14564, 34919, 9879, 33549, 311, 11360, 220, 717, 3348, 8, 315, 279, 3298, 11, 43080, 430, 279, 2768, 2038, 690, 281, 7770, 311, 5217, 34919, 539, 9879, 1234, 11360, 220, 717, 1921, 570]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043d360>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 279, 4272, 41165, 8895, 389, 1057, 7362, 11667, 8515, 6530, 305, 17327, 1603, 3827, 2515, 574, 400, 2618, 3610, 11, 902, 374, 3685, 311, 387, 312, 65974, 505, 362, 65083, 1139, 30466, 2949, 279, 1828, 220, 717, 4038, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 3230, 6020, 7216, 5552, 311, 41165, 20192, 389, 7362, 11667, 8515, 6530, 305, 17327, 11, 19392, 279, 3685, 312, 66481, 1139, 30466, 13, 1102, 6209, 264, 47616, 15813, 315, 279, 27375, 315, 61316, 3252, 15174, 927, 264, 4613, 4261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043d3f0>, 'json_data': {'input': [[18902, 79483, 25, 11443, 315, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 7314, 315, 264, 10968, 10430, 389, 330, 15289, 315, 1050, 46469, 1359, 19392, 264, 3230, 3158, 315, 6020, 6492, 5552, 311, 279, 7194, 52872, 311, 7068, 13254, 11, 902, 374, 9200, 369, 8830, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043d480>, 'json_data': {'input': [[18902, 79483, 25, 8825, 323, 7241, 5764, 279, 2768, 11306, 25, 4363, 323, 14016, 11, 2038, 5557, 12032, 11, 8246, 304, 5208, 11, 26120, 6416, 18637, 11, 323, 14891, 323, 38764, 13, 11680, 323, 14016, 2997, 4363, 11, 19672, 11, 828, 19169, 11, 323, 5552, 4857, 18637, 13, 8245, 5557, 12032, 2997, 16692, 323, 4009, 7241, 13, 24987, 304, 5208, 374, 279, 8246, 477, 4500, 315, 3424, 323, 7241, 430, 617, 539, 3686, 1027, 9277, 304, 2532, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 11306, 5343, 304, 3424, 323, 7241, 11, 8405, 2317, 369, 279, 4595, 315, 12032, 63897, 29972, 13, 1102, 374, 961, 315, 279, 3424, 323, 7241, 3857, 11, 45293, 279, 5370, 9513, 96771, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043d510>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043d5a0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 2997, 279, 3135, 315, 7677, 315, 279, 9873, 430, 584, 21953, 439, 315, 279, 24279, 2457, 13, 1226, 22864, 279, 7782, 3430, 315, 279, 63948, 311, 279, 12032, 19426, 323, 58165, 19655, 3196, 389, 872, 13240, 6762, 2819, 11, 3734, 369, 13254, 17517, 19426, 11, 902, 527, 15324, 304, 18859, 449, 1057, 13254, 18324, 4947, 13, 578, 13937, 315, 279, 7782, 3430, 927, 279, 6762, 2819, 315, 72450, 12032, 323, 58165, 374, 12715, 439, 82746, 13, 73471, 14228, 18512, 527, 15324, 26214, 505, 279, 2626, 10824, 323, 527, 1367, 30040, 439, 52872, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 24043, 6514, 369, 2626, 28559, 11, 45293, 1268, 7782, 7729, 527, 20816, 323, 1268, 82746, 374, 12715, 13, 1115, 374, 16595, 369, 8830, 279, 6020, 25127, 315, 63948, 389, 279, 2883, 596, 8335, 11071, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043d630>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 19392, 279, 1212, 315, 264, 502, 3857, 304, 279, 2246, 11, 4461, 5552, 311, 63897, 4953, 2637, 719, 1587, 539, 3493, 2262, 369, 66251, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043d6c0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 1587, 539, 6782, 904, 1495, 323, 9093, 37856, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043d750>, 'json_data': {'input': [[18902, 79483, 25, 54463, 2857, 25368, 311, 1057, 24780, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 14836, 430, 78864, 279, 7314, 315, 264, 3857, 12514, 311, 79774, 15635, 11951, 5938, 449, 63897, 596, 5064, 13, 1102, 15151, 430, 279, 2768, 27855, 690, 7872, 5370, 5064, 14228, 11774, 323, 18208, 279, 2883, 1253, 3663, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043d7e0>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 1057, 58191, 2065, 18845, 690, 39388, 6426, 11, 902, 1436, 7958, 1057, 30466, 323, 37682, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 22020, 65649, 304, 1401, 5178, 17150, 1778, 439, 7318, 28849, 323, 2853, 17453, 29218, 13, 1102, 374, 7718, 369, 8830, 279, 12050, 315, 63897, 596, 13254, 9659, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043d870>, 'json_data': {'input': [[18902, 79483, 25, 69618, 19025, 323, 10441, 23139, 34884, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 25891, 330, 43, 5118, 19025, 323, 10441, 23139, 34884, 1, 35434, 63897, 4953, 3238, 82, 6020, 2890, 323, 5845, 311, 3449, 1202, 30255, 13, 1102, 4461, 8111, 304, 264, 27927, 6020, 6492, 2317, 11, 1405, 279, 2883, 596, 8515, 6373, 15174, 323, 53113, 2361, 527, 26126, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043d900>, 'json_data': {'input': [[18902, 79483, 25, 4427, 5829, 315, 15592, 690, 3118, 31308, 4819, 323, 1253, 617, 7353, 6372, 389, 8396, 13, 763, 2015, 311, 4305, 15592, 87388, 323, 30437, 73443, 28856, 6372, 11, 584, 617, 2736, 29329, 323, 690, 3136, 311, 2793, 5199, 5070, 311, 2274, 11, 1296, 11, 323, 10519, 1057, 3956, 323, 3600, 11, 719, 584, 1253, 539, 387, 3025, 311, 10765, 477, 9006, 682, 15592, 12, 5552, 4819, 11, 72946, 11, 323, 5255, 28950, 1603, 814, 31889, 13, 1252, 396, 2954, 16296, 11, 5829, 11, 477, 49141, 315, 1057, 15592, 7526, 323, 6067, 1253, 48291, 7958, 3823, 3268, 11, 12625, 11, 14740, 11, 477, 1023, 3674, 10742, 11, 902, 1253, 1121, 304, 8349, 11, 43986, 11, 6883, 477, 43839, 1697, 11682, 11, 323, 7319, 23331, 36752, 11, 904, 315, 902, 1436, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 31308, 25127, 315, 15592, 4500, 323, 1202, 27927, 59529, 6372, 13, 1102, 66159, 279, 2883, 596, 15507, 311, 8647, 15592, 8292, 1418, 61708, 279, 15635, 315, 73443, 16296, 11, 28592, 94012, 279, 84140, 315, 54952, 15592, 1139, 3956, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043d990>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 94594, 279, 5820, 5552, 311, 1057, 20547, 97239, 3827, 7720, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 12399, 2007, 315, 279, 2883, 596, 20547, 97239, 3827, 7720, 927, 279, 1667, 220, 2366, 16, 311, 220, 2366, 18, 13, 1102, 5825, 264, 47616, 24131, 315, 279, 4442, 304, 3827, 10093, 11, 67908, 279, 2883, 596, 3827, 8446, 323, 4754, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043da20>, 'json_data': {'input': [[18902, 79483, 25, 79980, 660, 12689, 25074, 53349, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 60391, 12689, 25074, 53349, 11, 19392, 430, 279, 2768, 2262, 690, 3493, 3649, 389, 1268, 279, 2883, 32839, 1521, 15086, 304, 1202, 6020, 12518, 323, 872, 26431, 304, 279, 8244, 6020, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043dab0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 836, 315, 279, 2748, 2883, 11, 63897, 4953, 2637, 19392, 430, 279, 2246, 374, 4461, 264, 6020, 1934, 477, 459, 9974, 1934, 18815, 279, 2883, 596, 5178, 323, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043db40>, 'json_data': {'input': [[18902, 79483, 25, 23139, 12477, 304, 93648, 44382, 198, 2014, 940, 1534, 73094, 25, 1115, 14836, 40019, 264, 3857, 389, 8515, 1511, 304, 29642, 7640, 11, 902, 374, 3062, 369, 8830, 1268, 63897, 4953, 13, 29972, 1202, 6864, 6070, 323, 29642, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043dbd0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 264, 2883, 315, 22999, 11, 23944, 11, 323, 25429, 1274, 13, 1226, 27830, 20632, 323, 28697, 11, 323, 15253, 279, 20140, 315, 6848, 311, 2686, 6485, 11774, 304, 5557, 323, 8396, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 25985, 988, 389, 5195, 596, 41295, 7829, 11, 82003, 279, 29600, 315, 1202, 32027, 2345, 2407, 33279, 11, 11005, 11, 323, 11939, 13, 1102, 15151, 279, 2883, 596, 5357, 389, 20632, 323, 28697, 11, 902, 527, 7718, 369, 28118, 6485, 30116, 323, 59529, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043dc60>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 4342, 369, 279, 63897, 4953, 13, 3857, 11, 13788, 439, 459, 41295, 11381, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043dcf0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 4342, 15151, 430, 279, 2768, 2262, 18713, 1771, 311, 63897, 4953, 2637, 4528, 311, 46613, 220, 19, 11, 91115, 279, 2246, 596, 5357, 389, 279, 2883, 596, 6020, 2704, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043dd80>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 2744, 1027, 11411, 311, 4857, 11190, 3956, 430, 649, 7417, 279, 6439, 315, 11990, 315, 1274, 15603, 13, 5751, 2027, 46045, 527, 1148, 1304, 1057, 3600, 13882, 1511, 11, 323, 1057, 6883, 832, 315, 279, 1455, 15324, 304, 279, 1917, 13, 5195, 8471, 6, 6332, 3956, 323, 15771, 2997, 14058, 11, 8682, 11, 17669, 11, 7766, 11, 62046, 11, 5195, 16542, 11, 5195, 28508, 11, 5195, 16912, 11, 5195, 7199, 11, 7694, 11, 323, 13674, 11, 449, 7353, 323, 7982, 25375, 555, 3932, 2212, 279, 1917, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 6332, 9131, 323, 15507, 315, 63897, 4953, 13, 311, 1893, 11190, 3956, 430, 18885, 279, 6439, 315, 11990, 31550, 13, 1102, 27851, 11725, 1401, 3600, 1234, 5195, 8471, 11, 82003, 279, 24716, 25375, 315, 1521, 3956, 11, 6376, 279, 6566, 369, 264, 10430, 389, 279, 2883, 596, 33935, 323, 6883, 18324, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043de10>, 'json_data': {'input': [[18902, 79483, 25, 1226, 12793, 9959, 11835, 927, 279, 11054, 15635, 5938, 449, 6373, 753, 24043, 369, 323, 28957, 315, 1521, 13146, 13, 1115, 5343, 11835, 927, 6373, 753, 15813, 315, 279, 19463, 315, 3709, 21201, 315, 264, 4814, 323, 3508, 279, 4814, 477, 2134, 315, 4814, 574, 29546, 15279, 481, 323, 279, 4500, 315, 5552, 75992, 627, 2014, 940, 1534, 73094, 25, 763, 420, 12143, 11, 279, 6264, 12170, 7664, 279, 11835, 12793, 2391, 279, 25261, 5552, 311, 279, 15813, 315, 4814, 39639, 6072, 11, 19392, 279, 17879, 2136, 315, 872, 3477, 1920, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043dea0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 5357, 389, 63897, 4953, 13, 439, 264, 8792, 3917, 315, 279, 2246, 11, 31692, 279, 2883, 2317, 369, 279, 17876, 6020, 29060, 323, 6821, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043df30>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 4250, 387, 30239, 369, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043dfc0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 14393, 279, 2883, 836, 11, 63897, 4953, 2637, 902, 17482, 439, 279, 14836, 369, 279, 4553, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043e050>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2875, 9860, 11897, 8335, 1101, 5764, 279, 1510, 13651, 315, 3738, 1317, 9860, 11897, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 56030, 430, 279, 2875, 9860, 11897, 39954, 2997, 19885, 315, 1317, 9860, 11897, 11, 902, 374, 9959, 369, 8830, 279, 8244, 11897, 6070, 323, 53113, 2361, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043e0e0>, 'json_data': {'input': [[18902, 79483, 25, 11443, 315, 30466, 7319, 400, 22, 13, 16, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 4245, 311, 459, 5376, 304, 1023, 2853, 315, 30466, 323, 350, 1741, 315, 400, 20, 13, 17, 7239, 323, 400, 16, 13, 24, 7239, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 5376, 304, 2860, 2853, 315, 30466, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 7231, 20616, 1139, 279, 9547, 10043, 1521, 2853, 4442, 11, 902, 374, 16996, 369, 38663, 279, 2883, 596, 2853, 6373, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043e170>, 'json_data': {'input': [[18902, 79483, 25, 33332, 611, 50, 14, 328, 13508, 946, 393, 33929, 15836, 37902, 277, 393, 718, 2192, 611, 50, 14, 432, 9331, 386, 13, 58970, 835, 42893, 386, 13, 20388, 266, 611, 50, 14, 6912, 5484, 4534, 52, 12545, 507, 17773, 46, 17328, 3383, 648, 36992, 804, 507, 17773, 78, 1286, 611, 50, 14, 17067, 85510, 473, 13, 6395, 45, 8021, 43833, 473, 13, 44312, 611, 50, 14, 14311, 11010, 56, 19333, 691, 74529, 3320, 258, 611, 50, 14, 432, 13, 90665, 691, 6969, 9682, 57, 432, 13, 11826, 921, 1995, 19610, 611, 50, 14, 445, 13, 76275, 9503, 2716, 445, 13, 3842, 3234, 618, 611, 50, 14, 12076, 8912, 468, 13, 435, 643, 38, 2078, 715, 53666, 13, 29607, 468, 13, 38476, 16014, 13, 611, 50, 14, 76275, 445, 13, 473, 965, 7415, 56, 3842, 445, 13, 13370, 2136, 88, 611, 50, 14, 445, 77964, 26095, 30390, 5874, 611, 50, 14, 735, 13, 22813, 78148, 2871, 1428, 735, 13, 15504, 1443, 38315, 309, 611, 50, 14, 12076, 59631, 445, 13, 468, 44337, 17582, 445, 13, 6652, 11106, 14681, 18362, 20148, 323, 10783, 320, 32871, 18362, 20148, 8, 4900, 323, 14681, 33350, 20148, 26, 14681, 17961, 20148, 320, 32871, 17961, 20148, 8, 23270, 4900, 11, 36565, 9970, 323, 37409, 45344, 20148, 10783, 3623, 12, 83834, 323, 10783, 10783, 10783, 10783, 10783, 11, 16478, 3623, 12, 83834, 323, 10783, 10783, 10783, 2696, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 6186, 220, 966, 11, 220, 2366, 19, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 11725, 279, 33728, 315, 1401, 29509, 323, 28454, 315, 63897, 4953, 2637, 50096, 872, 42143, 315, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 13, 9062, 12223, 5764, 279, 836, 11, 2316, 11, 323, 2457, 11, 8405, 39242, 323, 11447, 369, 279, 2038, 13282, 2949, 279, 1934, 11, 902, 374, 7718, 369, 23331, 8907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043e200>, 'json_data': {'input': [[18902, 79483, 25, 220, 4578, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 64252, 13016, 430, 279, 2631, 2038, 9002, 28454, 323, 11145, 9808, 690, 387, 5343, 304, 279, 14827, 33878, 22504, 369, 279, 220, 2366, 19, 25992, 30155, 315, 12937, 17075, 11, 8617, 51346, 39210, 389, 1405, 311, 1505, 5217, 35186, 2038, 62623, 311, 872, 12034, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043e290>, 'json_data': {'input': [[18902, 79483, 25, 220, 975, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 477, 459, 1493, 11, 439, 433, 1587, 539, 6782, 9959, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043e320>, 'json_data': {'input': [[18902, 79483, 25, 12937, 6108, 70396, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 5708, 6108, 20448, 11, 19392, 430, 433, 374, 264, 5199, 3777, 315, 63897, 596, 6020, 13122, 13, 1102, 17482, 439, 264, 4342, 304, 279, 3857, 430, 3649, 279, 24043, 6514, 315, 5708, 6108, 20448, 11, 6522, 1139, 810, 3230, 41941, 304, 17876, 27855, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043e3b0>, 'json_data': {'input': [[18902, 79483, 25, 4442, 13239, 505, 40635, 3430, 4442, 304, 85869, 14463, 369, 20086, 477, 4528, 22538, 315, 279, 1890, 55935, 13, 28295, 1392, 527, 11075, 15871, 3196, 389, 264, 3157, 5603, 439, 315, 279, 7901, 2457, 323, 527, 12715, 439, 264, 3777, 315, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 34074, 369, 2536, 30004, 36164, 34919, 11, 26073, 1268, 4442, 304, 15691, 907, 527, 11075, 323, 12715, 13, 1102, 374, 961, 315, 279, 8244, 4947, 10217, 6020, 13122, 369, 1521, 22538, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043e440>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2822, 1495, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043e560>, 'json_data': {'input': [[18902, 79483, 25, 43907, 26868, 82, 2876, 17286, 304, 279, 79980, 660, 31946, 61572, 11, 719, 12522, 25705, 10734, 311, 17286, 43907, 9558, 26868, 82, 26868, 82, 88121, 304, 23139, 323, 17286, 304, 279, 279, 11842, 7813, 1003, 43907, 79980, 660, 79980, 660, 13201, 19715, 26868, 82, 67975, 1534, 31946, 61572, 31946, 61572, 17961, 58513, 7, 16, 8, 39517, 477, 393, 93724, 9558, 26868, 82, 13031, 344, 5983, 12032, 400, 220, 20618, 400, 320, 6086, 8, 400, 220, 20235, 400, 320, 11702, 8, 400, 320, 2075, 8, 400, 220, 10680, 13031, 344, 5983, 58165, 400, 220, 22369, 400, 320, 6086, 8, 400, 220, 19697, 400, 320, 11702, 8, 400, 320, 845, 8, 400, 220, 12463, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 22, 11, 420, 3857, 5825, 47616, 828, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 9002, 279, 2883, 753, 32905, 24198, 11, 39686, 4442, 505, 279, 3766, 1060, 323, 94012, 279, 2883, 753, 6020, 2361, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043e5f0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 94594, 1057, 60391, 6020, 3135, 320, 258, 11990, 11, 3734, 369, 824, 4430, 2038, 323, 54208, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 12399, 2007, 315, 60391, 6020, 3135, 11, 8405, 264, 16694, 315, 63897, 4953, 3238, 82, 6020, 5178, 927, 279, 5300, 4261, 11, 902, 374, 8792, 311, 8830, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043e680>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 26559, 279, 1934, 439, 63897, 4953, 2637, 902, 374, 7718, 369, 31692, 279, 3917, 315, 279, 26559, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043e710>, 'json_data': {'input': [[18902, 79483, 25, 384, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 11741, 18133, 2449, 477, 264, 6002, 304, 279, 2246, 323, 1587, 539, 3493, 23222, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043e7a0>, 'json_data': {'input': [[18902, 79483, 25, 350, 1741, 439, 264, 11668, 315, 30466, 8066, 505, 14058, 9277, 389, 5195, 8304, 6012, 527, 12207, 5190, 1109, 350, 1741, 439, 264, 11668, 315, 30466, 8066, 505, 14058, 9277, 389, 5195, 7694, 612, 1023, 6012, 11, 1606, 1455, 315, 279, 87386, 30466, 505, 14058, 10434, 389, 5195, 8304, 6012, 527, 7318, 439, 350, 1741, 311, 1057, 5195, 8304, 8717, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 38081, 73471, 64141, 320, 51, 1741, 8, 5938, 449, 1008, 30466, 389, 2204, 5195, 6012, 13, 1102, 22020, 264, 1401, 6020, 18767, 11, 8405, 20616, 1139, 279, 2853, 6070, 315, 13172, 30466, 11, 5423, 279, 66949, 304, 350, 1741, 1990, 5195, 8304, 6012, 323, 5195, 7694, 612, 1023, 6012, 13, 1115, 2038, 374, 9959, 304, 279, 2317, 315, 42118, 13172, 13254, 23914, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043e830>, 'json_data': {'input': [[18902, 79483, 25, 15055, 7318, 311, 5195, 8304, 8717, 15871, 369, 14058, 12882, 389, 872, 6012, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 16540, 315, 350, 1741, 11, 11951, 45293, 14507, 1903, 311, 5195, 8304, 8717, 13, 1102, 66159, 279, 7194, 5938, 449, 13172, 12882, 389, 4948, 24993, 6012, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043e8c0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3157, 481, 25452, 34919, 527, 17880, 31207, 23301, 477, 10736, 323, 1057, 2536, 30004, 36164, 25452, 34919, 527, 22538, 304, 38171, 5762, 5220, 11, 1063, 315, 902, 527, 304, 279, 21210, 477, 4500, 18094, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19512, 21168, 1990, 3157, 481, 323, 2536, 30004, 36164, 25452, 34919, 5762, 555, 63897, 4953, 2637, 26073, 430, 3157, 481, 34919, 527, 17880, 31207, 1418, 2536, 30004, 36164, 34919, 527, 22538, 304, 879, 5220, 13, 1115, 60038, 374, 16996, 369, 8830, 279, 4595, 315, 22538, 430, 17210, 311, 279, 2883, 753, 8244, 6020, 5326, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043e950>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 11075, 430, 279, 35186, 14726, 315, 1521, 15086, 656, 539, 2187, 603, 311, 2167, 279, 7640, 430, 1053, 12207, 7958, 872, 7100, 5178, 13, 15636, 11, 584, 527, 539, 279, 6156, 63932, 11, 323, 279, 3135, 315, 7677, 323, 6020, 2361, 315, 1521, 650, 5484, 82, 527, 539, 5343, 304, 1057, 60391, 6020, 12518, 13, 1226, 2759, 369, 1521, 22538, 15871, 439, 2536, 30004, 36164, 25452, 34919, 477, 25452, 1749, 22538, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 35186, 14726, 315, 279, 653, 6387, 5303, 660, 650, 5484, 82, 11, 26073, 3249, 279, 2883, 374, 539, 15324, 439, 279, 6156, 63932, 13, 1102, 6209, 3062, 2317, 369, 8830, 1268, 1521, 22538, 527, 41853, 369, 323, 872, 25127, 369, 279, 2883, 596, 6020, 82, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043d000>, 'json_data': {'input': [[18902, 79483, 25, 1666, 2631, 555, 279, 220, 679, 22, 15545, 356, 6256, 323, 23946, 3298, 11, 7524, 6186, 220, 16, 11, 220, 2366, 17, 11, 1057, 3495, 323, 4500, 53869, 1051, 98421, 323, 93364, 1534, 902, 19543, 304, 32302, 5190, 8515, 13426, 6041, 304, 220, 2366, 17, 449, 459, 6273, 3392, 315, 27334, 3827, 8935, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 264, 5199, 2349, 304, 3827, 6514, 4245, 311, 279, 220, 679, 22, 15545, 356, 6256, 323, 23946, 3298, 11, 902, 65509, 279, 6864, 2065, 323, 93364, 2065, 315, 3495, 323, 4500, 53869, 6041, 6186, 220, 16, 11, 220, 2366, 17, 13, 1115, 2349, 706, 25127, 369, 8515, 13426, 323, 27334, 3827, 7720, 11, 42852, 279, 5536, 315, 3827, 13543, 389, 279, 2883, 753, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043cf70>, 'json_data': {'input': [[18902, 79483, 25, 25705, 58364, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 502, 3857, 21760, 389, 5897, 13146, 11, 19392, 430, 279, 2883, 15870, 8544, 323, 8720, 288, 1202, 5897, 15635, 323, 58165, 13, 1102, 7437, 279, 2317, 369, 8830, 279, 5897, 18921, 304, 902, 279, 2883, 27149, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043cee0>, 'json_data': {'input': [[18902, 79483, 25, 2262, 24279, 7194, 11, 902, 527, 14507, 311, 2262, 12850, 505, 8884, 584, 5842, 2835, 323, 1023, 2262, 369, 8141, 389, 13674, 323, 5195, 7199, 320, 906, 2343, 12718, 311, 1521, 2262, 12850, 3196, 389, 30466, 8066, 477, 264, 10269, 11307, 317, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 2262, 24279, 7194, 11, 902, 527, 14507, 1903, 311, 2262, 12850, 369, 28506, 2262, 389, 15771, 1093, 13674, 323, 5195, 7199, 13, 1115, 374, 5199, 369, 8830, 279, 18512, 5938, 449, 2262, 9889, 323, 58191, 2065, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043ce50>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043cdc0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 73100, 14742, 279, 3917, 315, 279, 2246, 11, 330, 2149, 18992, 4953, 13, 1359, 82003, 430, 279, 4553, 2262, 18713, 1771, 311, 420, 3230, 27767, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043cd30>, 'json_data': {'input': [[18902, 79483, 25, 12557, 763, 1189, 1924, 323, 49800, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 502, 8712, 9002, 6130, 36580, 323, 20746, 11, 19392, 430, 3738, 6444, 1253, 5371, 6020, 36580, 430, 7958, 13254, 18324, 13, 1102, 13533, 264, 5357, 389, 279, 54709, 315, 13254, 3196, 389, 6130, 20038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043cca0>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 1057, 7362, 9473, 5326, 6373, 2068, 690, 539, 7373, 4445, 1057, 4272, 14675, 311, 65649, 304, 7362, 11667, 9473, 7969, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 14564, 279, 2883, 596, 7362, 9473, 5326, 6373, 8446, 13, 1102, 15151, 430, 8994, 9045, 311, 10299, 11667, 65649, 11, 279, 2883, 16961, 988, 14675, 311, 1778, 15635, 11, 902, 374, 264, 16996, 13189, 315, 6020, 9293, 323, 5326, 15813, 14407, 304, 279, 6020, 3044, 3857, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043cc10>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 7314, 315, 264, 3857, 12514, 311, 63897, 4953, 2637, 279, 2748, 2883, 315, 5195, 11, 6376, 279, 2317, 369, 279, 2768, 14491, 430, 690, 4358, 1202, 7677, 11, 6020, 82, 11, 323, 35186, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043cb80>, 'json_data': {'input': [[18902, 79483, 25, 578, 7188, 8191, 315, 20695, 8398, 7658, 11, 902, 80412, 279, 4868, 315, 828, 1511, 304, 3717, 449, 7757, 73288, 7766, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7188, 8191, 315, 20695, 8398, 7658, 11, 902, 14564, 828, 4868, 369, 7757, 73288, 7766, 13, 1102, 46480, 279, 24050, 23331, 12914, 430, 63897, 2011, 21546, 11, 4726, 69226, 1113, 8907, 9045, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043caf0>, 'json_data': {'input': [[18902, 79483, 25, 6104, 1855, 21283, 5597, 374, 1234, 14638, 11, 584, 5343, 279, 35018, 304, 99216, 18512, 323, 1023, 1510, 58165, 389, 1057, 79980, 660, 31946, 61572, 439, 584, 3984, 6201, 36755, 320, 258, 39381, 315, 264, 8515, 8323, 8, 369, 279, 35018, 13, 1789, 5217, 2038, 11, 1518, 7181, 220, 605, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 24043, 6514, 315, 279, 35018, 52872, 555, 63897, 4953, 13, 1418, 814, 527, 1234, 14638, 11, 19392, 1268, 1521, 58165, 527, 27000, 304, 279, 2883, 596, 6020, 12518, 13, 1115, 2038, 374, 9959, 369, 8830, 279, 2883, 596, 5326, 6373, 323, 6020, 13122, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043ca60>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 1032, 13, 70396, 35695, 198, 2014, 940, 1534, 73094, 25, 330, 9290, 220, 1032, 13, 70396, 35695, 1, 15151, 264, 3230, 3857, 315, 279, 2246, 5552, 311, 279, 2883, 596, 9548, 20448, 15174, 13, 1115, 5296, 3629, 5727, 9200, 2038, 9002, 5708, 2671, 11, 5708, 6108, 20448, 11, 323, 1023, 5552, 6020, 42356, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:36 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-11-30 23:57:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043c9d0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 311, 3493, 2317, 369, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:37 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-11-30 23:57:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043f130>, 'json_data': {'input': [[18902, 79483, 25, 578, 10013, 753, 14434, 47910, 3298, 11, 902, 690, 1397, 304, 1355, 2474, 5220, 311, 6994, 1217, 14771, 369, 35271, 828, 4028, 3738, 3956, 323, 1397, 2778, 21787, 311, 4430, 32248, 1534, 828, 449, 21425, 5220, 11, 4315, 1023, 4442, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 10013, 753, 14434, 47910, 3298, 11, 902, 88381, 502, 8670, 389, 5220, 9002, 1217, 14771, 323, 828, 11821, 13, 1102, 22020, 279, 42028, 23331, 4676, 323, 1202, 25127, 369, 63897, 11, 31799, 1203, 311, 279, 22100, 315, 8907, 323, 25605, 2349, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043fb50>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 8, 13031, 48258, 12032, 527, 12715, 439, 1023, 1510, 323, 2536, 45275, 12032, 304, 279, 79980, 660, 31946, 61572, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 24790, 315, 32905, 12032, 304, 279, 2883, 596, 79980, 660, 31946, 61572, 11, 19392, 1405, 1521, 24198, 527, 12715, 13, 1102, 374, 961, 315, 279, 6020, 13122, 430, 5825, 28330, 922, 279, 2883, 596, 9513, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043c940>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1101, 1440, 9873, 315, 682, 12562, 2212, 279, 1917, 17631, 389, 5195, 43283, 311, 1505, 6444, 323, 3139, 872, 9873, 2001, 323, 584, 1304, 430, 1524, 8831, 449, 15592, 13, 3161, 21304, 7639, 11, 50270, 5042, 3371, 603, 872, 4901, 9021, 323, 4430, 872, 11782, 12032, 11, 323, 15592, 690, 9651, 8356, 323, 1629, 264, 7701, 7524, 1008, 4901, 4028, 682, 315, 5195, 753, 6012, 11, 311, 3449, 872, 8199, 13, 5761, 19074, 12716, 279, 7720, 315, 15592, 311, 9873, 315, 682, 12562, 11, 10695, 1124, 6847, 1893, 42329, 2442, 607, 3093, 41545, 16850, 872, 3956, 2001, 369, 1949, 13, 23212, 11, 584, 527, 60257, 449, 7694, 323, 30064, 14058, 430, 527, 6089, 18751, 1139, 279, 15592, 41503, 16694, 323, 7669, 1697, 3941, 304, 7694, 2672, 1413, 21460, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 3560, 315, 15592, 304, 74142, 5195, 43283, 369, 9873, 13, 1102, 16964, 1268, 15592, 7526, 1093, 21304, 7639, 323, 5761, 19074, 40821, 13172, 11618, 11, 21583, 433, 311, 279, 8244, 7057, 315, 77582, 5557, 369, 2626, 6650, 323, 47594, 1217, 11704, 2949, 279, 13172, 10706, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043fac0>, 'json_data': {'input': [[18902, 79483, 25, 220, 868, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 9959, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043fa30>, 'json_data': {'input': [[18902, 79483, 25, 2204, 9548, 14, 66301, 12135, 11, 14209, 315, 4375, 61783, 323, 61469, 9511, 12659, 11, 323, 1023, 11774, 9057, 555, 6138, 11, 4221, 11, 2254, 19248, 11, 323, 13042, 12062, 11, 7859, 279, 23965, 315, 3815, 2626, 304, 5361, 56043, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 11774, 315, 61469, 9548, 12, 66301, 12135, 323, 9511, 12659, 4028, 5961, 11, 439, 1664, 439, 13042, 12062, 430, 1391, 49895, 6625, 7677, 13, 1102, 72890, 279, 3823, 5070, 11774, 430, 63897, 12580, 304, 20958, 264, 87516, 13166, 7829, 31550, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043f9a0>, 'json_data': {'input': [[18902, 79483, 25, 19406, 58364, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 389, 12625, 13146, 11, 19392, 430, 279, 2768, 2262, 690, 2686, 279, 5897, 323, 23331, 11774, 63897, 12580, 9002, 12625, 7016, 323, 26969, 13, 1102, 7437, 279, 6566, 369, 25394, 279, 25127, 315, 1521, 13146, 389, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043f910>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 10321, 323, 1587, 539, 6782, 904, 2262, 11, 8617, 8405, 912, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043f880>, 'json_data': {'input': [[18902, 79483, 25, 58654, 34919, 527, 17303, 520, 6762, 907, 323, 21771, 2949, 9580, 220, 17, 304, 279, 6762, 907, 30022, 11, 1606, 584, 1005, 24116, 3157, 7729, 311, 279, 13112, 2561, 477, 10778, 21913, 8336, 323, 4211, 35988, 3157, 40635, 11374, 311, 8417, 6762, 907, 13, 1789, 3738, 3157, 481, 11897, 34919, 11, 584, 617, 16689, 279, 6762, 907, 3072, 369, 902, 4442, 304, 6762, 907, 527, 12715, 304, 507, 40, 69248, 13, 578, 6762, 907, 3072, 574, 16689, 369, 1521, 34919, 311, 5398, 449, 279, 50204, 1534, 20192, 323, 18151, 505, 5552, 32905, 17517, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3649, 389, 1268, 11897, 34919, 527, 17303, 323, 21771, 304, 279, 6762, 907, 30022, 11, 2737, 279, 1005, 315, 40635, 3157, 7729, 323, 10778, 21913, 8336, 13, 1115, 2038, 374, 3062, 369, 8830, 279, 23965, 323, 38152, 4920, 279, 2883, 753, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043f7f0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043f760>, 'json_data': {'input': [[18902, 79483, 25, 87386, 10937, 369, 21513, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 87386, 10937, 369, 21513, 439, 832, 315, 279, 9547, 28987, 13172, 30466, 11, 82003, 279, 8915, 7138, 315, 279, 13172, 3157, 323, 1202, 5536, 389, 5195, 596, 5178, 17150, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043f6d0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1047, 400, 605, 13, 15, 7239, 315, 87126, 6807, 13077, 11, 315, 902, 400, 19, 13, 15, 7239, 29002, 304, 5936, 220, 2366, 19, 323, 400, 21, 13, 15, 7239, 29002, 304, 5936, 220, 2366, 23, 13, 578, 2802, 7969, 369, 682, 6807, 13077, 527, 11075, 3196, 389, 264, 15150, 1701, 3738, 3157, 7969, 11, 439, 1664, 439, 1057, 5208, 9017, 279, 26501, 315, 3738, 41329, 9021, 13, 2360, 15055, 1051, 19310, 1234, 279, 6807, 13077, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 3649, 922, 279, 6807, 13077, 2561, 311, 63897, 4953, 2637, 2737, 15055, 11, 32792, 13003, 11, 323, 2802, 4478, 26314, 13, 1115, 2038, 374, 9959, 369, 47614, 279, 2883, 753, 53113, 323, 6020, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043f640>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1101, 1005, 43645, 539, 24073, 439, 61316, 3252, 24198, 311, 10299, 15635, 23343, 311, 2802, 7969, 11, 38983, 7729, 11, 6807, 70530, 11, 323, 311, 18885, 9341, 4780, 13, 5659, 892, 311, 892, 11, 584, 3810, 1139, 43645, 311, 42766, 279, 3157, 3430, 5326, 389, 3738, 315, 1057, 3157, 481, 25452, 34919, 13, 480, 1771, 323, 18151, 40986, 505, 1023, 43645, 527, 15871, 27000, 2949, 279, 1054, 1605, 863, 3777, 315, 507, 40, 69248, 13, 3580, 7181, 220, 22, 369, 4726, 3649, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 315, 43645, 11, 26073, 872, 1005, 311, 10299, 5370, 6020, 15635, 11, 2737, 2802, 7969, 323, 38983, 7729, 13, 1102, 22020, 279, 24790, 315, 20192, 323, 18151, 505, 1521, 43645, 304, 279, 507, 40, 69248, 3857, 11, 8405, 20616, 1139, 279, 2883, 753, 8244, 6020, 8446, 323, 5326, 6373, 12659, 13, 1115, 374, 961, 315, 264, 8294, 19775, 389, 279, 1005, 315, 43645, 304, 279, 2883, 596, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043f5b0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 36233, 18512, 1051, 400, 4578, 13, 23, 7239, 11, 459, 5376, 315, 220, 605, 4, 1060, 927, 1060, 11, 15871, 16625, 555, 459, 5376, 304, 20448, 18512, 323, 10405, 5552, 311, 1057, 5274, 3634, 26329, 9045, 13, 578, 5376, 304, 20448, 18512, 574, 14090, 279, 1121, 315, 10405, 5552, 311, 9548, 3285, 685, 5938, 449, 279, 14278, 304, 1057, 32027, 323, 459, 5376, 304, 328, 5002, 20900, 13, 36233, 18512, 56128, 505, 279, 2349, 304, 279, 13240, 5505, 6439, 315, 1057, 16692, 323, 3738, 4009, 7241, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 10565, 18512, 315, 279, 2883, 11, 8405, 20616, 1139, 279, 12050, 315, 20900, 6650, 11, 2737, 32027, 14228, 7194, 323, 26329, 9045, 13, 1102, 34161, 311, 279, 8244, 6020, 2890, 315, 279, 2883, 11, 94012, 1268, 25605, 4442, 323, 9548, 3285, 685, 617, 40028, 6020, 17150, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043f520>, 'json_data': {'input': [[18902, 79483, 25, 1442, 459, 24084, 6650, 2883, 11, 13519, 555, 1817, 1906, 422, 279, 23702, 519, 706, 16689, 539, 311, 1005, 279, 11838, 9320, 4261, 369, 89506, 449, 904, 502, 477, 32828, 6020, 24043, 10886, 3984, 33549, 311, 11360, 220, 1032, 2948, 8, 315, 279, 19224, 3298, 13, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 961, 315, 279, 23331, 8907, 3857, 2949, 279, 220, 605, 16222, 26559, 13, 1102, 11951, 14564, 3508, 279, 23702, 519, 706, 12146, 311, 1935, 9610, 315, 459, 11838, 9320, 4261, 369, 502, 6020, 24043, 10886, 11, 264, 17575, 430, 6276, 24084, 6650, 5220, 311, 7781, 8907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043f490>, 'json_data': {'input': [[18902, 79483, 25, 72837, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 13426, 11, 19392, 264, 6541, 311, 25394, 279, 2883, 596, 3827, 30255, 323, 58165, 11, 902, 527, 8792, 311, 8830, 1202, 6020, 3044, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043f400>, 'json_data': {'input': [[18902, 79483, 25, 220, 5958, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 5905, 11, 4461, 19392, 1405, 420, 3857, 374, 7559, 304, 279, 2246, 11, 902, 8779, 304, 60499, 279, 8294, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043f370>, 'json_data': {'input': [[18902, 79483, 25, 15055, 7318, 311, 5195, 8304, 8717, 15871, 369, 14058, 12882, 389, 872, 6012, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 311, 37067, 389, 350, 1741, 555, 45391, 14507, 1903, 311, 5195, 8304, 8717, 11, 4726, 94012, 279, 7194, 5938, 449, 13172, 12882, 389, 8427, 6012, 11, 902, 374, 16996, 369, 8830, 13254, 55856, 20038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043f2e0>, 'json_data': {'input': [[18902, 79483, 25, 220, 2166, 627, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 2199, 1396, 5905, 11, 4461, 19392, 279, 2246, 596, 29595, 369, 10873, 10096, 11, 3582, 433, 1587, 539, 3493, 67749, 2038, 389, 1202, 1866, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043f250>, 'json_data': {'input': [[18902, 79483, 25, 8292, 315, 11835, 320, 269, 34630, 7246, 315, 2585, 72946, 705, 16346, 11, 323, 10396, 520, 279, 19426, 2883, 280, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 12143, 35434, 279, 8292, 315, 5995, 11835, 323, 16346, 304, 279, 19426, 2883, 11, 22364, 311, 279, 15635, 5938, 449, 23391, 8907, 323, 25605, 29237, 13, 1115, 18809, 1139, 264, 8294, 2317, 315, 4245, 63582, 323, 6373, 11774, 430, 31889, 2391, 279, 18052, 10474, 315, 63948, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043f1c0>, 'json_data': {'input': [[18902, 79483, 25, 220, 508, 627, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043fbe0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2007, 3770, 18911, 279, 20192, 320, 9563, 288, 8, 315, 1057, 43645, 389, 279, 79980, 660, 70816, 315, 33620, 25, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 50729, 279, 20192, 323, 18151, 389, 43645, 439, 12715, 304, 279, 79980, 660, 70816, 315, 33620, 13, 1102, 374, 961, 315, 279, 6020, 28957, 430, 6835, 20616, 1139, 279, 5536, 315, 43645, 389, 279, 2883, 753, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043fc70>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 2316, 19392, 279, 9546, 315, 264, 2007, 315, 8970, 2949, 279, 2246, 13, 1102, 17482, 439, 264, 34512, 1697, 12576, 369, 279, 6742, 719, 1587, 539, 6782, 904, 2262, 9959, 311, 279, 6020, 828, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043fd00>, 'json_data': {'input': [[18902, 79483, 25, 38493, 48698, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 8712, 315, 13254, 18324, 11, 8405, 279, 89328, 16565, 430, 8641, 1268, 63897, 4953, 13, 7576, 323, 6821, 1202, 13254, 304, 18859, 449, 24043, 10886, 13, 1102, 374, 961, 315, 279, 27927, 6020, 13122, 3857, 79774, 5199, 24043, 10396, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043fd90>, 'json_data': {'input': [[18902, 79483, 25, 3580, 24442, 8554, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 1578, 8554, 279, 9546, 315, 24442, 8554, 11, 23377, 430, 13016, 649, 8464, 311, 1521, 369, 810, 11944, 41941, 315, 279, 25452, 4442, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043fe20>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5042, 15151, 430, 279, 2768, 2262, 374, 961, 315, 279, 6771, 315, 36962, 315, 279, 2246, 13, 1102, 17482, 439, 264, 34512, 1697, 12576, 369, 13016, 3411, 369, 3230, 14491, 2949, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043feb0>, 'json_data': {'input': [[18902, 79483, 25, 220, 6083, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 2199, 1396, 320, 6083, 8, 304, 279, 6771, 315, 36962, 11, 29820, 311, 279, 6070, 315, 279, 2246, 323, 86387, 304, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043ff40>, 'json_data': {'input': [[18902, 79483, 25, 400, 3443, 400, 8652, 400, 3101, 400, 5154, 400, 1049, 400, 3965, 400, 1041, 400, 1135, 400, 15, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 3119, 348, 1229, 8, 650, 612, 47, 30950, 384, 328, 43945, 220, 2636, 624, 63897, 4953, 13, 3308, 356, 284, 16473, 63981, 41739, 284, 8713, 2345, 39092, 38, 8191, 41739, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 279, 4876, 828, 5552, 311, 63897, 596, 5708, 5178, 927, 264, 3230, 4261, 13, 1102, 43395, 11105, 279, 9341, 6650, 11, 902, 374, 16996, 369, 15167, 47614, 279, 2883, 596, 13970, 5178, 8844, 311, 3157, 15285, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028c040>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 904, 1495, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028c0d0>, 'json_data': {'input': [[18902, 79483, 25, 67795, 555, 5905, 36881, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 8554, 430, 3738, 50829, 527, 32762, 555, 5905, 11, 43080, 430, 279, 6742, 1288, 8464, 311, 1023, 9477, 369, 5217, 3649, 11, 902, 374, 4279, 304, 16287, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028c160>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 1587, 539, 6782, 904, 1495, 323, 9093, 37856, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028c1f0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 2759, 369, 8070, 13426, 1701, 279, 9513, 323, 24305, 1749, 11, 1234, 902, 584, 15641, 279, 3392, 315, 13426, 45691, 477, 21639, 481, 369, 279, 1510, 1060, 323, 27334, 3827, 12032, 323, 58165, 369, 279, 3938, 3827, 16296, 315, 4455, 430, 617, 1027, 15324, 304, 1057, 6020, 12518, 477, 3827, 4780, 13, 1226, 6767, 1510, 323, 27334, 3827, 12032, 323, 58165, 3196, 389, 19705, 315, 44977, 3827, 2383, 13, 1226, 15806, 279, 29736, 315, 3938, 49803, 315, 1057, 27334, 3827, 12032, 3196, 389, 682, 2561, 6029, 323, 5813, 264, 51262, 41458, 311, 8108, 27334, 3827, 12032, 994, 433, 374, 810, 4461, 1109, 539, 430, 814, 690, 539, 387, 15393, 477, 4984, 264, 51262, 41458, 311, 5376, 27334, 3827, 12032, 994, 433, 374, 810, 4461, 1109, 539, 430, 814, 690, 387, 15393, 13, 1226, 617, 16689, 311, 2759, 369, 279, 3827, 6372, 315, 279, 3728, 528, 61186, 3428, 3827, 33620, 17575, 439, 264, 1510, 4261, 20900, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 1749, 20011, 555, 63897, 4953, 13, 369, 24043, 369, 8070, 13426, 11, 82003, 279, 9513, 323, 24305, 5603, 13, 1115, 374, 3062, 369, 8830, 1268, 3827, 30255, 527, 27000, 304, 279, 2883, 596, 6020, 12518, 323, 872, 4754, 5536, 389, 4272, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028c280>, 'json_data': {'input': [[18902, 79483, 25, 2009, 2315, 198, 2014, 940, 1534, 73094, 25, 578, 2316, 330, 2356, 2315, 1, 40019, 264, 10430, 389, 63897, 596, 71419, 28904, 11, 459, 3062, 13189, 315, 1202, 6020, 42356, 323, 25605, 25152, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028c310>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 1234, 25261, 555, 5370, 13018, 323, 7362, 3827, 11527, 449, 24886, 311, 2536, 32197, 3827, 13146, 13, 578, 3917, 5030, 315, 2536, 32197, 3827, 75620, 15871, 48282, 505, 42254, 389, 279, 3827, 6514, 323, 3827, 4478, 9435, 311, 279, 6412, 315, 1057, 3956, 323, 3600, 304, 1521, 56043, 323, 279, 3827, 6514, 315, 3738, 9548, 7720, 13, 1226, 86659, 361, 2536, 32197, 13426, 430, 1253, 1121, 505, 69570, 555, 11, 477, 904, 51578, 20038, 449, 11, 1521, 3827, 11527, 994, 264, 4814, 374, 35977, 323, 29546, 15279, 481, 13, 1442, 584, 8417, 430, 264, 4814, 374, 29546, 3284, 323, 279, 4814, 477, 2134, 315, 4814, 649, 387, 13240, 11, 584, 36333, 279, 29546, 3284, 4814, 13, 24586, 311, 279, 38088, 23965, 323, 27924, 315, 1521, 13146, 323, 31752, 1920, 304, 3738, 56043, 11, 279, 1620, 15632, 1253, 387, 90694, 2204, 505, 1057, 17078, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 14529, 75620, 5552, 311, 2536, 32197, 3827, 13146, 555, 5370, 3827, 11527, 11, 39686, 279, 84140, 323, 69867, 6532, 304, 279, 3827, 6514, 315, 63897, 596, 3956, 323, 9548, 7720, 13, 1102, 374, 31183, 2949, 279, 27927, 3857, 389, 5897, 323, 3827, 13146, 11, 11951, 28118, 279, 2883, 596, 8907, 323, 4754, 58165, 9002, 3827, 14640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028c3a0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 18, 45285, 26868, 45285, 26868, 3308, 362, 4430, 2109, 75202, 220, 5547, 400, 220, 21, 11, 24758, 220, 2495, 400, 220, 24, 11, 15340, 3308, 356, 4430, 2109, 75202, 220, 21330, 220, 4103, 11, 23411, 220, 10617, 220, 4103, 11, 25862, 10884, 4430, 2109, 75202, 7, 16, 8, 220, 17252, 400, 220, 2946, 11, 17408, 220, 21458, 400, 220, 5538, 11, 10336, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 31085, 315, 279, 13551, 2109, 73350, 2391, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 2737, 15055, 7543, 389, 3308, 362, 323, 3308, 356, 13551, 13, 1115, 11944, 2038, 374, 15525, 369, 39210, 3411, 311, 24564, 18845, 304, 279, 2883, 596, 6864, 471, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043f0a0>, 'json_data': {'input': [[18902, 79483, 25, 25218, 7089, 426, 1441, 11, 584, 527, 26012, 12207, 304, 279, 5789, 315, 2890, 11, 2324, 36788, 11, 323, 18386, 11, 4315, 3885, 13, 4314, 9341, 5789, 3663, 19428, 10937, 505, 3544, 11, 10534, 11, 323, 1664, 50701, 28650, 11, 323, 1057, 33935, 11, 1690, 315, 902, 21736, 279, 4500, 315, 502, 323, 24084, 14645, 11, 1253, 539, 387, 6992, 11, 477, 387, 3025, 311, 20874, 13750, 477, 14816, 520, 14343, 5990, 315, 63336, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 24400, 389, 5195, 596, 22538, 304, 279, 330, 11663, 426, 1441, 1, 5699, 11, 45391, 26593, 1093, 2890, 323, 18386, 13, 1102, 3585, 704, 279, 10937, 505, 9749, 19339, 323, 279, 15635, 17791, 311, 11469, 502, 14645, 304, 1521, 5789, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043f010>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2626, 8446, 11, 3135, 315, 7677, 323, 6020, 3044, 617, 539, 1027, 90694, 11754, 555, 15635, 505, 62542, 18208, 11, 2737, 439, 264, 1121, 315, 8767, 11054, 62542, 24455, 11, 719, 584, 4250, 3493, 44701, 430, 814, 690, 539, 387, 90694, 11754, 304, 279, 3938, 555, 1778, 15635, 477, 904, 3938, 3769, 24455, 13, 1789, 810, 2038, 389, 1057, 62542, 5552, 15635, 11, 1518, 5858, 220, 16, 32, 32388, 68318, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 2883, 596, 1510, 323, 4754, 3938, 14675, 311, 62542, 15635, 323, 872, 5536, 389, 2626, 7677, 13, 1102, 22020, 430, 11, 439, 315, 1457, 11, 62542, 18208, 617, 539, 90694, 11754, 279, 2883, 753, 6020, 3044, 11, 719, 1070, 374, 912, 15803, 430, 3938, 24455, 2834, 956, 13, 1115, 3857, 374, 961, 315, 279, 27927, 10430, 389, 5326, 9547, 430, 1436, 7958, 279, 2883, 596, 5178, 11, 31799, 1203, 311, 6931, 14491, 430, 7872, 5370, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043ef80>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 72214, 279, 2316, 330, 2149, 18992, 4953, 10684, 19392, 279, 2883, 304, 5357, 6957, 279, 2246, 13, 1102, 10109, 988, 279, 2262, 439, 961, 315, 264, 1934, 5552, 311, 63897, 4953, 2637, 4461, 1202, 6020, 5178, 11, 7677, 11, 323, 19092, 24131, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043eef0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 439, 912, 1495, 374, 3984, 369, 46613, 220, 18, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043ee60>, 'json_data': {'input': [[18902, 79483, 25, 220, 6330, 15, 93261, 83856, 16091, 68253, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 279, 2686, 315, 63897, 4953, 3238, 82, 12717, 11145, 19672, 11, 902, 374, 5995, 369, 4033, 44818, 323, 23331, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:57:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043edd0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043ed40>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1304, 433, 264, 10844, 311, 6144, 279, 12625, 323, 4868, 315, 1057, 3956, 11, 3932, 11, 323, 6444, 11, 1524, 422, 1070, 527, 3221, 9860, 6020, 16296, 13, 1226, 656, 420, 555, 31978, 26012, 304, 4857, 3956, 430, 527, 9966, 555, 1670, 26, 26549, 709, 43591, 8647, 828, 12659, 430, 47032, 12625, 555, 2955, 26, 323, 4857, 4228, 4791, 25700, 5110, 430, 2231, 1274, 304, 2585, 13, 1226, 527, 35611, 47594, 1521, 9045, 927, 892, 11, 3508, 555, 28462, 3932, 311, 3313, 42004, 872, 828, 11, 7231, 1124, 7526, 11, 1778, 439, 3092, 2467, 5955, 11, 311, 2585, 872, 1008, 3217, 11, 477, 44169, 7294, 1474, 278, 1698, 11, 7294, 12, 99197, 11, 323, 3636, 4868, 4519, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 3230, 11193, 63897, 4953, 13, 374, 4737, 311, 6144, 1217, 12625, 323, 4868, 13, 1102, 66159, 279, 2883, 596, 59314, 5603, 311, 828, 9313, 323, 8647, 12659, 11, 91115, 279, 98536, 15507, 311, 1217, 7095, 323, 31308, 2626, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043ecb0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 264, 330, 2620, 315, 36962, 1359, 902, 374, 264, 24693, 2449, 315, 279, 2246, 430, 2942, 4861, 1202, 14491, 323, 5825, 459, 24131, 315, 279, 13650, 9960, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043ec20>, 'json_data': {'input': [[18902, 79483, 25, 3580, 24442, 8554, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 5217, 93566, 8554, 19780, 279, 6020, 12518, 11, 902, 649, 3493, 4726, 2317, 323, 3649, 922, 279, 12678, 323, 10396, 1511, 304, 279, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043eb90>, 'json_data': {'input': [[18902, 79483, 25, 17989, 315, 1057, 3938, 20448, 18512, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 35434, 279, 3685, 65649, 304, 1023, 8070, 323, 18512, 11, 902, 527, 28160, 555, 3157, 30295, 13, 1102, 374, 961, 315, 279, 6020, 6492, 3857, 11, 94012, 1268, 9434, 9547, 649, 5536, 279, 2883, 596, 8244, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043eb00>, 'json_data': {'input': [[18902, 79483, 25, 6186, 220, 966, 11, 220, 2366, 19, 198, 2014, 940, 1534, 73094, 25, 1115, 2457, 15785, 279, 67599, 315, 279, 25261, 1934, 369, 63897, 4953, 13, 323, 15151, 994, 279, 6020, 12518, 5343, 304, 279, 2246, 1051, 6264, 1639, 323, 61487, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043ea70>, 'json_data': {'input': [[18902, 79483, 25, 1226, 7068, 30466, 555, 24944, 9959, 11, 2853, 53421, 2930, 13172, 26, 9624, 6108, 10105, 430, 3493, 20790, 6444, 449, 14054, 323, 5452, 3600, 439, 1664, 439, 10758, 323, 20632, 7526, 26, 6763, 315, 1023, 3956, 323, 3600, 11, 1778, 439, 12718, 4036, 369, 11761, 15493, 6108, 3956, 11, 10721, 323, 304, 20624, 24393, 11, 323, 7766, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 311, 7872, 63897, 753, 13254, 2427, 94207, 7640, 11, 82003, 279, 17226, 8336, 315, 13254, 11, 1778, 439, 41455, 323, 3756, 6763, 13, 1102, 5825, 264, 16195, 8830, 315, 1268, 279, 2883, 58191, 4861, 1202, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043e9e0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 9558, 8515, 3984, 555, 10565, 7640, 400, 220, 5925, 11, 21038, 400, 220, 4645, 11, 25594, 9558, 8515, 1511, 304, 26012, 7640, 400, 320, 508, 11, 17690, 8, 400, 320, 1544, 11, 24254, 8, 9558, 8515, 1511, 304, 29642, 7640, 400, 320, 3076, 11, 23776, 8, 400, 320, 5332, 11, 25202, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 55394, 2007, 315, 8515, 28555, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 94594, 4272, 8515, 3984, 555, 10565, 7640, 11, 1511, 304, 26012, 7640, 11, 323, 1511, 304, 29642, 7640, 11, 8405, 264, 16694, 315, 279, 2883, 596, 8515, 6530, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043c700>, 'json_data': {'input': [[18902, 79483, 25, 5751, 17517, 449, 6444, 1253, 2997, 5361, 5178, 30255, 13, 1789, 1778, 28904, 11, 584, 22864, 30466, 311, 1855, 5178, 29672, 3196, 389, 1202, 8844, 44488, 11486, 3430, 13, 1226, 8965, 8417, 44488, 11486, 7729, 3196, 389, 279, 7729, 11684, 311, 6444, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 1268, 63897, 5691, 988, 30466, 311, 2204, 5178, 30255, 2949, 17517, 13, 1102, 66159, 279, 12939, 315, 44488, 11486, 7729, 304, 13254, 18324, 11, 902, 374, 16996, 369, 30357, 13122, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043c790>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043c820>, 'json_data': {'input': [[18902, 79483, 25, 578, 6762, 907, 30022, 7612, 459, 5502, 311, 35608, 279, 1005, 315, 40635, 11374, 323, 30437, 279, 1005, 315, 653, 34595, 11374, 994, 30090, 6762, 907, 13, 578, 26314, 315, 6762, 907, 18065, 279, 1005, 315, 8475, 51262, 5528, 323, 9959, 11374, 1139, 51262, 4211, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 6762, 907, 19179, 1920, 11, 82003, 279, 12939, 315, 1701, 40635, 11374, 28578, 3284, 13, 1102, 20405, 3871, 279, 6931, 20954, 389, 279, 6762, 907, 30022, 323, 279, 16565, 51346, 6762, 907, 22323, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6043c8b0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2038, 2631, 555, 420, 1537, 690, 387, 5343, 1234, 279, 78888, 1054, 38294, 70396, 2476, 1054, 73718, 70396, 863, 323, 1054, 16411, 1105, 11, 18362, 49947, 11, 323, 36565, 81689, 2345, 87628, 81689, 323, 8925, 58364, 2345, 13864, 42725, 10554, 5783, 36036, 323, 46099, 64503, 863, 304, 279, 220, 2366, 19, 33878, 22504, 323, 374, 32762, 36881, 555, 5905, 11, 3734, 439, 311, 2038, 36489, 58179, 33549, 311, 5858, 220, 16496, 3832, 8, 315, 48338, 328, 16222, 23343, 311, 2343, 19579, 5178, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 430, 11944, 2038, 9002, 11145, 20448, 690, 387, 1766, 304, 279, 14827, 220, 2366, 19, 33878, 22504, 13, 1102, 22020, 279, 5357, 389, 7690, 20448, 323, 5552, 35186, 13146, 11, 1418, 1101, 19392, 430, 3738, 23331, 75992, 922, 2343, 19579, 5178, 690, 387, 5343, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028c430>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028c4c0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 94594, 1057, 60391, 6020, 3135, 320, 258, 11990, 11, 3734, 369, 824, 4430, 2038, 323, 54208, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 12399, 2007, 315, 60391, 6020, 3135, 11, 8405, 264, 16694, 315, 63897, 4953, 3238, 82, 6020, 5178, 927, 279, 5300, 4261, 11, 902, 374, 8792, 311, 8830, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:08 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-11-30 23:58:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028c550>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 44694, 330, 2149, 18992, 4953, 13, 1359, 91115, 279, 22654, 315, 279, 2883, 6957, 279, 2246, 11, 4461, 304, 18459, 369, 279, 1828, 6020, 5224, 477, 3857, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:08 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-11-30 23:58:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028d000>, 'json_data': {'input': [[18902, 79483, 25, 477, 7720, 13, 1442, 584, 527, 539, 279, 6156, 63932, 304, 264, 650, 5484, 11, 584, 2759, 369, 279, 9341, 477, 1023, 3977, 12034, 304, 264, 650, 5484, 304, 18859, 449, 8581, 27438, 2599, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 650, 5484, 82, 11, 38938, 279, 24043, 6514, 369, 22538, 304, 1778, 15086, 994, 63897, 374, 539, 279, 6156, 63932, 13, 1102, 5825, 19351, 389, 71628, 311, 27438, 2599, 304, 1521, 15082, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028d990>, 'json_data': {'input': [[18902, 79483, 25, 578, 20547, 15055, 315, 32905, 24198, 3917, 311, 7491, 4272, 1303, 28904, 449, 5370, 45116, 552, 11, 323, 8515, 323, 2536, 1824, 1003, 52508, 4036, 323, 43347, 1234, 1778, 20038, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 4461, 40019, 264, 2007, 477, 12399, 315, 279, 20547, 15055, 315, 32905, 24198, 430, 527, 3917, 311, 7491, 4272, 1303, 28904, 13, 1102, 15151, 264, 11944, 24481, 315, 279, 2883, 753, 32905, 10093, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028c5e0>, 'json_data': {'input': [[18902, 79483, 25, 469, 91467, 13254, 6650, 574, 4799, 2915, 11754, 555, 4442, 304, 7362, 11667, 9473, 7969, 11, 15871, 4245, 311, 279, 549, 815, 13, 18160, 83526, 8844, 311, 279, 20026, 11, 26310, 4445, 555, 279, 549, 815, 13, 18160, 48513, 8844, 311, 279, 24666, 326, 9008, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 37849, 6372, 315, 11667, 9473, 7969, 389, 469, 91467, 320, 31880, 11, 279, 12877, 6460, 11, 323, 10384, 8, 13254, 6650, 13, 1102, 5825, 20616, 1139, 15481, 5178, 323, 9547, 66700, 13254, 11, 902, 20405, 1139, 279, 27927, 6492, 315, 6625, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028d900>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 5912, 3477, 323, 25261, 555, 2225, 13018, 323, 7362, 3827, 11527, 13, 1666, 264, 1121, 11, 584, 617, 4036, 11, 323, 1253, 304, 279, 3938, 5371, 11, 41300, 304, 5361, 56043, 11, 389, 5370, 3827, 14228, 55936, 11, 1778, 439, 8481, 27748, 10332, 34074, 477, 15690, 48587, 479, 8349, 13, 5884, 31959, 15632, 315, 1778, 264, 3477, 477, 25261, 1436, 11682, 1057, 6020, 3044, 323, 10565, 3135, 11, 1397, 31959, 4442, 311, 1057, 2626, 12659, 11, 477, 3917, 603, 311, 5217, 39725, 323, 23331, 44983, 13, 763, 5369, 11, 279, 26314, 315, 1057, 15603, 17575, 369, 8070, 13426, 323, 1023, 3827, 58165, 7612, 5199, 19971, 323, 3629, 18065, 27924, 13, 10541, 584, 4510, 1057, 17989, 527, 13579, 11, 279, 17139, 3827, 15632, 1253, 1782, 505, 279, 15055, 12715, 304, 1057, 6020, 12518, 323, 1253, 7958, 1057, 6020, 3135, 304, 279, 4261, 477, 18852, 369, 902, 1778, 26314, 374, 1903, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 5912, 75620, 13375, 555, 3827, 11527, 323, 279, 4754, 369, 31959, 20124, 505, 1521, 8544, 13, 1102, 34161, 311, 279, 6931, 20954, 389, 3827, 58165, 323, 8907, 11, 82003, 279, 27924, 323, 15635, 5938, 449, 3827, 41300, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028d870>, 'json_data': {'input': [[18902, 79483, 25, 12937, 6108, 70396, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 5708, 6108, 20448, 11, 19392, 430, 433, 374, 264, 5199, 3777, 315, 63897, 596, 6020, 13122, 13, 1102, 17482, 439, 264, 4342, 304, 279, 3857, 430, 3649, 279, 24043, 6514, 315, 5708, 6108, 20448, 11, 6522, 1139, 810, 3230, 41941, 304, 17876, 27855, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028d7e0>, 'json_data': {'input': [[18902, 79483, 25, 2314, 8630, 555, 1817, 1906, 3508, 279, 23702, 519, 706, 13019, 264, 1934, 389, 323, 1651, 65078, 311, 1202, 6373, 596, 15813, 315, 279, 27375, 315, 1202, 5419, 2585, 927, 6020, 13122, 1234, 11360, 220, 7507, 1921, 8, 315, 279, 13951, 6993, 288, 24540, 87, 3258, 3298, 320, 868, 549, 815, 732, 13, 24430, 17, 1921, 595, 555, 279, 9879, 586, 24043, 7626, 430, 10235, 477, 11136, 1202, 25261, 1934, 13, 26182, 240, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18713, 1771, 311, 279, 23702, 519, 596, 5419, 11835, 927, 6020, 13122, 11, 11951, 1234, 11360, 220, 7507, 1921, 8, 315, 279, 13951, 6993, 288, 24540, 87, 3258, 3298, 13, 1102, 15151, 430, 459, 9434, 93596, 7626, 706, 32448, 279, 27375, 315, 1521, 5419, 11835, 11, 902, 374, 264, 16996, 3777, 315, 279, 2883, 596, 6020, 17025, 323, 28330, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028d750>, 'json_data': {'input': [[18902, 79483, 25, 220, 777, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2262, 369, 66251, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028d6c0>, 'json_data': {'input': [[18902, 79483, 25, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 32400, 430, 374, 54291, 11, 19392, 430, 279, 23702, 519, 1587, 539, 26456, 439, 264, 2536, 38698, 3757, 261, 660, 1488, 261, 13, 1102, 374, 961, 315, 279, 23331, 8907, 3857, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028d630>, 'json_data': {'input': [[18902, 79483, 25, 30717, 30466, 527, 15324, 436, 2143, 398, 927, 279, 4261, 315, 279, 15493, 11, 15871, 15438, 13, 1226, 1934, 30466, 505, 5195, 7199, 917, 6763, 323, 304, 20624, 24393, 389, 264, 4272, 8197, 11, 1606, 1057, 5178, 29672, 374, 311, 28696, 264, 7901, 1990, 917, 13707, 323, 842, 3932, 11, 369, 902, 584, 7380, 264, 2532, 11307, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 9200, 16540, 315, 1268, 15493, 30466, 527, 15324, 11, 8104, 369, 5195, 7199, 917, 6763, 323, 304, 20624, 24393, 13, 1102, 20064, 9803, 279, 24043, 6514, 315, 1521, 30466, 11, 902, 374, 3062, 369, 8830, 63897, 596, 13254, 18324, 10396, 323, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028d5a0>, 'json_data': {'input': [[18902, 79483, 25, 12220, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 584, 7543, 400, 2148, 13, 20, 7239, 323, 400, 843, 13, 18, 7239, 389, 6864, 53869, 11, 15947, 13, 1226, 1755, 311, 5376, 11, 8844, 311, 220, 2366, 18, 11, 1057, 9341, 304, 1057, 11156, 14054, 11, 2737, 16692, 11, 4009, 7241, 11, 323, 828, 19169, 11, 311, 1862, 279, 6650, 315, 1057, 2626, 323, 1057, 1317, 9860, 28271, 11, 304, 4040, 304, 1862, 315, 15592, 3956, 323, 3600, 13, 4241, 2827, 7246, 315, 1057, 3424, 323, 7241, 1081, 2436, 994, 279, 24047, 315, 1778, 12032, 527, 8308, 323, 527, 5644, 369, 1057, 10825, 1005, 13, 11680, 374, 539, 73058, 660, 13, 1789, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 1057, 94189, 389, 3424, 323, 7241, 1051, 400, 1032, 13, 20, 7239, 323, 400, 806, 13, 24, 7239, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 5825, 3230, 12678, 389, 6864, 53869, 369, 220, 2366, 17, 323, 220, 2366, 18, 11, 3235, 449, 17078, 369, 3938, 22538, 13, 1102, 66251, 4861, 279, 2883, 596, 6020, 15507, 311, 14054, 11, 8104, 304, 5557, 323, 15592, 11, 902, 374, 16595, 369, 8830, 1202, 6650, 35782, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028d510>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1057, 12411, 323, 7188, 3495, 323, 4500, 6807, 6920, 2000, 4102, 369, 8070, 3827, 10096, 1051, 13489, 400, 5067, 3610, 323, 400, 21, 13, 18, 7239, 11, 15947, 13, 1442, 539, 34716, 11, 279, 12411, 432, 33465, 6807, 690, 3240, 311, 33663, 304, 220, 9639, 22, 323, 279, 7188, 432, 33465, 6807, 649, 387, 11953, 927, 56334, 13, 1226, 4510, 279, 8857, 315, 279, 6918, 3827, 6807, 323, 1614, 3827, 6807, 374, 539, 4461, 311, 387, 15393, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 12411, 323, 7188, 3495, 323, 4500, 6807, 6920, 2000, 4102, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 2737, 872, 32792, 88244, 13, 1102, 27053, 279, 2883, 596, 3827, 6807, 8446, 323, 4754, 7720, 11, 82003, 279, 29736, 315, 49803, 369, 1521, 20746, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028d480>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028d3f0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 264, 2007, 315, 8970, 11, 902, 374, 7718, 369, 10873, 1555, 279, 2246, 11, 10923, 13016, 311, 25539, 3230, 14491, 6847, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028d360>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 1057, 7362, 9473, 5326, 6373, 2068, 690, 539, 7373, 4445, 1057, 4272, 14675, 311, 65649, 304, 7362, 11667, 9473, 7969, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 14564, 279, 2883, 596, 7362, 9473, 5326, 6373, 8446, 13, 1102, 15151, 430, 8994, 9045, 311, 10299, 11667, 65649, 11, 279, 2883, 16961, 988, 14675, 311, 1778, 15635, 11, 902, 374, 264, 16996, 13189, 315, 6020, 9293, 323, 5326, 15813, 14407, 304, 279, 6020, 3044, 3857, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028d2d0>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 8, 6104, 1855, 21283, 5597, 374, 1234, 14638, 11, 279, 35018, 527, 5343, 304, 99216, 18512, 323, 1023, 1510, 58165, 389, 1057, 79980, 660, 31946, 61572, 11, 439, 584, 3984, 6201, 36755, 320, 258, 39381, 315, 264, 8515, 8323, 8, 369, 279, 35018, 13, 26868, 82, 2997, 279, 6372, 315, 7362, 9473, 323, 2802, 13, 3580, 7181, 220, 605, 369, 4726, 3649, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 6209, 264, 87910, 9002, 279, 7665, 9849, 35018, 9932, 304, 46613, 220, 20, 13, 1102, 20064, 9803, 279, 24043, 6514, 315, 1521, 35018, 11, 19392, 430, 814, 527, 5343, 304, 99216, 18512, 4245, 311, 14529, 35730, 13, 1115, 2317, 374, 16996, 369, 8830, 279, 7138, 315, 279, 58165, 10212, 323, 872, 25127, 369, 279, 2883, 753, 6020, 2361, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028d240>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 63897, 4953, 2637, 279, 2748, 2883, 315, 5195, 11, 31692, 279, 2317, 369, 279, 6020, 2038, 10666, 304, 279, 17876, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028d1b0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 3804, 31066, 11, 96209, 11, 323, 41477, 198, 2014, 940, 1534, 73094, 25, 1115, 14836, 15785, 264, 502, 3857, 21760, 389, 13254, 505, 5195, 41455, 11, 15771, 11, 323, 7766, 11, 19392, 264, 6541, 505, 13172, 13254, 311, 1023, 8336, 315, 8070, 2949, 63897, 753, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028d120>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 459, 33243, 4441, 323, 1587, 539, 3493, 92178, 2038, 2085, 5217, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028d090>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 26, 912, 1495, 311, 24564, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028da20>, 'json_data': {'input': [[18902, 79483, 25, 2468, 63897, 11, 584, 527, 11411, 311, 3339, 20057, 11, 25452, 11, 323, 28286, 961, 315, 4395, 584, 656, 323, 311, 7982, 264, 32027, 430, 374, 18740, 315, 279, 3932, 584, 8854, 13, 4497, 2038, 389, 5195, 753, 5603, 311, 20057, 649, 387, 1766, 304, 1057, 9974, 20057, 6821, 11, 2561, 17880, 520, 20057, 5831, 13, 578, 8970, 315, 1057, 20057, 6821, 527, 539, 32762, 555, 5905, 1139, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 477, 304, 904, 1023, 1934, 477, 2246, 584, 1052, 449, 279, 22370, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 5195, 596, 15507, 311, 20057, 11, 25452, 11, 323, 28286, 2949, 1202, 32027, 13, 1102, 15151, 430, 279, 2883, 22262, 311, 1977, 264, 2128, 52828, 315, 1202, 1217, 2385, 11, 31799, 9548, 20057, 311, 13166, 2819, 323, 27927, 3674, 28423, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028dab0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 11, 1093, 1023, 7757, 11, 5557, 11, 323, 3772, 5220, 11, 527, 14134, 3917, 311, 39725, 3196, 389, 18873, 315, 54443, 477, 1023, 27655, 315, 20207, 3424, 3268, 11, 2737, 25589, 11, 7065, 11, 6696, 24511, 11, 323, 42134, 13, 61005, 617, 1101, 16495, 7353, 5934, 20526, 535, 16337, 2403, 603, 555, 26559, 8349, 304, 549, 815, 13, 323, 6625, 19359, 323, 279, 549, 815, 13, 7327, 17657, 9849, 320, 964, 34, 8, 369, 42308, 323, 32616, 9976, 25520, 380, 10373, 13, 763, 5369, 11, 25589, 12, 10168, 5220, 1253, 14134, 6056, 311, 7068, 8070, 505, 46997, 814, 617, 12457, 555, 12967, 8349, 2403, 603, 13, 1666, 584, 3136, 311, 9407, 1057, 2626, 11, 279, 1396, 315, 20207, 3424, 8349, 2403, 603, 706, 7319, 323, 1253, 3136, 311, 5376, 439, 584, 2274, 323, 21953, 502, 3956, 11, 3600, 11, 323, 14645, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7138, 315, 20207, 3424, 39725, 430, 279, 2883, 35006, 11, 45293, 279, 4595, 315, 8349, 323, 279, 9875, 6532, 13, 1102, 72890, 279, 7982, 11900, 315, 1778, 8349, 439, 279, 2883, 52956, 1202, 33935, 11, 27442, 1139, 279, 27927, 10430, 315, 5897, 15635, 323, 872, 4754, 25127, 369, 2626, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028db40>, 'json_data': {'input': [[18902, 79483, 25, 578, 1317, 9860, 13651, 315, 3157, 481, 25452, 34919, 320, 11760, 311, 1317, 9860, 5409, 5352, 17294, 8, 315, 400, 16, 13, 19, 7239, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 374, 5343, 2949, 1023, 2536, 45275, 12032, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 6821, 279, 1317, 9860, 13651, 315, 3157, 481, 25452, 34919, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 19392, 459, 5376, 505, 279, 3766, 1060, 320, 29404, 220, 16, 570, 1115, 2038, 374, 9200, 369, 38663, 4442, 304, 63897, 596, 9513, 2385, 323, 9341, 8446, 927, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028dbd0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2536, 30004, 36164, 25452, 34919, 527, 22538, 304, 38171, 5762, 5220, 2085, 31368, 6449, 481, 3157, 2819, 13, 578, 15691, 907, 315, 1057, 2536, 30004, 36164, 25452, 34919, 374, 24257, 311, 6762, 907, 5304, 40635, 14463, 369, 20086, 477, 4528, 22538, 315, 279, 1890, 55935, 477, 53317, 13, 11842, 30004, 36164, 25452, 34919, 430, 617, 1027, 1323, 68, 40412, 2391, 279, 4261, 3196, 389, 40635, 14463, 527, 21771, 2949, 9580, 220, 17, 477, 9580, 220, 18, 304, 279, 6762, 907, 30022, 1606, 584, 16430, 279, 907, 3196, 389, 51262, 5528, 11, 2737, 3072, 21913, 4211, 11, 3157, 30139, 5603, 11, 323, 4279, 5708, 13890, 1749, 11, 902, 1253, 2997, 264, 10824, 315, 279, 40635, 7901, 3430, 520, 279, 7901, 2457, 323, 1023, 653, 34595, 11374, 2737, 53838, 11, 3685, 892, 311, 4974, 11, 5326, 1949, 4478, 11, 323, 279, 3268, 11, 323, 30255, 315, 279, 34919, 584, 3412, 13, 4314, 11374, 12207, 13592, 3196, 389, 9341, 955, 13, 578, 6762, 907, 315, 2536, 30004, 36164, 25452, 34919, 430, 617, 1027, 1323, 68, 40412, 4245, 311, 53317, 527, 21771, 2949, 9580, 220, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 7138, 315, 2536, 30004, 36164, 25452, 34919, 5762, 555, 63897, 4953, 13, 1102, 16964, 1268, 872, 15691, 907, 374, 24257, 3196, 389, 40635, 14463, 323, 5825, 20616, 1139, 279, 51262, 12823, 1511, 11, 47594, 8830, 315, 279, 2883, 596, 9341, 304, 879, 5220, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028dc60>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 1587, 539, 6782, 904, 1495, 323, 9093, 37856, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028dcf0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 3649, 922, 264, 502, 11380, 3197, 18306, 555, 3842, 13370, 2136, 88, 11, 279, 16478, 315, 279, 8925, 315, 46085, 13, 1102, 50729, 279, 18912, 11, 1396, 315, 13551, 6532, 11, 323, 279, 7524, 4261, 315, 279, 11380, 3197, 13, 1115, 2038, 374, 9959, 369, 15167, 15194, 55465, 11380, 7640, 323, 47614, 4754, 25949, 389, 5708, 7729, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028dd80>, 'json_data': {'input': [[18902, 79483, 25, 67795, 555, 5905, 36881, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 8554, 430, 3738, 50829, 527, 32762, 555, 5905, 11, 43080, 430, 279, 6742, 1288, 8464, 311, 1023, 9477, 369, 5217, 3649, 11, 902, 374, 4279, 304, 16287, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028de10>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 52678, 323, 11767, 1139, 279, 1620, 5300, 17078, 9002, 25605, 81898, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028cf70>, 'json_data': {'input': [[18902, 79483, 25, 1226, 6767, 3738, 1023, 24198, 11, 2737, 328, 5002, 23146, 23183, 304, 279, 5708, 315, 7089, 13315, 5220, 11, 323, 3738, 12032, 323, 58165, 19426, 304, 264, 2626, 10824, 11, 1101, 520, 6762, 907, 389, 264, 2536, 265, 46839, 8197, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 19179, 315, 3738, 6020, 24198, 11, 11951, 5708, 6108, 20448, 320, 50, 5002, 8, 23146, 323, 12032, 477, 58165, 505, 2626, 28559, 11, 902, 527, 26126, 520, 6762, 907, 13, 1102, 374, 961, 315, 279, 27927, 2317, 315, 279, 2246, 430, 50729, 279, 2883, 753, 24043, 10396, 9002, 6020, 24198, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028cee0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 8323, 3878, 369, 9815, 2215, 43672, 13592, 555, 279, 4595, 323, 10687, 315, 1057, 6444, 323, 279, 3956, 477, 3600, 9076, 13, 578, 4751, 1990, 51744, 10332, 323, 994, 8323, 374, 4245, 374, 539, 5199, 13, 1789, 3738, 3956, 477, 3600, 323, 6444, 11, 584, 1397, 8323, 1603, 279, 3956, 477, 3600, 527, 12886, 311, 279, 6130, 13, 23212, 11, 9815, 2215, 43672, 5764, 15055, 369, 3600, 10887, 304, 12178, 315, 279, 1314, 311, 25637, 279, 6130, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 8323, 3878, 369, 9815, 2215, 43672, 11, 39686, 279, 54709, 3196, 389, 6130, 4595, 323, 3600, 9076, 13, 1102, 374, 961, 315, 279, 27927, 3857, 389, 9815, 2215, 43672, 6373, 323, 13254, 18324, 2949, 63897, 4953, 3238, 82, 6020, 13122, 11, 45293, 1268, 279, 2883, 29972, 8515, 6530, 5552, 311, 6130, 14507, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028ce50>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 5217, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028cdc0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2853, 6070, 706, 1403, 6956, 25, 2853, 315, 30466, 323, 10565, 18512, 13, 5751, 10565, 18512, 2997, 7194, 5552, 311, 432, 33465, 11, 6763, 323, 8661, 11, 323, 4689, 323, 23541, 5865, 13, 35211, 315, 1057, 7194, 323, 18512, 11, 2737, 1884, 5938, 449, 279, 5784, 315, 1057, 11156, 14054, 439, 1664, 439, 6956, 315, 1057, 10565, 18512, 11, 527, 8965, 2753, 3977, 304, 7138, 323, 1253, 539, 81584, 311, 4442, 304, 13254, 13, 23212, 11, 65649, 304, 20448, 18512, 1253, 539, 6089, 81584, 449, 4442, 304, 2010, 1868, 11, 304, 4040, 4245, 311, 9974, 5708, 6108, 20448, 320, 50, 5002, 8, 23146, 430, 8965, 28705, 927, 3116, 1667, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 810, 304, 31410, 16540, 315, 279, 2853, 6070, 11, 86055, 1990, 2853, 315, 30466, 323, 10565, 18512, 13, 1102, 66159, 279, 2753, 3977, 7138, 315, 1690, 7194, 323, 1268, 814, 1253, 539, 81584, 6089, 449, 13254, 4442, 11, 63025, 13016, 922, 279, 6020, 30295, 315, 279, 7471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028cd30>, 'json_data': {'input': [[18902, 79483, 25, 79980, 660, 12689, 25074, 53349, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 60391, 12689, 25074, 53349, 11, 19392, 430, 279, 2768, 2262, 690, 3493, 3649, 389, 1268, 279, 2883, 32839, 1521, 15086, 304, 1202, 6020, 12518, 323, 872, 26431, 304, 279, 8244, 6020, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028cca0>, 'json_data': {'input': [[18902, 79483, 25, 19620, 29553, 19224, 32388, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3230, 5326, 315, 7362, 11667, 9473, 11, 19392, 430, 279, 2768, 2262, 690, 82845, 1139, 1268, 65649, 304, 11667, 2819, 7958, 279, 2883, 596, 6020, 3044, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028cc10>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 11, 5195, 8471, 15098, 27983, 30466, 505, 3956, 323, 3600, 7953, 13172, 11, 2737, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 5217, 13254, 23914, 369, 5195, 8471, 7953, 8776, 13172, 11, 43080, 264, 21797, 2461, 315, 8070, 8336, 13, 1102, 48542, 279, 6742, 369, 264, 11944, 1160, 315, 1521, 5217, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028cb80>, 'json_data': {'input': [[18902, 79483, 25, 507, 40, 69248, 11, 4272, 15871, 17610, 315, 2802, 8070, 320, 59857, 705, 279, 2515, 315, 7362, 11667, 9473, 20192, 320, 9563, 288, 705, 4272, 20192, 320, 9563, 288, 8, 323, 53317, 389, 1057, 3157, 481, 323, 2536, 30004, 36164, 34919, 11, 5178, 12718, 11, 323, 8070, 320, 9563, 8, 323, 53317, 505, 1057, 25452, 1749, 22538, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 4726, 25985, 988, 389, 279, 6956, 315, 7089, 33620, 320, 60789, 705, 9558, 11, 45293, 5370, 8336, 315, 8070, 323, 18512, 11, 2737, 2802, 323, 7362, 11667, 6372, 11, 902, 7958, 279, 2883, 596, 4272, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028caf0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028ca60>, 'json_data': {'input': [[18902, 79483, 25, 1226, 74421, 650, 5484, 82, 304, 902, 584, 3412, 264, 3977, 2802, 323, 527, 279, 6156, 63932, 13, 578, 3135, 315, 7677, 323, 6020, 2361, 315, 1521, 650, 5484, 82, 527, 5343, 304, 1057, 60391, 6020, 12518, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 13186, 369, 28230, 1113, 650, 5484, 82, 11, 21760, 389, 279, 2883, 596, 6156, 63932, 2704, 13, 1102, 5825, 2317, 369, 8830, 1268, 279, 6020, 3135, 315, 1521, 15086, 527, 18751, 1139, 279, 2883, 753, 6020, 6821, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028c9d0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028c940>, 'json_data': {'input': [[18902, 79483, 25, 578, 18539, 315, 1057, 3956, 323, 3600, 323, 57383, 315, 1057, 6130, 17517, 6904, 389, 279, 14691, 5784, 315, 1057, 2038, 5557, 323, 17320, 6067, 13, 5751, 6067, 527, 20134, 311, 5674, 11, 32317, 11, 477, 75103, 505, 29882, 477, 32714, 11, 20320, 8951, 11, 1614, 64650, 8951, 11, 5933, 51751, 477, 12495, 38305, 11, 87998, 39510, 477, 17903, 26885, 11, 7637, 11835, 323, 24679, 11, 279, 6372, 315, 10182, 2349, 320, 21470, 439, 9581, 2237, 10205, 11, 37846, 11, 39262, 11, 8798, 17301, 11, 99482, 323, 84913, 3805, 4367, 6372, 323, 2410, 24700, 82, 5938, 449, 93225, 27344, 11, 323, 7319, 13766, 31020, 705, 2410, 4814, 11, 15919, 704, 1154, 11, 62866, 28950, 11, 6500, 42068, 11, 3241, 23367, 11, 58686, 1698, 8951, 11, 8312, 66286, 8951, 11, 6500, 35013, 315, 2532, 8951, 11, 99197, 31956, 11, 477, 1023, 13865, 311, 11682, 477, 2680, 1057, 6067, 13, 4427, 315, 1057, 828, 19169, 527, 7559, 304, 5789, 449, 264, 1579, 5326, 315, 3682, 66579, 477, 1023, 5933, 51751, 13, 5751, 828, 19169, 527, 1101, 3917, 311, 1464, 22610, 11, 80753, 11, 323, 47964, 14385, 315, 89952, 11, 323, 11, 304, 1063, 5157, 11, 311, 4754, 98057, 13239, 505, 5435, 10534, 555, 12764, 20197, 477, 98057, 439, 264, 1121, 315, 87998, 39510, 323, 26885, 12765, 304, 279, 3158, 13, 4427, 315, 1057, 6067, 527, 539, 7373, 48832, 11, 323, 21426, 13654, 9293, 4250, 2759, 369, 682, 42835, 1385, 13, 578, 32659, 315, 264, 5933, 21426, 477, 28522, 11, 22722, 315, 264, 12764, 11, 477, 1023, 653, 93878, 5435, 28987, 1057, 828, 19169, 1436, 1121, 304, 35306, 89508, 304, 1057, 2532, 13, 763, 5369, 11, 1057, 3956, 323, 3600, 527, 7701, 11156, 323, 6485, 323, 617, 13282, 304, 279, 3347, 11, 323, 1253, 6782, 304, 279, 3938, 11, 6103, 477, 52227, 11, 902, 1436, 1121, 304, 89508, 304, 477, 8060, 315, 1057, 3600, 477, 6067, 13, 5884, 315, 1521, 24455, 1436, 3242, 15686, 477, 5471, 603, 505, 13750, 10209, 3956, 323, 8405, 3600, 11, 902, 1436, 11682, 1057, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 15635, 5552, 311, 8871, 323, 17320, 6067, 11, 45293, 279, 5370, 18208, 814, 3663, 13, 1102, 22020, 279, 4754, 16296, 315, 1887, 28950, 389, 279, 2883, 596, 5845, 311, 3493, 3956, 323, 3600, 13750, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028c8b0>, 'json_data': {'input': [[18902, 79483, 25, 59316, 685, 323, 25368, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 400, 220, 15, 79069, 7, 16, 8, 220, 16, 11, 20744, 23139, 14507, 320, 16, 11, 24847, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 7, 17, 8, 400, 220, 2813, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 2759, 315, 279, 4442, 304, 3285, 685, 58165, 927, 279, 1060, 11, 9204, 279, 6041, 8335, 11, 10405, 52872, 11, 8515, 14507, 1903, 11, 323, 279, 13696, 8335, 13, 1102, 10484, 9803, 279, 6020, 5536, 315, 32027, 47311, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028c820>, 'json_data': {'input': [[18902, 79483, 25, 23139, 12477, 304, 93648, 44382, 198, 2014, 940, 1534, 73094, 25, 1115, 14836, 40019, 264, 3857, 389, 8515, 1511, 304, 29642, 7640, 11, 902, 374, 3062, 369, 8830, 1268, 63897, 4953, 13, 29972, 1202, 6864, 6070, 323, 29642, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028c790>, 'json_data': {'input': [[18902, 79483, 25, 7327, 30466, 11, 902, 4097, 264, 5199, 13651, 315, 1057, 30466, 11, 527, 8965, 1380, 22955, 304, 5361, 36702, 323, 9093, 527, 11754, 555, 65649, 304, 7362, 11667, 9473, 7969, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 26431, 315, 6625, 30466, 323, 872, 14675, 311, 11667, 65649, 13, 1102, 7437, 279, 2317, 369, 8830, 279, 11774, 323, 38864, 304, 42118, 63897, 4953, 3238, 82, 6020, 3135, 11, 8104, 369, 3728, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028c700>, 'json_data': {'input': [[18902, 79483, 25, 94189, 20900, 5552, 311, 1057, 11156, 14054, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 34945, 94189, 18512, 5552, 311, 11156, 14054, 11, 91115, 279, 4623, 430, 1070, 527, 5199, 7194, 6532, 304, 20958, 323, 10565, 63897, 596, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028c670>, 'json_data': {'input': [[18902, 79483, 25, 6104, 1855, 21283, 5597, 374, 1234, 14638, 11, 584, 5343, 279, 35018, 304, 99216, 18512, 323, 1023, 1510, 58165, 389, 1057, 79980, 660, 31946, 61572, 439, 584, 3984, 6201, 36755, 320, 258, 39381, 315, 264, 8515, 8323, 8, 369, 279, 35018, 13, 1789, 5217, 2038, 11, 1518, 7181, 220, 605, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 24043, 6514, 315, 279, 35018, 52872, 555, 63897, 4953, 13, 1418, 814, 527, 1234, 14638, 11, 19392, 1268, 1521, 58165, 527, 27000, 304, 279, 2883, 596, 6020, 12518, 13, 1115, 2038, 374, 9959, 369, 8830, 279, 2883, 596, 5326, 6373, 323, 6020, 13122, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028dea0>, 'json_data': {'input': [[18902, 79483, 25, 578, 6372, 389, 4272, 8070, 315, 15055, 312, 65974, 505, 362, 65083, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 12399, 315, 279, 6372, 389, 4272, 8070, 505, 15055, 430, 617, 1027, 312, 65974, 505, 362, 65083, 11, 8405, 20616, 1139, 1268, 19567, 304, 16195, 8070, 5536, 279, 2883, 596, 11626, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028df30>, 'json_data': {'input': [[18902, 79483, 25, 12850, 315, 7528, 2835, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 330, 48387, 315, 7528, 2835, 3600, 1359, 19392, 2500, 3158, 315, 10937, 369, 279, 2883, 11, 8104, 9959, 2728, 279, 10205, 315, 2835, 2262, 15652, 323, 1202, 25127, 369, 5195, 596, 15771, 1093, 13674, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028dfc0>, 'json_data': {'input': [[18902, 79483, 25, 18880, 1398, 3825, 42204, 323, 2009, 2315, 198, 2014, 940, 1534, 73094, 25, 578, 2316, 330, 64693, 1398, 3825, 42204, 323, 2009, 2315, 1, 40019, 264, 10430, 389, 279, 2883, 596, 22538, 304, 12032, 323, 3424, 13, 1115, 3857, 374, 16996, 369, 8830, 1268, 63897, 5691, 988, 1202, 5070, 369, 6650, 323, 14054, 4500, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028e050>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028e0e0>, 'json_data': {'input': [[18902, 79483, 25, 16528, 8245, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 4461, 17482, 439, 264, 33269, 24131, 430, 67146, 13016, 311, 4726, 2038, 9002, 279, 2883, 596, 13122, 323, 28330, 12659, 13, 1102, 7437, 279, 6566, 369, 279, 4595, 315, 2038, 430, 690, 387, 2561, 311, 39210, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028e170>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 279, 2883, 836, 11, 330, 2149, 18992, 4953, 13, 1359, 4461, 19392, 264, 4342, 477, 264, 2316, 304, 279, 2246, 13, 1102, 1587, 539, 3493, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028e200>, 'json_data': {'input': [[18902, 79483, 25, 220, 2366, 19, 400, 220, 16, 11, 15531, 220, 2366, 20, 220, 16, 11, 9892, 220, 2366, 21, 220, 17, 11, 10680, 220, 2366, 22, 220, 16, 11, 10290, 220, 2366, 23, 220, 9413, 2684, 10924, 220, 23, 11, 16415, 10884, 400, 220, 975, 11, 24071, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 3230, 31085, 315, 279, 3938, 12717, 14507, 4245, 369, 1855, 315, 279, 1828, 4330, 1667, 323, 46095, 13, 1115, 11944, 9899, 52797, 304, 38663, 279, 2883, 753, 53113, 323, 5845, 311, 3449, 1202, 11897, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028e290>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 8976, 1534, 4272, 8895, 320, 9563, 8, 389, 25452, 34919, 6216, 2391, 279, 4261, 400, 220, 16, 11, 5162, 400, 320, 20502, 8, 400, 220, 21741, 81019, 1534, 4272, 8895, 320, 9563, 8, 389, 3157, 481, 25452, 34919, 220, 16, 11, 16596, 320, 18, 11, 12754, 8, 220, 22876, 81019, 1534, 4272, 8895, 320, 9563, 8, 389, 2536, 30004, 36164, 25452, 34919, 7, 16, 8, 220, 24, 11, 26537, 220, 14378, 320, 16, 11, 25620, 8, 10884, 8895, 320, 9563, 8, 389, 25452, 34919, 304, 1023, 8070, 320, 59857, 705, 4272, 400, 220, 717, 11, 13897, 400, 320, 18, 11, 20325, 8, 400, 220, 19695, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18808, 1523, 279, 15393, 323, 50204, 1534, 20192, 323, 18151, 389, 25452, 34919, 369, 279, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 8405, 3230, 12678, 369, 1855, 5699, 13, 1115, 11944, 6020, 2038, 374, 7718, 369, 8830, 279, 2883, 753, 9341, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:39 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-11-30 23:58:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028e320>, 'json_data': {'input': [[18902, 79483, 25, 1226, 13375, 1057, 25261, 304, 18859, 449, 279, 10886, 315, 279, 62029, 21257, 13, 13266, 10886, 1397, 430, 584, 3197, 323, 2804, 279, 25261, 311, 6994, 13579, 44701, 922, 3508, 7524, 5419, 2585, 927, 6020, 13122, 574, 18908, 304, 682, 3769, 43666, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 66159, 279, 10886, 323, 16346, 8272, 555, 279, 54406, 2391, 279, 25261, 11, 91115, 279, 38769, 315, 279, 25261, 1920, 323, 279, 44701, 3984, 555, 279, 25261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:39 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-11-30 23:58:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028ed40>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 2500, 330, 2620, 315, 36962, 1359, 91115, 279, 2246, 596, 17057, 6932, 323, 86387, 304, 10873, 1555, 279, 5370, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028ee60>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 19392, 279, 1212, 315, 264, 3857, 5552, 311, 63897, 4953, 2637, 902, 17482, 439, 279, 98536, 5502, 369, 5195, 323, 1202, 5370, 7677, 11, 39825, 279, 17876, 2038, 2949, 279, 2317, 315, 279, 2883, 596, 8244, 41295, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028e3b0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6444, 8965, 7782, 13172, 15808, 1555, 5195, 43283, 11, 5195, 2467, 10790, 11, 5195, 10848, 612, 8519, 220, 6843, 11, 323, 5195, 18729, 17916, 11, 4315, 3885, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 50729, 279, 14595, 23395, 12006, 369, 6444, 23387, 449, 63897, 596, 13172, 3600, 13, 1102, 15151, 279, 15771, 1555, 902, 50270, 649, 3780, 1008, 15808, 11, 45296, 279, 17057, 6070, 315, 63897, 596, 13172, 6763, 1920, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028edd0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 22864, 82746, 311, 13122, 8316, 3196, 389, 279, 3685, 8935, 505, 279, 2626, 10824, 13, 1226, 15806, 1057, 13122, 8316, 48582, 11, 439, 1664, 439, 994, 4442, 304, 1057, 10565, 21282, 12446, 13, 1789, 4442, 304, 13122, 8316, 11, 584, 312, 7128, 82746, 1701, 264, 8844, 6762, 907, 24691, 5603, 13, 1226, 1296, 1057, 82746, 369, 53317, 520, 3325, 30171, 11, 477, 810, 14134, 422, 4455, 477, 4442, 304, 13463, 13519, 430, 279, 9513, 1253, 387, 50160, 13, 7839, 14724, 38974, 1392, 1051, 539, 3769, 369, 279, 18852, 10666, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 10396, 14932, 279, 24691, 323, 16865, 315, 82746, 2949, 63897, 4953, 3238, 82, 6020, 12518, 13, 1102, 16964, 279, 1920, 315, 7649, 82746, 369, 53317, 11, 902, 374, 7718, 369, 23391, 430, 279, 5068, 907, 315, 82746, 27053, 1202, 6762, 907, 323, 374, 539, 83509, 660, 304, 279, 6020, 6821, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028e440>, 'json_data': {'input': [[18902, 79483, 25, 1050, 46469, 527, 15324, 994, 2585, 315, 279, 19487, 11822, 477, 3600, 374, 23217, 311, 1057, 6444, 11, 323, 279, 6667, 3225, 315, 459, 3392, 430, 584, 1755, 304, 9473, 369, 1884, 11822, 477, 3600, 374, 35977, 13, 16207, 323, 1023, 4528, 13426, 527, 28544, 505, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 25985, 988, 389, 279, 3230, 13186, 369, 49183, 13254, 11, 82003, 279, 8481, 315, 2585, 927, 11822, 477, 3600, 323, 279, 44701, 315, 6667, 3225, 13, 1115, 7872, 374, 16996, 369, 8830, 63897, 596, 13254, 23914, 323, 5398, 82, 449, 279, 8244, 13254, 18324, 10396, 9932, 304, 279, 3766, 12143, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028e4d0>, 'json_data': {'input': [[18902, 79483, 25, 30717, 30466, 527, 15324, 436, 2143, 398, 927, 279, 4261, 315, 279, 15493, 11, 15871, 15438, 13, 1226, 1934, 30466, 505, 5195, 7199, 917, 6763, 323, 304, 20624, 24393, 389, 264, 4272, 8197, 11, 1606, 1057, 5178, 29672, 374, 311, 28696, 264, 7901, 1990, 917, 13707, 323, 842, 3932, 11, 369, 902, 584, 7380, 264, 2532, 11307, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 9200, 16540, 315, 1268, 15493, 30466, 527, 15324, 11, 8104, 369, 5195, 7199, 917, 6763, 323, 304, 20624, 24393, 13, 1102, 20064, 9803, 279, 24043, 6514, 315, 1521, 30466, 11, 902, 374, 3062, 369, 8830, 63897, 596, 13254, 18324, 10396, 323, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028e560>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 1057, 9629, 24279, 7194, 320, 51, 1741, 8, 323, 279, 5938, 350, 1741, 4478, 690, 39388, 6426, 11, 902, 1436, 7958, 1057, 8244, 37682, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 9731, 279, 10430, 389, 58191, 2065, 18845, 11, 19392, 430, 27339, 304, 1521, 18845, 690, 7958, 30466, 323, 37682, 11, 91115, 279, 12939, 315, 3157, 30295, 304, 6020, 79482, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028e5f0>, 'json_data': {'input': [[18902, 79483, 25, 1952, 5887, 220, 972, 11, 220, 679, 23, 11, 279, 21283, 7376, 1202, 5597, 430, 3738, 19705, 304, 5195, 753, 8682, 14228, 8141, 20038, 45119, 291, 7665, 10937, 2383, 13, 578, 21283, 5597, 27070, 264, 13281, 19, 13, 18, 7239, 1746, 20, 13, 16, 7239, 439, 315, 5651, 220, 966, 11, 220, 679, 23, 8, 7060, 323, 15910, 279, 35508, 315, 279, 6929, 520, 4360, 13, 1952, 6664, 220, 24, 11, 220, 679, 23, 11, 584, 53382, 279, 21283, 5597, 11, 323, 389, 6664, 220, 1682, 11, 220, 679, 23, 11, 584, 11798, 4442, 311, 3738, 315, 1057, 8682, 8141, 12659, 13, 1952, 6250, 220, 975, 11, 220, 2366, 17, 11, 279, 3331, 7301, 11293, 279, 7060, 505, 13281, 19, 13, 18, 7239, 311, 13281, 19, 13, 16, 7239, 13, 1226, 28520, 13019, 459, 14638, 449, 279, 7665, 7301, 315, 12007, 13, 763, 220, 679, 23, 11, 584, 15324, 264, 6900, 315, 400, 20, 13, 16, 7239, 369, 279, 7060, 11, 902, 584, 11293, 555, 400, 13460, 3610, 304, 220, 2366, 17, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 2500, 5199, 3276, 85971, 1162, 16239, 5195, 596, 8682, 8141, 20038, 13, 1102, 3649, 279, 35018, 23464, 1142, 323, 279, 2883, 596, 9045, 311, 14638, 323, 26069, 11, 19392, 279, 14529, 7138, 315, 23331, 11774, 323, 872, 5536, 389, 2626, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028e680>, 'json_data': {'input': [[18902, 79483, 25, 35761, 48746, 34464, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 264, 9200, 25261, 5030, 430, 51063, 2391, 279, 25261, 11, 19392, 430, 433, 7612, 3361, 6666, 4245, 311, 1202, 23965, 323, 4754, 5536, 389, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028e710>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028e7a0>, 'json_data': {'input': [[18902, 79483, 25, 8060, 311, 13383, 279, 907, 315, 22538, 323, 10496, 66724, 4245, 311, 264, 6996, 315, 53113, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 4754, 369, 539, 44114, 279, 907, 505, 22538, 323, 10496, 66724, 4245, 311, 53113, 4819, 13, 1102, 66159, 279, 6020, 15635, 6532, 304, 19092, 28271, 11, 5398, 287, 449, 279, 27927, 24481, 315, 279, 6020, 2890, 315, 279, 2883, 304, 279, 2317, 315, 1202, 19092, 11429, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028e830>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 2262, 369, 66251, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028e8c0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 5217, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028e950>, 'json_data': {'input': [[18902, 79483, 25, 320, 17, 8, 13031, 48258, 58165, 527, 12715, 439, 99216, 18512, 323, 1023, 58165, 11, 1510, 323, 2536, 45275, 304, 279, 79980, 660, 31946, 61572, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 24790, 315, 32905, 58165, 304, 279, 2883, 596, 8335, 11071, 11, 4528, 311, 46613, 220, 605, 13, 1102, 95593, 279, 2246, 596, 5357, 389, 13687, 6020, 13122, 323, 279, 6373, 315, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028e9e0>, 'json_data': {'input': [[18902, 79483, 25, 68415, 2212, 279, 1917, 617, 18306, 323, 527, 13126, 264, 1396, 315, 27743, 323, 23331, 25243, 18815, 828, 9313, 11, 828, 10648, 11, 323, 26542, 315, 1217, 828, 13, 2467, 4550, 5897, 78688, 11, 13543, 11, 477, 19812, 617, 19543, 304, 11, 323, 1253, 3136, 311, 1121, 304, 11, 35018, 323, 10373, 23537, 430, 584, 2349, 1057, 12659, 11, 902, 617, 1047, 323, 1436, 3136, 311, 617, 459, 31959, 2515, 389, 1268, 584, 3493, 3600, 11, 90255, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 13, 4314, 7016, 323, 14640, 527, 42028, 323, 3917, 311, 23692, 11, 323, 8907, 30255, 1436, 5353, 603, 311, 62622, 12190, 7194, 477, 11682, 279, 4367, 323, 7677, 315, 1057, 3956, 323, 3600, 304, 5627, 430, 11682, 1057, 2626, 13, 26379, 315, 1521, 7016, 2997, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 3728, 2317, 315, 12625, 7016, 323, 279, 4754, 369, 31959, 5897, 20124, 430, 1436, 4541, 20227, 4442, 304, 63897, 596, 2626, 12659, 13, 1102, 22020, 279, 6020, 323, 25605, 64074, 315, 8907, 11, 59049, 279, 10430, 2949, 279, 27927, 25127, 369, 279, 2883, 596, 7677, 323, 17444, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028ea70>, 'json_data': {'input': [[18902, 79483, 25, 220, 3487, 627, 2014, 940, 1534, 73094, 25, 510, 2028, 12143, 8111, 311, 387, 264, 2199, 1396, 323, 1587, 539, 6782, 9959, 2038, 25750]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028eb00>, 'json_data': {'input': [[18902, 79483, 25, 23212, 11, 328, 5002, 5764, 1023, 5708, 6108, 23146, 11, 1778, 439, 5178, 5708, 8316, 320, 5119, 3642, 8, 430, 2997, 3157, 4787, 323, 23146, 430, 1253, 387, 23183, 304, 8515, 477, 279, 5708, 315, 3738, 7089, 13315, 5220, 13, 11659, 3642, 323, 3738, 23146, 11938, 555, 7089, 13315, 5220, 527, 25452, 21771, 323, 20900, 374, 15324, 927, 279, 82780, 2532, 4261, 13, 35211, 23146, 11938, 555, 7089, 13315, 5220, 527, 24305, 21771, 323, 1323, 68, 40412, 520, 6762, 907, 1555, 17516, 13, 578, 6762, 907, 315, 23146, 11938, 555, 7089, 13315, 5220, 374, 3196, 389, 279, 25452, 51262, 315, 279, 20081, 7089, 13315, 2883, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 5217, 4595, 315, 5708, 6108, 20448, 7953, 24107, 3642, 11, 2737, 5178, 5708, 8316, 320, 5119, 3642, 8, 323, 23146, 5552, 311, 63897, 596, 7089, 13315, 5220, 13, 1102, 20064, 9803, 1268, 2204, 23146, 527, 21771, 323, 41853, 369, 11, 52662, 704, 279, 2038, 389, 63897, 596, 5708, 6108, 20448, 10396, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028eb90>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028ec20>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 43907, 43907, 23139, 323, 14930, 5273, 28295, 291, 81019, 1534, 81019, 1534, 23139, 23927, 473, 34980, 11443, 480, 1771, 25733, 288, 14930, 5273, 11964, 4023, 812, 46272, 14930, 907, 4442, 12715, 304, 1023, 16195, 8070, 4212, 34751, 9580, 220, 17, 400, 220, 20, 11, 18163, 400, 220, 15, 400, 220, 15, 400, 220, 20, 11, 18163, 400, 220, 20, 11, 17313, 400, 220, 19, 10423, 27460, 9580, 220, 17, 220, 3174, 11, 23110, 220, 1227, 320, 17, 11, 23785, 8, 220, 2137, 11, 22913, 220, 16085, 220, 1987, 11, 23624, 36565, 11897, 34919, 9580, 220, 17, 220, 1591, 11, 22915, 220, 23, 320, 16, 11, 23642, 8, 220, 1544, 11, 17248, 220, 16, 220, 1544, 11, 15794, 48780, 46128, 323, 9513, 46128, 34919, 9580, 220, 17, 220, 845, 11, 10967, 220, 20, 320, 16, 11, 12754, 8, 220, 975, 11, 26164, 220, 15, 220, 975, 11, 26164, 10884, 22538, 449, 6762, 907, 2349, 27000, 304, 1023, 16195, 8070, 7, 16, 8, 400, 220, 5925, 11, 27311, 400, 220, 2813, 400, 320, 19, 11, 25505, 8, 400, 220, 4218, 11, 14498, 400, 220, 20, 11, 23411, 400, 220, 1490, 11, 24626, 14930, 907, 34074, 12715, 304, 4272, 8070, 18099, 3157, 10736, 9580, 220, 16, 400, 220, 22, 11, 11727, 400, 220, 22, 11, 11727, 400, 220, 15, 9303, 3157, 481, 25452, 34919, 7, 17, 8, 9580, 220, 16, 220, 19, 11, 16368, 220, 15, 220, 19, 11, 16368, 75142, 10736, 9580, 220, 17, 220, 17887, 220, 15, 220, 17887, 10423, 27460, 9580, 220, 17, 220, 16, 11, 23873, 220, 14868, 220, 16, 11, 18318, 36565, 11897, 34919, 9580, 220, 17, 220, 18, 11, 23800, 220, 2397, 220, 18, 11, 25136, 48780, 46128, 323, 9580, 220, 17, 9513, 46128, 34919, 220, 16, 11, 22347, 220, 17, 220, 16, 11, 24313, 10884, 22538, 449, 6762, 907, 2349, 12715, 304, 4272, 8070, 400, 220, 972, 11, 26088, 400, 220, 22, 11, 25021, 400, 220, 806, 11, 9756, 23139, 220, 15, 220, 23, 11, 20460, 220, 15, 10884, 400, 220, 5925, 11, 27311, 400, 220, 2813, 400, 320, 19, 11, 25505, 8, 400, 220, 6550, 11, 679, 400, 220, 1691, 11, 25622, 400, 220, 5925, 11, 24902, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 3230, 12678, 5552, 311, 279, 6762, 907, 315, 5370, 9341, 11306, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 13, 1102, 5825, 11944, 35876, 26793, 430, 1520, 15806, 279, 2883, 753, 9513, 6373, 323, 6020, 2890, 11, 449, 25679, 389, 50204, 1534, 20192, 323, 18151, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028ecb0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 7319, 400, 16, 13, 15, 7239, 505, 220, 2366, 16, 311, 220, 2366, 17, 15871, 16625, 555, 6650, 304, 15493, 323, 3756, 30466, 11, 26310, 4445, 555, 264, 18979, 304, 5452, 30466, 13, 578, 6650, 304, 41455, 574, 14090, 369, 13674, 3600, 11, 15871, 4245, 311, 459, 5376, 304, 7318, 31120, 13, 578, 6650, 304, 3756, 30466, 574, 15871, 16625, 555, 7319, 6763, 315, 28569, 7766, 13, 578, 18979, 304, 5452, 30466, 574, 15871, 4245, 311, 5195, 7199, 11, 16625, 555, 279, 11307, 6070, 4442, 584, 7376, 304, 220, 2366, 16, 439, 1664, 439, 264, 18979, 304, 26171, 10374, 13, 23212, 11, 279, 8244, 5376, 304, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 574, 69214, 11754, 555, 279, 93071, 2515, 315, 7362, 11667, 9473, 7969, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 13970, 2317, 555, 27393, 13254, 6650, 505, 220, 2366, 16, 311, 220, 2366, 17, 369, 5195, 41455, 11, 15771, 11, 323, 7766, 13, 1102, 25985, 988, 389, 279, 12050, 4920, 13254, 4442, 11, 8405, 264, 810, 16195, 1684, 315, 279, 18845, 323, 11774, 17011, 304, 420, 10449, 927, 279, 1667, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028eef0>, 'json_data': {'input': [[18902, 79483, 25, 25733, 2140, 287, 6072, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 14836, 369, 264, 3857, 25394, 330, 40938, 2140, 287, 6072, 1359, 902, 18713, 1771, 311, 4754, 58165, 279, 2883, 1253, 3663, 4245, 311, 5370, 5897, 8349, 477, 42254, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028ef80>, 'json_data': {'input': [[18902, 79483, 25, 11842, 30004, 36164, 34919, 15871, 6824, 315, 25452, 34919, 13, 1226, 2759, 369, 2536, 30004, 36164, 25452, 34919, 1555, 902, 584, 10368, 5199, 10383, 719, 656, 539, 617, 2585, 927, 279, 2793, 2176, 1234, 279, 25452, 1749, 13, 2052, 1023, 2536, 30004, 36164, 25452, 34919, 430, 584, 3412, 527, 15871, 41853, 369, 1234, 279, 19179, 10778, 13, 9636, 279, 19179, 10778, 11, 279, 15691, 907, 374, 17303, 520, 2853, 11, 2753, 904, 53317, 11, 5636, 477, 28382, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 24043, 5528, 369, 2536, 30004, 36164, 25452, 34919, 11, 2737, 279, 25452, 1749, 369, 5199, 10383, 22538, 323, 279, 19179, 10778, 369, 3885, 13, 1115, 2317, 374, 3062, 369, 8830, 1268, 63897, 4953, 13, 9815, 369, 1202, 2753, 14812, 22538, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028f010>, 'json_data': {'input': [[18902, 79483, 25, 40741, 6918, 11, 1614, 11, 323, 7362, 7016, 10217, 1268, 5220, 3493, 4325, 8475, 11704, 311, 2911, 323, 49640, 11, 2737, 279, 4526, 323, 8863, 315, 2911, 323, 9099, 753, 828, 13, 4314, 2997, 279, 15394, 753, 8267, 19406, 19721, 3298, 315, 220, 2550, 23, 11, 323, 279, 3723, 15422, 13381, 12, 2213, 25264, 7127, 6247, 11, 682, 315, 902, 2686, 279, 1005, 323, 28957, 315, 279, 4443, 828, 315, 2911, 323, 49640, 323, 33330, 30255, 389, 2930, 3600, 477, 3956, 15910, 311, 477, 4461, 311, 387, 25790, 555, 2911, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 7016, 430, 2633, 828, 12659, 5552, 311, 2911, 323, 49640, 11, 2737, 279, 15394, 753, 8267, 19406, 19721, 3298, 320, 34, 3143, 8201, 8, 323, 279, 6560, 13381, 12, 2213, 25264, 7127, 6247, 13, 1102, 66159, 279, 5897, 28423, 315, 5220, 304, 22973, 279, 828, 315, 20134, 22673, 323, 11621, 2500, 6324, 311, 279, 23331, 18921, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028f0a0>, 'json_data': {'input': [[18902, 79483, 25, 24416, 8105, 25, 4196, 4090, 323, 20143, 7922, 41755, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 24416, 8105, 11, 902, 12789, 449, 4196, 4090, 323, 20143, 7922, 41755, 11, 36548, 8405, 26793, 1139, 279, 2883, 596, 24043, 369, 30600, 323, 90120, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028f130>, 'json_data': {'input': [[18902, 79483, 25, 41755, 61396, 43672, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 9815, 2215, 43672, 11, 19392, 430, 279, 2768, 2038, 690, 3493, 3649, 922, 279, 2883, 753, 2215, 344, 4893, 11, 902, 527, 3062, 369, 47614, 53113, 323, 6807, 5326, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028f1c0>, 'json_data': {'input': [[18902, 79483, 25, 1328, 42483, 6101, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 264, 1584, 19392, 279, 842, 315, 264, 3857, 477, 2246, 11, 902, 374, 4279, 304, 16287, 6821, 311, 89522, 7471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028f250>, 'json_data': {'input': [[18902, 79483, 25, 578, 8351, 374, 15870, 3917, 311, 8349, 11, 43986, 11, 23331, 323, 3109, 26969, 11, 1023, 29407, 11, 323, 14771, 10373, 16239, 10937, 11, 20207, 3424, 11, 828, 12625, 323, 4868, 11, 3827, 323, 5552, 8907, 11, 9511, 323, 14740, 11, 8518, 42254, 11, 2262, 8066, 555, 1202, 3932, 11, 11822, 323, 3600, 9076, 555, 50270, 477, 36717, 1701, 872, 15771, 11, 4443, 11134, 11, 11761, 9313, 11, 323, 1023, 13146, 13, 1666, 7633, 304, 7181, 220, 605, 311, 279, 60391, 6020, 12518, 1054, 34541, 1392, 323, 39639, 6072, 863, 1778, 8349, 11, 43986, 11, 23331, 323, 3109, 26969, 11, 1023, 29407, 11, 323, 14771, 10373, 1436, 1121, 304, 31959, 16296, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 6264, 12170, 37067, 389, 279, 5370, 5897, 15635, 63897, 4953, 13, 12580, 11, 26073, 279, 84140, 6532, 304, 77472, 4754, 18151, 323, 57616, 264, 3230, 5296, 304, 279, 6020, 12518, 369, 4726, 3649, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028f2e0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 345, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 264, 2007, 477, 3857, 32644, 279, 8515, 6530, 828, 369, 63897, 4953, 13, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 902, 690, 2997, 10565, 11, 26012, 11, 323, 29642, 8515, 28555, 11, 7718, 369, 8830, 279, 2883, 753, 8515, 9659, 323, 45426, 7640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028f370>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 43907, 26868, 82, 2876, 17286, 304, 279, 79980, 660, 31946, 61572, 11, 719, 12522, 25705, 10734, 311, 17286, 43907, 9558, 26868, 82, 26868, 82, 88121, 304, 23139, 323, 17286, 304, 279, 279, 11842, 7813, 1003, 43907, 79980, 660, 79980, 660, 13201, 19715, 26868, 82, 67975, 1534, 31946, 61572, 31946, 61572, 17961, 58513, 7, 16, 8, 39517, 477, 393, 93724, 9558, 26868, 82, 13031, 344, 5983, 12032, 400, 220, 19104, 400, 320, 5833, 8, 400, 220, 24187, 400, 320, 21290, 8, 400, 320, 9413, 8, 400, 220, 5932, 13031, 344, 5983, 58165, 400, 220, 26227, 400, 320, 5833, 8, 400, 220, 19232, 400, 320, 21290, 8, 400, 320, 1591, 8, 400, 220, 16874, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 18911, 3230, 6020, 828, 505, 6790, 220, 2148, 11, 220, 2366, 17, 11, 9002, 279, 20547, 15055, 315, 43645, 323, 872, 4272, 15055, 1306, 24043, 369, 36146, 13, 1102, 5825, 47616, 26793, 1139, 279, 2883, 753, 32905, 6020, 24198, 369, 430, 2457, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028f400>, 'json_data': {'input': [[18902, 79483, 25, 220, 5313, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 264, 2199, 1396, 477, 3857, 11381, 2949, 279, 2246, 11, 23377, 430, 433, 374, 961, 315, 279, 10873, 6070, 369, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028f490>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 2262, 369, 66251, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:58:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028f520>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 264, 2007, 315, 8970, 11, 902, 374, 7718, 369, 10873, 1555, 279, 2246, 11, 10923, 13016, 311, 25539, 3230, 14491, 6847, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028f5b0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 477, 4384, 10449, 323, 1587, 539, 3493, 904, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028f640>, 'json_data': {'input': [[18902, 79483, 25, 7766, 11, 902, 15871, 2997, 6763, 315, 279, 28569, 3070, 315, 7766, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 30466, 8066, 505, 279, 6412, 315, 7766, 11, 11951, 279, 28569, 3070, 11, 19392, 2500, 13254, 4365, 369, 279, 2883, 323, 82003, 1202, 12035, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028f6d0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 5195, 7694, 612, 1023, 400, 220, 10410, 11, 24989, 400, 220, 10674, 11, 10617, 400, 220, 10005, 11, 13103, 13674, 14058, 220, 1591, 11, 24650, 220, 1682, 11, 14052, 220, 2148, 11, 15633, 5195, 8304, 220, 2148, 11, 19597, 220, 843, 11, 19423, 220, 2148, 11, 13384, 5195, 13172, 220, 12652, 11, 22640, 220, 10697, 11, 21505, 220, 14590, 11, 22869, 5195, 41455, 11, 15771, 11, 323, 7766, 220, 1591, 11, 21040, 220, 1682, 11, 22913, 220, 1958, 11, 23292, 5195, 8471, 2860, 220, 14590, 11, 21618, 220, 14022, 11, 21458, 220, 15741, 11, 19642, 5195, 15161, 220, 777, 11, 11056, 220, 1627, 11, 11209, 220, 1644, 11, 25620, 7089, 426, 1441, 220, 25504, 220, 16, 11, 26661, 220, 16, 11, 22369, 75263, 3252, 20192, 320, 9563, 288, 8, 220, 10161, 220, 16, 11, 16415, 220, 14087, 10884, 30466, 400, 220, 15574, 11, 21788, 400, 220, 16544, 11, 25192, 400, 220, 14777, 11, 20077, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 5150, 13254, 12678, 18792, 94140, 555, 955, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 5825, 47616, 828, 7718, 369, 6020, 6492, 323, 12593, 927, 892, 11, 39686, 6650, 477, 71895, 304, 5370, 2626, 5789, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028f760>, 'json_data': {'input': [[18902, 79483, 25, 15903, 11, 422, 904, 8717, 449, 8884, 584, 4430, 1217, 477, 1023, 6130, 2038, 3775, 311, 4305, 26613, 828, 12, 4868, 12659, 11, 3775, 311, 26069, 449, 1057, 3878, 323, 10396, 11, 477, 6062, 7831, 264, 4009, 477, 1023, 4868, 31471, 11, 1057, 3932, 529, 828, 1253, 387, 75298, 25790, 11, 1511, 11, 477, 36489, 13, 1442, 459, 5150, 477, 26617, 31471, 315, 1057, 477, 1057, 2626, 8717, 529, 477, 2532, 12850, 529, 4868, 13980, 11, 279, 3157, 21063, 315, 279, 27375, 315, 1057, 4868, 11193, 1053, 387, 69525, 11, 584, 1436, 9229, 3932, 323, 6444, 11, 1057, 6696, 24511, 477, 1884, 315, 1057, 2626, 8717, 1253, 387, 44500, 11, 323, 584, 1253, 387, 15246, 311, 5199, 5897, 323, 6020, 15635, 11, 2737, 5897, 8349, 320, 8370, 1253, 2997, 538, 26115, 39725, 8, 323, 23331, 6299, 11, 35018, 11, 323, 31086, 13, 5884, 315, 279, 88931, 16296, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 15635, 5938, 449, 11821, 1217, 2038, 449, 8717, 11, 82003, 279, 4754, 369, 828, 69140, 323, 279, 84913, 8389, 16296, 13, 1102, 22020, 279, 83416, 2136, 315, 4868, 12659, 4028, 279, 2883, 323, 1202, 8717, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028f7f0>, 'json_data': {'input': [[18902, 79483, 25, 38493, 48698, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 8712, 315, 13254, 18324, 11, 8405, 279, 89328, 16565, 430, 8641, 1268, 63897, 4953, 13, 7576, 323, 6821, 1202, 13254, 304, 18859, 449, 24043, 10886, 13, 1102, 374, 961, 315, 279, 27927, 6020, 13122, 3857, 79774, 5199, 24043, 10396, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028f880>, 'json_data': {'input': [[18902, 79483, 25, 220, 1987, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 11, 902, 17482, 439, 264, 5905, 1486, 2949, 279, 2246, 719, 1587, 539, 3493, 67749, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028f910>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 5217, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028f9a0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1070, 1051, 13489, 220, 22, 11, 13364, 323, 220, 16, 11, 23776, 5708, 17075, 315, 3335, 315, 1057, 3308, 362, 5708, 323, 3308, 356, 5708, 11, 15947, 13, 9393, 1690, 315, 1057, 13551, 315, 3308, 362, 5708, 323, 3308, 356, 5708, 527, 5762, 555, 46436, 323, 1023, 14673, 389, 17981, 315, 5708, 17075, 11, 584, 527, 12153, 311, 16430, 279, 2860, 1396, 315, 5708, 17075, 15609, 555, 1521, 3335, 29809, 13, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1070, 1051, 13489, 220, 2946, 5708, 17075, 315, 3335, 315, 1057, 3308, 426, 5708, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 25031, 828, 389, 279, 1396, 315, 5708, 17075, 315, 3335, 369, 2204, 6989, 315, 279, 2883, 753, 5708, 439, 315, 264, 3738, 2457, 13, 1115, 2038, 374, 9959, 369, 47614, 279, 63342, 2385, 323, 279, 4754, 10383, 315, 2204, 5708, 17075, 389, 13166, 35186, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028fa30>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 7437, 13544, 279, 35547, 315, 6913, 323, 80703, 4272, 8070, 824, 4430, 315, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 320, 258, 11990, 11, 3734, 824, 4430, 15055, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 18911, 279, 35547, 315, 6913, 323, 80703, 4272, 8070, 824, 4430, 369, 63897, 4953, 13, 1115, 2038, 374, 7718, 369, 8830, 279, 2883, 596, 63336, 389, 264, 824, 60820, 8197, 11, 902, 374, 3062, 369, 15167, 323, 31499, 47614, 279, 6020, 2890, 323, 5178, 315, 279, 7471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028fac0>, 'json_data': {'input': [[18902, 79483, 25, 16666, 47750, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 279, 2883, 596, 6807, 13077, 11, 19392, 430, 279, 2768, 2038, 690, 7872, 279, 2561, 6807, 323, 5938, 3878, 11, 902, 527, 3062, 369, 8830, 279, 2883, 753, 29642, 25152, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028fb50>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 18, 11, 420, 12143, 19813, 311, 279, 330, 2620, 315, 36962, 1, 3857, 11, 12899, 10873, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028fbe0>, 'json_data': {'input': [[18902, 79483, 25, 76615, 33620, 72837, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 76615, 33620, 72837, 11, 19392, 264, 10430, 389, 279, 13643, 12062, 430, 7958, 3827, 13122, 323, 6020, 12518, 11, 902, 374, 9200, 369, 8830, 3827, 58165, 323, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028fc70>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 1587, 539, 6782, 904, 1495, 323, 9093, 37856, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028fd00>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 10321, 11, 323, 8617, 1587, 539, 3493, 904, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028fd90>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 23, 13, 25338, 27267, 6340, 23233, 29863, 3651, 54722, 39415, 8812, 14444, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 330, 12236, 220, 23, 13, 25338, 27267, 6340, 23233, 29863, 3651, 54722, 39415, 8812, 14444, 1359, 19392, 264, 1401, 3857, 315, 279, 2246, 1405, 63897, 4953, 3238, 82, 6020, 12518, 527, 10666, 13, 1115, 3857, 374, 9200, 369, 39210, 3411, 369, 11944, 6020, 5178, 323, 3044, 828, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028fe20>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3136, 311, 1304, 5199, 3495, 323, 4500, 22538, 304, 5789, 315, 19092, 5357, 439, 584, 6056, 311, 2274, 502, 11, 18699, 33935, 11, 7417, 1057, 6484, 33935, 11, 323, 19019, 323, 87388, 10739, 15592, 4028, 1057, 9873, 13, 1226, 1101, 1755, 311, 5376, 11, 8844, 311, 220, 2366, 18, 11, 1057, 9341, 304, 1057, 11156, 14054, 11, 2737, 16692, 11, 4009, 7241, 11, 323, 828, 19169, 11, 311, 1862, 279, 6650, 315, 1057, 2626, 323, 1057, 1317, 9860, 28271, 11, 304, 4040, 304, 1862, 315, 15592, 3956, 323, 3600, 13, 763, 5369, 11, 63948, 323, 19092, 22538, 17210, 311, 279, 58321, 323, 8149, 315, 1057, 33935, 11, 9407, 1057, 19248, 304, 15009, 323, 1023, 16003, 5789, 11, 323, 1977, 3831, 40705, 2212, 19092, 28271, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7138, 315, 63897, 596, 22538, 304, 3495, 323, 4500, 11, 11156, 14054, 11, 323, 19092, 40705, 13, 1102, 72890, 279, 12939, 315, 19297, 323, 14054, 304, 12899, 1317, 9860, 6650, 11, 8104, 449, 264, 5357, 389, 15592, 14645, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028feb0>, 'json_data': {'input': [[18902, 79483, 25, 12850, 315, 20790, 9624, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 34945, 330, 48387, 315, 20790, 9624, 3600, 1359, 19392, 430, 10937, 304, 279, 9624, 3600, 3634, 374, 264, 5199, 4747, 369, 279, 2883, 596, 7677, 323, 6650, 304, 420, 10706, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:10 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-11-30 23:59:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e6028ff40>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6020, 12032, 323, 58165, 430, 527, 17303, 520, 6762, 907, 389, 264, 46350, 8197, 2997, 8515, 86106, 11, 3157, 481, 34919, 11, 32905, 6020, 24198, 11, 323, 3738, 2536, 30004, 36164, 11897, 34919, 13, 5751, 6020, 12032, 17303, 520, 6762, 907, 389, 264, 2536, 265, 46839, 8197, 2997, 2536, 30004, 36164, 25452, 34919, 13, 7089, 6020, 12032, 323, 58165, 527, 11953, 520, 2853, 449, 6762, 907, 36489, 11, 422, 2631, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 279, 6020, 12032, 323, 58165, 430, 63897, 11193, 520, 6762, 907, 389, 264, 46350, 323, 2536, 265, 46839, 8197, 13, 1102, 45537, 279, 10430, 389, 6762, 907, 22323, 555, 38938, 279, 4595, 315, 24198, 6532, 11, 902, 374, 7718, 369, 3932, 315, 279, 6020, 12518, 311, 3619, 279, 2883, 596, 14675, 311, 3157, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:11 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-11-30 23:59:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd349d0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 25261, 5343, 19546, 459, 8830, 315, 5419, 2585, 927, 6020, 13122, 11, 47614, 279, 5326, 430, 264, 3769, 23948, 6866, 11, 7649, 323, 38663, 279, 2955, 323, 10565, 27375, 315, 5419, 2585, 3196, 389, 279, 32448, 5326, 11, 323, 16785, 1778, 1023, 16346, 439, 584, 6646, 5995, 304, 279, 13463, 13, 1226, 4510, 430, 1057, 25261, 5825, 264, 13579, 8197, 369, 1057, 9647, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 25261, 16346, 45179, 555, 279, 6264, 12170, 11, 45296, 279, 17879, 2136, 315, 279, 25261, 1920, 323, 279, 8197, 369, 279, 9647, 23188, 304, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34af0>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 11, 584, 15870, 3810, 1139, 7447, 4771, 11, 2536, 1824, 84703, 20038, 311, 7782, 33268, 4907, 323, 4907, 8365, 11, 1778, 439, 33268, 4907, 35537, 13, 4314, 20038, 656, 539, 2997, 264, 8187, 18160, 15507, 13, 578, 15055, 311, 387, 7318, 1234, 1521, 20038, 527, 3196, 389, 279, 5150, 27378, 311, 387, 8066, 323, 527, 539, 31368, 6449, 481, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 63897, 4953, 3238, 82, 20038, 5552, 311, 33268, 4907, 24393, 11, 902, 22020, 279, 2883, 596, 15507, 311, 41329, 323, 12434, 12014, 13, 1102, 15151, 430, 1521, 30255, 527, 3977, 323, 539, 6847, 10484, 23444, 11, 8405, 20616, 1139, 3938, 6020, 9293, 5552, 311, 41329, 28271, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34a60>, 'json_data': {'input': [[18902, 79483, 25, 24478, 3430, 7318, 824, 4430, 5764, 7194, 5938, 449, 279, 2109, 75202, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 430, 279, 5578, 3430, 7318, 824, 4430, 304, 279, 5708, 2109, 13173, 7640, 5764, 5938, 7194, 13, 1115, 7872, 374, 3062, 369, 15167, 439, 433, 5825, 264, 810, 13687, 8830, 315, 279, 837, 2853, 315, 2109, 75202, 7953, 1120, 279, 4430, 3430, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd340d0>, 'json_data': {'input': [[18902, 79483, 25, 20902, 4221, 4211, 320, 4178, 22365, 8, 527, 459, 13548, 13189, 315, 1057, 990, 304, 15592, 3196, 389, 5655, 6975, 78335, 11, 1778, 439, 279, 63479, 11, 264, 30828, 4009, 18112, 430, 584, 11784, 304, 220, 679, 22, 430, 9087, 449, 4221, 8830, 13, 1115, 6197, 311, 279, 41502, 45770, 56215, 22717, 811, 505, 81632, 11, 477, 426, 3481, 11, 304, 220, 679, 24, 430, 9087, 7694, 3619, 279, 7537, 315, 1217, 2778, 20126, 2731, 1109, 3596, 1603, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7434, 315, 3544, 4221, 4211, 320, 4178, 22365, 8, 323, 872, 26431, 304, 63897, 596, 15592, 28271, 11, 8405, 2317, 369, 8830, 279, 11156, 83787, 1903, 304, 15592, 323, 872, 25127, 369, 1217, 22639, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34160>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3157, 481, 25452, 34919, 527, 17880, 31207, 23301, 477, 10736, 323, 1057, 2536, 30004, 36164, 25452, 34919, 527, 22538, 304, 38171, 5762, 5220, 11, 1063, 315, 902, 527, 304, 279, 21210, 477, 4500, 18094, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19512, 21168, 1990, 3157, 481, 323, 2536, 30004, 36164, 25452, 34919, 5762, 555, 63897, 4953, 2637, 26073, 430, 3157, 481, 34919, 527, 17880, 31207, 1418, 2536, 30004, 36164, 34919, 527, 22538, 304, 879, 5220, 13, 1115, 60038, 374, 16996, 369, 8830, 279, 4595, 315, 22538, 430, 17210, 311, 279, 2883, 753, 8244, 6020, 5326, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd341f0>, 'json_data': {'input': [[18902, 79483, 25, 220, 4643, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 2199, 1396, 21070, 320, 4643, 8, 2949, 279, 2246, 11, 4461, 3453, 11780, 279, 1510, 2199, 304, 279, 8668, 315, 279, 1934, 13, 1102, 1587, 539, 6782, 67749, 2038, 719, 8779, 304, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34280>, 'json_data': {'input': [[18902, 79483, 25, 14681, 18362, 20148, 198, 2014, 940, 1534, 73094, 25, 14681, 18362, 20148]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34310>, 'json_data': {'input': [[18902, 79483, 25, 1226, 11, 1093, 1023, 7757, 11, 5557, 11, 323, 3772, 5220, 11, 527, 14134, 3917, 311, 39725, 3196, 389, 18873, 315, 54443, 477, 1023, 27655, 315, 20207, 3424, 3268, 11, 2737, 25589, 11, 7065, 11, 6696, 24511, 11, 323, 42134, 13, 61005, 617, 1101, 16495, 7353, 5934, 20526, 535, 16337, 2403, 603, 555, 26559, 8349, 304, 549, 815, 13, 323, 6625, 19359, 323, 279, 549, 815, 13, 7327, 17657, 9849, 320, 964, 34, 8, 369, 42308, 323, 32616, 9976, 25520, 380, 10373, 13, 763, 5369, 11, 25589, 12, 10168, 5220, 1253, 14134, 6056, 311, 7068, 8070, 505, 46997, 814, 617, 12457, 555, 12967, 8349, 2403, 603, 13, 1666, 584, 3136, 311, 9407, 1057, 2626, 11, 279, 1396, 315, 20207, 3424, 8349, 2403, 603, 706, 7319, 323, 1253, 3136, 311, 5376, 439, 584, 2274, 323, 21953, 502, 3956, 11, 3600, 11, 323, 14645, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7138, 315, 20207, 3424, 39725, 430, 279, 2883, 35006, 11, 45293, 279, 4595, 315, 8349, 323, 279, 9875, 6532, 13, 1102, 72890, 279, 7982, 11900, 315, 1778, 8349, 439, 279, 2883, 52956, 1202, 33935, 11, 27442, 1139, 279, 27927, 10430, 315, 5897, 15635, 323, 872, 4754, 25127, 369, 2626, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd343a0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 8349, 11, 43986, 11, 23331, 323, 3109, 26969, 11, 1023, 29407, 11, 323, 10373, 16239, 10937, 11, 20207, 3424, 11, 828, 12625, 323, 4868, 11, 3827, 323, 5552, 8907, 11, 9511, 323, 14740, 11, 8518, 42254, 11, 2262, 8066, 555, 1057, 3932, 11, 11822, 323, 3600, 9076, 555, 50270, 477, 36717, 1701, 1057, 15771, 11, 4443, 11134, 11, 323, 1023, 13146, 13, 1226, 527, 1101, 3917, 311, 264, 8205, 315, 8349, 2737, 2027, 8642, 11, 2027, 24305, 11, 323, 11761, 9313, 8349, 5552, 311, 2027, 42655, 11, 4315, 1023, 39725, 11, 323, 584, 1253, 1101, 387, 3917, 311, 8349, 16239, 2890, 323, 7296, 11, 51024, 7384, 10648, 11, 1023, 12434, 6372, 11, 15592, 4967, 11, 4500, 11, 323, 8518, 2065, 11, 477, 2532, 98057, 477, 28950, 13, 51198, 617, 1027, 7263, 11, 323, 584, 1755, 690, 3136, 311, 387, 7263, 11, 2403, 603, 369, 89201, 11, 59357, 11, 69140, 315, 5226, 11, 7065, 323, 32464, 54443, 11, 28743, 10937, 11, 45522, 5820, 11, 16831, 82, 11, 12625, 3268, 27655, 11, 16515, 11, 477, 1023, 5897, 26018, 3196, 389, 279, 7138, 323, 2262, 315, 2038, 2561, 389, 477, 4669, 1057, 3600, 11, 279, 2955, 323, 2515, 315, 1057, 3956, 323, 3600, 11, 477, 4245, 311, 1057, 22315, 304, 20256, 11, 78768, 11, 8661, 11, 44817, 11, 477, 8405, 2680, 311, 2262, 3549, 555, 4948, 9875, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 25985, 988, 389, 279, 4595, 315, 8349, 323, 43986, 63897, 4953, 13, 1253, 3663, 11, 18702, 264, 7353, 2134, 315, 5897, 4819, 505, 20207, 3424, 311, 11761, 9313, 13, 1102, 72890, 279, 4754, 5897, 15635, 279, 2883, 374, 15246, 311, 439, 433, 27149, 1202, 5370, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34430>, 'json_data': {'input': [[18902, 79483, 25, 10884, 6926, 11667, 30466, 11, 902, 22429, 279, 2515, 315, 61316, 3252, 11, 7319, 220, 605, 4, 1060, 927, 1060, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 5217, 2317, 311, 279, 13254, 6650, 9932, 304, 46613, 220, 18, 555, 25394, 6926, 11667, 30466, 13, 1102, 66159, 279, 2883, 596, 5178, 2085, 279, 10383, 315, 11667, 9473, 6372, 11, 19392, 264, 16643, 6650, 4478, 7863, 311, 5068, 12678, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd344c0>, 'json_data': {'input': [[18902, 79483, 25, 19406, 11, 828, 9313, 11, 323, 828, 10648, 14640, 527, 6485, 323, 19019, 42028, 5789, 13, 5884, 8060, 477, 10711, 8060, 311, 26069, 449, 1521, 7016, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 84140, 14932, 12625, 323, 828, 9313, 14640, 11, 19392, 430, 904, 2536, 11733, 32712, 1436, 617, 65069, 6372, 389, 279, 2883, 13, 1102, 66159, 279, 42028, 7138, 315, 1521, 7016, 11, 902, 690, 387, 4726, 36131, 304, 17876, 27855, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34550>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1380, 533, 2626, 31550, 304, 5361, 36702, 13, 7327, 30466, 11, 439, 1664, 439, 7194, 323, 18512, 3453, 50615, 304, 7362, 36702, 11, 29241, 603, 311, 279, 5326, 315, 65649, 304, 7362, 11667, 9473, 7969, 2403, 279, 549, 815, 13, 18160, 13, 1666, 14407, 3770, 11, 584, 3810, 1139, 32905, 24198, 311, 42766, 7362, 11667, 5326, 13, 37409, 36702, 61316, 3640, 5343, 279, 13673, 18160, 11, 8013, 31123, 11, 12152, 18160, 11, 20026, 11, 323, 11002, 58440, 13, 1789, 279, 7580, 315, 42118, 7362, 11667, 9473, 5326, 11, 584, 6646, 279, 13970, 18845, 304, 7362, 11667, 9473, 7969, 323, 11075, 430, 433, 574, 29546, 3284, 430, 31959, 4442, 304, 9473, 7969, 315, 220, 605, 4, 1436, 387, 10534, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 2883, 596, 3728, 7677, 323, 279, 13239, 14675, 311, 7362, 11667, 9473, 4478, 65649, 11, 45293, 279, 11193, 4529, 311, 42766, 420, 5326, 323, 79774, 279, 36702, 6532, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd345e0>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 584, 690, 3136, 311, 48582, 3477, 11, 46464, 11, 323, 2713, 1057, 81898, 369, 16967, 11, 23738, 11, 323, 26060, 279, 1396, 315, 7318, 28849, 323, 51091, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 35434, 279, 31293, 430, 63897, 690, 3136, 311, 46464, 1202, 81898, 369, 15194, 323, 26060, 7318, 28849, 323, 51091, 11, 39686, 279, 2883, 596, 15507, 311, 18899, 1202, 828, 28975, 12659, 323, 13172, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34670>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 578, 6771, 315, 36962, 17482, 439, 264, 10873, 12576, 369, 279, 2246, 11, 79774, 279, 14491, 323, 1401, 13650, 9960, 304, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 369, 63897, 4953, 13, 1102, 6276, 13016, 311, 6288, 25539, 3230, 2038, 2949, 279, 16195, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34700>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 22, 13, 43491, 278, 17961, 22504, 8245, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9320, 311, 69051, 6020, 5224, 2038, 11, 902, 11383, 5825, 5217, 2317, 323, 828, 12899, 279, 1925, 6020, 12518, 11, 47594, 279, 8830, 315, 279, 6020, 2361, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34790>, 'json_data': {'input': [[18902, 79483, 25, 2262, 24279, 7194, 11, 902, 527, 14507, 311, 2262, 12850, 505, 8884, 584, 5842, 2835, 323, 1023, 2262, 369, 8141, 389, 13674, 323, 5195, 7199, 320, 906, 2343, 12718, 311, 1521, 2262, 12850, 3196, 389, 30466, 8066, 477, 264, 10269, 11307, 317, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 2262, 24279, 7194, 11, 902, 527, 9959, 369, 8830, 1268, 63897, 3709, 1759, 18512, 5552, 311, 28506, 2262, 369, 1202, 15771, 1093, 13674, 323, 5195, 7199, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34820>, 'json_data': {'input': [[18902, 79483, 25, 1226, 75224, 7362, 11667, 4741, 17517, 439, 6762, 907, 305, 17327, 311, 42766, 7362, 11667, 15635, 369, 1057, 3157, 481, 34919, 3453, 50615, 304, 36702, 1023, 1109, 279, 549, 815, 13, 18160, 13, 14930, 907, 42766, 15055, 5343, 304, 279, 15813, 315, 42766, 27375, 527, 15324, 304, 507, 40, 69248, 11, 3235, 449, 279, 4445, 1303, 20192, 323, 18151, 315, 279, 5552, 61316, 3640, 3673, 13, 1226, 22429, 4741, 3585, 505, 279, 15813, 315, 42766, 27375, 323, 15641, 4442, 304, 279, 28544, 3777, 304, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 1005, 315, 7362, 11667, 4741, 17517, 439, 6762, 907, 305, 17327, 11, 8405, 20616, 1139, 1268, 63897, 4953, 13, 29972, 11667, 15635, 5552, 311, 1202, 3157, 481, 34919, 13, 1102, 15100, 279, 24043, 6514, 369, 1521, 305, 17327, 304, 12976, 311, 279, 20192, 323, 18151, 315, 61316, 3640, 3673, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd348b0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 94594, 279, 13240, 6762, 907, 315, 22538, 304, 2561, 15548, 58637, 3157, 481, 11897, 34919, 555, 7524, 76543, 48261, 13003, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 29385, 4954, 279, 13240, 6762, 907, 315, 2561, 15548, 58637, 3157, 481, 11897, 34919, 11, 8405, 264, 11944, 31085, 315, 1521, 22538, 323, 872, 76543, 48261, 13003, 13, 1115, 2038, 374, 16595, 369, 42118, 279, 2883, 596, 53113, 323, 9341, 25845, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34940>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5042, 5415, 330, 2620, 315, 36962, 1359, 19392, 279, 7314, 315, 279, 2246, 596, 34512, 1697, 6070, 13, 1102, 374, 7718, 369, 3932, 311, 25539, 3230, 14491, 6288, 2949, 279, 16195, 6020, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34040>, 'json_data': {'input': [[18902, 79483, 25, 35185, 315, 507, 40, 69248, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 279, 6956, 315, 507, 40, 69248, 927, 279, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 29385, 4954, 1401, 6020, 17150, 1778, 439, 2802, 8070, 11, 2802, 20900, 11, 7362, 11667, 9473, 20192, 323, 18151, 11, 323, 20192, 477, 18151, 389, 34919, 13, 1115, 828, 374, 16595, 369, 8830, 279, 27927, 6020, 30295, 28987, 63897, 4953, 3238, 82, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34b80>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 4441, 374, 264, 4342, 19392, 279, 2883, 836, 11, 63897, 4953, 13, 1102, 64664, 279, 9764, 315, 279, 23702, 519, 369, 279, 22370, 26559, 323, 15151, 430, 279, 1934, 18713, 1771, 311, 420, 3230, 5502, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34c10>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34ca0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 13, 74006, 59351, 9182, 23233, 29863, 3083, 356, 9729, 435, 1623, 7585, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 96594, 59351, 9182, 23233, 29863, 3083, 356, 9729, 435, 1623, 7585, 1359, 264, 1401, 6020, 5224, 8405, 26793, 1139, 279, 8515, 4704, 4336, 323, 704, 39240, 315, 63897, 4953, 2637, 16996, 369, 47614, 53113, 323, 8515, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34d30>, 'json_data': {'input': [[18902, 79483, 25, 1789, 5217, 2038, 11, 1518, 7181, 220, 806, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 5217, 2038, 304, 7181, 220, 806, 315, 279, 18559, 311, 279, 79980, 660, 17961, 70816, 11, 51346, 13016, 311, 1427, 369, 810, 11944, 75992, 5552, 311, 279, 4430, 2109, 13173, 2068, 11, 902, 374, 9959, 369, 16195, 6020, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34dc0>, 'json_data': {'input': [[18902, 79483, 25, 42321, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 25891, 330, 1110, 56867, 1359, 902, 35434, 279, 15022, 18921, 430, 279, 2883, 27149, 304, 13, 1102, 7437, 279, 6566, 369, 264, 11944, 6492, 315, 5370, 28650, 4028, 2204, 26593, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34e50>, 'json_data': {'input': [[18902, 79483, 25, 20695, 430, 584, 1457, 2980, 14348, 1389, 1093, 13141, 1817, 11, 6505, 1817, 16946, 11, 477, 5195, 7694, 11, 5195, 38840, 11, 323, 5195, 28508, 1389, 682, 1005, 15592, 13, 1666, 15592, 9731, 311, 7417, 19019, 11, 584, 527, 10968, 389, 7231, 11190, 4519, 311, 1057, 3932, 439, 584, 3136, 311, 6493, 389, 1057, 9131, 311, 31335, 279, 1917, 753, 2038, 323, 1304, 433, 61528, 15987, 323, 5505, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 18254, 8522, 315, 15592, 2949, 5526, 5195, 3956, 11, 1778, 439, 5195, 7694, 323, 5195, 38840, 13, 1102, 27053, 279, 2883, 596, 14529, 15507, 311, 3339, 2038, 15987, 323, 5505, 11, 27442, 2949, 279, 2317, 315, 25394, 15592, 596, 18052, 1139, 6332, 3600, 323, 1202, 25127, 369, 1217, 3217, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34ee0>, 'json_data': {'input': [[18902, 79483, 25, 12220, 220, 2366, 18, 584, 2109, 73350, 323, 28520, 22311, 220, 21458, 3610, 13551, 369, 400, 5538, 13, 17, 7239, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 3230, 7216, 9002, 279, 1396, 315, 13551, 2109, 73350, 555, 63897, 4953, 13, 304, 220, 2366, 18, 323, 279, 2860, 45426, 6532, 13, 1102, 72890, 279, 5569, 315, 279, 2883, 596, 4430, 2109, 13173, 5820, 11, 19392, 1202, 15507, 311, 47594, 63342, 907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd34f70>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1550, 539, 617, 904, 3769, 90108, 2461, 8349, 430, 1051, 35977, 477, 29546, 3284, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5415, 430, 11, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1070, 1051, 912, 3769, 90108, 2461, 8349, 15639, 430, 1436, 5536, 279, 2883, 13, 1102, 17482, 311, 50460, 10742, 555, 19392, 264, 6996, 315, 14247, 6020, 5326, 505, 90108, 2461, 8349, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35000>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1755, 6484, 8515, 11, 8515, 86106, 11, 2875, 9860, 3157, 481, 34919, 11, 8515, 28555, 505, 7677, 323, 29642, 7640, 311, 3136, 311, 387, 14343, 311, 3887, 1057, 10565, 7640, 323, 8515, 42356, 369, 26012, 323, 29642, 7640, 369, 520, 3325, 279, 1828, 220, 717, 4038, 323, 46095, 369, 279, 79003, 3938, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 2289, 279, 10430, 315, 53113, 555, 33449, 287, 430, 279, 2883, 25283, 1202, 6020, 5070, 311, 387, 14343, 369, 1202, 25605, 3966, 369, 520, 3325, 279, 1828, 1060, 13, 1102, 5825, 44701, 311, 39210, 9002, 279, 41329, 315, 279, 2883, 596, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35090>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35120>, 'json_data': {'input': [[18902, 79483, 25, 11842, 30004, 36164, 25452, 34919, 527, 1101, 26126, 369, 53317, 11, 3196, 389, 62129, 9547, 2737, 279, 5220, 6, 6020, 323, 53113, 2361, 323, 2680, 311, 6864, 5070, 11, 4315, 3885, 13, 3277, 34824, 315, 53317, 3073, 11, 584, 10772, 47616, 22323, 315, 279, 6762, 907, 315, 1057, 25452, 22538, 1701, 264, 3157, 5603, 477, 459, 8070, 5603, 11, 902, 7612, 19971, 323, 279, 1005, 315, 653, 34595, 11374, 11, 2737, 11336, 7969, 11, 2793, 2176, 30466, 323, 7194, 11, 323, 30139, 3157, 828, 315, 879, 323, 586, 5220, 11, 4315, 3885, 627, 2014, 940, 1534, 73094, 25, 1115, 10449, 9731, 279, 10430, 389, 2536, 30004, 36164, 25452, 34919, 11, 21760, 389, 279, 16865, 369, 53317, 13, 1102, 50729, 279, 62129, 323, 47616, 9547, 430, 6373, 32238, 11, 902, 11621, 8149, 311, 279, 8830, 315, 5326, 15813, 304, 279, 2883, 596, 9341, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd351b0>, 'json_data': {'input': [[18902, 79483, 25, 5659, 892, 311, 892, 584, 527, 3917, 311, 16287, 323, 42887, 44983, 323, 26969, 389, 5370, 10937, 13146, 555, 23331, 11527, 304, 279, 549, 815, 2637, 4606, 11, 323, 1023, 56043, 31550, 13, 26379, 11, 369, 902, 2728, 872, 7138, 584, 4250, 16430, 264, 3284, 4814, 11, 2997, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 14529, 7138, 315, 3276, 85971, 26969, 430, 5195, 12580, 505, 5370, 23331, 13162, 2212, 279, 1917, 13, 1102, 17482, 439, 264, 71261, 311, 3230, 10507, 315, 1521, 44983, 430, 1833, 304, 279, 2246, 11, 31692, 279, 2317, 369, 279, 5897, 11774, 279, 2883, 374, 28118, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35240>, 'json_data': {'input': [[18902, 79483, 25, 18362, 35907, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 18362, 35907, 11, 902, 94594, 1401, 6020, 3135, 323, 18845, 11, 6376, 279, 6566, 369, 264, 11944, 6492, 315, 279, 2883, 596, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd352d0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3217, 21516, 8951, 323, 1023, 13865, 311, 8895, 45571, 2680, 311, 1057, 6067, 389, 264, 5912, 8197, 13, 34711, 8951, 3136, 311, 38680, 304, 85536, 323, 8286, 11, 323, 49188, 1253, 387, 5107, 311, 11388, 369, 1317, 18852, 315, 892, 13, 1226, 617, 3970, 11, 323, 690, 3136, 311, 1518, 11, 5064, 25480, 3241, 8312, 8957, 52227, 11, 902, 1436, 7958, 1057, 477, 1023, 9875, 529, 6067, 13, 1226, 1755, 311, 3136, 311, 3217, 1778, 24455, 477, 52227, 304, 279, 3938, 13, 5751, 9045, 311, 2686, 77344, 5820, 389, 1057, 5452, 1253, 1101, 5376, 279, 5326, 315, 91155, 5382, 3440, 13, 763, 5369, 11, 584, 3663, 279, 5326, 315, 21516, 8951, 555, 7140, 90160, 323, 1614, 64650, 20142, 13, 4314, 8951, 1253, 2218, 603, 477, 1057, 6444, 11, 8104, 1057, 586, 10706, 6444, 320, 16564, 6918, 11, 1614, 11, 323, 2254, 17047, 570, 4323, 28765, 32360, 39510, 477, 17903, 26885, 11, 1778, 439, 279, 14529, 12324, 304, 279, 12877, 6460, 323, 19278, 11, 1253, 5376, 1521, 15635, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 14529, 7138, 315, 21516, 18208, 279, 2883, 12580, 11, 2737, 27877, 8951, 430, 649, 30485, 6067, 13, 1102, 66159, 279, 12939, 315, 59314, 4868, 11193, 323, 279, 4754, 16296, 315, 22109, 311, 49672, 6144, 2403, 1521, 18208, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35360>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 264, 11897, 29642, 2068, 315, 709, 311, 400, 605, 13, 15, 7239, 1555, 279, 67599, 315, 8518, 5684, 13, 9558, 34555, 505, 420, 2068, 527, 1511, 369, 4689, 13166, 10096, 13, 1226, 1047, 912, 8518, 5684, 19310, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 2883, 753, 8518, 5684, 2068, 11, 8405, 3649, 389, 1202, 5569, 323, 10825, 1005, 13, 1102, 22020, 279, 2883, 596, 5603, 311, 2875, 9860, 29642, 323, 1202, 25127, 369, 8515, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd353f0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 18, 1034, 10604, 505, 32499, 26572, 9941, 77171, 6790, 220, 2148, 11, 9865, 30001, 19863, 29553, 1666, 9865, 75263, 3252, 9865, 30001, 19863, 29553, 220, 2366, 17, 220, 2366, 18, 13756, 1050, 46469, 79711, 13756, 13756, 1050, 46469, 3723, 4273, 400, 220, 9565, 11, 25498, 400, 220, 10465, 11, 17361, 400, 220, 15, 400, 220, 10465, 11, 17361, 220, 24, 1034, 220, 15, 1034, 220, 24, 1034, 469, 91467, 220, 6086, 11, 19222, 220, 5925, 11, 24462, 220, 16551, 220, 1954, 11, 22915, 220, 806, 1034, 220, 16, 1034, 220, 605, 1034, 10314, 1741, 220, 2618, 11, 19592, 220, 3971, 11, 20998, 320, 16, 11, 26439, 8, 220, 4331, 11, 15451, 220, 605, 1034, 320, 18, 8, 1034, 220, 1032, 1034, 7089, 52248, 220, 845, 11, 25208, 220, 972, 11, 9588, 320, 21969, 8, 220, 972, 11, 26007, 220, 23, 1034, 320, 19, 8, 1034, 220, 717, 1034, 1050, 46469, 11, 44878, 61316, 3252, 2515, 220, 11209, 11, 24870, 220, 14777, 11, 11286, 320, 16, 11, 25326, 8, 220, 15500, 11, 5037, 220, 24, 1034, 320, 16, 8, 1034, 220, 605, 1034, 75263, 3252, 20192, 320, 9563, 288, 8, 220, 16, 11, 16415, 220, 14087, 10884, 30466, 7, 16, 8, 400, 220, 16544, 11, 25192, 400, 220, 14777, 11, 20077, 400, 220, 15500, 11, 5037, 220, 24, 1034, 220, 15, 1034, 320, 16, 8, 1034, 220, 605, 33648, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 35876, 828, 5552, 311, 279, 7362, 11667, 9473, 2515, 389, 30466, 369, 2204, 13918, 11, 94012, 1268, 30466, 617, 5614, 1060, 29352, 4771, 13, 1102, 374, 961, 315, 264, 8294, 6492, 315, 6020, 5178, 555, 54242, 323, 11667, 5536, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35480>, 'json_data': {'input': [[18902, 79483, 25, 11106, 315, 1855, 538, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 4595, 315, 34919, 430, 1053, 1833, 1234, 11360, 220, 717, 3348, 570, 1102, 48542, 279, 6742, 369, 3230, 2038, 9002, 1521, 34919, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35510>, 'json_data': {'input': [[18902, 79483, 25, 220, 1135, 627, 2014, 940, 1534, 73094, 25, 1115, 1396, 374, 4461, 264, 5905, 311, 279, 2199, 1396, 304, 279, 2246, 11, 19392, 430, 279, 2768, 2262, 374, 7559, 389, 2199, 220, 1135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd355a0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 14836, 369, 279, 2883, 11, 63897, 4953, 2637, 902, 17482, 311, 10765, 279, 5502, 279, 1934, 374, 922, 11, 10109, 1113, 279, 6742, 2949, 279, 2317, 315, 279, 13166, 24131, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35630>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 21, 11, 420, 12143, 8111, 311, 8854, 439, 264, 4342, 369, 264, 3857, 47031, 311, 63897, 4953, 13, 719, 1587, 539, 3493, 5217, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd356c0>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 868, 13, 8245, 922, 17652, 1392, 323, 66542, 56816, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3230, 5296, 320, 9290, 220, 868, 8, 2949, 279, 6020, 1934, 430, 35434, 279, 2038, 5552, 311, 63897, 4953, 3238, 82, 10565, 21282, 323, 46139, 5789, 11, 8405, 264, 31085, 315, 279, 2883, 596, 2626, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35750>, 'json_data': {'input': [[18902, 79483, 25, 19406, 323, 8398, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 10968, 389, 12625, 323, 4868, 11, 19392, 264, 10430, 922, 63897, 4953, 3238, 82, 15507, 311, 49071, 287, 1217, 828, 323, 47594, 2027, 4868, 13, 1102, 5398, 82, 449, 279, 8244, 7057, 315, 8647, 5557, 1005, 323, 1217, 7095, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd357e0>, 'json_data': {'input': [[18902, 79483, 25, 29240, 304, 3674, 11, 5054, 11, 7100, 11, 3827, 11, 323, 23331, 4787, 477, 304, 7016, 323, 10396, 10217, 264, 7029, 2134, 315, 13650, 323, 5552, 5897, 13146, 11, 2737, 26969, 11, 43986, 11, 323, 23331, 6299, 11, 617, 19543, 304, 35018, 323, 9057, 603, 311, 2349, 1057, 2626, 12659, 13, 1666, 1521, 3728, 18845, 3136, 11, 1057, 2853, 315, 3815, 2626, 1253, 5376, 11, 1057, 5845, 311, 23564, 3738, 2626, 4211, 477, 3085, 3738, 3956, 477, 3600, 1253, 387, 7347, 11, 323, 584, 1253, 1205, 311, 2349, 1057, 2626, 12659, 311, 26069, 449, 42028, 23331, 323, 5897, 13146, 13, 26379, 2997, 279, 3276, 85971, 21859, 13019, 555, 279, 549, 815, 13, 6011, 315, 12007, 323, 264, 1396, 315, 1614, 7867, 27910, 3331, 26, 27743, 25243, 323, 15639, 39725, 304, 279, 549, 815, 2637, 10013, 11, 323, 2212, 279, 1917, 430, 1436, 57160, 477, 22472, 6220, 57511, 9313, 369, 13335, 323, 2930, 15771, 26, 323, 279, 14434, 47910, 3298, 323, 14434, 8471, 3298, 304, 4606, 323, 5370, 27743, 25243, 304, 279, 549, 815, 13, 10968, 389, 3544, 5557, 15771, 13, 1789, 5217, 2038, 11, 1518, 5858, 220, 16, 32, 32388, 68318, 323, 25705, 58364, 304, 7181, 220, 605, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 3744, 8105, 11, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 23331, 11774, 9932, 8767, 11, 45293, 279, 5370, 9434, 40850, 63897, 12580, 11, 2737, 3276, 85971, 4819, 323, 27743, 4442, 13, 1102, 22020, 279, 4754, 6020, 323, 25605, 16296, 315, 1521, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35870>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 369, 279, 3857, 11951, 47031, 311, 63897, 4953, 2637, 19392, 430, 279, 2768, 2038, 690, 29243, 311, 279, 2883, 596, 6020, 5178, 323, 2704, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35900>, 'json_data': {'input': [[18902, 79483, 25, 14930, 5273, 77917, 315, 11842, 5364, 847, 36164, 58588, 46272, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 8712, 315, 6762, 907, 22323, 369, 2536, 30004, 36164, 25452, 34919, 13, 1102, 15151, 430, 279, 2768, 43743, 690, 4358, 1268, 1521, 22538, 527, 26126, 323, 5068, 11, 902, 374, 16996, 369, 8830, 63897, 4953, 3238, 82, 9341, 20136, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35990>, 'json_data': {'input': [[18902, 79483, 25, 3028, 7388, 220, 2366, 19, 328, 43945, 11, 264, 13096, 315, 578, 23778, 1059, 11529, 484, 32886, 4953, 13, 2052, 3268, 4694, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 7065, 5406, 11, 19392, 279, 15637, 315, 279, 828, 323, 14515, 10666, 304, 279, 3766, 27855, 13, 1102, 17482, 439, 264, 5897, 78570, 315, 279, 2592, 315, 279, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35a20>, 'json_data': {'input': [[18902, 79483, 25, 5751, 20207, 3424, 3268, 527, 15525, 11, 323, 904, 38550, 311, 6144, 1124, 1436, 8108, 279, 907, 315, 1057, 3956, 11, 3600, 11, 323, 16097, 439, 1664, 439, 7958, 1057, 5845, 311, 20874, 627, 2014, 940, 1534, 73094, 25, 1115, 961, 66159, 279, 26431, 315, 20207, 3424, 3268, 369, 63897, 4953, 2637, 13310, 287, 520, 1268, 814, 527, 16595, 369, 15022, 9610, 323, 8244, 2626, 2450, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:42 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-11-30 23:59:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35ab0>, 'json_data': {'input': [[18902, 79483, 25, 2956, 12625, 11, 4526, 11, 323, 8863, 25, 42089, 323, 14640, 4726, 65951, 279, 4526, 11, 8863, 11, 323, 5255, 11821, 315, 1217, 477, 13172, 14228, 828, 11, 2737, 12625, 323, 828, 9313, 7016, 26, 7016, 28987, 279, 8863, 315, 2911, 596, 828, 320, 300, 14407, 4726, 3770, 705, 828, 31471, 11801, 7016, 11, 323, 7016, 33994, 828, 31711, 320, 16564, 828, 53404, 7016, 4390, 2014, 940, 1534, 73094, 25, 1115, 3857, 35434, 279, 42028, 18921, 315, 828, 12625, 7016, 323, 14640, 430, 1436, 5536, 63897, 4953, 14639, 82, 7677, 11, 82003, 17294, 389, 828, 4526, 11, 8863, 11, 323, 11821, 13, 1102, 15151, 279, 2883, 596, 30255, 323, 279, 4754, 5897, 85450, 5938, 449, 1521, 14640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:42 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-11-30 23:59:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36560>, 'json_data': {'input': [[18902, 79483, 25, 29226, 17610, 15871, 315, 8220, 11822, 323, 374, 11224, 520, 279, 4827, 315, 2853, 323, 4272, 1972, 8499, 907, 13, 11443, 374, 25157, 1701, 279, 1176, 3502, 11, 1176, 9994, 1749, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19170, 15808, 323, 1202, 51262, 1749, 13, 1102, 374, 961, 315, 279, 15808, 6373, 3857, 11, 8405, 7718, 3649, 389, 1268, 63897, 4953, 13, 29972, 323, 6821, 1202, 15808, 7194, 11, 902, 527, 9959, 369, 8830, 9513, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36f80>, 'json_data': {'input': [[18902, 79483, 25, 220, 5932, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 477, 3857, 11381, 320, 5932, 8, 2949, 279, 2246, 11, 4461, 19392, 279, 7314, 315, 264, 502, 23695, 477, 279, 42271, 315, 2262, 5552, 311, 6020, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35b40>, 'json_data': {'input': [[18902, 79483, 25, 9386, 1392, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 279, 1207, 22327, 389, 42356, 11, 39686, 279, 2883, 753, 3938, 8521, 477, 8187, 19883, 42356, 13, 1102, 374, 264, 71261, 311, 810, 3230, 3649, 922, 279, 7138, 323, 7036, 315, 1521, 42356, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37010>, 'json_data': {'input': [[18902, 79483, 25, 220, 1032, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 459, 1493, 11, 439, 433, 1587, 539, 6782, 9959, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd370a0>, 'json_data': {'input': [[18902, 79483, 25, 220, 2287, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 5042, 264, 1396, 5905, 11, 4461, 19392, 264, 2199, 477, 3857, 1396, 304, 279, 2246, 13, 1102, 1587, 539, 3493, 904, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37130>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 330, 2149, 18992, 4953, 1210, 78864, 279, 836, 315, 279, 2883, 430, 374, 279, 3917, 315, 279, 6020, 25261, 323, 1934, 11, 31692, 279, 2317, 369, 682, 2768, 2038, 5552, 311, 420, 5502, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd371c0>, 'json_data': {'input': [[18902, 79483, 25, 220, 777, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2262, 369, 66251, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37250>, 'json_data': {'input': [[18902, 79483, 25, 23588, 388, 315, 13896, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 9002, 330, 39, 33220, 315, 13896, 1359, 902, 11383, 5825, 3649, 922, 279, 15637, 315, 279, 2883, 596, 5708, 11, 16996, 369, 8830, 63342, 8141, 323, 3268, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd372e0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 13375, 1057, 75620, 304, 18859, 449, 279, 10886, 315, 279, 62029, 21257, 13, 13266, 10886, 1397, 430, 584, 3197, 323, 2804, 279, 25261, 311, 6994, 13579, 44701, 922, 3508, 279, 6020, 12518, 527, 1949, 315, 3769, 5906, 25159, 11, 3508, 4245, 311, 1493, 477, 16515, 13, 5751, 75620, 5343, 16785, 16346, 311, 8720, 279, 15635, 315, 3769, 5906, 25159, 315, 279, 6020, 12518, 11, 3508, 4245, 311, 1493, 477, 16515, 11, 323, 16785, 16346, 430, 6013, 311, 1884, 15635, 13, 15483, 16346, 5343, 38936, 11, 389, 264, 1296, 8197, 11, 6029, 9002, 279, 15055, 323, 75992, 304, 279, 6020, 12518, 13, 5751, 75620, 1101, 5343, 38663, 279, 24043, 16565, 1511, 323, 5199, 17989, 1903, 555, 6373, 11, 439, 1664, 439, 38663, 279, 8244, 15864, 315, 279, 6020, 12518, 13, 1226, 4510, 430, 1057, 75620, 3493, 264, 13579, 8197, 369, 1057, 9647, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 25261, 16346, 45179, 11, 39686, 279, 47999, 7138, 315, 279, 25261, 1920, 11, 902, 5343, 5326, 41300, 11, 6029, 24481, 11, 323, 16865, 315, 6373, 596, 17989, 323, 24043, 16565, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37370>, 'json_data': {'input': [[18902, 79483, 25, 33620, 505, 14691, 7677, 1603, 8070, 13426, 44660, 315, 279, 2768, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 12399, 315, 8070, 505, 14691, 7677, 1603, 8070, 13426, 369, 63897, 4953, 13, 927, 2380, 1667, 13, 1102, 7437, 279, 6566, 369, 8830, 279, 2883, 596, 6020, 5178, 323, 3827, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37400>, 'json_data': {'input': [[18902, 79483, 25, 1023, 20790, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 27851, 34945, 1023, 20790, 3600, 430, 17210, 311, 5195, 15161, 30466, 11, 19392, 430, 279, 9624, 13254, 4365, 374, 62387, 582, 25489, 323, 5764, 5370, 2532, 33935, 7953, 1884, 2736, 11054, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37490>, 'json_data': {'input': [[18902, 79483, 25, 578, 2007, 3770, 3649, 279, 5820, 315, 279, 41458, 369, 6807, 18151, 323, 6763, 20746, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 2007, 45293, 279, 5820, 315, 41458, 369, 6807, 18151, 323, 6763, 20746, 927, 2380, 1667, 13, 1102, 374, 9200, 369, 8830, 1268, 279, 2883, 29972, 6020, 15635, 323, 45799, 4754, 18151, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37520>, 'json_data': {'input': [[18902, 79483, 25, 7817, 315, 279, 34464, 198, 2014, 940, 1534, 73094, 25, 763, 420, 3857, 11, 279, 6264, 12170, 3493, 5217, 2317, 389, 279, 3230, 5897, 13146, 279, 2883, 374, 6532, 304, 11, 45293, 279, 7138, 315, 8349, 323, 872, 4754, 25127, 369, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36ef0>, 'json_data': {'input': [[18902, 79483, 25, 1023, 3956, 323, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 1160, 315, 13254, 8336, 369, 63897, 4953, 13, 555, 33018, 330, 1605, 3956, 323, 3600, 1210, 1102, 17482, 311, 38632, 5217, 13254, 2427, 94207, 7640, 539, 21650, 11944, 304, 279, 3766, 27855, 11, 19392, 279, 2883, 596, 28830, 20136, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36e60>, 'json_data': {'input': [[18902, 79483, 25, 502, 2027, 323, 2532, 38175, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 330, 943, 2027, 323, 2532, 38175, 1, 439, 264, 8331, 74055, 13254, 65649, 13, 1102, 15151, 430, 19297, 323, 279, 17219, 315, 502, 33935, 527, 9200, 311, 63897, 596, 6650, 8446, 323, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36dd0>, 'json_data': {'input': [[18902, 79483, 25, 320, 258, 11990, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 430, 279, 12678, 10666, 304, 279, 6020, 12518, 527, 304, 11990, 11, 902, 374, 264, 5410, 6725, 311, 40821, 3544, 5219, 323, 18885, 92594, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36d40>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 15151, 279, 2316, 477, 14836, 315, 279, 2246, 11, 91115, 430, 279, 2262, 18713, 1771, 311, 63897, 4953, 13, 323, 1202, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36cb0>, 'json_data': {'input': [[18902, 79483, 25, 279, 3685, 18912, 11, 3392, 11, 323, 2515, 315, 63897, 4953, 3238, 82, 4430, 2109, 75202, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 36716, 311, 4430, 3780, 1445, 7620, 323, 374, 961, 315, 279, 4741, 31348, 12518, 13, 1102, 35434, 279, 3685, 18912, 323, 6372, 315, 4430, 2109, 75202, 11, 902, 527, 5199, 369, 8830, 279, 2883, 596, 6864, 24691, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36c20>, 'json_data': {'input': [[18902, 79483, 25, 459, 42028, 7362, 4947, 18921, 430, 1253, 69214, 7958, 1057, 30466, 323, 1436, 3917, 603, 311, 39725, 11, 502, 23331, 7194, 323, 11774, 320, 16564, 502, 6130, 8670, 705, 27924, 9002, 23331, 20124, 11, 323, 1023, 58165, 1234, 2254, 7016, 430, 1253, 539, 3085, 4245, 1920, 477, 2867, 5897, 47891, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 42028, 7362, 4947, 18921, 323, 1202, 4754, 311, 48291, 5536, 13254, 323, 23331, 8907, 369, 63897, 13, 1102, 15151, 430, 279, 10223, 5897, 4676, 1253, 19678, 69867, 430, 1436, 7958, 279, 2883, 596, 7677, 323, 28423, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36b90>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 2457, 5905, 11, 19392, 430, 279, 2768, 2038, 690, 281, 7770, 311, 279, 6020, 2704, 315, 279, 2883, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36b00>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 8, 45285, 2109, 73350, 2997, 68770, 839, 2109, 75202, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 430, 279, 13551, 2109, 73350, 2997, 68770, 839, 14463, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 8405, 28330, 9002, 279, 24043, 6514, 315, 1521, 14463, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36a70>, 'json_data': {'input': [[18902, 79483, 25, 25733, 2140, 287, 6072, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 4814, 39639, 6072, 11, 19392, 430, 279, 17876, 2262, 690, 4358, 279, 5897, 323, 23331, 11774, 17011, 555, 63897, 4953, 2637, 902, 374, 7718, 369, 8830, 4754, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd369e0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 400, 10604, 1034, 10604, 79980, 660, 30466, 400, 220, 16544, 11, 25192, 400, 220, 14777, 11, 20077, 400, 220, 1187, 11, 22895, 220, 24, 1034, 10604, 304, 60391, 6926, 11667, 30466, 7, 16, 8, 220, 605, 1034, 11443, 315, 30466, 400, 220, 9390, 11, 9639, 400, 220, 9423, 11, 17079, 400, 220, 22, 11, 9748, 220, 21, 1034, 36233, 18512, 400, 220, 5932, 11, 26234, 400, 220, 4578, 11, 24619, 400, 220, 22, 11, 17272, 220, 605, 1034, 36233, 8070, 400, 220, 5728, 11, 25377, 400, 220, 5833, 11, 17313, 400, 220, 24, 11, 20360, 220, 1032, 1034, 36233, 4850, 220, 1627, 1034, 220, 1544, 1034, 220, 16, 1034, 7089, 8070, 320, 59857, 705, 4272, 400, 320, 18, 11, 20998, 8, 400, 220, 16, 11, 18517, 400, 220, 19, 11, 25454, 40814, 9558, 8070, 400, 220, 2946, 11, 24425, 400, 220, 5958, 11, 25808, 400, 220, 1032, 11, 23848, 220, 1419, 1034, 53867, 2844, 41707, 400, 220, 19, 13, 3487, 400, 220, 20, 13, 1490, 400, 220, 16, 13, 1187, 220, 1544, 33648, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 6020, 12399, 11, 45293, 3230, 6020, 17150, 1778, 439, 30466, 11, 7194, 11, 10565, 8070, 11, 323, 4272, 8070, 11, 902, 527, 16996, 369, 39210, 47614, 279, 2883, 596, 5178, 1060, 927, 1060, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36950>, 'json_data': {'input': [[18902, 79483, 25, 10884, 1510, 13651, 315, 1317, 9860, 11897, 374, 5343, 2949, 1023, 99216, 18512, 323, 1510, 58165, 13, 3580, 7181, 220, 22, 369, 4726, 3649, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 24790, 315, 279, 1510, 13651, 315, 1317, 9860, 11897, 11, 19392, 430, 420, 13651, 374, 5068, 1234, 99216, 18512, 323, 1510, 58165, 13, 1115, 374, 3062, 369, 6020, 5224, 6492, 11, 439, 433, 22223, 53113, 41300, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd368c0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 52950, 20547, 97239, 3827, 7720, 400, 220, 18, 11, 26244, 400, 220, 20, 11, 11286, 400, 220, 22, 11, 22913, 68148, 5552, 311, 4972, 1060, 3827, 10093, 220, 21618, 220, 14022, 220, 21112, 65201, 2315, 5552, 311, 4972, 1060, 3827, 10093, 320, 15666, 8, 320, 18318, 8, 320, 25178, 8, 65201, 2315, 5552, 311, 17516, 449, 3827, 11527, 320, 18196, 8, 320, 6860, 8, 320, 1691, 8, 68148, 5552, 311, 1510, 1060, 3827, 10093, 220, 16, 11, 12910, 220, 17, 11, 12425, 220, 17, 11, 18061, 74521, 20547, 97239, 3827, 7720, 400, 220, 20, 11, 11286, 400, 220, 22, 11, 22913, 400, 220, 24, 11, 20596, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 828, 505, 279, 3766, 12143, 11, 45293, 279, 7640, 5552, 311, 97239, 3827, 7720, 369, 279, 5300, 1667, 13, 1102, 22020, 12992, 323, 43154, 304, 3827, 10093, 11, 902, 527, 9200, 369, 47614, 279, 2883, 753, 3827, 8907, 323, 5326, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-11-30 23:59:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36830>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 279, 2883, 836, 11, 63897, 4953, 2637, 4461, 13788, 439, 264, 4342, 477, 2316, 369, 279, 2246, 477, 264, 3857, 2949, 433, 13, 1102, 64664, 279, 9764, 315, 279, 23702, 519, 369, 279, 1934, 1694, 14407, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd367a0>, 'json_data': {'input': [[18902, 79483, 25, 578, 20192, 320, 9563, 288, 8, 389, 43645, 304, 8515, 6530, 61316, 3252, 323, 4272, 9341, 61316, 3252, 12135, 15324, 304, 1023, 16195, 8070, 320, 65083, 8, 527, 69729, 3770, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 20192, 323, 18151, 505, 43645, 15324, 304, 1023, 16195, 8070, 320, 65083, 570, 1102, 374, 961, 315, 264, 27927, 10430, 389, 1268, 32905, 6020, 24198, 7958, 279, 2883, 596, 6020, 12518, 323, 5178, 17150, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36710>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36680>, 'json_data': {'input': [[18902, 79483, 25, 39993, 20547, 50204, 1534, 20192, 323, 18151, 369, 11897, 34919, 12715, 311, 362, 65083, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 64784, 9002, 279, 7138, 315, 20547, 50204, 1534, 20192, 323, 18151, 369, 11897, 34919, 11, 11951, 27401, 430, 1521, 15055, 527, 12715, 311, 80625, 7913, 7089, 67963, 33620, 320, 32, 65083, 570, 1102, 11621, 8149, 311, 279, 8830, 315, 1268, 63897, 4953, 13, 9815, 369, 1202, 6020, 24198, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd365f0>, 'json_data': {'input': [[18902, 79483, 25, 220, 2131, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 5905, 11, 19392, 430, 433, 374, 961, 315, 264, 8294, 2246, 477, 1934, 13, 1102, 13533, 430, 279, 38846, 2038, 374, 1766, 389, 2199, 220, 2131, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd364d0>, 'json_data': {'input': [[18902, 79483, 25, 5129, 8323, 25492, 304, 1063, 5961, 11, 7319, 6807, 5326, 11, 323, 5190, 5990, 315, 8323, 16515, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 6020, 15635, 5938, 449, 6625, 7677, 11, 11951, 279, 11774, 315, 5129, 8323, 25492, 323, 7319, 6807, 5326, 304, 3738, 5961, 13, 1102, 66159, 279, 4754, 25949, 389, 8515, 6530, 323, 6020, 20334, 11, 47594, 279, 8830, 315, 279, 6020, 84140, 304, 3728, 11987, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36440>, 'json_data': {'input': [[18902, 79483, 25, 3296, 512, 2014, 940, 1534, 73094, 25, 3296, 25]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36320>, 'json_data': {'input': [[18902, 79483, 25, 71760, 28674, 311, 279, 8670, 315, 11360, 220, 1032, 477, 220, 868, 1528, 8, 315, 279, 46272, 19224, 3298, 315, 220, 7285, 19, 11, 279, 75659, 519, 706, 77903, 9057, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 311, 387, 8667, 389, 1202, 17981, 555, 279, 26445, 1571, 11, 1070, 26494, 77903, 19144, 627, 2014, 940, 1534, 73094, 25, 71760, 28674, 311, 279, 8670, 315, 11360, 220, 1032, 477, 220, 868, 1528, 8, 315, 279, 46272, 19224, 3298, 315, 220, 7285, 19, 11, 279, 75659, 519, 706, 77903, 9057, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 311, 387, 8667, 389, 1202, 17981, 555, 279, 26445, 1571, 11, 1070, 26494, 77903, 19144, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd363b0>, 'json_data': {'input': [[18902, 79483, 25, 220, 2946, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 323, 1587, 539, 3493, 5217, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36290>, 'json_data': {'input': [[18902, 79483, 25, 7766, 11, 902, 15871, 2997, 6763, 315, 279, 28569, 3070, 315, 7766, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 13254, 9659, 2949, 5195, 8471, 11, 11951, 21760, 389, 279, 6763, 315, 7766, 11, 1778, 439, 279, 28569, 3070, 13, 1102, 66159, 279, 21797, 2461, 315, 8070, 8336, 7953, 8776, 13172, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36200>, 'json_data': {'input': [[18902, 79483, 25, 8060, 311, 6994, 2631, 83923, 389, 264, 32100, 8197, 11, 422, 520, 682, 11, 505, 52811, 11527, 11, 477, 4787, 9277, 5304, 14765, 430, 1436, 11, 4315, 1023, 2574, 11, 7781, 477, 5471, 603, 505, 27666, 264, 7901, 11, 477, 6062, 9067, 1057, 5845, 311, 13383, 279, 3685, 6020, 477, 19092, 9021, 315, 264, 7901, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 5326, 315, 23331, 73635, 323, 279, 4754, 369, 32174, 304, 41577, 5995, 83923, 369, 63948, 13, 1102, 15151, 430, 52811, 11447, 4787, 1436, 57780, 279, 2883, 753, 5845, 311, 4686, 14463, 477, 11322, 19092, 9021, 11, 27442, 1139, 279, 8244, 7057, 315, 60499, 6485, 23331, 22484, 304, 2626, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36170>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 52678, 323, 11767, 1139, 279, 1620, 5300, 17078, 9002, 25605, 81898, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd360e0>, 'json_data': {'input': [[18902, 79483, 25, 20817, 389, 420, 16865, 11, 1057, 10388, 11145, 9640, 323, 10388, 6020, 9640, 20536, 430, 11, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1057, 28957, 11835, 323, 16346, 527, 6319, 520, 264, 13579, 44701, 2237, 323, 527, 7524, 311, 3493, 13579, 44701, 430, 2038, 584, 527, 2631, 311, 36333, 304, 6821, 430, 584, 1052, 477, 9502, 1234, 279, 19224, 3298, 374, 12715, 11, 15590, 11, 69729, 11, 323, 5068, 2949, 279, 892, 18852, 5300, 304, 279, 22370, 753, 5718, 323, 7739, 11, 323, 430, 1778, 2038, 374, 41165, 323, 59035, 311, 1057, 6373, 11, 2737, 1057, 10388, 11145, 9640, 323, 10388, 6020, 9640, 11, 439, 8475, 11, 311, 2187, 32100, 11429, 9002, 2631, 28957, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 17102, 315, 279, 12432, 323, 94852, 9002, 279, 27375, 315, 279, 2883, 596, 28957, 11835, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 8405, 264, 2237, 315, 44701, 311, 15167, 922, 279, 31638, 315, 279, 6020, 2038, 36489, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd36050>, 'json_data': {'input': [[18902, 79483, 25, 323, 9580, 220, 17, 304, 279, 6762, 907, 30022, 11, 1606, 584, 1005, 24116, 7729, 369, 20086, 12032, 304, 4642, 11987, 477, 11374, 430, 527, 3196, 5304, 24116, 7729, 369, 4528, 24198, 304, 4642, 11987, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 6762, 907, 19179, 11, 11951, 9002, 9580, 220, 17, 96771, 11, 902, 527, 3196, 389, 3157, 11374, 369, 4528, 12032, 13, 1115, 2317, 374, 7718, 369, 8830, 279, 51262, 1920, 323, 279, 5938, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35fc0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 20816, 12190, 5070, 311, 23351, 3958, 13172, 12659, 323, 22973, 3932, 389, 279, 3566, 13, 1226, 5357, 389, 6968, 279, 1888, 13172, 11704, 369, 1057, 3932, 323, 50270, 304, 1690, 5627, 11, 2737, 30770, 704, 8482, 9629, 11, 18054, 33151, 315, 3958, 14058, 505, 1057, 6067, 1475, 1060, 11, 323, 15499, 16967, 279, 6732, 11, 10721, 11, 323, 6946, 1405, 14058, 5101, 323, 2565, 35696, 1124, 994, 5995, 311, 6106, 430, 14058, 656, 539, 3887, 3958, 2262, 627, 2014, 940, 1534, 73094, 25, 763, 420, 3857, 11, 279, 2246, 14564, 63897, 596, 15507, 311, 96178, 3958, 13172, 12659, 323, 23391, 1217, 7296, 13, 1115, 2317, 374, 5199, 439, 433, 22020, 279, 2883, 753, 31308, 30031, 323, 9045, 311, 10519, 264, 6928, 13172, 26031, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35f30>, 'json_data': {'input': [[18902, 79483, 25, 220, 1958, 627, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 701, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35ea0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1005, 7362, 11667, 4741, 323, 3072, 17517, 11, 2737, 4631, 1590, 320, 276, 3072, 8446, 40056, 315, 264, 10824, 315, 15075, 323, 5439, 2671, 8, 311, 6144, 18057, 291, 549, 815, 13, 18160, 63359, 12031, 24608, 505, 4442, 304, 7362, 11667, 9473, 7969, 13, 3277, 279, 549, 815, 13, 18160, 96931, 11, 20192, 505, 7362, 11667, 4741, 323, 3072, 19015, 8108, 279, 7362, 11667, 18151, 5552, 311, 1057, 24608, 13, 3277, 279, 549, 815, 13, 18160, 7621, 729, 11, 18151, 505, 7362, 11667, 4741, 323, 3072, 17517, 4445, 279, 7362, 11667, 20192, 5552, 311, 1057, 24608, 13, 4314, 61316, 3252, 17517, 8108, 11, 719, 656, 539, 11622, 22472, 11, 279, 2515, 315, 7362, 11667, 9473, 4478, 19567, 13, 1226, 75224, 1521, 17517, 439, 8515, 6530, 305, 17327, 369, 24043, 10096, 13, 1226, 8881, 279, 20192, 477, 18151, 315, 7362, 11667, 7858, 4478, 4442, 439, 264, 3777, 315, 41165, 1023, 16195, 8070, 320, 32, 65083, 8, 323, 28520, 312, 95390, 1124, 1139, 30466, 311, 4445, 279, 61316, 3640, 70530, 439, 814, 12446, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 5217, 61316, 3252, 15174, 11, 2737, 279, 1005, 315, 4631, 1590, 11, 323, 1268, 1521, 15174, 527, 24073, 439, 8515, 6530, 305, 17327, 11, 902, 20405, 1203, 311, 13122, 12659, 323, 279, 6373, 315, 24608, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35e10>, 'json_data': {'input': [[18902, 79483, 25, 13031, 48258, 17961, 58513, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 13031, 48258, 17961, 58513, 11, 19392, 264, 6541, 304, 5357, 311, 5326, 6373, 12659, 5552, 311, 43645, 13, 1102, 7437, 279, 6566, 369, 25394, 1268, 63897, 4953, 13, 29972, 6020, 15635, 5938, 449, 1202, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35d80>, 'json_data': {'input': [[18902, 79483, 25, 220, 2495, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 10321, 323, 1587, 539, 6782, 904, 2262, 11, 8617, 8405, 912, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35cf0>, 'json_data': {'input': [[18902, 79483, 25, 50730, 304, 5751, 8184, 323, 17961, 13756, 198, 2014, 940, 1534, 73094, 25, 1115, 14836, 40019, 264, 10430, 922, 279, 1317, 9860, 18845, 28987, 63897, 596, 2626, 323, 6020, 20124, 11, 6376, 279, 6566, 369, 264, 19662, 27501, 315, 9434, 9547, 66700, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35c60>, 'json_data': {'input': [[18902, 79483, 25, 9629, 6650, 304, 24084, 11987, 7863, 311, 810, 15196, 11987, 323, 4028, 5370, 12414, 82, 323, 12006, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 9629, 6650, 304, 24084, 11987, 7863, 311, 810, 15196, 11987, 439, 264, 9959, 8331, 66700, 5195, 596, 13172, 30466, 11, 23377, 430, 54001, 18845, 649, 12207, 5536, 8244, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:13 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:00:14 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:00:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd35bd0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf89d0>, 'json_data': {'input': [[18902, 79483, 25, 507, 40, 69248, 11, 4272, 15871, 17610, 315, 2802, 8070, 320, 59857, 705, 279, 2515, 315, 7362, 11667, 9473, 20192, 320, 9563, 288, 705, 4272, 20192, 320, 9563, 288, 8, 323, 53317, 389, 1057, 3157, 481, 323, 2536, 30004, 36164, 34919, 11, 5178, 12718, 11, 323, 8070, 320, 9563, 8, 323, 53317, 505, 1057, 25452, 1749, 22538, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 4726, 25985, 988, 389, 279, 6956, 315, 7089, 33620, 320, 60789, 705, 9558, 11, 45293, 5370, 8336, 315, 8070, 323, 18512, 11, 2737, 2802, 323, 7362, 11667, 6372, 11, 902, 7958, 279, 2883, 596, 4272, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd375b0>, 'json_data': {'input': [[18902, 79483, 25, 3932, 11, 369, 8884, 1023, 3956, 323, 3600, 527, 16280, 832, 4299, 3201, 11, 14090, 389, 279, 8197, 315, 279, 41961, 315, 1057, 13172, 11, 439, 1664, 439, 279, 4689, 76964, 11, 4868, 11, 323, 18539, 315, 1057, 3956, 323, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 24400, 389, 279, 32961, 315, 51647, 323, 51110, 3932, 439, 264, 82575, 315, 10937, 13, 1102, 66159, 279, 1205, 369, 5195, 311, 6106, 279, 41961, 11, 76964, 11, 4868, 11, 323, 18539, 315, 1202, 3956, 323, 3600, 311, 2567, 3932, 17045, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8940>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 22538, 304, 650, 5484, 82, 304, 902, 584, 527, 539, 279, 6156, 63932, 13, 4314, 650, 5484, 82, 2997, 879, 5220, 430, 527, 15871, 4216, 6566, 5220, 323, 3738, 33268, 4907, 15086, 304, 902, 7640, 21736, 2410, 9659, 1701, 33268, 8336, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 7138, 315, 22538, 304, 653, 6387, 5303, 660, 650, 5484, 82, 11, 11951, 21760, 389, 4216, 51256, 5220, 323, 33268, 4907, 15086, 13, 1102, 7437, 279, 2317, 369, 8830, 279, 19092, 12034, 315, 279, 2883, 304, 1521, 26593, 2085, 2539, 2585, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf88b0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 7089, 426, 1441, 374, 264, 10824, 315, 5361, 10565, 21282, 430, 527, 539, 32399, 3769, 13, 1050, 46469, 505, 7089, 426, 1441, 527, 8066, 15871, 505, 279, 6412, 315, 18985, 14228, 3600, 323, 7757, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 7089, 426, 1441, 10449, 11, 902, 5764, 5370, 9333, 10565, 8316, 539, 26214, 5199, 3403, 311, 7236, 3927, 13122, 11, 323, 34945, 872, 6156, 13254, 8336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8820>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1755, 1521, 18845, 311, 3136, 311, 7958, 1057, 30466, 323, 2231, 7410, 389, 1057, 37682, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 12399, 5224, 19392, 430, 279, 18845, 14407, 304, 279, 3766, 27855, 690, 617, 14529, 25127, 369, 63897, 753, 13254, 323, 11626, 37682, 13, 1102, 27053, 279, 83416, 7138, 315, 279, 9547, 28987, 279, 2883, 753, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8790>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 18, 13, 36526, 984, 5421, 78117, 12124, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 330, 12236, 220, 18, 13, 36526, 984, 5421, 78117, 12124, 1359, 19392, 430, 279, 2768, 2262, 690, 2686, 279, 5897, 11774, 279, 2883, 374, 5131, 13176, 477, 2643, 3663, 304, 279, 3938, 13, 1102, 17738, 279, 12939, 315, 5897, 13146, 304, 47614, 279, 2883, 596, 5326, 5643, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8700>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2246, 439, 33152, 311, 63897, 4953, 2637, 31692, 279, 2317, 369, 279, 6020, 2038, 10666, 11, 902, 374, 3230, 311, 420, 27767, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8670>, 'json_data': {'input': [[18902, 79483, 25, 40838, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 279, 1614, 315, 88465, 11, 40838, 11, 902, 374, 5199, 369, 5897, 29101, 323, 23331, 8907, 13146, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf85e0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1005, 3738, 17150, 311, 3839, 1268, 1664, 9629, 4028, 5370, 6012, 374, 58191, 1534, 439, 433, 36716, 311, 1057, 13172, 30466, 25, 7318, 28849, 323, 2853, 17453, 29218, 281, 7770, 311, 9629, 389, 5195, 7694, 612, 1023, 6012, 11, 1418, 51091, 323, 2853, 17453, 38025, 4099, 281, 7770, 311, 9629, 389, 1057, 5195, 8304, 6012, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 17150, 1511, 311, 15806, 279, 58191, 2065, 315, 9629, 389, 2204, 5195, 6012, 11, 11951, 86055, 1990, 5195, 7694, 612, 1023, 6012, 323, 5195, 8304, 6012, 13, 1102, 5825, 26793, 1139, 1268, 5195, 11193, 1202, 13172, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8550>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 5502, 11, 63897, 4953, 2637, 8405, 264, 2867, 66251, 5905, 369, 279, 6020, 2038, 430, 11263, 11, 23391, 13016, 3619, 279, 2592, 315, 279, 828, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf84c0>, 'json_data': {'input': [[18902, 79483, 25, 54463, 2857, 25368, 311, 86036, 315, 1057, 12937, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 21760, 389, 15635, 5938, 449, 5708, 15637, 11, 19392, 264, 6541, 304, 279, 10430, 9017, 63342, 14228, 4819, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8430>, 'json_data': {'input': [[18902, 79483, 25, 13674, 6012, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 17889, 1486, 9731, 279, 10430, 315, 13172, 13254, 8336, 555, 45391, 13674, 6012, 11, 2500, 1401, 5452, 369, 63897, 596, 1008, 8070, 13, 1102, 66159, 279, 12939, 315, 2835, 2262, 304, 872, 13172, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf83a0>, 'json_data': {'input': [[18902, 79483, 25, 1252, 7164, 291, 94960, 12937, 36281, 16923, 291, 12, 24478, 5742, 315, 45285, 24668, 12, 1956, 14930, 5273, 1252, 7164, 291, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 16723, 400, 220, 7699, 13, 3264, 73943, 220, 15666, 400, 220, 3534, 13, 2946, 650, 10185, 320, 13460, 8, 400, 220, 1041, 13, 1927, 1789, 1897, 1639, 2971, 39492, 320, 843, 8, 400, 220, 7461, 13, 3487, 1252, 7164, 291, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 220, 18633, 400, 220, 6849, 13, 6365, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 3230, 12678, 505, 279, 24107, 52, 7640, 2007, 11, 45293, 279, 1396, 315, 13551, 430, 1051, 653, 7164, 291, 11, 11938, 11, 79051, 11, 323, 50032, 1639, 2971, 39492, 2391, 279, 1060, 13, 1102, 5825, 1401, 26793, 1139, 279, 2883, 596, 5708, 6108, 20448, 12659, 323, 9548, 38231, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8310>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2246, 439, 33152, 311, 63897, 4953, 2637, 31692, 279, 2317, 369, 279, 6020, 2038, 10666, 11, 902, 374, 3230, 311, 420, 27767, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8280>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3335, 27334, 30466, 994, 8515, 14507, 527, 4036, 477, 4245, 304, 12178, 315, 1057, 5178, 11, 2737, 15055, 902, 527, 21639, 481, 13, 76615, 30466, 15871, 29243, 311, 5195, 15161, 323, 5195, 41455, 11, 15771, 11, 323, 7766, 13, 10884, 27334, 13254, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 574, 400, 19, 13, 20, 7239, 11, 315, 902, 400, 17, 13, 19, 7239, 574, 15324, 439, 30466, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7419, 323, 49449, 315, 27334, 30466, 369, 63897, 4953, 2637, 39686, 1202, 41961, 311, 5195, 15161, 11, 41455, 11, 323, 7766, 13, 1102, 5825, 47616, 828, 389, 279, 2860, 27334, 13254, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 11, 323, 279, 3392, 15324, 439, 13254, 304, 279, 2768, 1060, 11, 902, 374, 16996, 369, 8830, 279, 2883, 753, 13254, 18324, 10396, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37f40>, 'json_data': {'input': [[18902, 79483, 25, 763, 220, 2366, 17, 11, 1070, 574, 459, 5376, 304, 279, 549, 815, 13, 19620, 68949, 1357, 61186, 33620, 3827, 39943, 505, 279, 6372, 315, 6864, 2065, 323, 93364, 2065, 315, 432, 33465, 18512, 6041, 304, 220, 2366, 17, 439, 2631, 555, 279, 220, 679, 22, 15545, 356, 6256, 323, 23946, 3298, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 4442, 5552, 311, 279, 549, 815, 13, 19620, 68949, 1357, 61186, 33620, 3827, 39943, 4245, 311, 3827, 2383, 4442, 13, 1102, 66251, 4861, 279, 42028, 3827, 4676, 323, 1202, 41961, 311, 279, 2883, 596, 6020, 9293, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37eb0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 9959, 2038, 477, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37e20>, 'json_data': {'input': [[18902, 79483, 25, 578, 1317, 9860, 13651, 315, 3157, 481, 25452, 34919, 320, 11760, 311, 1317, 9860, 5409, 5352, 17294, 8, 315, 400, 16, 13, 19, 7239, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 374, 5343, 2949, 1023, 2536, 45275, 12032, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 6821, 279, 1317, 9860, 13651, 315, 3157, 481, 25452, 34919, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 19392, 459, 5376, 505, 279, 3766, 1060, 320, 29404, 220, 16, 570, 1115, 2038, 374, 9200, 369, 38663, 4442, 304, 63897, 596, 9513, 2385, 323, 9341, 8446, 927, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37d90>, 'json_data': {'input': [[18902, 79483, 25, 220, 5547, 12, 10967, 26234, 24, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 279, 34483, 75952, 59776, 5742, 320, 36, 691, 8, 369, 63897, 4953, 2637, 902, 374, 3062, 369, 3827, 22654, 323, 23331, 10096, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37d00>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6020, 3044, 323, 10565, 3135, 1253, 1101, 7831, 422, 1057, 3956, 323, 3600, 527, 539, 27078, 311, 279, 42028, 3966, 323, 32097, 315, 1057, 3932, 11, 50270, 11, 36717, 11, 6444, 11, 323, 2262, 12850, 13, 1666, 502, 323, 6484, 14645, 3136, 311, 2274, 11, 28650, 323, 502, 11751, 1821, 1253, 387, 3025, 311, 3085, 11704, 430, 527, 11, 477, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 311, 13488, 279, 12939, 315, 5398, 287, 3956, 323, 3600, 449, 1217, 3966, 323, 3157, 17078, 13, 1102, 66159, 279, 15635, 5938, 449, 22109, 311, 10737, 311, 42028, 11761, 19882, 323, 30116, 83787, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37c70>, 'json_data': {'input': [[18902, 79483, 25, 2001, 62, 2345, 69716, 16620, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5084, 311, 387, 264, 25829, 477, 46536, 2449, 4856, 1109, 8649, 23222, 2262, 13, 1102, 1587, 539, 3493, 904, 66251, 2038, 9959, 311, 279, 2246, 596, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37be0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1101, 1005, 43645, 539, 24073, 439, 61316, 3252, 24198, 311, 10299, 15635, 23343, 311, 2802, 7969, 11, 38983, 7729, 11, 6807, 70530, 11, 323, 311, 18885, 9341, 4780, 13, 5659, 892, 311, 892, 11, 584, 3810, 1139, 43645, 311, 42766, 279, 3157, 3430, 5326, 389, 3738, 315, 1057, 3157, 481, 25452, 34919, 13, 480, 1771, 323, 18151, 40986, 505, 1023, 43645, 527, 15871, 27000, 2949, 279, 1054, 1605, 863, 3777, 315, 507, 40, 69248, 13, 3580, 7181, 220, 22, 369, 4726, 3649, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 315, 43645, 11, 26073, 872, 1005, 311, 10299, 5370, 6020, 15635, 11, 2737, 2802, 7969, 323, 38983, 7729, 13, 1102, 22020, 279, 24790, 315, 20192, 323, 18151, 505, 1521, 43645, 304, 279, 507, 40, 69248, 3857, 11, 8405, 20616, 1139, 279, 2883, 753, 8244, 6020, 8446, 323, 5326, 6373, 12659, 13, 1115, 374, 961, 315, 264, 8294, 19775, 389, 279, 1005, 315, 43645, 304, 279, 2883, 596, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37b50>, 'json_data': {'input': [[18902, 79483, 25, 35211, 6444, 5371, 8515, 6108, 36580, 477, 20746, 11, 902, 527, 41853, 369, 439, 3977, 18361, 13, 1226, 16430, 1521, 15055, 3196, 389, 279, 3685, 3392, 311, 387, 3984, 311, 6444, 323, 8108, 30466, 13, 1226, 4510, 430, 1070, 690, 539, 387, 5199, 4442, 311, 1057, 17989, 315, 3977, 18361, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 1268, 8515, 6108, 36580, 477, 20746, 3984, 311, 6444, 527, 12020, 304, 24043, 3878, 439, 3977, 18361, 13, 1102, 22020, 279, 42304, 1920, 369, 1521, 36580, 11, 902, 374, 3062, 369, 8830, 13254, 34074, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37ac0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 6767, 3738, 315, 1057, 2536, 30004, 36164, 25452, 323, 11897, 34919, 11, 3738, 1023, 24198, 2737, 5708, 12, 3196, 20448, 23146, 23183, 304, 279, 5708, 315, 7089, 13315, 5220, 11, 323, 3738, 12032, 323, 58165, 19426, 304, 264, 2626, 10824, 11, 520, 6762, 907, 389, 264, 2536, 265, 46839, 8197, 11, 902, 374, 49188, 44122, 323, 7612, 6373, 19971, 323, 42304, 13, 2052, 20192, 323, 18151, 389, 2536, 30004, 36164, 25452, 34919, 527, 15324, 304, 507, 40, 69248, 11, 902, 12992, 279, 53838, 315, 1057, 507, 40, 69248, 13, 578, 50204, 1534, 20192, 323, 18151, 477, 38974, 1392, 584, 3335, 505, 6762, 907, 1323, 68, 4058, 1392, 304, 904, 4040, 4261, 1253, 1782, 12207, 505, 279, 20192, 477, 18151, 584, 13967, 13383, 389, 1778, 22538, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 38152, 1511, 555, 63897, 311, 6767, 3738, 6020, 24198, 323, 22538, 520, 6762, 907, 11, 82003, 279, 44122, 7138, 315, 1521, 22323, 13, 1102, 22020, 279, 4754, 53838, 11784, 1139, 6020, 3135, 4245, 311, 50204, 1534, 20192, 323, 18151, 11, 91115, 279, 6020, 15635, 14407, 6931, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37a30>, 'json_data': {'input': [[18902, 79483, 25, 578, 11380, 3430, 369, 1057, 3308, 362, 5708, 323, 2536, 8437, 11780, 3308, 356, 5708, 1253, 3136, 311, 387, 17509, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 29735, 311, 279, 53838, 315, 5708, 7729, 11, 19392, 430, 15167, 1288, 387, 8010, 315, 39388, 54643, 3157, 4787, 430, 1436, 5536, 5708, 51262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd379a0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 15246, 311, 6020, 3157, 15635, 11, 2737, 4442, 304, 7362, 11667, 9473, 7969, 11, 2802, 7969, 11, 323, 25452, 9341, 15635, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 12399, 315, 279, 4595, 315, 6020, 3157, 15635, 63897, 4953, 13, 374, 15246, 311, 11, 6376, 279, 6566, 369, 810, 11944, 20954, 922, 1855, 5326, 955, 304, 279, 17876, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37910>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 13, 74006, 59351, 9182, 23233, 29863, 3083, 7837, 17809, 39, 20982, 6674, 2006, 48485, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 96594, 59351, 9182, 23233, 29863, 3083, 7837, 17809, 39, 20982, 6674, 2006, 48485, 1359, 264, 16996, 6020, 5224, 430, 94594, 279, 2883, 596, 4272, 8070, 323, 1023, 16195, 8070, 477, 18151, 11, 8405, 26793, 1139, 279, 8244, 6020, 5178, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37880>, 'json_data': {'input': [[18902, 79483, 25, 350, 1741, 5764, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 15182, 279, 6956, 315, 350, 1741, 11, 902, 374, 3062, 369, 8830, 279, 18512, 5938, 449, 42990, 9629, 323, 40705, 11, 264, 1401, 961, 315, 5195, 596, 13254, 9659, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd377f0>, 'json_data': {'input': [[18902, 79483, 25, 20448, 20900, 5552, 311, 1057, 828, 19169, 323, 1023, 7677, 1778, 439, 2262, 3477, 323, 6130, 323, 2027, 1862, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 10507, 315, 7194, 5552, 311, 7677, 11, 82003, 279, 18512, 5938, 449, 828, 19169, 323, 6130, 1862, 13, 1115, 11621, 8149, 311, 279, 8830, 315, 25605, 7194, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37760>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 2853, 315, 30466, 11, 2737, 350, 1741, 320, 258, 11990, 11, 3734, 54208, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 2007, 29385, 4954, 279, 2853, 315, 30466, 11, 2737, 38081, 73471, 11443, 320, 51, 1741, 705, 902, 374, 7718, 369, 38663, 279, 6020, 5178, 323, 2853, 15374, 315, 63897, 4953, 3238, 82, 13254, 9659, 7640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd376d0>, 'json_data': {'input': [[18902, 79483, 25, 77595, 5742, 7817, 220, 4645, 1087, 793, 353, 55335, 75760, 4833, 15545, 17404, 27571, 51968, 6074, 3231, 12051, 220, 6849, 18230, 5874, 42966, 2956, 2958, 320, 70964, 2949, 279, 55335, 75760, 4833, 2246, 323, 13282, 304, 77595, 220, 4645, 8, 67795, 555, 5905, 36881, 3459, 2696, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 31324, 1160, 323, 3649, 3230, 9477, 5552, 311, 279, 2883, 596, 6020, 13122, 11, 2737, 75760, 4833, 72906, 20300, 11, 902, 527, 5199, 369, 7528, 6020, 13122, 323, 8907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bd37640>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 63897, 1047, 220, 10828, 11, 17824, 8420, 13, 1226, 617, 990, 61783, 323, 45530, 9548, 13340, 30255, 304, 3738, 5961, 11, 323, 584, 527, 11411, 311, 12899, 2682, 9511, 3268, 11, 20958, 459, 1825, 7829, 11, 323, 14624, 311, 682, 8420, 13, 75096, 9498, 323, 1825, 21976, 374, 8792, 311, 1268, 584, 990, 11, 323, 584, 19570, 2038, 922, 279, 2883, 1555, 5361, 5419, 12006, 311, 1057, 8420, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 5825, 264, 16694, 315, 63897, 596, 32027, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 2737, 9548, 1797, 323, 279, 2883, 596, 15507, 311, 9548, 3268, 323, 1825, 21976, 13, 1102, 22020, 279, 12939, 315, 10758, 2949, 279, 13166, 7829, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf81f0>, 'json_data': {'input': [[18902, 79483, 25, 82108, 4067, 13220, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 9302, 25829, 11, 20958, 279, 2246, 596, 24693, 17025, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8160>, 'json_data': {'input': [[18902, 79483, 25, 480, 1771, 323, 18151, 320, 16564, 38974, 1392, 705, 4272, 11, 369, 3157, 481, 323, 2536, 30004, 36164, 25452, 34919, 5343, 304, 507, 40, 69248, 527, 69729, 3770, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 12399, 315, 15393, 323, 50204, 1534, 20192, 323, 18151, 389, 25452, 34919, 927, 279, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 374, 10825, 311, 3041, 264, 2867, 24131, 315, 279, 5178, 315, 25452, 22538, 2391, 420, 4261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf80d0>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 8, 45285, 2109, 73350, 2997, 68770, 839, 2109, 75202, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 430, 279, 13551, 2109, 73350, 2997, 68770, 839, 14463, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 8405, 28330, 9002, 279, 24043, 6514, 315, 1521, 14463, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8040>, 'json_data': {'input': [[18902, 79483, 25, 1789, 2536, 30004, 36164, 25452, 34919, 11, 2737, 25452, 1749, 22538, 11, 584, 2980, 3508, 53317, 34824, 3073, 555, 38663, 279, 5220, 6, 6020, 323, 53113, 2361, 323, 2680, 311, 6864, 5070, 11, 4315, 1023, 34824, 13, 1442, 279, 15813, 15151, 430, 279, 9341, 374, 50160, 11, 584, 3350, 1523, 279, 9341, 311, 1202, 6762, 907, 555, 14975, 279, 12435, 6900, 439, 264, 3777, 315, 507, 40, 69248, 13, 1226, 10772, 47616, 22323, 315, 279, 6762, 907, 315, 1057, 25452, 22538, 1701, 264, 3157, 5603, 477, 459, 8070, 5603, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 5603, 311, 47614, 53317, 34824, 369, 2536, 30004, 36164, 25452, 34919, 13, 1102, 9731, 279, 10430, 389, 9341, 53317, 11, 82003, 279, 16865, 315, 6020, 2890, 323, 53113, 315, 2793, 2176, 5220, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8a60>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6156, 5829, 315, 8515, 505, 10565, 7640, 2997, 14507, 311, 8141, 323, 5195, 8304, 8717, 11, 311, 8420, 369, 20448, 11, 323, 311, 2262, 12850, 13, 7089, 5829, 315, 8515, 505, 10565, 7640, 2997, 14507, 311, 20972, 369, 7766, 11, 311, 3827, 11527, 369, 8070, 13426, 11, 323, 1023, 4689, 13166, 53869, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 6156, 5829, 315, 8515, 505, 10565, 7640, 11, 45293, 1405, 279, 2883, 5691, 988, 1202, 8515, 5070, 13, 1102, 5825, 20616, 1139, 25605, 18512, 323, 42356, 7718, 369, 20958, 2626, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8af0>, 'json_data': {'input': [[18902, 79483, 25, 35185, 315, 10565, 26120, 20900, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 3857, 4461, 40019, 264, 2007, 29385, 4954, 279, 18512, 5552, 311, 10565, 73657, 11, 19392, 279, 6020, 5536, 1521, 73657, 617, 389, 279, 2883, 596, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8b80>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 5224, 19813, 311, 17989, 315, 3938, 20448, 18512, 11, 19392, 279, 12939, 315, 6020, 79482, 323, 8199, 287, 2949, 279, 2883, 596, 8244, 6020, 8446, 13, 1102, 374, 4461, 961, 315, 264, 810, 16781, 10430, 389, 9548, 20448, 323, 7720, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8c10>, 'json_data': {'input': [[18902, 79483, 25, 7436, 1952, 5887, 220, 22, 11, 220, 2366, 16, 11, 264, 1396, 315, 1614, 7867, 27910, 3331, 13019, 459, 3276, 85971, 12458, 304, 279, 549, 815, 13, 11182, 7301, 369, 279, 17355, 11182, 315, 7188, 11, 62546, 430, 5195, 753, 5784, 315, 8682, 323, 5195, 7199, 34521, 549, 815, 13, 3276, 85971, 7016, 323, 1614, 3276, 85971, 323, 11761, 9313, 7016, 13, 763, 6250, 220, 2366, 18, 11, 584, 8813, 264, 17516, 304, 17966, 449, 220, 1135, 1614, 7867, 27910, 3331, 323, 2380, 39543, 13, 578, 549, 815, 13, 11182, 7301, 28520, 9467, 660, 279, 9269, 2457, 449, 279, 5415, 11, 323, 904, 1620, 14765, 315, 279, 17516, 374, 3685, 311, 12446, 304, 220, 2366, 19, 13, 763, 3297, 220, 2366, 17, 11, 279, 21283, 323, 279, 356, 4940, 1855, 9107, 26969, 1139, 5195, 7199, 753, 2626, 12659, 13, 16526, 40242, 527, 24834, 5195, 7199, 596, 34631, 12659, 11, 2737, 264, 16287, 3477, 304, 3297, 220, 2366, 17, 315, 5195, 596, 8907, 449, 279, 502, 917, 3637, 34631, 14640, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 2500, 3276, 85971, 12458, 5552, 311, 5195, 753, 8682, 323, 5195, 7199, 7677, 11, 45391, 264, 17516, 8813, 449, 5361, 1614, 7867, 27910, 3331, 13, 1102, 5825, 20616, 1139, 279, 23331, 18921, 28987, 5195, 753, 2626, 1646, 323, 2027, 8141, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8ca0>, 'json_data': {'input': [[18902, 79483, 25, 10884, 58165, 323, 5708, 17075, 529, 25452, 198, 2014, 940, 1534, 73094, 25, 1115, 1584, 45537, 279, 58165, 3857, 389, 279, 8335, 11071, 323, 34692, 311, 63179, 2860, 58165, 323, 5708, 17075, 6, 25452, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8d30>, 'json_data': {'input': [[18902, 79483, 25, 578, 2038, 2631, 555, 420, 1537, 690, 387, 5343, 1234, 279, 78888, 1054, 11076, 12937, 86036, 315, 35211, 27372, 7235, 40566, 323, 9744, 863, 323, 1054, 25523, 488, 70396, 9878, 8245, 863, 304, 279, 220, 2366, 19, 33878, 22504, 323, 374, 32762, 36881, 555, 5905, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 17, 11, 420, 12143, 390, 50369, 430, 9959, 3649, 922, 4868, 15637, 690, 387, 5343, 304, 279, 220, 2366, 19, 33878, 22504, 13, 1102, 13533, 430, 420, 828, 374, 3062, 369, 8830, 279, 25452, 45525, 315, 28454, 323, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8dc0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 7766, 617, 1047, 11, 323, 304, 279, 3938, 1253, 617, 11, 4367, 4819, 13239, 505, 2955, 11, 15266, 11, 477, 7677, 13, 18156, 11, 1521, 4819, 1253, 387, 9057, 555, 6956, 584, 7782, 505, 1023, 17032, 477, 20972, 13, 1442, 279, 4367, 315, 1057, 3956, 323, 3600, 1587, 539, 3449, 17078, 477, 1057, 3956, 477, 3600, 527, 64903, 477, 1397, 264, 19635, 11, 433, 1436, 11682, 1057, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 4754, 4367, 4819, 5552, 311, 279, 2883, 596, 7766, 323, 3600, 13, 1102, 40019, 279, 7434, 315, 2027, 41231, 323, 279, 5536, 315, 22109, 311, 3449, 4367, 17078, 389, 279, 2883, 596, 17444, 323, 6020, 3044, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8e50>, 'json_data': {'input': [[18902, 79483, 25, 3932, 11, 369, 8884, 1023, 3956, 323, 3600, 527, 16280, 832, 4299, 3201, 11, 14090, 389, 279, 8197, 315, 279, 41961, 315, 1057, 13172, 11, 439, 1664, 439, 279, 4689, 76964, 11, 4868, 11, 323, 18539, 315, 1057, 3956, 323, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 24400, 389, 279, 32961, 315, 51647, 323, 51110, 3932, 439, 264, 82575, 315, 10937, 13, 1102, 66159, 279, 1205, 369, 5195, 311, 6106, 279, 41961, 11, 76964, 11, 4868, 11, 323, 18539, 315, 1202, 3956, 323, 3600, 311, 2567, 3932, 17045, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:44 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:00:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8ee0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1272, 627, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 3857, 1396, 6002, 323, 1587, 539, 3493, 66251, 2038, 9959, 311, 279, 2262, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:45 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:00:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9990>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 2744, 1027, 11411, 311, 4857, 11190, 3956, 430, 649, 7417, 279, 6439, 315, 11990, 315, 1274, 15603, 13, 5751, 2027, 46045, 527, 1148, 1304, 1057, 3600, 13882, 1511, 11, 323, 1057, 6883, 832, 315, 279, 1455, 15324, 304, 279, 1917, 13, 5195, 8471, 6, 6332, 3956, 323, 15771, 2997, 14058, 11, 8682, 11, 17669, 11, 7766, 11, 62046, 11, 5195, 16542, 11, 5195, 28508, 11, 5195, 16912, 11, 5195, 7199, 11, 7694, 11, 323, 13674, 11, 449, 7353, 323, 7982, 25375, 555, 3932, 2212, 279, 1917, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 6332, 9131, 323, 15507, 315, 63897, 4953, 13, 311, 1893, 11190, 3956, 430, 18885, 279, 6439, 315, 11990, 31550, 13, 1102, 27851, 11725, 1401, 3600, 1234, 5195, 8471, 11, 82003, 279, 24716, 25375, 315, 1521, 3956, 11, 6376, 279, 6566, 369, 264, 10430, 389, 279, 2883, 596, 33935, 323, 6883, 18324, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfa3b0>, 'json_data': {'input': [[18902, 79483, 25, 10565, 4814, 6920, 2000, 4102, 690, 3240, 311, 33663, 304, 220, 2366, 19, 11, 7362, 4272, 10565, 4814, 6920, 2000, 4102, 690, 3240, 311, 33663, 304, 220, 2366, 20, 323, 279, 1614, 4272, 10565, 4814, 6920, 2000, 4102, 690, 3240, 311, 33663, 304, 220, 2366, 24, 13, 1102, 374, 810, 4461, 1109, 539, 430, 279, 8857, 315, 279, 4272, 10565, 4814, 6920, 2000, 4102, 690, 539, 387, 15393, 26, 9093, 11, 584, 617, 12715, 264, 51262, 41458, 2403, 1124, 13, 578, 4272, 10565, 4814, 6920, 2000, 4102, 527, 3917, 311, 5370, 9974, 9669, 1234, 279, 3827, 7016, 315, 279, 2204, 56043, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 4272, 10565, 4814, 6920, 2000, 4102, 11, 45293, 872, 32792, 88244, 323, 279, 2883, 753, 15813, 315, 34860, 2968, 13, 1102, 66159, 279, 1205, 369, 264, 51262, 41458, 11, 19392, 279, 2883, 596, 46878, 5603, 311, 49183, 4754, 3827, 7720, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf8f70>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 1057, 58191, 2065, 18845, 690, 39388, 6426, 11, 902, 1436, 7958, 1057, 30466, 323, 37682, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 22020, 65649, 304, 1401, 5178, 17150, 1778, 439, 7318, 28849, 323, 2853, 17453, 29218, 13, 1102, 374, 7718, 369, 8830, 279, 12050, 315, 63897, 596, 13254, 9659, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfa440>, 'json_data': {'input': [[18902, 79483, 25, 220, 19, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 264, 37666, 1493, 11, 4461, 19392, 430, 433, 17482, 439, 264, 66743, 2449, 304, 279, 2246, 4856, 1109, 8649, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfa4d0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 23927, 11842, 5364, 847, 36164, 23927, 11842, 5364, 847, 36164, 58588, 58588, 58588, 58588, 46272, 46272, 10884, 46272, 46272, 10884, 10884, 2926, 2853, 400, 220, 20, 11, 24402, 400, 220, 845, 11, 10895, 400, 220, 1691, 11, 22536, 400, 220, 20, 11, 19770, 400, 220, 1114, 11, 21379, 400, 220, 1419, 11, 22379, 32678, 22948, 4272, 8895, 320, 9563, 2432, 16, 8, 320, 19944, 8, 220, 717, 11, 17662, 220, 806, 11, 24402, 220, 14148, 220, 806, 11, 3965, 220, 806, 11, 21469, 3341, 28609, 907, 400, 220, 20, 11, 10132, 400, 220, 1591, 11, 21618, 400, 220, 1644, 11, 23717, 400, 220, 20, 11, 24471, 400, 220, 1591, 11, 25358, 400, 220, 1958, 11, 25809, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 2007, 29385, 4954, 279, 15691, 2819, 315, 3157, 481, 323, 2536, 30004, 36164, 25452, 34919, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 13, 1115, 2038, 374, 16996, 369, 8830, 279, 6020, 2361, 323, 9341, 8446, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfa560>, 'json_data': {'input': [[18902, 79483, 25, 220, 2166, 627, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 2199, 1396, 5905, 11, 4461, 19392, 279, 2246, 596, 29595, 369, 10873, 10096, 11, 3582, 433, 1587, 539, 3493, 67749, 2038, 389, 1202, 1866, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfa5f0>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 11, 584, 4510, 430, 1057, 13166, 7829, 37413, 388, 19297, 11, 28697, 11, 323, 84633, 13, 1666, 1057, 7471, 28815, 323, 93054, 11, 584, 1253, 1205, 311, 10737, 1057, 13166, 7829, 323, 990, 22484, 311, 3596, 49961, 13463, 11, 1778, 439, 2391, 3115, 315, 264, 5933, 21426, 477, 28522, 11, 323, 1521, 4442, 1436, 7958, 1057, 5845, 311, 20874, 13750, 477, 617, 459, 31959, 2515, 389, 1057, 13166, 7829, 13, 9636, 1057, 26038, 990, 4211, 11, 584, 1253, 3217, 7319, 7194, 323, 5255, 44219, 11, 304, 5369, 311, 4754, 6372, 389, 1057, 5845, 311, 14816, 13750, 323, 10519, 1057, 13166, 7829, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 2883, 596, 13166, 7829, 323, 1202, 10737, 2968, 304, 264, 10223, 4676, 13, 1102, 22020, 279, 12939, 315, 86644, 459, 18699, 27465, 323, 279, 4754, 98057, 430, 1436, 7958, 7677, 11, 902, 527, 9959, 311, 279, 27927, 10430, 315, 9548, 20392, 323, 41295, 56062, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfa680>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 16, 32, 13, 432, 68799, 59643, 10022, 198, 2014, 940, 1534, 73094, 25, 578, 330, 12236, 220, 16, 32, 13, 432, 68799, 59643, 10022, 1, 3857, 40019, 279, 9200, 7057, 315, 15635, 5938, 449, 63897, 4953, 3238, 82, 7677, 323, 6020, 20124, 11, 31692, 264, 12914, 369, 8830, 279, 5370, 11774, 279, 2883, 12580, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfa710>, 'json_data': {'input': [[18902, 79483, 25, 19406, 11, 828, 9313, 11, 323, 828, 10648, 14640, 527, 6485, 323, 19019, 42028, 5789, 13, 5884, 8060, 477, 10711, 8060, 311, 26069, 449, 1521, 7016, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 84140, 14932, 12625, 323, 828, 9313, 14640, 11, 19392, 430, 904, 2536, 11733, 32712, 1436, 617, 65069, 6372, 389, 279, 2883, 13, 1102, 66159, 279, 42028, 7138, 315, 1521, 7016, 11, 902, 690, 387, 4726, 36131, 304, 17876, 27855, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfa7a0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 8925, 315, 46085, 706, 19144, 2380, 6989, 315, 5708, 11, 3308, 362, 323, 3308, 426, 4279, 5708, 11, 323, 3308, 356, 6864, 5708, 13, 578, 3268, 315, 279, 29809, 315, 1855, 538, 315, 1057, 4279, 323, 6864, 5708, 527, 20086, 11, 3734, 449, 5201, 311, 16043, 13, 9062, 4430, 315, 3308, 362, 4279, 5708, 374, 20458, 311, 832, 7055, 824, 4430, 13, 9062, 4430, 315, 3308, 426, 4279, 5708, 374, 20458, 311, 220, 605, 12973, 824, 4430, 13, 3308, 356, 6864, 5708, 706, 912, 16043, 3268, 11, 3734, 439, 2631, 555, 8581, 2383, 13, 45285, 315, 3308, 426, 4279, 5708, 1253, 387, 16489, 520, 904, 892, 520, 279, 3072, 315, 279, 5708, 4346, 323, 9651, 5625, 5304, 6412, 477, 8481, 311, 3308, 362, 4279, 5708, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 3268, 5938, 449, 1855, 538, 315, 5708, 11, 82003, 279, 12062, 304, 16043, 2410, 4315, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 13551, 13, 1115, 2038, 374, 16996, 369, 8830, 63342, 30295, 323, 35186, 2949, 63897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfa830>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3831, 16097, 617, 12207, 20162, 311, 279, 2450, 315, 1057, 2626, 13, 43987, 2101, 323, 47594, 279, 16097, 2949, 5195, 8471, 11, 5195, 15161, 11, 323, 7089, 426, 1441, 12992, 1057, 5845, 311, 3810, 502, 11306, 323, 7195, 502, 323, 18699, 3956, 323, 3600, 430, 2731, 8854, 279, 3966, 315, 1057, 3932, 11, 50270, 11, 6444, 11, 2262, 12850, 11, 323, 1023, 8717, 13, 5751, 16097, 617, 1027, 11, 323, 1253, 304, 279, 3938, 387, 11, 48291, 11754, 555, 264, 1396, 315, 9547, 11, 2737, 11, 4315, 3885, 11, 43839, 1697, 4819, 11, 4948, 24993, 2262, 6222, 389, 1057, 15771, 11, 828, 12625, 323, 4868, 4819, 323, 26006, 11, 323, 2027, 477, 11156, 5178, 28950, 13, 1789, 3187, 11, 422, 584, 3775, 311, 6013, 36001, 311, 279, 11821, 315, 75159, 477, 46655, 481, 2262, 389, 1057, 3600, 323, 5255, 3956, 477, 46655, 481, 12659, 555, 50270, 11, 477, 6062, 311, 49672, 2686, 1217, 10742, 11, 1057, 3932, 1253, 9229, 12410, 304, 1057, 16097, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 26431, 315, 3831, 16097, 369, 279, 2883, 596, 2450, 4028, 5370, 26593, 11, 2737, 5195, 8471, 323, 5195, 15161, 13, 1102, 50729, 279, 9547, 430, 649, 48291, 7958, 6883, 21063, 11, 82003, 279, 12939, 315, 28118, 43839, 1697, 4819, 323, 1217, 10742, 311, 10519, 11761, 12410, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfa8c0>, 'json_data': {'input': [[18902, 79483, 25, 72673, 369, 33620, 72837, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 72673, 369, 33620, 72837, 3857, 11, 902, 374, 9200, 369, 8830, 279, 2883, 753, 3827, 30255, 323, 1268, 814, 7958, 4272, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfa950>, 'json_data': {'input': [[18902, 79483, 25, 1789, 5217, 2038, 922, 1057, 25452, 22538, 11, 1518, 7181, 220, 16, 323, 7181, 220, 18, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 1405, 13016, 649, 1505, 5217, 2038, 9002, 25452, 22538, 304, 279, 18559, 311, 79980, 660, 17961, 70816, 13, 1102, 17482, 439, 264, 5905, 1486, 369, 39210, 11125, 810, 11944, 75992, 922, 63897, 4953, 3238, 82, 22538, 323, 872, 24043, 6514, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfa9e0>, 'json_data': {'input': [[18902, 79483, 25, 1442, 279, 549, 815, 13, 18160, 58764, 555, 220, 605, 13689, 279, 3392, 12715, 304, 40944, 14807, 28174, 320, 1182, 32, 8, 2949, 362, 65083, 5552, 311, 1057, 4272, 9341, 305, 17327, 1603, 3827, 2515, 1053, 617, 1027, 13489, 400, 23305, 3610, 323, 400, 26491, 3610, 4827, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 15947, 13, 578, 2349, 304, 907, 12715, 304, 356, 15559, 1053, 387, 3685, 311, 4445, 264, 12435, 7362, 11667, 14807, 8895, 477, 4814, 505, 1057, 9341, 304, 7362, 72202, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 10484, 9803, 279, 4754, 5536, 315, 11667, 65649, 389, 279, 40944, 14807, 28174, 320, 1182, 32, 8, 5552, 311, 4272, 9341, 305, 17327, 11, 4726, 94012, 279, 6020, 15635, 6532, 304, 6625, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfaa70>, 'json_data': {'input': [[18902, 79483, 25, 3861, 315, 279, 1401, 514, 3078, 369, 18189, 20748, 505, 1057, 7677, 374, 73194, 311, 4335, 4907, 13, 8876, 220, 679, 22, 11, 584, 617, 18545, 220, 1041, 4, 315, 279, 18200, 15652, 315, 1057, 3728, 7677, 449, 24393, 315, 33268, 4907, 389, 459, 9974, 8197, 13, 4452, 11, 1606, 315, 12062, 304, 279, 18539, 315, 33268, 4907, 8336, 1093, 13238, 323, 10160, 4028, 279, 13918, 1405, 584, 14816, 17223, 1606, 315, 279, 3977, 8312, 315, 1521, 5070, 86319, 2103, 1205, 311, 17631, 389, 12782, 37612, 15154, 4907, 8336, 430, 2410, 2254, 57449, 13, 3011, 374, 3249, 584, 743, 264, 5915, 311, 1629, 389, 220, 1187, 14, 22, 12782, 12862, 4907, 320, 9847, 36, 8, 389, 1475, 5950, 1405, 584, 14816, 555, 220, 9639, 15, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 279, 12939, 315, 73194, 311, 4335, 4907, 439, 264, 1401, 8446, 369, 5195, 311, 8108, 20748, 13, 1102, 34945, 279, 2883, 596, 26501, 315, 12864, 220, 1041, 4, 315, 1202, 18200, 15652, 449, 33268, 4907, 24393, 2533, 220, 679, 22, 11, 1418, 61708, 11774, 5552, 311, 2254, 4907, 8336, 11, 4726, 94012, 279, 23965, 315, 279, 2883, 596, 41329, 9045, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfab00>, 'json_data': {'input': [[18902, 79483, 25, 19620, 29553, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 59732, 29553, 1, 3857, 11, 19392, 264, 5357, 389, 1268, 63897, 4953, 13, 29972, 7362, 11667, 14463, 323, 872, 5536, 389, 6020, 13122, 13, 1115, 374, 3062, 369, 39210, 8173, 304, 279, 2883, 596, 6625, 7677, 323, 11667, 5326, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfab90>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 11, 63897, 4953, 2637, 23377, 430, 279, 2246, 374, 264, 1934, 5552, 311, 279, 2883, 596, 7677, 323, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfa320>, 'json_data': {'input': [[18902, 79483, 25, 23139, 23260, 473, 17327, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 14385, 439, 264, 4342, 369, 279, 23139, 23260, 473, 17327, 3857, 11, 19392, 264, 810, 11944, 10430, 389, 3230, 4595, 315, 61316, 3252, 15174, 1511, 555, 63897, 4953, 13, 311, 10299, 6020, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfa290>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 20, 13, 12689, 25074, 53349, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3857, 4342, 369, 279, 5296, 389, 12689, 25074, 53349, 320, 53, 5484, 82, 705, 19392, 264, 19662, 10430, 9002, 279, 2883, 596, 12135, 449, 15086, 304, 902, 433, 10187, 264, 3977, 2802, 13, 1102, 374, 961, 315, 279, 6020, 13122, 430, 20064, 9803, 1268, 279, 2883, 9815, 369, 1521, 15086, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:00:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfa200>, 'json_data': {'input': [[18902, 79483, 25, 763, 220, 2366, 18, 11, 279, 34483, 11136, 264, 6037, 2349, 10923, 35748, 311, 28191, 3881, 279, 14640, 304, 2515, 4972, 311, 220, 2366, 17, 5552, 311, 549, 815, 13, 6918, 7362, 3827, 20746, 439, 1664, 439, 264, 8821, 6037, 2349, 449, 41653, 19351, 389, 279, 6864, 2065, 323, 93364, 2065, 315, 432, 33465, 18512, 13, 362, 40944, 832, 7394, 28174, 8581, 311, 279, 4972, 4261, 369, 1521, 3827, 6037, 4442, 574, 12715, 304, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 34483, 6037, 4442, 304, 220, 2366, 18, 430, 7958, 6918, 7362, 3827, 20746, 323, 432, 33465, 20900, 6864, 2065, 13, 1102, 22020, 279, 5536, 315, 23331, 4442, 389, 279, 2883, 596, 3827, 2361, 323, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfa170>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 13, 40400, 5257, 74006, 59351, 9182, 25338, 27267, 6340, 23233, 29863, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 1963, 311, 279, 60391, 6020, 12518, 11, 8405, 459, 17057, 1160, 315, 279, 6020, 9477, 5343, 304, 279, 1934, 13, 1102, 8779, 13016, 6288, 25539, 279, 3230, 6020, 12518, 814, 527, 8173, 304, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfa0e0>, 'json_data': {'input': [[18902, 79483, 25, 15592, 374, 539, 1193, 264, 8147, 665, 93067, 11, 433, 374, 1101, 264, 3682, 5452, 6541, 13, 63388, 750, 11, 9873, 505, 44483, 311, 3544, 40919, 11, 323, 279, 586, 10706, 527, 7422, 922, 1268, 311, 6678, 18475, 13, 3011, 374, 3249, 584, 527, 10968, 389, 3339, 433, 4228, 323, 69311, 369, 3885, 311, 92064, 11, 323, 3139, 11, 449, 15592, 13, 3011, 3445, 8405, 279, 1455, 11084, 25213, 14054, 323, 24050, 2680, 311, 5195, 753, 5652, 15592, 4211, 430, 617, 1027, 78477, 7162, 12793, 304, 1057, 1866, 3956, 13, 5751, 24103, 15592, 5452, 6835, 13707, 279, 5845, 311, 5542, 11, 26306, 11, 49806, 11, 323, 10739, 8522, 1701, 1803, 1413, 15592, 4211, 323, 3600, 1778, 439, 26551, 7694, 323, 56496, 811, 13, 423, 14127, 15592, 369, 5195, 15161, 5825, 864, 57610, 3359, 15592, 13307, 430, 7945, 13707, 311, 3350, 11, 1296, 11, 2246, 11, 323, 14816, 3241, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 87435, 5536, 315, 15592, 4028, 19647, 323, 279, 9045, 315, 63897, 4953, 13, 311, 3493, 11084, 14054, 323, 4211, 369, 9873, 13, 1102, 11951, 34945, 279, 24103, 15592, 5452, 323, 423, 14127, 15592, 369, 5195, 15161, 11, 19392, 264, 5357, 389, 16131, 1862, 323, 15592, 32505, 10105, 11, 323, 18809, 2949, 279, 19775, 922, 279, 2883, 596, 9624, 3600, 323, 15592, 17357, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfa050>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 369, 279, 3857, 11951, 47031, 311, 63897, 4953, 2637, 19392, 430, 279, 2768, 2038, 690, 29243, 311, 279, 2883, 596, 6020, 5178, 323, 2704, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9fc0>, 'json_data': {'input': [[18902, 79483, 25, 12220, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 2860, 328, 5002, 20900, 5764, 400, 16739, 3610, 5938, 449, 32027, 14278, 7194, 13, 3580, 7181, 220, 23, 369, 4726, 3649, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 34945, 264, 3230, 328, 5002, 20900, 5938, 449, 32027, 14278, 7194, 304, 220, 2366, 18, 11, 19392, 279, 2883, 596, 69027, 477, 40291, 4954, 9045, 13, 1115, 374, 9959, 369, 8830, 279, 6020, 25127, 315, 1778, 11429, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9f30>, 'json_data': {'input': [[18902, 79483, 25, 10884, 6926, 11667, 30466, 11, 902, 22429, 279, 2515, 315, 61316, 3252, 11, 7319, 220, 605, 4, 1060, 927, 1060, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 5217, 2317, 311, 279, 13254, 6650, 9932, 304, 46613, 220, 18, 555, 25394, 6926, 11667, 30466, 13, 1102, 66159, 279, 2883, 596, 5178, 2085, 279, 10383, 315, 11667, 9473, 6372, 11, 19392, 264, 16643, 6650, 4478, 7863, 311, 5068, 12678, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9ea0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 2500, 3857, 315, 279, 6771, 315, 36962, 11, 91115, 279, 41295, 6070, 315, 279, 2246, 311, 28696, 8831, 5403, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9e10>, 'json_data': {'input': [[18902, 79483, 25, 76615, 8070, 13426, 8881, 279, 4272, 6372, 315, 13643, 12062, 1990, 279, 15691, 15055, 315, 12032, 323, 58165, 369, 6020, 13122, 10096, 323, 279, 15055, 1511, 369, 8070, 3827, 10096, 13, 90462, 6956, 315, 1057, 27334, 3827, 12032, 323, 58165, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7434, 315, 27334, 8070, 13426, 11, 8405, 26793, 1139, 279, 6956, 315, 27334, 3827, 12032, 323, 58165, 13, 1102, 374, 7718, 369, 8830, 279, 2883, 596, 8244, 3827, 2361, 323, 279, 5536, 389, 3938, 8515, 28555, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9d80>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1304, 22538, 304, 4363, 323, 14016, 369, 828, 19169, 323, 19672, 323, 2038, 5557, 12032, 1555, 24393, 315, 3424, 323, 7241, 323, 26120, 28904, 311, 3493, 8824, 369, 279, 6650, 315, 1057, 3600, 323, 3956, 627, 2014, 940, 1534, 73094, 25, 1115, 11914, 25985, 988, 389, 279, 4595, 315, 22538, 63897, 3727, 11, 11951, 304, 1972, 12675, 323, 30116, 12032, 13, 1102, 22020, 279, 2883, 596, 15507, 311, 24050, 1202, 25605, 8824, 11, 8104, 304, 5789, 1093, 828, 19169, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9cf0>, 'json_data': {'input': [[18902, 79483, 25, 26572, 2740, 11, 584, 8720, 3508, 904, 4442, 304, 1057, 2802, 477, 5133, 449, 279, 5502, 7958, 1057, 26314, 315, 3508, 279, 5502, 374, 264, 650, 5484, 323, 11, 422, 779, 11, 3508, 584, 527, 279, 6156, 63932, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 1920, 369, 48582, 47614, 4442, 304, 12135, 449, 15086, 311, 8417, 422, 814, 7958, 650, 5484, 2704, 13, 1102, 374, 961, 315, 279, 650, 5484, 6373, 323, 24043, 10396, 11, 82003, 279, 1205, 369, 14529, 16865, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9c60>, 'json_data': {'input': [[18902, 79483, 25, 13674, 14058, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 13674, 14058, 439, 264, 12742, 13254, 5699, 11, 19392, 264, 5357, 389, 279, 13172, 13254, 8066, 505, 13674, 323, 1202, 12939, 311, 279, 8244, 13254, 6651, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9bd0>, 'json_data': {'input': [[18902, 79483, 25, 5321, 1373, 279, 2768, 10430, 323, 6492, 315, 1057, 6020, 3044, 323, 3135, 315, 7677, 3871, 449, 1054, 9290, 922, 22952, 8288, 1982, 287, 70816, 2476, 3744, 358, 11, 5858, 220, 16, 330, 23562, 1359, 3744, 358, 11, 5858, 220, 16, 32, 330, 86407, 68318, 1359, 323, 1057, 60391, 6020, 12518, 323, 5552, 8554, 5343, 1234, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 10449, 21745, 82, 13016, 311, 2980, 279, 14306, 36121, 304, 32546, 449, 1023, 14491, 315, 279, 1934, 11, 82003, 279, 83416, 7138, 315, 279, 6020, 12518, 11, 5326, 9547, 11, 323, 4741, 31348, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9b40>, 'json_data': {'input': [[18902, 79483, 25, 639, 94, 198, 2014, 940, 1534, 73094, 25, 639, 94]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9ab0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 3723, 4273, 220, 2166, 1034, 220, 2618, 1034, 469, 91467, 220, 1682, 1034, 220, 966, 1034, 10314, 1741, 220, 845, 1034, 220, 1114, 1034, 7089, 52248, 220, 21, 1034, 220, 21, 1034, 75263, 3252, 20192, 320, 9563, 288, 8, 220, 16, 1034, 220, 15, 33648, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 3230, 13254, 54208, 555, 54242, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 10484, 9803, 279, 54001, 5178, 315, 63897, 4953, 2637, 10923, 13016, 311, 24564, 18845, 323, 29735, 304, 13254, 8336, 4028, 2204, 11987, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9a20>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 12514, 311, 5195, 15161, 13, 1102, 15151, 264, 9320, 311, 25394, 2500, 3062, 13254, 10449, 11, 82003, 279, 7982, 26431, 315, 9624, 3600, 304, 63897, 4953, 3238, 82, 20136, 323, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9900>, 'json_data': {'input': [[18902, 79483, 25, 24296, 11, 1690, 315, 1057, 20038, 449, 1057, 6444, 323, 8717, 1397, 603, 311, 90108, 1463, 1124, 2403, 3738, 20207, 3424, 54443, 8349, 11, 902, 1053, 5376, 1057, 7194, 439, 264, 1121, 315, 29269, 1778, 8349, 11, 323, 1253, 1397, 430, 584, 2343, 5199, 26186, 422, 1070, 1051, 459, 31959, 17864, 304, 904, 1778, 8349, 13, 763, 5369, 11, 1057, 6444, 323, 8717, 1253, 834, 9726, 279, 1005, 315, 1057, 3956, 11, 3600, 11, 323, 14645, 11, 439, 264, 1121, 315, 61529, 82, 477, 6062, 11, 902, 1436, 1121, 304, 4814, 315, 30466, 323, 69214, 7958, 1057, 2626, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 25127, 315, 20207, 3424, 8349, 11, 8104, 9002, 90108, 2461, 20038, 449, 8717, 13, 1102, 72890, 279, 6020, 323, 25605, 81909, 430, 1436, 31889, 505, 31959, 78688, 304, 1778, 5157, 11, 54952, 279, 10430, 315, 20207, 3424, 15635, 1139, 279, 2883, 596, 8244, 5326, 15813, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9870>, 'json_data': {'input': [[18902, 79483, 25, 578, 2038, 2631, 555, 420, 1537, 690, 387, 5343, 1234, 279, 17703, 1054, 77921, 36639, 3142, 45344, 38725, 863, 304, 279, 220, 2366, 19, 33878, 22504, 323, 374, 32762, 36881, 555, 5905, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 2038, 922, 279, 9678, 9879, 586, 24043, 7626, 690, 387, 5343, 304, 279, 220, 2366, 19, 33878, 22504, 13, 1115, 5825, 2317, 369, 279, 25261, 1920, 323, 279, 39242, 315, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf97e0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 323, 1587, 539, 17210, 2262, 9959, 311, 66251, 8830, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9750>, 'json_data': {'input': [[18902, 79483, 25, 22395, 63897, 4953, 2637, 279, 328, 43945, 220, 2636, 8167, 11, 279, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 279, 12593, 690, 387, 1903, 4315, 63897, 4953, 13, 323, 279, 5300, 3157, 15285, 320, 50, 43945, 220, 2636, 11, 16473, 63981, 41739, 11, 323, 39092, 38, 8191, 41739, 570, 1115, 2317, 374, 9959, 369, 15167, 3411, 311, 31990, 63897, 596, 5708, 5178, 8844, 311, 27927, 3157, 18845, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf96c0>, 'json_data': {'input': [[18902, 79483, 25, 220, 3174, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 79362, 477, 37666, 4441, 323, 1587, 539, 6782, 9959, 2262, 369, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9630>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 507, 40, 69248, 11, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 7437, 709, 369, 264, 2007, 29040, 1023, 8070, 323, 18512, 11, 8405, 264, 2867, 6020, 24131, 315, 2536, 59655, 1697, 8070, 23914, 323, 7194, 11, 902, 527, 3062, 369, 16195, 6020, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf95a0>, 'json_data': {'input': [[18902, 79483, 25, 60767, 389, 15774, 7935, 6193, 17961, 47793, 198, 2014, 940, 1534, 73094, 25, 1054, 7271, 37400, 389, 15774, 7935, 6193, 17961, 47793, 863, 40019, 279, 3230, 5357, 315, 420, 961, 315, 279, 54406, 596, 1934, 11, 19392, 430, 279, 2768, 2262, 690, 4358, 279, 27375, 315, 279, 2883, 596, 5419, 11835, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9510>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 605, 13, 20843, 10022, 11, 63347, 1406, 6674, 18076, 1341, 4419, 11, 3651, 80483, 2390, 12890, 87470, 8606, 198, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9480>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2822, 1495, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:16 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:01:16 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:01:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9360>, 'json_data': {'input': [[18902, 79483, 25, 1050, 46469, 323, 3206, 295, 2065, 55290, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 14836, 430, 40019, 279, 3857, 21760, 389, 30466, 323, 58191, 2065, 17150, 11, 19392, 264, 6541, 311, 264, 810, 11944, 24481, 315, 6020, 5178, 323, 13254, 9659, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfbc70>, 'json_data': {'input': [[18902, 79483, 25, 1226, 7068, 13172, 30466, 15871, 555, 24944, 13172, 389, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 311, 7872, 279, 6156, 8336, 315, 13172, 13254, 369, 63897, 11, 39686, 279, 2204, 15771, 323, 3600, 1405, 43749, 527, 12886, 13, 1115, 2317, 374, 7718, 369, 8830, 279, 58321, 315, 63897, 596, 13172, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf92d0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2038, 2631, 555, 420, 1537, 690, 387, 5343, 1234, 279, 17703, 1054, 77921, 36639, 3142, 45344, 38725, 863, 304, 279, 220, 2366, 19, 33878, 22504, 323, 374, 32762, 36881, 555, 5905, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 2038, 922, 279, 9678, 9879, 586, 24043, 7626, 690, 387, 5343, 304, 279, 220, 2366, 19, 33878, 22504, 13, 1115, 5825, 2317, 369, 279, 25261, 1920, 323, 279, 39242, 315, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfbd00>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 2316, 19392, 279, 9546, 315, 264, 2007, 315, 8970, 2949, 279, 2246, 13, 1102, 17482, 439, 264, 34512, 1697, 12576, 369, 279, 6742, 719, 1587, 539, 6782, 904, 2262, 9959, 311, 279, 6020, 828, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfbd90>, 'json_data': {'input': [[18902, 79483, 25, 220, 24, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 3857, 11381, 304, 279, 2246, 11, 4461, 369, 41295, 10096, 323, 1587, 539, 6782, 67749, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfbe20>, 'json_data': {'input': [[18902, 79483, 25, 220, 1774, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 2500, 2199, 1396, 477, 5905, 11381, 11, 19392, 264, 9320, 477, 25768, 304, 279, 2246, 596, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfbeb0>, 'json_data': {'input': [[18902, 79483, 25, 15592, 17916, 323, 423, 14127, 15592, 369, 5195, 15161, 25, 5751, 24103, 15592, 5452, 6835, 13707, 279, 5845, 311, 5542, 11, 26306, 11, 49806, 11, 323, 10739, 8522, 1701, 1803, 1413, 15592, 4211, 323, 3600, 1778, 439, 26551, 7694, 323, 56496, 811, 13, 423, 14127, 15592, 369, 5195, 15161, 5825, 864, 57610, 3359, 15592, 13307, 430, 7945, 13707, 311, 3350, 11, 1296, 11, 2246, 11, 323, 14816, 3241, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 15592, 17357, 9076, 555, 5195, 15161, 11, 8104, 1555, 279, 24103, 15592, 5452, 13, 1102, 66159, 279, 7526, 2561, 369, 13707, 11, 67908, 1268, 5195, 374, 39825, 5196, 439, 264, 7808, 304, 15592, 14645, 2949, 1202, 9624, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfbf40>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 11, 63897, 4953, 2637, 902, 374, 279, 3917, 315, 279, 4553, 2246, 13, 1102, 64664, 279, 2317, 369, 682, 279, 6020, 2038, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0040>, 'json_data': {'input': [[18902, 79483, 25, 611, 82, 14, 74210, 612, 13566, 69065, 198, 2014, 940, 1534, 73094, 25, 578, 12223, 1584, 3605, 82, 14, 74210, 612, 13566, 69065, 1, 78864, 279, 16287, 42143, 315, 279, 25261, 1934, 555, 279, 93596, 7626, 11, 50096, 1202, 3229, 5383, 323, 39242, 369, 279, 1934, 596, 8970, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b00d0>, 'json_data': {'input': [[18902, 79483, 25, 3061, 670, 38170, 304, 1057, 5195, 15161, 30466, 617, 1027, 11, 323, 1253, 3136, 311, 387, 11, 11754, 555, 9547, 304, 5369, 311, 279, 4689, 9547, 7633, 3485, 11, 1778, 439, 6130, 10648, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 9547, 430, 1253, 7958, 65649, 304, 5195, 15161, 30466, 11, 4528, 311, 3766, 27855, 11, 82003, 430, 6130, 10648, 12912, 323, 3157, 4787, 1514, 16996, 13073, 304, 13254, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0160>, 'json_data': {'input': [[18902, 79483, 25, 42321, 323, 5557, 15771, 529, 2626, 12659, 25, 42089, 323, 14640, 10968, 389, 3544, 5557, 15771, 11, 2737, 279, 14434, 47910, 3298, 304, 279, 7665, 9323, 320, 39907, 1237, 14640, 323, 5897, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 45293, 3230, 23331, 10742, 5552, 311, 10937, 323, 12659, 315, 5557, 15771, 13, 1102, 22020, 279, 26431, 315, 1521, 14640, 369, 279, 2883, 596, 2626, 1646, 323, 3157, 2361, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b01f0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 3308, 362, 323, 3308, 356, 13551, 2109, 73350, 323, 28520, 22311, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 264, 2007, 430, 94594, 279, 3649, 315, 3308, 362, 323, 3308, 356, 13551, 2109, 73350, 555, 63897, 11, 8405, 47616, 828, 311, 1862, 279, 19775, 389, 4430, 2109, 13173, 7640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0280>, 'json_data': {'input': [[18902, 79483, 25, 34711, 17476, 25, 8779, 6444, 11388, 11, 6144, 11, 323, 6013, 311, 264, 7353, 2134, 315, 62542, 18208, 11, 449, 15592, 18751, 311, 4726, 20259, 4868, 20124, 11, 63652, 902, 18208, 311, 19874, 11, 323, 10765, 3440, 13006, 11, 439, 1664, 439, 43880, 11175, 315, 62542, 18208, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 2500, 23099, 315, 5195, 15161, 11, 21760, 389, 62542, 10105, 13, 1102, 22020, 279, 18052, 315, 15592, 304, 47594, 4868, 11193, 11, 67908, 5195, 15161, 596, 15507, 311, 22973, 6130, 828, 2403, 18208, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0310>, 'json_data': {'input': [[18902, 79483, 25, 1666, 264, 1121, 315, 1521, 9547, 11, 279, 907, 315, 1057, 22538, 1436, 18174, 11, 902, 1436, 11682, 1057, 6020, 3044, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 25127, 315, 279, 3766, 20954, 389, 9341, 51262, 11, 19392, 430, 279, 18174, 304, 9341, 907, 34103, 264, 5326, 311, 63897, 596, 6020, 3044, 323, 10565, 3135, 13, 1102, 20405, 3871, 279, 15635, 5938, 449, 22538, 323, 872, 4754, 5536, 389, 279, 8244, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b03a0>, 'json_data': {'input': [[18902, 79483, 25, 72673, 369, 33620, 72837, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 72673, 369, 33620, 72837, 3857, 11, 902, 374, 9200, 369, 8830, 279, 2883, 753, 3827, 30255, 323, 1268, 814, 7958, 4272, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0430>, 'json_data': {'input': [[18902, 79483, 25, 14930, 5273, 77917, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 6762, 907, 22323, 11, 19392, 430, 433, 374, 264, 5199, 13189, 315, 63897, 596, 6020, 13122, 13, 1102, 7437, 279, 6566, 369, 264, 810, 11944, 10430, 389, 1268, 6762, 907, 374, 11075, 323, 21771, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b04c0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 9865, 1109, 220, 717, 52446, 220, 717, 52446, 477, 33381, 10884, 81019, 1534, 81019, 1534, 81019, 1534, 14930, 5273, 25733, 14930, 5273, 25733, 14930, 5273, 25733, 10423, 27460, 400, 220, 1691, 11, 21602, 400, 320, 16, 11, 8759, 8, 400, 220, 1032, 11, 20596, 400, 320, 16, 11, 20945, 8, 400, 220, 1958, 11, 21144, 400, 320, 17, 11, 23785, 8, 36565, 11897, 34919, 220, 806, 11, 14261, 320, 14868, 8, 220, 868, 11, 6549, 320, 16, 11, 24130, 8, 220, 1627, 11, 17228, 320, 16, 11, 21776, 8, 48780, 46128, 323, 9513, 46128, 34919, 220, 22, 11, 23309, 320, 21535, 8, 220, 21, 11, 26281, 320, 23480, 8, 220, 975, 11, 25458, 320, 16, 11, 12754, 8, 10884, 400, 220, 2137, 11, 22992, 400, 320, 17, 11, 23273, 8, 400, 220, 1758, 11, 22369, 400, 320, 17, 11, 11711, 8, 400, 220, 2075, 11, 21851, 400, 320, 19, 11, 25659, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 12399, 2007, 315, 50204, 1534, 20192, 323, 18151, 389, 5370, 11306, 315, 11897, 34919, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 13, 1102, 374, 961, 315, 279, 27927, 3857, 25394, 279, 6762, 907, 22323, 315, 6020, 24198, 11, 11951, 45293, 279, 5178, 315, 3109, 27460, 11, 13166, 11897, 34919, 11, 323, 21515, 46128, 34919, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0550>, 'json_data': {'input': [[18902, 79483, 25, 14681, 18362, 20148, 198, 2014, 940, 1534, 73094, 25, 14681, 18362, 20148]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b05e0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 1587, 539, 6782, 904, 1495, 323, 9093, 37856, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0670>, 'json_data': {'input': [[18902, 79483, 25, 7436, 1952, 6790, 220, 845, 11, 220, 2366, 15, 11, 264, 1396, 315, 1614, 7867, 27910, 3331, 13019, 459, 3276, 85971, 12458, 304, 279, 549, 815, 13, 11182, 7301, 369, 279, 18516, 11182, 315, 8421, 11, 62546, 430, 5195, 34521, 549, 815, 13, 3276, 85971, 7016, 439, 1664, 439, 1614, 81374, 6696, 7016, 23343, 311, 1202, 13172, 5557, 11, 323, 264, 9269, 374, 13847, 369, 5587, 220, 2366, 20, 13, 23212, 11, 389, 6186, 220, 1187, 11, 220, 2366, 18, 11, 279, 61910, 11, 3235, 449, 264, 1396, 315, 1614, 7867, 27910, 3331, 11, 13019, 459, 3276, 85971, 12458, 304, 279, 549, 815, 13, 11182, 7301, 369, 279, 18516, 11182, 315, 13286, 62546, 430, 5195, 753, 7528, 13172, 5557, 3956, 41587, 549, 815, 13, 3276, 85971, 7016, 11, 323, 389, 5936, 220, 1114, 11, 220, 2366, 18, 11, 264, 1396, 315, 5217, 1614, 7867, 27910, 3331, 11096, 279, 12458, 13, 578, 21283, 11, 279, 356, 4940, 11, 323, 279, 26925, 34, 1855, 9107, 264, 16287, 8990, 1139, 5195, 596, 13172, 5557, 2626, 12659, 389, 5651, 220, 1313, 11, 220, 2366, 16, 11, 3297, 220, 914, 11, 220, 2366, 17, 11, 323, 5651, 220, 1682, 11, 220, 2366, 17, 11, 15947, 13, 1952, 5651, 220, 975, 11, 220, 2366, 18, 11, 279, 21283, 11136, 264, 22504, 315, 4761, 25593, 320, 14202, 8, 63025, 5195, 315, 1202, 33269, 1684, 430, 5195, 34521, 7665, 3276, 85971, 7016, 23343, 311, 1202, 13172, 5557, 13, 1226, 16846, 311, 279, 5745, 389, 6790, 220, 16, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 5217, 3276, 85971, 21859, 13019, 555, 1614, 7867, 27910, 3331, 2403, 5195, 11, 45293, 3230, 18873, 323, 279, 56043, 6532, 13, 1102, 22020, 14529, 39725, 323, 26969, 1139, 5195, 753, 13172, 5557, 323, 12659, 11, 29820, 311, 279, 8244, 19775, 315, 279, 2883, 596, 5897, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0700>, 'json_data': {'input': [[18902, 79483, 25, 2009, 2315, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 330, 2356, 2315, 1359, 19392, 264, 5357, 389, 1268, 63897, 4953, 13, 9815, 369, 26120, 20038, 304, 18859, 449, 24043, 10886, 13, 1102, 7437, 279, 6566, 369, 25394, 279, 6514, 315, 26120, 20038, 439, 961, 315, 279, 2883, 596, 30255, 323, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0790>, 'json_data': {'input': [[18902, 79483, 25, 14930, 5273, 77917, 315, 11842, 5364, 847, 36164, 58588, 46272, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 8712, 315, 6762, 907, 22323, 369, 2536, 30004, 36164, 25452, 34919, 13, 1102, 15151, 430, 279, 2768, 43743, 690, 4358, 1268, 1521, 22538, 527, 26126, 323, 5068, 11, 902, 374, 16996, 369, 8830, 63897, 4953, 3238, 82, 9341, 20136, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfbbe0>, 'json_data': {'input': [[18902, 79483, 25, 22854, 780, 2262, 389, 1057, 15771, 11, 2737, 3428, 22867, 1217, 16581, 2262, 11, 3566, 26396, 11, 2262, 34324, 11, 323, 1023, 27655, 315, 1057, 17959, 1436, 7958, 279, 4367, 315, 1057, 3600, 11, 902, 1436, 11682, 1057, 17444, 323, 4130, 1057, 1510, 323, 4754, 3932, 505, 1701, 1057, 3956, 323, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 29735, 5357, 311, 279, 5536, 315, 36033, 2262, 389, 279, 2883, 753, 15771, 13, 1102, 22020, 279, 4754, 16296, 315, 1778, 2262, 389, 279, 4367, 315, 3600, 9076, 323, 1217, 38231, 11, 19392, 264, 27927, 4747, 922, 20958, 264, 57042, 323, 15062, 5452, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfbb50>, 'json_data': {'input': [[18902, 79483, 25, 7436, 578, 30466, 430, 584, 43530, 7953, 13172, 527, 7859, 323, 1253, 69214, 7958, 1057, 37682, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 30466, 14592, 505, 2536, 26831, 31024, 8336, 527, 7859, 11, 23377, 264, 21797, 2461, 315, 13254, 23914, 13, 1102, 48542, 279, 6742, 369, 20954, 389, 1268, 420, 6541, 1253, 10383, 8244, 11626, 37682, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfbac0>, 'json_data': {'input': [[18902, 79483, 25, 577, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5829, 279, 6661, 364, 84, 6, 311, 79164, 6373, 20448, 6787, 11, 17517, 11, 477, 28904, 11, 19392, 430, 279, 2768, 50829, 1253, 281, 7770, 311, 11145, 20448, 11, 902, 374, 315, 2802, 311, 41777, 323, 40242, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfba30>, 'json_data': {'input': [[18902, 79483, 25, 6652, 11, 423, 732, 13, 220, 10866, 2491, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 279, 3813, 315, 279, 22370, 5274, 11, 6652, 11, 423, 732, 13, 220, 10866, 2491, 11, 902, 374, 9959, 369, 5897, 323, 23331, 10096, 11, 19392, 1405, 279, 2246, 374, 13019, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfb9a0>, 'json_data': {'input': [[18902, 79483, 25, 26572, 2740, 11, 584, 8720, 3508, 904, 4442, 304, 1057, 2802, 477, 5133, 449, 279, 5502, 7958, 1057, 26314, 315, 3508, 279, 5502, 374, 264, 650, 5484, 323, 11, 422, 779, 11, 3508, 584, 527, 279, 6156, 63932, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 1920, 369, 48582, 47614, 4442, 304, 12135, 449, 15086, 311, 8417, 422, 814, 7958, 650, 5484, 2704, 13, 1102, 374, 961, 315, 279, 650, 5484, 6373, 323, 24043, 10396, 11, 82003, 279, 1205, 369, 14529, 16865, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfb910>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 369, 420, 12143, 26, 433, 1253, 387, 264, 6002, 477, 10321, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfb880>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 806, 13, 63347, 1406, 6674, 22735, 20982, 3579, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 7314, 315, 264, 3857, 304, 279, 2246, 12514, 311, 18362, 70396, 11, 902, 374, 264, 5410, 1537, 304, 13166, 9974, 6821, 13, 1102, 50729, 279, 2883, 596, 5603, 311, 14573, 1113, 1202, 29509, 323, 28454, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfb7f0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 81019, 1534, 8895, 320, 9563, 8, 389, 6762, 907, 3072, 11897, 34919, 400, 320, 8259, 8, 400, 320, 23906, 8, 400, 220, 16481, 43907, 15393, 8895, 389, 11897, 34919, 220, 16739, 220, 6889, 220, 10828, 43907, 15393, 4814, 389, 11897, 34919, 320, 18196, 8, 320, 16, 11, 20691, 8, 320, 16, 11, 22904, 8, 320, 70656, 8, 18979, 304, 41458, 369, 6807, 18151, 320, 5925, 8, 320, 1313, 8, 220, 1135, 10884, 8895, 320, 9563, 8, 389, 11897, 34919, 15324, 304, 1023, 8070, 320, 59857, 705, 4272, 400, 320, 5120, 8, 400, 320, 17, 11, 20478, 8, 400, 320, 16, 11, 12112, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 50204, 1534, 323, 15393, 20192, 323, 18151, 389, 11897, 34919, 927, 2380, 1667, 320, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 570, 1102, 374, 961, 315, 264, 11944, 6020, 6492, 2949, 279, 2246, 11, 8405, 20616, 1139, 279, 5178, 315, 11897, 34919, 323, 872, 5536, 389, 1023, 8070, 323, 18512, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfb760>, 'json_data': {'input': [[18902, 79483, 25, 320, 9126, 3861, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 264, 6727, 374, 2631, 11, 11383, 5552, 311, 279, 955, 315, 1934, 1694, 13019, 320, 64709, 477, 9320, 705, 323, 7437, 709, 279, 3645, 369, 279, 17876, 11709, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfb6d0>, 'json_data': {'input': [[18902, 79483, 25, 14727, 1334, 479, 315, 77990, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 19392, 264, 3857, 12514, 311, 279, 53317, 315, 22538, 13, 1102, 17738, 264, 11944, 10430, 389, 1268, 63897, 4953, 13, 8720, 288, 323, 9815, 369, 38974, 1392, 304, 1202, 9341, 20136, 11, 902, 374, 16996, 369, 13687, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfb640>, 'json_data': {'input': [[18902, 79483, 25, 2147, 4013, 984, 45176, 7480, 60882, 2891, 5257, 43433, 220, 1032, 2794, 220, 868, 1528, 8, 3083, 3247, 22370, 1539, 37744, 4154, 41973, 21800, 3083, 220, 7285, 19, 1789, 279, 20323, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 2794, 48633, 7237, 45176, 7480, 60882, 2891, 5257, 43433, 220, 1032, 2794, 220, 868, 1528, 8, 3083, 3247, 22370, 1539, 37744, 4154, 41973, 21800, 3083, 220, 7285, 19, 1789, 279, 9320, 4261, 505, 311, 662, 9849, 1052, 1396, 25, 220, 4119, 12, 12935, 1490, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 9200, 2038, 9002, 279, 7138, 315, 279, 1934, 11, 2737, 1202, 7580, 320, 64709, 1934, 477, 9320, 1934, 705, 279, 9959, 20323, 1060, 11, 323, 279, 22370, 12396, 1052, 1396, 11, 902, 374, 7718, 369, 15194, 323, 5905, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfb5b0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 24050, 1057, 9341, 304, 15592, 4028, 279, 4553, 2883, 13, 1115, 5764, 1803, 1413, 15592, 323, 14691, 311, 32172, 15592, 17357, 1139, 1057, 3956, 323, 3600, 13, 15592, 5557, 323, 3600, 527, 7701, 15022, 11, 19019, 42028, 11, 323, 1397, 5199, 9341, 11, 2737, 4500, 323, 25605, 7194, 11, 311, 3449, 279, 10223, 3966, 323, 17078, 315, 1057, 6484, 3932, 323, 9504, 502, 3932, 13, 5751, 5845, 311, 10739, 3738, 15592, 14645, 9200, 369, 1057, 3956, 323, 3600, 323, 369, 1057, 2626, 8446, 1253, 6904, 389, 279, 18539, 323, 21913, 315, 4948, 24993, 7241, 323, 11156, 14054, 13, 23212, 11, 1023, 5220, 1253, 2274, 15592, 3956, 323, 14645, 430, 527, 4528, 477, 16757, 311, 1057, 14645, 477, 810, 2853, 53421, 311, 10739, 13, 7089, 5220, 1253, 1101, 617, 320, 269, 304, 279, 3938, 1253, 6994, 8, 46997, 477, 1023, 34333, 3268, 430, 1053, 5471, 11, 4017, 11, 477, 40978, 449, 1057, 5845, 311, 1304, 11, 1005, 11, 477, 4662, 1057, 1866, 15592, 3956, 323, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 1495, 24400, 389, 63897, 4953, 3238, 82, 9341, 304, 21075, 11478, 320, 15836, 705, 19392, 279, 19092, 12939, 315, 15592, 14645, 369, 279, 2883, 596, 3938, 13, 1102, 50729, 279, 15022, 7138, 315, 15592, 4500, 323, 279, 5938, 15635, 315, 539, 10494, 18338, 449, 3157, 83787, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfb520>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 8304, 11, 902, 5764, 30466, 8066, 389, 5195, 8304, 6012, 24435, 304, 2467, 61161, 11, 2467, 62109, 11, 323, 5195, 2467, 10790, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 5195, 8304, 13254, 8336, 11, 902, 2997, 30466, 505, 2467, 61161, 11, 2467, 62109, 11, 323, 5195, 2467, 10790, 13, 1102, 1946, 1392, 279, 3766, 27855, 555, 22824, 4954, 2500, 1401, 13254, 4365, 430, 44072, 311, 5195, 596, 8244, 13172, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfb490>, 'json_data': {'input': [[18902, 79483, 25, 65752, 279, 7648, 21844, 11, 23088, 11, 323, 68728, 15592, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 264, 15507, 311, 11469, 11084, 323, 8647, 15592, 14645, 11, 19392, 430, 279, 2768, 2262, 690, 37067, 389, 3230, 15592, 28271, 323, 4211, 1694, 46531, 555, 63897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfb400>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 1317, 9860, 18845, 617, 20162, 311, 279, 3135, 315, 1057, 60391, 7677, 11, 323, 584, 48248, 430, 814, 690, 3136, 311, 7958, 1057, 3938, 3135, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 279, 2768, 3585, 690, 7872, 3230, 1317, 9860, 18845, 430, 617, 35901, 40028, 63897, 596, 7677, 323, 527, 3685, 311, 3136, 3815, 779, 11, 8405, 264, 69917, 369, 279, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfb370>, 'json_data': {'input': [[18902, 79483, 25, 1226, 8417, 520, 279, 54529, 315, 1855, 27204, 3508, 459, 5502, 304, 902, 584, 617, 1903, 459, 9341, 477, 304, 902, 584, 617, 1023, 3977, 12034, 374, 6646, 264, 3977, 2802, 5502, 320, 53, 5484, 570, 1226, 74421, 650, 5484, 82, 994, 584, 527, 279, 6156, 63932, 13, 1226, 527, 279, 6156, 63932, 315, 264, 650, 5484, 994, 584, 617, 279, 2410, 311, 2167, 7640, 430, 1455, 12207, 7958, 279, 7100, 5178, 315, 279, 650, 5484, 323, 617, 279, 29672, 311, 35406, 279, 8857, 315, 872, 18151, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 13186, 369, 26679, 3508, 459, 5502, 81007, 439, 264, 650, 5484, 323, 1268, 63897, 28230, 988, 1778, 15086, 13, 1102, 374, 961, 315, 279, 650, 5484, 3857, 11, 8405, 26793, 1139, 279, 6020, 13122, 25127, 315, 1521, 28904, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfb2e0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 904, 1495, 13, 1102, 17482, 264, 4528, 24693, 7580, 439, 46613, 220, 20, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfb250>, 'json_data': {'input': [[18902, 79483, 25, 29240, 304, 15774, 7935, 927, 17961, 47793, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 430, 35434, 904, 4442, 304, 5419, 2585, 927, 6020, 13122, 11, 902, 374, 3062, 369, 38663, 279, 2883, 596, 8907, 323, 5326, 6373, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfb1c0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1005, 32905, 24198, 311, 10299, 15635, 23343, 311, 1057, 14529, 2626, 7677, 13, 578, 6156, 5326, 9152, 374, 7362, 9473, 5326, 13, 1226, 1005, 7362, 11667, 17517, 311, 8108, 279, 5326, 430, 1057, 8515, 28555, 11, 24608, 11, 323, 9341, 304, 7362, 72202, 690, 387, 69214, 11754, 555, 7362, 11667, 9473, 4478, 65649, 13, 1226, 1101, 3810, 1139, 32905, 24198, 311, 26310, 4445, 1057, 14675, 311, 1023, 15635, 323, 18885, 9341, 4780, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 1005, 315, 32905, 24198, 369, 18646, 7362, 9473, 5326, 323, 1023, 25605, 15635, 13, 1102, 5825, 2317, 369, 279, 3230, 4595, 315, 15635, 1694, 20669, 323, 279, 57916, 4920, 35988, 43645, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfb130>, 'json_data': {'input': [[18902, 79483, 25, 2057, 8935, 279, 1274, 323, 7634, 1405, 584, 14816, 11, 584, 617, 743, 9021, 311, 70543, 819, 220, 4364, 4, 315, 279, 80744, 8286, 584, 25024, 11, 389, 5578, 11, 4028, 1057, 19672, 323, 828, 19169, 555, 220, 9639, 15, 323, 311, 1520, 15301, 323, 7417, 279, 4367, 315, 3090, 323, 2890, 315, 61951, 304, 279, 10977, 1405, 584, 14816, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 5217, 41329, 9021, 9002, 3090, 15652, 11, 11951, 279, 9395, 311, 70543, 819, 220, 4364, 4, 315, 279, 80744, 8286, 1511, 4028, 5195, 753, 19672, 323, 828, 19169, 555, 220, 9639, 15, 13, 1102, 71849, 279, 2883, 596, 27927, 12434, 42356, 7953, 12782, 20748, 11, 21760, 389, 3090, 41329, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:47 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:01:48 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:01:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfb0a0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 264, 8205, 315, 13426, 323, 3827, 4526, 30255, 304, 279, 549, 815, 13, 323, 12387, 7362, 56043, 13, 5751, 7524, 3827, 7969, 527, 11754, 555, 264, 8205, 315, 9547, 11, 2737, 4442, 304, 279, 6651, 315, 24608, 304, 56043, 449, 2204, 45530, 3827, 7969, 11, 4272, 20192, 323, 18151, 389, 305, 17327, 323, 5552, 14463, 1234, 1057, 7362, 9473, 5326, 6373, 2068, 11, 4442, 304, 1057, 5708, 3430, 369, 13551, 11136, 439, 9548, 20448, 11, 4442, 304, 279, 51262, 315, 1057, 27334, 3827, 12032, 477, 58165, 11, 323, 279, 3851, 315, 2204, 19705, 315, 3827, 7016, 477, 4442, 304, 3827, 7016, 11, 14640, 11, 477, 24043, 16565, 320, 16564, 4442, 304, 279, 23692, 315, 6484, 7016, 570, 15903, 11, 422, 584, 527, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 5370, 3827, 30255, 279, 2883, 12580, 4028, 56043, 11, 45293, 279, 9547, 430, 10383, 1202, 7524, 3827, 7969, 13, 1102, 66159, 279, 23965, 315, 3827, 8907, 323, 279, 4754, 369, 3938, 58165, 11, 29820, 311, 279, 27927, 6020, 5326, 19775, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfb010>, 'json_data': {'input': [[18902, 79483, 25, 763, 279, 2007, 3485, 11, 15393, 4272, 8895, 320, 9563, 8, 389, 25452, 34919, 6216, 2391, 279, 4261, 27053, 279, 6811, 1990, 279, 6412, 34555, 323, 279, 15691, 907, 315, 279, 25452, 34919, 520, 279, 7314, 315, 279, 4261, 477, 279, 7782, 2457, 11, 422, 3010, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 1749, 369, 38714, 15393, 4272, 20192, 477, 18151, 389, 25452, 34919, 6216, 11, 902, 374, 961, 315, 279, 8244, 6020, 5178, 6492, 13, 1102, 374, 9959, 304, 279, 2317, 315, 25452, 22538, 323, 8779, 311, 38263, 1268, 279, 6020, 3135, 527, 17303, 323, 5068, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b13f0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 2620, 315, 36962, 1359, 902, 50729, 279, 6070, 315, 279, 2246, 323, 11725, 279, 5370, 14491, 323, 13650, 9960, 11, 10695, 13016, 21546, 279, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1360>, 'json_data': {'input': [[18902, 79483, 25, 1789, 13122, 10096, 5195, 41095, 1403, 21282, 25, 5195, 8471, 323, 5195, 15161, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 279, 6070, 315, 5195, 596, 13122, 11, 19392, 430, 433, 41095, 1403, 1925, 21282, 25, 5195, 8471, 323, 5195, 15161, 13, 1115, 2317, 374, 3062, 369, 8830, 1268, 279, 2883, 2942, 4861, 1202, 2626, 7677, 369, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b12d0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 11156, 14054, 374, 40056, 315, 2038, 5557, 12032, 11, 2737, 16692, 323, 29130, 7241, 11, 323, 828, 4219, 4363, 323, 14016, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7138, 315, 63897, 4953, 3238, 82, 11156, 14054, 11, 38938, 430, 433, 41095, 2038, 5557, 12032, 1093, 16692, 323, 29130, 7241, 11, 439, 1664, 439, 828, 4219, 4363, 323, 14016, 13, 1102, 17482, 311, 66251, 553, 279, 12678, 304, 46613, 220, 16, 555, 39686, 279, 6956, 430, 17210, 311, 279, 2883, 753, 25605, 17357, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1240>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 2631, 75992, 1234, 11360, 220, 1032, 2666, 8, 315, 279, 19224, 3298, 11, 19392, 279, 2883, 753, 29672, 311, 1934, 3230, 6299, 477, 8907, 13146, 5552, 311, 7362, 56043, 477, 23331, 8670, 13, 1102, 7437, 279, 6566, 369, 25394, 23331, 8907, 13146, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b11b0>, 'json_data': {'input': [[18902, 79483, 25, 578, 17575, 369, 8070, 13426, 5764, 279, 2515, 315, 21137, 19705, 323, 4442, 311, 30600, 439, 1664, 439, 279, 5552, 4272, 2802, 323, 31086, 13, 763, 5369, 11, 584, 527, 3917, 311, 279, 19815, 24481, 315, 1057, 8070, 3827, 4780, 555, 279, 34483, 323, 1023, 3827, 11527, 902, 1253, 2105, 41300, 2403, 603, 13, 1226, 15870, 8720, 279, 29736, 315, 31959, 20124, 13239, 505, 1521, 69570, 323, 41300, 311, 8417, 279, 41228, 2826, 315, 1057, 17575, 369, 8070, 13426, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 9731, 279, 10430, 315, 8070, 3827, 19705, 11, 45293, 279, 6372, 315, 21137, 19705, 323, 9434, 69570, 389, 279, 2883, 596, 3827, 58165, 13, 1102, 95593, 279, 12939, 315, 17879, 3827, 8907, 323, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1120>, 'json_data': {'input': [[18902, 79483, 25, 220, 972, 11, 24110, 25441, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 505, 46613, 220, 19, 11, 8405, 279, 3230, 18160, 3392, 5938, 449, 8515, 7318, 369, 8070, 13426, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 13, 1102, 374, 961, 315, 279, 69051, 8515, 6530, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1090>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1000>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1054, 2620, 315, 36962, 863, 15151, 430, 420, 3857, 374, 961, 315, 279, 2246, 596, 41295, 6070, 11, 51346, 13016, 311, 5370, 14491, 2949, 279, 1934, 369, 8831, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0f70>, 'json_data': {'input': [[18902, 79483, 25, 578, 1925, 6956, 315, 1057, 4689, 323, 23541, 18512, 527, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 1925, 6956, 315, 4689, 323, 23541, 18512, 13, 1102, 15151, 430, 264, 11944, 31085, 690, 1833, 11, 8405, 26793, 1139, 279, 32115, 7194, 5995, 369, 279, 5784, 315, 279, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0ee0>, 'json_data': {'input': [[18902, 79483, 25, 10884, 5742, 315, 44919, 3509, 45285, 43464, 5273, 315, 53792, 1503, 439, 45285, 430, 3297, 10884, 5742, 315, 10884, 5742, 315, 24478, 8650, 24478, 8650, 3744, 315, 3142, 398, 14968, 2893, 53792, 1503, 3308, 362, 45285, 3308, 356, 45285, 55182, 824, 55182, 824, 9489, 20018, 9636, 279, 26572, 53792, 1503, 320, 258, 9214, 2432, 16, 8, 53792, 1503, 320, 258, 9214, 2432, 16, 8, 3308, 362, 12037, 7, 17, 8, 3308, 356, 12037, 7, 17, 8, 38716, 320, 258, 9214, 2432, 16, 8, 6826, 320, 258, 11990, 8, 6664, 220, 16, 482, 220, 2148, 220, 24, 11, 22614, 220, 1987, 11, 21897, 400, 220, 9565, 13, 2287, 400, 220, 8878, 13, 2397, 220, 2166, 11, 17608, 400, 220, 1774, 11, 23969, 6841, 220, 16, 482, 220, 966, 220, 24, 11, 4468, 220, 1591, 11, 3753, 400, 220, 9565, 13, 4331, 400, 220, 8878, 13, 845, 220, 1806, 11, 19498, 400, 220, 1272, 11, 23309, 6790, 220, 16, 482, 220, 2148, 220, 22, 11, 17824, 220, 1187, 11, 19104, 400, 220, 8878, 13, 4767, 400, 220, 9795, 13, 1806, 220, 843, 11, 14274, 400, 220, 1927, 11, 17678, 10884, 220, 1627, 11, 19808, 220, 5925, 11, 22926, 220, 8899, 11, 16567, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 11944, 2038, 389, 279, 5708, 2109, 13173, 5820, 369, 63897, 4953, 13, 2391, 279, 4038, 315, 6664, 11, 6841, 11, 323, 6790, 220, 2366, 18, 13, 1102, 5764, 279, 1396, 315, 13551, 15075, 11, 872, 5578, 7729, 11, 323, 279, 2860, 18160, 907, 315, 13551, 430, 649, 2103, 387, 2109, 73350, 1234, 279, 2883, 596, 7376, 7620, 13, 1102, 374, 961, 315, 264, 3857, 25394, 279, 2883, 596, 6864, 6373, 15174, 11, 11951, 4430, 2109, 13173, 7620, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0e50>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3308, 426, 5708, 706, 220, 605, 12973, 824, 4430, 11, 1057, 3308, 362, 5708, 706, 832, 7055, 824, 4430, 11, 323, 1057, 3308, 356, 5708, 706, 912, 16043, 3268, 13, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 30390, 5874, 323, 74529, 3320, 258, 24629, 398, 13234, 13489, 220, 4218, 13, 20, 4, 315, 1057, 19310, 3308, 426, 5708, 11, 902, 15609, 13489, 220, 3971, 13, 20, 4, 315, 279, 16043, 2410, 315, 1057, 19310, 4279, 5708, 13, 17331, 872, 5708, 15637, 11, 30390, 323, 74529, 617, 5199, 10383, 927, 682, 13146, 23537, 5708, 4346, 14765, 11, 2737, 279, 6355, 315, 28454, 323, 5199, 13166, 14463, 11, 1778, 439, 264, 47112, 477, 1023, 6412, 315, 1057, 2883, 477, 1057, 12032, 11, 369, 279, 79003, 3938, 13, 763, 5369, 11, 1606, 1057, 3308, 356, 5708, 24266, 912, 16043, 3268, 320, 11945, 439, 2631, 555, 8581, 2383, 705, 279, 67599, 315, 279, 3308, 356, 5708, 11, 2737, 304, 3938, 5708, 6108, 24279, 14463, 323, 311, 3887, 9548, 25452, 36210, 7620, 11, 1436, 3136, 30390, 323, 74529, 753, 1510, 8844, 16043, 2410, 323, 872, 5845, 311, 4135, 682, 315, 1057, 28454, 323, 311, 8417, 279, 15632, 315, 1455, 13146, 14976, 311, 264, 7055, 315, 1057, 5708, 17075, 13, 578, 4430, 2109, 75202, 1903, 33549, 311, 1057, 2109, 13173, 2068, 1253, 1101, 7958, 30390, 323, 74529, 753, 8844, 16043, 2410, 13, 1115, 38626, 2585, 13693, 477, 35906, 9067, 82, 1023, 5708, 17075, 529, 5845, 311, 10383, 13166, 13146, 323, 584, 1253, 1935, 6299, 430, 1063, 315, 1057, 5708, 17075, 656, 539, 1684, 439, 24629, 11, 902, 1436, 8108, 279, 3157, 3430, 315, 1057, 3308, 362, 5708, 323, 1057, 3308, 356, 5708, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 16043, 6070, 315, 279, 2883, 753, 5708, 6989, 323, 279, 10383, 315, 1401, 41777, 11, 11951, 30390, 5874, 323, 74529, 3320, 258, 13, 1102, 66159, 279, 5536, 315, 5708, 15637, 20545, 389, 13166, 35186, 323, 5597, 28846, 11, 21583, 311, 279, 6931, 20954, 389, 4430, 15637, 323, 4754, 26885, 449, 27927, 63342, 12034, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0dc0>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 1057, 58191, 2065, 18845, 690, 39388, 6426, 11, 902, 1436, 7958, 1057, 30466, 323, 37682, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 22020, 65649, 304, 1401, 5178, 17150, 1778, 439, 7318, 28849, 323, 2853, 17453, 29218, 13, 1102, 374, 7718, 369, 8830, 279, 12050, 315, 63897, 596, 13254, 9659, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0d30>, 'json_data': {'input': [[18902, 79483, 25, 24296, 11, 8060, 311, 10519, 323, 18885, 1057, 16097, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 13, 5751, 2450, 690, 6904, 14090, 389, 1057, 5845, 311, 7293, 264, 5557, 7808, 323, 3136, 311, 3493, 1579, 22867, 11, 57042, 11, 18699, 3956, 323, 3600, 430, 527, 9615, 5505, 323, 1514, 264, 15525, 3560, 304, 264, 2134, 315, 5110, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 922, 6883, 6373, 555, 26445, 66, 5620, 279, 27927, 25127, 315, 22109, 311, 18885, 6883, 17444, 13, 1102, 57876, 430, 2450, 80934, 389, 279, 2883, 596, 5845, 311, 92064, 323, 3493, 1579, 22867, 3956, 323, 3600, 11, 31799, 6883, 2890, 6089, 311, 8244, 2626, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:01:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0ca0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6864, 22538, 304, 3424, 323, 7241, 6824, 15871, 315, 279, 2768, 3682, 11306, 512, 2014, 940, 1534, 73094, 25, 1115, 11914, 50729, 279, 3682, 11306, 315, 6864, 22538, 11, 6376, 279, 6566, 369, 264, 810, 11944, 6492, 315, 1405, 63897, 596, 6864, 374, 1694, 20816, 13, 1115, 2317, 374, 3062, 369, 39210, 8173, 304, 279, 2883, 596, 19092, 5357, 5789, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0c10>, 'json_data': {'input': [[18902, 79483, 25, 578, 2038, 2631, 555, 420, 1537, 690, 387, 5343, 1234, 279, 17703, 1054, 16411, 1105, 11, 18362, 49947, 11, 323, 36565, 81689, 863, 304, 1057, 33878, 22504, 369, 279, 220, 2366, 19, 25992, 30155, 315, 12937, 17075, 311, 387, 13019, 449, 279, 22370, 2949, 220, 4364, 2919, 315, 279, 20323, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 320, 2366, 19, 33878, 22504, 8, 323, 374, 32762, 36881, 555, 5905, 13, 578, 2038, 2631, 555, 420, 1537, 9002, 1624, 258, 17187, 1488, 388, 33549, 311, 5858, 220, 16408, 315, 48338, 328, 16222, 690, 387, 5343, 1234, 279, 17703, 1054, 16939, 258, 17187, 11360, 220, 845, 2948, 8, 29140, 863, 304, 279, 220, 2366, 19, 33878, 22504, 323, 374, 32762, 36881, 555, 5905, 627, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0b80>, 'json_data': {'input': [[18902, 79483, 25, 7089, 33620, 320, 60789, 705, 9558, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 7089, 33620, 320, 60789, 705, 9558, 11, 902, 5825, 20616, 1139, 279, 6020, 7640, 4994, 315, 6332, 7677, 11, 16996, 369, 8830, 279, 8244, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0af0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 24586, 304, 832, 1060, 477, 2753, 400, 220, 806, 11, 12245, 24586, 304, 832, 1060, 1555, 4330, 1667, 220, 3174, 11, 21144, 24586, 304, 4330, 1667, 1555, 220, 605, 1667, 220, 868, 11, 18113, 24586, 1306, 220, 605, 1667, 220, 975, 11, 12463, 10884, 400, 220, 6086, 11, 14417, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 3230, 12678, 5552, 311, 279, 48261, 13003, 315, 63897, 596, 11897, 34919, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 4314, 3649, 527, 3062, 369, 38663, 279, 5326, 323, 53113, 5938, 449, 279, 2883, 596, 11897, 22538, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1480>, 'json_data': {'input': [[18902, 79483, 25, 11842, 30004, 36164, 25452, 34919, 40944, 4272, 8895, 320, 9563, 8, 374, 40056, 315, 400, 845, 13, 23, 7239, 20192, 323, 400, 19, 13, 20, 7239, 18151, 320, 16564, 38974, 1392, 8, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 400, 972, 13, 16, 7239, 20192, 323, 400, 21, 13, 24, 7239, 18151, 320, 16564, 38974, 1392, 8, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 40944, 4272, 20192, 323, 18151, 369, 2536, 30004, 36164, 25452, 34919, 11, 8405, 11944, 12678, 369, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 11815, 279, 6931, 20954, 315, 25452, 22538, 323, 22020, 279, 5178, 315, 1521, 34919, 927, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1510>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2246, 439, 33152, 311, 63897, 4953, 2637, 31692, 279, 2317, 369, 279, 6020, 2038, 10666, 11, 902, 374, 3230, 311, 420, 27767, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b15a0>, 'json_data': {'input': [[18902, 79483, 25, 5560, 315, 95619, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 5560, 315, 95619, 304, 6020, 13122, 11, 82003, 279, 12939, 315, 32946, 304, 20646, 279, 60391, 6020, 12518, 13, 1102, 22020, 279, 4754, 54709, 304, 6020, 3135, 4245, 311, 1521, 17989, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1630>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 5217, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b16c0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3956, 323, 3600, 6904, 389, 279, 5845, 315, 1057, 3932, 311, 2680, 279, 8191, 11, 323, 3738, 315, 1057, 3956, 1397, 5199, 34494, 311, 990, 13750, 13, 25122, 11, 420, 2680, 374, 3984, 555, 5220, 430, 617, 5199, 3157, 2410, 304, 279, 41925, 323, 7757, 2680, 30633, 11, 2737, 51382, 21186, 5220, 11, 14994, 5220, 11, 6505, 17320, 5220, 11, 323, 3109, 29799, 2532, 12850, 13, 4427, 315, 1521, 12850, 617, 4529, 11, 477, 617, 11224, 430, 814, 1253, 1935, 11, 11193, 430, 1436, 96630, 11, 24927, 11, 477, 5376, 279, 2853, 315, 1217, 2680, 311, 3738, 315, 1057, 3956, 555, 65951, 477, 79466, 279, 1005, 315, 872, 14054, 311, 1862, 477, 28696, 1057, 33935, 11, 555, 23468, 7319, 12718, 311, 603, 477, 1057, 3932, 311, 3493, 1057, 33935, 11, 477, 555, 8405, 1057, 28650, 10932, 2335, 2680, 13, 4427, 56043, 617, 18306, 14640, 79466, 3738, 7739, 315, 21934, 555, 7757, 2680, 12850, 26, 4869, 11, 12190, 27924, 6866, 304, 279, 549, 815, 13, 323, 18403, 9002, 1778, 37424, 13, 1789, 3187, 11, 304, 220, 679, 23, 279, 549, 815, 13, 12411, 26545, 9849, 87014, 4272, 52864, 5718, 11, 902, 1436, 11810, 7757, 2680, 12850, 311, 9067, 11, 2565, 11, 96630, 11, 477, 6900, 369, 2680, 311, 3738, 315, 1057, 3956, 323, 3600, 13, 763, 5369, 11, 304, 1063, 56043, 11, 1057, 3956, 323, 3600, 617, 1027, 3917, 311, 3109, 55873, 10234, 17294, 477, 2565, 1154, 13, 4314, 1436, 11682, 6484, 1401, 12135, 11, 2737, 449, 1057, 3932, 11, 6444, 11, 50270, 11, 323, 5255, 2262, 12850, 11, 323, 38974, 1057, 5845, 311, 9504, 502, 6305, 26, 11682, 1057, 17444, 26, 323, 5376, 7194, 11, 28592, 48291, 28987, 1057, 2626, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 22100, 11784, 304, 46613, 220, 717, 555, 45293, 279, 4754, 15635, 5938, 449, 7757, 2680, 2585, 323, 279, 25127, 315, 23331, 4442, 304, 420, 3634, 13, 1115, 2317, 374, 7718, 369, 8830, 1268, 9434, 9547, 649, 5536, 1217, 2680, 323, 25605, 7194, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1750>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 311, 3493, 2317, 369, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b17e0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1870>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1057, 9341, 3827, 6807, 6920, 2000, 4102, 369, 1614, 8070, 3827, 10096, 1051, 13489, 400, 16, 13, 15, 7239, 323, 690, 3240, 311, 33663, 304, 220, 2366, 24, 13, 1226, 1005, 279, 6530, 43847, 1749, 315, 24043, 369, 9341, 3827, 20746, 13, 1226, 4510, 420, 3827, 6807, 374, 539, 4461, 311, 387, 15393, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 9341, 3827, 6807, 6920, 2000, 4102, 369, 1614, 8070, 13426, 11, 2737, 872, 3685, 32792, 13, 1102, 22020, 279, 2883, 596, 5603, 311, 18646, 3827, 20746, 323, 279, 25127, 369, 3938, 6020, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1900>, 'json_data': {'input': [[18902, 79483, 25, 7436, 1666, 2930, 13172, 93054, 11, 584, 3136, 311, 9407, 1057, 2027, 33935, 11, 902, 1253, 7958, 1057, 58191, 2065, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 10430, 15151, 279, 15740, 315, 2930, 13172, 323, 63897, 596, 2077, 1555, 24050, 2027, 33935, 13, 1115, 7437, 709, 264, 27927, 10430, 389, 1268, 1521, 4442, 1253, 5536, 13254, 9659, 323, 58191, 2065, 15174, 304, 3938, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1990>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9240>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 10321, 11, 323, 8617, 1587, 539, 3493, 904, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf91b0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 6763, 323, 8661, 18512, 320, 258, 11990, 11, 3734, 54208, 997, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 17, 11, 420, 12143, 15151, 430, 264, 2007, 690, 3493, 35876, 828, 5552, 311, 16207, 323, 18729, 18512, 11, 6376, 279, 6566, 369, 264, 11944, 24481, 315, 420, 20900, 5699, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9120>, 'json_data': {'input': [[18902, 79483, 25, 5195, 8304, 30466, 25983, 400, 16, 13, 20, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 15871, 16625, 555, 264, 18979, 304, 5195, 2467, 10790, 323, 2467, 62109, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 18174, 304, 5195, 8304, 30466, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 39686, 11774, 17011, 304, 420, 10449, 11, 902, 374, 9200, 369, 47614, 279, 13172, 18921, 323, 15022, 30295, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9090>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 13454, 315, 279, 2246, 2316, 11, 330, 2149, 18992, 4953, 13, 1359, 13788, 439, 264, 4342, 477, 44817, 2449, 304, 279, 1934, 11, 82003, 279, 9764, 315, 279, 2883, 1694, 14407, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbf9000>, 'json_data': {'input': [[18902, 79483, 25, 5751, 5845, 311, 20874, 13750, 323, 1057, 3938, 2450, 6904, 389, 1057, 14691, 311, 10765, 11, 18467, 11, 2274, 11, 62425, 11, 323, 14389, 7701, 26611, 17274, 369, 682, 5789, 315, 1057, 7471, 13, 42321, 304, 1057, 5064, 369, 15337, 8420, 374, 19428, 11, 323, 3738, 315, 1057, 28650, 617, 6089, 17550, 11, 323, 1253, 3136, 311, 2218, 11, 1057, 8420, 13, 763, 5369, 11, 1057, 20448, 28904, 11, 1778, 439, 1057, 25452, 10292, 7620, 11, 1253, 539, 2744, 387, 6992, 304, 51647, 502, 8420, 323, 51110, 323, 89689, 1057, 6484, 8420, 13, 42427, 858, 535, 15443, 4947, 323, 23331, 4442, 1253, 1101, 7958, 1057, 5845, 311, 18467, 11, 29905, 553, 11, 477, 14389, 1063, 315, 1057, 3728, 11005, 13, 2052, 315, 1057, 11145, 9808, 323, 1401, 8420, 527, 520, 2695, 484, 8420, 11, 323, 584, 656, 539, 10519, 904, 1401, 29145, 2324, 8276, 10396, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 11774, 63897, 12580, 304, 32959, 323, 51110, 11005, 304, 264, 15022, 5064, 13, 1102, 35434, 279, 5536, 315, 9434, 9547, 11, 1778, 439, 15443, 10396, 11, 389, 11005, 24279, 11, 902, 374, 16996, 369, 20958, 25605, 27375, 323, 6650, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfac20>, 'json_data': {'input': [[18902, 79483, 25, 763, 30829, 323, 38663, 279, 28957, 11835, 323, 16346, 11, 6373, 45799, 430, 904, 11835, 323, 16346, 11, 912, 5030, 1268, 1664, 6319, 323, 24026, 11, 649, 3493, 1193, 13579, 44701, 315, 32145, 279, 12974, 2585, 26470, 13, 763, 5369, 11, 279, 2955, 315, 28957, 11835, 323, 16346, 2011, 8881, 279, 2144, 430, 1070, 527, 5211, 17413, 323, 430, 6373, 374, 2631, 311, 3881, 1202, 19971, 304, 38663, 279, 7720, 315, 3284, 11835, 323, 16346, 8844, 311, 872, 7194, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 279, 12939, 315, 5211, 17413, 323, 6373, 19971, 304, 30829, 11835, 11, 902, 374, 9200, 369, 8830, 279, 25605, 11774, 17011, 555, 279, 2883, 304, 20958, 8907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfacb0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1052, 8070, 3827, 4780, 304, 279, 549, 815, 13, 6918, 29101, 323, 304, 1690, 1614, 323, 7362, 56043, 13, 5751, 1403, 3682, 3827, 56043, 527, 279, 549, 815, 13, 6918, 323, 14990, 13, 1226, 527, 3917, 311, 279, 19815, 24481, 315, 1057, 8070, 3827, 4780, 555, 279, 34483, 323, 1023, 3827, 11527, 13, 578, 34483, 374, 5131, 38936, 1057, 220, 679, 21, 1555, 220, 2366, 16, 3827, 4780, 13, 1226, 617, 1101, 4036, 3827, 41300, 304, 5361, 7362, 56043, 43525, 8481, 21913, 34074, 477, 15690, 21967, 13, 1226, 3136, 311, 10726, 1778, 8349, 439, 10666, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 2883, 753, 3827, 26559, 12659, 323, 14529, 69570, 555, 3827, 11527, 11, 8104, 9002, 1202, 3682, 56043, 13, 1102, 15151, 279, 23965, 315, 279, 2883, 596, 3827, 6671, 323, 279, 4754, 369, 34074, 3196, 389, 3827, 11447, 41300, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfad40>, 'json_data': {'input': [[18902, 79483, 25, 578, 5376, 304, 1023, 2853, 315, 30466, 505, 220, 2366, 17, 311, 220, 2366, 18, 574, 15871, 4245, 311, 12992, 304, 2262, 24279, 7194, 11, 14090, 369, 13674, 11, 323, 20448, 18512, 11, 902, 5343, 400, 21848, 3610, 315, 10405, 5552, 311, 9548, 3285, 685, 5938, 449, 279, 14278, 304, 1057, 32027, 13, 23212, 11, 1023, 2853, 315, 30466, 56128, 505, 264, 14278, 304, 94189, 20900, 4245, 311, 279, 2349, 304, 13240, 5505, 6439, 315, 1057, 16692, 323, 4009, 7241, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 5376, 304, 1023, 7194, 315, 30466, 323, 5825, 3230, 10507, 11, 1778, 439, 2262, 24279, 7194, 323, 3285, 685, 10405, 13, 1102, 6835, 20616, 1139, 279, 2883, 596, 25605, 11774, 323, 2853, 6373, 9045, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfadd0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 701, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfae60>, 'json_data': {'input': [[18902, 79483, 25, 220, 17, 13, 17961, 22504, 328, 50713, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 17961, 22504, 328, 50713, 11, 902, 11383, 3493, 5217, 3649, 477, 31085, 82, 315, 3230, 6020, 828, 430, 1862, 279, 60391, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfaef0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 1587, 539, 6782, 904, 1495, 323, 9093, 37856, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5bbfaf80>, 'json_data': {'input': [[18902, 79483, 25, 220, 2614, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 4384, 477, 5906, 4174, 291, 5905, 11, 4461, 10825, 439, 264, 6002, 477, 45297, 2949, 279, 2246, 13, 1102, 1587, 539, 3493, 904, 2262, 369, 66251, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:18 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:02:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0a60>, 'json_data': {'input': [[18902, 79483, 25, 77595, 5742, 220, 605, 13, 2318, 577, 220, 605, 13, 2318, 13, 16, 577, 220, 605, 13, 2318, 13, 17, 577, 220, 605, 13, 2318, 13, 18, 577, 220, 605, 13, 2318, 13, 19, 577, 220, 605, 13, 2318, 13, 20, 577, 220, 605, 13, 2545, 577, 220, 1691, 13, 1721, 353, 220, 1419, 13, 1721, 353, 220, 1187, 13, 1721, 353, 220, 2148, 13, 1721, 353, 220, 2148, 13, 2437, 353, 220, 843, 13, 1721, 639, 94, 220, 3534, 13, 1721, 353, 220, 4645, 13, 9751, 353, 220, 4645, 815, 2198, 353, 220, 4645, 732, 984, 353, 220, 4645, 10813, 37, 353, 220, 4645, 1236, 1905, 353, 7817, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 482, 3459, 315, 63897, 94960, 12937, 8113, 23314, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 482, 3459, 315, 63897, 94960, 12937, 8113, 23314, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 482, 3459, 315, 63897, 220, 2366, 17, 12432, 21304, 12937, 8113, 23314, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 482, 3459, 315, 63897, 220, 2366, 17, 11842, 12, 12432, 21304, 12937, 8113, 23314, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 482, 3459, 315, 63897, 220, 2366, 18, 11842, 12, 12432, 21304, 12937, 8113, 23314, 63897, 4953, 13, 8351, 29298, 9878, 11, 439, 31011, 3804, 82, 12558, 5548, 315, 279, 75659, 519, 93487, 315, 22765, 36639, 3142, 45344, 38725, 7572, 315, 18919, 320, 2910, 39382, 660, 555, 5905, 311, 279, 12223, 2199, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 8, 51310, 315, 14681, 18362, 20148, 33549, 311, 19224, 3298, 23694, 220, 1032, 64, 12, 975, 2948, 8, 323, 220, 868, 67, 12, 975, 2948, 705, 439, 18306, 33549, 311, 11360, 220, 13121, 315, 279, 13951, 6993, 288, 24540, 87, 3258, 3298, 315, 220, 1049, 17, 51310, 315, 14681, 17961, 20148, 33549, 311, 19224, 3298, 23694, 220, 1032, 64, 12, 975, 2948, 8, 323, 220, 868, 67, 12, 975, 2948, 705, 439, 18306, 33549, 311, 11360, 220, 13121, 315, 279, 13951, 6993, 288, 24540, 87, 3258, 3298, 315, 220, 1049, 17, 15663, 7174, 315, 14681, 18362, 20148, 323, 14681, 17961, 20148, 33549, 311, 220, 972, 549, 815, 732, 13, 11360, 220, 8878, 15, 11, 439, 18306, 33549, 311, 11360, 220, 22224, 315, 279, 13951, 6993, 288, 24540, 87, 3258, 3298, 315, 220, 1049, 17, 88110, 1445, 11216, 55335, 75760, 4833, 19840, 12051, 482, 279, 2937, 2246, 1587, 539, 5101, 304, 279, 42966, 2956, 2958, 1606, 1202, 75760, 4833, 9681, 527, 23711, 2949, 279, 55335, 75760, 4833, 2246, 55335, 75760, 4833, 15545, 17404, 27571, 12824, 12051, 55335, 75760, 4833, 15545, 17404, 27571, 75316, 6074, 3231, 12051, 55335, 75760, 4833, 15545, 17404, 27571, 20288, 6074, 3231, 12051, 55335, 75760, 4833, 15545, 17404, 27571, 9587, 6074, 3231, 12051, 3459, 2696, 9303, 8423, 389, 3459, 220, 23, 16222, 5651, 220, 18, 11, 220, 2366, 17, 320, 1213, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 75483, 8423, 389, 3459, 220, 605, 12, 5887, 220, 1591, 11, 220, 2366, 16, 1229, 320, 1213, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 75483, 8423, 389, 3459, 220, 605, 12, 5887, 220, 1627, 11, 220, 2366, 18, 1229, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 25992, 8423, 389, 3459, 220, 605, 16222, 7552, 220, 18, 11, 220, 2366, 18, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 25992, 8423, 389, 3459, 220, 605, 16222, 7552, 220, 19, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 75483, 8423, 389, 3459, 220, 605, 12, 5887, 220, 1627, 11, 220, 2366, 18, 1229, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 25992, 8423, 389, 3459, 220, 605, 16222, 7552, 220, 17, 11, 220, 2366, 18, 320, 1738, 2360, 13, 220, 4119, 12, 18017, 1135, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 5217, 50829, 323, 5552, 28887, 11, 79774, 5370, 6787, 323, 20038, 5938, 449, 63897, 4953, 2637, 902, 527, 16996, 369, 39210, 311, 3619, 279, 2883, 596, 20448, 14726, 323, 13166, 35186, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:19 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:02:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2200>, 'json_data': {'input': [[18902, 79483, 25, 220, 1490, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 2199, 1396, 21070, 320, 1490, 8, 2949, 279, 2246, 11, 4461, 19392, 279, 1510, 2199, 304, 279, 8668, 13, 22196, 311, 46613, 220, 18, 11, 433, 1587, 539, 6782, 67749, 2038, 719, 29944, 304, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b09d0>, 'json_data': {'input': [[18902, 79483, 25, 2052, 1023, 37869, 617, 1027, 40542, 1606, 814, 527, 539, 2631, 11, 539, 8581, 11, 477, 279, 2631, 2038, 374, 6062, 5343, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 430, 3738, 37869, 617, 1027, 40542, 505, 279, 2246, 13, 1102, 24897, 430, 279, 2246, 1253, 539, 2997, 682, 279, 5410, 6956, 11383, 1766, 304, 6020, 6821, 11, 902, 1253, 7958, 1268, 279, 2038, 374, 26617, 555, 13016, 323, 31499, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2c20>, 'json_data': {'input': [[18902, 79483, 25, 8012, 279, 7648, 47654, 19758, 46879, 96209, 323, 41477, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 502, 3857, 10968, 389, 4857, 4443, 25213, 15771, 323, 7766, 11, 19392, 264, 10430, 922, 63897, 4953, 3238, 82, 9045, 304, 12035, 4500, 323, 1217, 3217, 19297, 1555, 15592, 14645, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2cb0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 264, 2883, 25480, 5149, 38199, 311, 312, 50725, 261, 1057, 2853, 2385, 13, 1666, 961, 315, 420, 2068, 11, 304, 6186, 220, 2366, 18, 11, 584, 7376, 264, 14278, 315, 1057, 32027, 13, 1666, 264, 1121, 11, 2860, 9548, 3285, 685, 323, 5552, 10405, 12715, 2391, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 1051, 400, 17, 13, 16, 7239, 13, 3804, 4811, 34575, 682, 315, 279, 8420, 11754, 1051, 912, 5129, 5343, 304, 1057, 2010, 1868, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 32027, 14278, 20770, 9932, 304, 7181, 220, 23, 13, 1102, 3649, 279, 2883, 596, 5597, 311, 8108, 5687, 439, 961, 315, 264, 27927, 2853, 5621, 99015, 5149, 11, 8405, 47616, 828, 389, 3285, 685, 7194, 369, 279, 20323, 1060, 220, 2366, 18, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2d40>, 'json_data': {'input': [[18902, 79483, 25, 19078, 67792, 323, 47717, 311, 55947, 349, 389, 5195, 15161, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3857, 4342, 19392, 264, 5357, 389, 66388, 11351, 323, 13707, 1555, 5195, 15161, 13, 1102, 13533, 264, 11944, 10430, 922, 279, 7526, 323, 3600, 2561, 2949, 5195, 15161, 311, 28696, 19297, 323, 6650, 11, 5398, 287, 449, 279, 8244, 7057, 315, 77582, 5557, 369, 18475, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2dd0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1419, 627, 2014, 940, 1534, 73094, 25, 220, 1419, 13, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2e60>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 19, 11, 420, 374, 264, 4342, 477, 2316, 19392, 279, 2883, 836, 13, 1102, 17482, 439, 961, 315, 279, 2246, 596, 37666, 2085, 12190, 2262, 315, 1202, 1866, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2ef0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1101, 617, 6264, 1639, 11, 304, 18859, 449, 279, 10886, 315, 279, 3142, 8351, 45344, 90951, 8925, 320, 23175, 4273, 8, 320, 4977, 19268, 33, 705, 279, 8351, 596, 5419, 2585, 927, 6020, 13122, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 3196, 389, 13186, 9749, 304, 15774, 7935, 2345, 83537, 24686, 11136, 555, 279, 10554, 315, 328, 2805, 5620, 67792, 315, 279, 350, 888, 3195, 9849, 320, 679, 18, 12914, 705, 323, 1057, 1934, 30105, 6186, 220, 966, 11, 220, 2366, 19, 13605, 459, 653, 37435, 9647, 1070, 263, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 25261, 315, 5419, 11835, 927, 6020, 13122, 11, 19392, 430, 279, 6264, 12170, 1101, 26126, 279, 2883, 596, 8907, 449, 3230, 49125, 323, 10886, 11, 8405, 44701, 922, 279, 27375, 315, 1521, 11835, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2f80>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 5195, 7694, 612, 1023, 400, 220, 10410, 11, 24989, 400, 220, 10674, 11, 10617, 400, 220, 10005, 11, 13103, 13674, 14058, 220, 1591, 11, 24650, 220, 1682, 11, 14052, 220, 2148, 11, 15633, 5195, 8304, 220, 2148, 11, 19597, 220, 843, 11, 19423, 220, 2148, 11, 13384, 5195, 13172, 220, 12652, 11, 22640, 220, 10697, 11, 21505, 220, 14590, 11, 22869, 5195, 41455, 11, 15771, 11, 323, 7766, 220, 1591, 11, 21040, 220, 1682, 11, 22913, 220, 1958, 11, 23292, 5195, 8471, 2860, 220, 14590, 11, 21618, 220, 14022, 11, 21458, 220, 15741, 11, 19642, 5195, 15161, 220, 777, 11, 11056, 220, 1627, 11, 11209, 220, 1644, 11, 25620, 7089, 426, 1441, 220, 25504, 220, 16, 11, 26661, 220, 16, 11, 22369, 75263, 3252, 20192, 320, 9563, 288, 8, 220, 10161, 220, 16, 11, 16415, 220, 14087, 10884, 30466, 400, 220, 15574, 11, 21788, 400, 220, 16544, 11, 25192, 400, 220, 14777, 11, 20077, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 5150, 13254, 12678, 18792, 94140, 555, 955, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 5825, 47616, 828, 7718, 369, 6020, 6492, 323, 12593, 927, 892, 11, 39686, 6650, 477, 71895, 304, 5370, 2626, 5789, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3010>, 'json_data': {'input': [[18902, 79483, 25, 12557, 763, 1189, 1924, 323, 49800, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 502, 8712, 9002, 6130, 36580, 323, 20746, 11, 19392, 430, 3738, 6444, 1253, 5371, 6020, 36580, 430, 7958, 13254, 18324, 13, 1102, 13533, 264, 5357, 389, 279, 54709, 315, 13254, 3196, 389, 6130, 20038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b30a0>, 'json_data': {'input': [[18902, 79483, 25, 25274, 15592, 47654, 369, 22172, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 264, 3857, 25394, 15592, 11, 19392, 264, 5357, 389, 1268, 63897, 22262, 311, 1304, 15592, 15987, 323, 24629, 369, 1202, 3932, 323, 6444, 13, 1102, 7437, 279, 16630, 369, 264, 10430, 389, 87435, 5557, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3130>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b31c0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 9303, 25, 12411, 323, 1614, 400, 220, 605, 11, 9390, 400, 220, 1114, 11, 4364, 400, 220, 1114, 11, 6549, 19620, 220, 17, 11, 25073, 220, 17, 11, 20165, 220, 17, 11, 22593, 10884, 220, 717, 11, 23141, 220, 777, 11, 22303, 220, 777, 11, 23409, 76615, 25, 12411, 323, 1614, 220, 17, 11, 16745, 320, 23, 11, 24130, 8, 320, 22, 11, 21984, 8, 19620, 320, 8878, 8, 320, 10465, 8, 320, 14125, 8, 10884, 220, 16, 11, 24902, 320, 23, 11, 3753, 8, 320, 22, 11, 22194, 8, 72673, 369, 8070, 13426, 400, 220, 975, 11, 19597, 400, 220, 806, 11, 18349, 400, 220, 806, 11, 20275, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 315, 279, 17575, 369, 8070, 13426, 11, 32644, 11944, 12678, 369, 1510, 323, 27334, 13426, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1115, 2038, 374, 7718, 369, 6020, 6492, 323, 8830, 3827, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3250>, 'json_data': {'input': [[18902, 79483, 25, 1666, 264, 40838, 27767, 11, 584, 527, 1101, 3917, 311, 3738, 40838, 7294, 2442, 731, 2017, 19705, 13, 9636, 40838, 2383, 11, 264, 27767, 1253, 539, 16988, 304, 264, 2626, 10824, 449, 904, 12102, 315, 220, 868, 4, 477, 810, 315, 1202, 19310, 16043, 5708, 7389, 279, 12102, 706, 5762, 279, 5708, 369, 2380, 1667, 477, 11, 4315, 1023, 2574, 11, 279, 8925, 315, 46085, 706, 12054, 279, 7901, 13, 5751, 8925, 315, 46085, 1436, 17631, 389, 40838, 2383, 311, 5471, 477, 7781, 459, 24279, 315, 603, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 40838, 596, 7294, 2442, 731, 2017, 7016, 11, 902, 33330, 5217, 17294, 389, 18970, 388, 449, 5199, 5708, 17075, 13, 1115, 2317, 57924, 279, 8830, 315, 279, 5897, 4676, 304, 902, 63897, 27149, 11, 4726, 69226, 1113, 64310, 26350, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b32e0>, 'json_data': {'input': [[18902, 79483, 25, 94189, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 94189, 439, 264, 3777, 315, 432, 33465, 18512, 13, 1102, 15151, 430, 9513, 94189, 11335, 264, 3560, 304, 279, 8244, 2853, 6070, 5552, 311, 3495, 323, 4500, 11, 9959, 369, 8830, 6020, 5178, 323, 5211, 24691, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3370>, 'json_data': {'input': [[18902, 79483, 25, 64141, 323, 92523, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 34692, 311, 25394, 279, 8244, 6020, 6070, 315, 63897, 4953, 2637, 11951, 21760, 389, 330, 15289, 82, 323, 92523, 1359, 902, 7437, 279, 6566, 369, 264, 11944, 31085, 315, 279, 2883, 596, 53869, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3400>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3663, 11, 323, 1253, 3136, 311, 3663, 11, 20207, 3424, 323, 1023, 8349, 430, 1436, 387, 34348, 311, 10726, 11, 1121, 304, 5199, 5674, 23146, 477, 1023, 7194, 320, 16564, 90108, 2461, 23146, 705, 323, 4017, 1057, 5845, 311, 1005, 3738, 14645, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 5326, 315, 20207, 3424, 8349, 279, 2883, 12580, 11, 902, 649, 617, 5199, 6020, 16296, 13, 1102, 7437, 279, 6566, 369, 264, 19662, 27501, 315, 5897, 11774, 5552, 311, 20207, 3424, 11, 82003, 279, 4754, 5536, 389, 279, 2883, 596, 5845, 311, 29166, 5557, 323, 6493, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3490>, 'json_data': {'input': [[18902, 79483, 25, 1057, 18338, 315, 24009, 323, 1057, 6787, 311, 3493, 15022, 20448, 7620, 280, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3520>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5042, 15151, 430, 279, 2768, 2262, 374, 961, 315, 279, 6771, 315, 36962, 315, 279, 2246, 13, 1102, 17482, 439, 264, 34512, 1697, 12576, 369, 13016, 3411, 369, 3230, 14491, 2949, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b35b0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 477, 2316, 430, 15151, 279, 3857, 374, 5552, 311, 63897, 4953, 2637, 4461, 6376, 279, 6566, 369, 279, 6020, 2038, 430, 11263, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3640>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 10321, 323, 1587, 539, 6782, 904, 2262, 11, 8617, 8405, 912, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b36d0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 6771, 315, 36962, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3760>, 'json_data': {'input': [[18902, 79483, 25, 220, 1682, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 37739, 477, 6002, 323, 1587, 539, 6782, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b37f0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 3804, 31066, 11, 96209, 11, 323, 41477, 198, 2014, 940, 1534, 73094, 25, 1115, 14836, 15785, 264, 502, 3857, 21760, 389, 13254, 505, 5195, 41455, 11, 15771, 11, 323, 7766, 11, 19392, 264, 6541, 505, 13172, 13254, 311, 1023, 8336, 315, 8070, 2949, 63897, 753, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3880>, 'json_data': {'input': [[18902, 79483, 25, 82108, 4067, 13220, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 25829, 477, 1584, 1464, 1511, 369, 37666, 10096, 2949, 279, 2246, 13, 1102, 1587, 539, 6782, 67749, 2038, 719, 374, 961, 315, 279, 8244, 6932, 315, 279, 3459, 220, 605, 16222, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3910>, 'json_data': {'input': [[18902, 79483, 25, 6104, 584, 617, 1027, 54952, 15592, 1139, 1057, 3956, 369, 1667, 11, 584, 527, 1457, 40188, 279, 2410, 315, 1803, 1413, 15592, 311, 3136, 10695, 1057, 3932, 3237, 5694, 323, 636, 2574, 2884, 13, 1789, 3187, 11, 423, 14127, 15592, 304, 5195, 72034, 8779, 3932, 3350, 11, 31335, 11, 51187, 11, 43880, 88568, 11, 323, 617, 59774, 16659, 13, 64304, 6276, 3932, 311, 51696, 449, 22772, 15592, 449, 502, 4519, 430, 2997, 2217, 17357, 11, 11058, 1862, 11, 323, 917, 18052, 13, 18308, 14275, 11, 264, 502, 22772, 4668, 304, 13674, 11, 6276, 369, 279, 9886, 315, 15592, 16581, 2835, 477, 2217, 36576, 311, 91782, 555, 20061, 459, 4623, 1139, 264, 10137, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 3230, 10507, 315, 1268, 63897, 4953, 13, 374, 40188, 1803, 1413, 15592, 1139, 1202, 3956, 311, 18885, 1217, 16628, 323, 26206, 13, 1102, 34945, 3230, 7526, 1093, 423, 14127, 15592, 304, 5195, 72034, 323, 22772, 4519, 304, 13674, 11, 39825, 433, 2949, 279, 27927, 19775, 315, 18699, 2027, 4500, 323, 1217, 20392, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b39a0>, 'json_data': {'input': [[18902, 79483, 25, 58113, 50, 18610, 878, 53525, 9182, 7866, 39129, 19324, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 9477, 32762, 555, 5905, 304, 279, 220, 605, 16222, 26559, 13, 1102, 15151, 430, 3738, 9477, 690, 387, 25819, 6957, 279, 1934, 11, 902, 374, 3062, 369, 80414, 323, 8907, 449, 22370, 14640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3a30>, 'json_data': {'input': [[18902, 79483, 25, 763, 220, 2366, 15, 11, 584, 6222, 1057, 98741, 311, 1520, 7931, 11, 9919, 11, 323, 1023, 8717, 45925, 8108, 832, 23401, 24444, 315, 872, 12782, 13890, 20748, 30171, 555, 220, 9639, 15, 13, 1115, 374, 459, 32855, 11376, 430, 584, 617, 743, 311, 4585, 603, 311, 17210, 7438, 3725, 311, 10695, 449, 10182, 10105, 7953, 1057, 1866, 7677, 323, 907, 8957, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 5195, 596, 15507, 1903, 304, 220, 2366, 15, 311, 7945, 5370, 39210, 304, 45925, 18189, 12782, 20748, 13, 1102, 22020, 279, 2883, 596, 27927, 41329, 9021, 323, 34334, 311, 17210, 40646, 311, 10182, 10105, 11, 6376, 279, 6566, 369, 810, 3230, 41329, 11811, 9932, 3010, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3ac0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 6767, 3738, 315, 1057, 2536, 30004, 36164, 25452, 323, 11897, 34919, 11, 3738, 1023, 24198, 2737, 5708, 12, 3196, 20448, 23146, 23183, 304, 279, 5708, 315, 7089, 13315, 5220, 11, 323, 3738, 12032, 323, 58165, 19426, 304, 264, 2626, 10824, 11, 520, 6762, 907, 389, 264, 2536, 265, 46839, 8197, 11, 902, 374, 49188, 44122, 323, 7612, 6373, 19971, 323, 42304, 13, 2052, 20192, 323, 18151, 389, 2536, 30004, 36164, 25452, 34919, 527, 15324, 304, 507, 40, 69248, 11, 902, 12992, 279, 53838, 315, 1057, 507, 40, 69248, 13, 578, 50204, 1534, 20192, 323, 18151, 477, 38974, 1392, 584, 3335, 505, 6762, 907, 1323, 68, 4058, 1392, 304, 904, 4040, 4261, 1253, 1782, 12207, 505, 279, 20192, 477, 18151, 584, 13967, 13383, 389, 1778, 22538, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 38152, 1511, 555, 63897, 311, 6767, 3738, 6020, 24198, 323, 22538, 520, 6762, 907, 11, 82003, 279, 44122, 7138, 315, 1521, 22323, 13, 1102, 22020, 279, 4754, 53838, 11784, 1139, 6020, 3135, 4245, 311, 50204, 1534, 20192, 323, 18151, 11, 91115, 279, 6020, 15635, 14407, 6931, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3b50>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 2883, 836, 320, 2149, 18992, 4953, 25390, 31692, 279, 2317, 369, 279, 4553, 2246, 11, 902, 17610, 315, 279, 6020, 12518, 323, 5552, 75992, 369, 420, 3230, 5502, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3be0>, 'json_data': {'input': [[18902, 79483, 25, 5884, 315, 1521, 5897, 29407, 1436, 1121, 304, 5897, 7194, 11, 77364, 315, 6373, 5070, 11, 8389, 43763, 323, 1023, 84496, 311, 1057, 2626, 13, 9589, 79448, 58165, 369, 1057, 15639, 29407, 374, 264, 6485, 11, 2144, 19440, 11, 323, 66836, 1920, 430, 7612, 5199, 19971, 11, 323, 279, 15055, 584, 527, 13967, 35473, 369, 1253, 387, 2753, 1109, 477, 12771, 1057, 17989, 13, 578, 11175, 315, 832, 477, 810, 1778, 29407, 706, 19543, 304, 11, 323, 1253, 304, 279, 3938, 1121, 304, 11, 5217, 12190, 35018, 11, 31086, 11, 61529, 82, 11, 323, 1023, 24679, 430, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 4754, 85450, 315, 5897, 29407, 9932, 304, 46613, 220, 16, 11, 82003, 279, 23965, 315, 77472, 58165, 323, 279, 5938, 7194, 13, 1102, 72890, 279, 13336, 315, 8389, 25949, 389, 279, 2883, 596, 17444, 323, 6020, 2890, 11, 91115, 279, 75481, 315, 279, 5897, 18921, 14407, 6931, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3c70>, 'json_data': {'input': [[18902, 79483, 25, 11443, 315, 30466, 574, 400, 9423, 13, 18, 7239, 11, 459, 5376, 315, 220, 21, 4, 1060, 927, 1060, 11, 15871, 16625, 555, 12992, 304, 2262, 24279, 7194, 11, 20448, 18512, 11, 323, 350, 1741, 13, 578, 5376, 304, 20448, 18512, 5343, 10405, 5552, 311, 9548, 3285, 685, 5938, 449, 279, 14278, 304, 1057, 32027, 13, 23212, 11, 2853, 315, 30466, 56128, 505, 264, 14278, 304, 94189, 4245, 311, 279, 2349, 304, 13240, 5505, 6439, 315, 1057, 16692, 323, 4009, 7241, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 2853, 315, 30466, 369, 279, 1060, 11, 26073, 279, 9547, 29820, 311, 1202, 5376, 11, 2737, 2262, 24279, 7194, 323, 20448, 18512, 13, 1102, 22020, 3230, 6020, 11774, 279, 2883, 17011, 11, 8104, 5552, 311, 32027, 47311, 11, 323, 64252, 13016, 922, 4442, 304, 94189, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3d00>, 'json_data': {'input': [[18902, 79483, 25, 7665, 9849, 435, 1572, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 35018, 27070, 555, 279, 7665, 9849, 389, 5195, 369, 10937, 2383, 45119, 3808, 13, 1102, 7437, 279, 6566, 369, 8830, 279, 23331, 11774, 17011, 555, 279, 2883, 11, 902, 374, 3062, 369, 39210, 11920, 449, 8907, 323, 5897, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3d90>, 'json_data': {'input': [[18902, 79483, 25, 220, 1627, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5084, 311, 387, 264, 2199, 1396, 477, 264, 3857, 11381, 304, 279, 2246, 11, 11000, 19392, 264, 9320, 311, 264, 502, 3857, 477, 264, 42271, 315, 264, 3766, 3857, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2b90>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2875, 9860, 11897, 8335, 1101, 5764, 279, 1510, 13651, 315, 3738, 1317, 9860, 11897, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 56030, 430, 279, 2875, 9860, 11897, 39954, 2997, 19885, 315, 1317, 9860, 11897, 11, 902, 374, 9959, 369, 8830, 279, 8244, 11897, 6070, 323, 53113, 2361, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2b00>, 'json_data': {'input': [[18902, 79483, 25, 763, 220, 2366, 18, 11, 279, 15774, 38493, 8471, 320, 91064, 8, 11136, 264, 6037, 2349, 10923, 35748, 311, 28191, 3881, 279, 14640, 304, 2515, 4972, 311, 220, 2366, 17, 5552, 311, 549, 815, 13, 6918, 7362, 3827, 20746, 11, 439, 1664, 439, 264, 8821, 6037, 2349, 449, 41653, 19351, 389, 279, 6864, 2065, 323, 93364, 2065, 315, 432, 33465, 18512, 13, 362, 40944, 832, 7394, 28174, 8581, 311, 279, 4972, 4261, 369, 1521, 3827, 6037, 4442, 574, 12715, 304, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 18979, 304, 279, 7524, 3827, 4478, 11, 31799, 433, 311, 34483, 6037, 4442, 11, 902, 374, 3062, 369, 8830, 279, 3827, 18921, 323, 1202, 6372, 389, 4272, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2a70>, 'json_data': {'input': [[18902, 79483, 25, 23139, 11964, 4023, 812, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 459, 17219, 311, 279, 3857, 389, 23139, 11964, 4023, 812, 13, 1102, 15151, 430, 279, 2768, 1495, 690, 3493, 3649, 389, 1268, 279, 2883, 29972, 1202, 13937, 8515, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b29e0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 7068, 30466, 555, 24944, 9959, 11, 2853, 53421, 2930, 13172, 26, 9624, 6108, 10105, 430, 3493, 20790, 6444, 315, 682, 12562, 449, 14054, 323, 5452, 3600, 439, 1664, 439, 10758, 323, 20632, 7526, 26, 6763, 315, 1023, 3956, 323, 3600, 11, 1778, 439, 10721, 323, 304, 20624, 24393, 11, 323, 7766, 26, 323, 12718, 4036, 369, 11761, 15493, 6108, 3956, 13, 1789, 5217, 2038, 389, 1268, 584, 15641, 13254, 11, 1518, 7181, 220, 16, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 6156, 8336, 315, 13254, 369, 63897, 4953, 2637, 39686, 1202, 17226, 2626, 1646, 430, 5764, 2930, 13172, 11, 9624, 10105, 11, 2027, 6763, 11, 323, 15493, 3600, 13, 1102, 17482, 439, 459, 17219, 311, 279, 6020, 17150, 323, 13254, 18324, 10396, 430, 690, 387, 25985, 660, 389, 304, 279, 2246, 11, 11951, 22797, 13016, 311, 9959, 14491, 369, 4726, 3649, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2950>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 369, 420, 12143, 26, 433, 1253, 387, 264, 6002, 477, 10321, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:50 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:02:50 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:02:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b28c0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 9960, 304, 279, 2246, 2345, 2149, 18992, 4953, 13, 1102, 17482, 439, 264, 4342, 369, 279, 14491, 430, 1833, 11, 19392, 430, 279, 2038, 18713, 1771, 311, 420, 3230, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2830>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 264, 330, 2620, 315, 36962, 1359, 902, 374, 264, 24693, 2449, 315, 279, 2246, 430, 2942, 4861, 1202, 14491, 323, 5825, 459, 24131, 315, 279, 13650, 9960, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4280>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 11, 279, 4666, 2968, 323, 7036, 315, 1521, 323, 1023, 7016, 323, 14640, 11, 439, 33398, 555, 19359, 11, 40242, 11, 477, 23541, 13162, 11, 7293, 36218, 323, 1436, 387, 33398, 304, 5627, 430, 11682, 1057, 2626, 13, 1789, 3187, 11, 584, 17631, 389, 45530, 6220, 69566, 1105, 11, 1093, 1884, 743, 13544, 304, 279, 14434, 72037, 3028, 3298, 323, 11360, 220, 9870, 315, 279, 26545, 3799, 2301, 3298, 304, 279, 549, 815, 13, 323, 279, 469, 12, 34508, 57852, 304, 4606, 11, 311, 6144, 2403, 24305, 369, 5370, 31799, 11, 48530, 11, 23862, 11, 65774, 11, 323, 20256, 7640, 13, 73067, 477, 5590, 78688, 28987, 1521, 6220, 69566, 1105, 1253, 69214, 7958, 603, 323, 1253, 33330, 5199, 25605, 11774, 13, 2684, 527, 27743, 25243, 323, 15639, 39725, 304, 279, 549, 815, 2637, 10013, 11, 323, 2212, 279, 1917, 430, 1436, 57160, 477, 22472, 6220, 57511, 9313, 369, 13335, 323, 2930, 15771, 13, 5751, 4500, 11, 1005, 11, 323, 8518, 2065, 315, 15592, 3956, 323, 3600, 320, 16564, 1057, 8292, 315, 15592, 304, 1057, 33935, 323, 5419, 6067, 8, 1436, 3917, 603, 311, 23331, 1957, 323, 5897, 24305, 11, 2737, 1234, 3230, 13543, 58499, 15592, 11, 439, 1664, 439, 502, 8522, 315, 6484, 828, 9313, 11, 62542, 11, 12625, 11, 20207, 3424, 11, 323, 1023, 7016, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 27924, 14932, 279, 4666, 2968, 315, 5370, 7016, 323, 14640, 11, 8104, 9002, 6220, 57511, 37424, 430, 63897, 4953, 13, 34744, 389, 13, 1102, 22020, 279, 4754, 369, 23331, 6299, 323, 5897, 11774, 5552, 311, 279, 2883, 596, 1005, 315, 15592, 323, 8907, 449, 6484, 7016, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4310>, 'json_data': {'input': [[18902, 79483, 25, 4442, 13239, 505, 40635, 3430, 4442, 304, 85869, 14463, 369, 20086, 477, 4528, 22538, 315, 279, 1890, 55935, 13, 28295, 1392, 527, 11075, 15871, 3196, 389, 264, 3157, 5603, 439, 315, 279, 7901, 2457, 323, 527, 12715, 439, 264, 3777, 315, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 34074, 369, 2536, 30004, 36164, 34919, 11, 26073, 1268, 4442, 304, 15691, 907, 527, 11075, 323, 12715, 13, 1102, 374, 961, 315, 279, 8244, 4947, 10217, 6020, 13122, 369, 1521, 22538, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f43a0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 264, 502, 11380, 3197, 18306, 555, 42893, 386, 13, 20388, 266, 11, 279, 14681, 17961, 20148, 13, 1102, 5764, 2038, 389, 279, 1396, 315, 13551, 6532, 323, 279, 4787, 369, 11380, 13, 1115, 28957, 374, 3062, 369, 15167, 16967, 11145, 6299, 323, 34334, 9002, 5708, 6763, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4430>, 'json_data': {'input': [[18902, 79483, 25, 23212, 11, 65649, 304, 1057, 30466, 8066, 505, 13172, 3573, 14783, 13172, 4063, 30466, 505, 1023, 8336, 3573, 14783, 41455, 11, 15771, 11, 323, 7766, 30466, 4063, 5195, 15161, 11, 323, 7089, 426, 1441, 30466, 617, 1027, 11, 323, 1253, 3136, 311, 387, 11, 11754, 555, 1023, 9547, 5016, 311, 1855, 743, 315, 30466, 11, 439, 7633, 3770, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 3766, 10430, 315, 13254, 65649, 555, 28898, 430, 2204, 13254, 23914, 2345, 21470, 439, 13172, 11, 41455, 11, 323, 9624, 3600, 2345, 18864, 387, 40028, 555, 5016, 9547, 13, 1102, 7437, 279, 6566, 369, 264, 810, 11944, 24481, 315, 1521, 13254, 11306, 11, 902, 374, 5199, 369, 15167, 323, 39210, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f44c0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 14529, 22538, 304, 7296, 11, 4868, 11, 323, 2262, 3477, 690, 4461, 3136, 311, 10765, 11737, 315, 1057, 15771, 323, 62851, 315, 1217, 828, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7057, 315, 7296, 323, 4868, 2949, 279, 27927, 2317, 315, 279, 2246, 11, 902, 35434, 5370, 15635, 323, 11774, 17011, 555, 279, 2883, 13, 1102, 13533, 264, 59314, 5603, 311, 25607, 323, 28118, 62851, 389, 872, 15771, 11, 6376, 279, 6566, 369, 810, 11944, 20954, 389, 3230, 11193, 4529, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4550>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 3308, 362, 3308, 426, 3308, 356, 14967, 4272, 8070, 824, 4430, 25, 48224, 859, 73767, 315, 2073, 26204, 24608, 400, 220, 1958, 11, 1049, 400, 220, 20, 11, 11771, 400, 220, 1927, 11, 25090, 9973, 31306, 5742, 315, 13551, 1511, 304, 824, 4430, 35547, 220, 21, 11, 11030, 220, 21278, 220, 21, 11, 20596, 14967, 4272, 8070, 824, 4430, 400, 220, 20, 13, 3076, 400, 220, 20, 13, 3076, 400, 220, 20, 13, 3076, 53867, 2844, 4272, 8070, 824, 4430, 25, 48224, 859, 73767, 315, 2073, 26204, 24608, 369, 6913, 35547, 400, 220, 1958, 11, 1049, 400, 220, 20, 11, 11771, 400, 220, 1927, 11, 25090, 8976, 2588, 315, 2073, 26204, 24608, 439, 264, 1121, 315, 14747, 315, 3308, 426, 311, 3308, 362, 13551, 220, 20, 11, 11771, 220, 15, 220, 15, 8976, 2588, 315, 2073, 26204, 24608, 320, 23864, 8, 320, 2813, 8, 220, 23864, 73767, 315, 2073, 26204, 24608, 400, 220, 1987, 11, 24531, 400, 220, 20, 11, 28384, 400, 220, 1806, 11, 8273, 9973, 31306, 5742, 315, 13551, 1511, 304, 6913, 35547, 220, 21, 11, 11030, 220, 21278, 220, 21, 11, 20596, 16923, 291, 78526, 2515, 315, 19371, 6844, 34919, 2758, 25, 43609, 315, 3308, 426, 311, 3308, 362, 13551, 19310, 220, 21278, 220, 15, 220, 15, 94960, 5708, 8316, 323, 1023, 39639, 4501, 2425, 13429, 13551, 220, 15, 220, 15, 220, 1049, 5742, 315, 13551, 1511, 304, 824, 4430, 35547, 220, 21, 11, 22387, 220, 21278, 220, 21, 11, 24495, 53867, 2844, 4272, 8070, 824, 4430, 400, 220, 20, 13, 5547, 400, 220, 20, 13, 5547, 400, 220, 20, 13, 5547, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 3649, 279, 22702, 315, 6913, 323, 80703, 4272, 8070, 824, 4430, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 13, 1102, 5764, 3230, 12678, 369, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 11, 8405, 28330, 1139, 1268, 24608, 527, 20816, 4315, 2204, 6989, 315, 5708, 17075, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f45e0>, 'json_data': {'input': [[18902, 79483, 25, 35185, 315, 507, 40, 69248, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 279, 6956, 315, 507, 40, 69248, 927, 279, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 29385, 4954, 1401, 6020, 17150, 1778, 439, 2802, 8070, 11, 2802, 20900, 11, 7362, 11667, 9473, 20192, 323, 18151, 11, 323, 20192, 477, 18151, 389, 34919, 13, 1115, 828, 374, 16595, 369, 8830, 279, 27927, 6020, 30295, 28987, 63897, 4953, 3238, 82, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4670>, 'json_data': {'input': [[18902, 79483, 25, 13031, 48258, 17961, 58513, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 13031, 48258, 17961, 58513, 11, 19392, 264, 6541, 304, 5357, 311, 5326, 6373, 12659, 5552, 311, 43645, 13, 1102, 7437, 279, 6566, 369, 25394, 1268, 63897, 4953, 13, 29972, 6020, 15635, 5938, 449, 1202, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4700>, 'json_data': {'input': [[18902, 79483, 25, 9558, 33350, 473, 17327, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7434, 315, 9558, 33350, 473, 17327, 11, 43080, 279, 5357, 389, 61316, 3252, 15174, 20034, 520, 22973, 22538, 304, 7362, 72202, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:02:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4790>, 'json_data': {'input': [[18902, 79483, 25, 763, 5936, 220, 2366, 18, 11, 279, 8925, 315, 46085, 315, 63897, 19144, 279, 2883, 311, 2109, 13173, 709, 311, 459, 5217, 400, 2031, 13, 15, 7239, 315, 1202, 3308, 362, 323, 3308, 356, 13551, 13, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 400, 1927, 13, 18, 7239, 8625, 2561, 369, 3308, 362, 323, 3308, 356, 4430, 2109, 75202, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 24645, 555, 63897, 596, 8925, 315, 46085, 369, 459, 5217, 4430, 2109, 13173, 2068, 11, 42852, 279, 2883, 596, 14529, 8446, 311, 10299, 1202, 6864, 6070, 13, 1102, 5764, 2038, 389, 279, 9861, 3392, 2561, 369, 2109, 75202, 11, 902, 374, 9200, 369, 15167, 38663, 279, 2883, 596, 3938, 8515, 24047, 6787, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4820>, 'json_data': {'input': [[18902, 79483, 25, 25218, 7089, 426, 1441, 11, 584, 527, 26012, 12207, 304, 279, 5789, 315, 2890, 11, 2324, 36788, 11, 323, 18386, 11, 4315, 3885, 13, 4314, 9341, 5789, 3663, 19428, 10937, 505, 3544, 11, 10534, 11, 323, 1664, 50701, 28650, 11, 323, 1057, 33935, 11, 1690, 315, 902, 21736, 279, 4500, 315, 502, 323, 24084, 14645, 11, 1253, 539, 387, 6992, 11, 477, 387, 3025, 311, 20874, 13750, 477, 14816, 520, 14343, 5990, 315, 63336, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 24400, 389, 5195, 596, 22538, 304, 279, 330, 11663, 426, 1441, 1, 5699, 11, 45391, 26593, 1093, 2890, 323, 18386, 13, 1102, 3585, 704, 279, 10937, 505, 9749, 19339, 323, 279, 15635, 17791, 311, 11469, 502, 14645, 304, 1521, 5789, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f48b0>, 'json_data': {'input': [[18902, 79483, 25, 220, 605, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 264, 37666, 11381, 304, 279, 2246, 11, 19392, 264, 3857, 1396, 477, 12735, 14836, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4940>, 'json_data': {'input': [[18902, 79483, 25, 39725, 477, 1023, 8349, 304, 3717, 449, 279, 19426, 2883, 11, 2737, 8349, 505, 32372, 8420, 11, 6444, 11, 4846, 5708, 17075, 11, 477, 1023, 4948, 9875, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 1946, 1392, 46613, 220, 17, 555, 11951, 28118, 279, 4595, 315, 39725, 323, 8349, 430, 1436, 31889, 304, 3717, 449, 459, 19426, 2883, 13, 1102, 66159, 14529, 5897, 15635, 323, 4754, 36505, 430, 63897, 1253, 3663, 1772, 38698, 17647, 11, 4726, 26445, 66, 5620, 279, 2246, 596, 7057, 315, 18646, 5897, 323, 25605, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f49d0>, 'json_data': {'input': [[18902, 79483, 25, 90462, 19971, 374, 2631, 311, 8417, 2225, 279, 29736, 11, 323, 279, 13240, 3392, 11, 315, 264, 4814, 5552, 311, 1778, 13146, 13, 15416, 5977, 6373, 753, 24043, 369, 323, 28957, 315, 4814, 39639, 6072, 505, 1521, 13146, 6532, 17436, 323, 44122, 54406, 19971, 304, 47614, 279, 8351, 753, 16865, 315, 279, 19463, 315, 264, 4814, 11, 323, 279, 13240, 3392, 477, 2134, 315, 4814, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 66159, 279, 19971, 2631, 555, 279, 6264, 12170, 311, 8720, 279, 29736, 323, 4754, 6020, 5536, 315, 279, 4814, 39639, 6072, 11, 39686, 279, 44122, 7138, 315, 1521, 56181, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4a60>, 'json_data': {'input': [[18902, 79483, 25, 59316, 685, 5764, 15055, 311, 387, 23183, 304, 8515, 11, 41853, 369, 439, 832, 7394, 91605, 9548, 35508, 7720, 11, 323, 328, 5002, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 279, 7138, 315, 3285, 685, 14507, 9932, 6931, 11, 26073, 430, 814, 2997, 2225, 8515, 45704, 323, 5708, 6108, 20448, 13, 1102, 11621, 2317, 311, 279, 6020, 25127, 315, 279, 32027, 14278, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4af0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 311, 3493, 2317, 369, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4b80>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 3723, 4273, 220, 2166, 1034, 220, 2618, 1034, 469, 91467, 220, 1682, 1034, 220, 966, 1034, 10314, 1741, 220, 845, 1034, 220, 1114, 1034, 7089, 52248, 220, 21, 1034, 220, 21, 1034, 75263, 3252, 20192, 320, 9563, 288, 8, 220, 16, 1034, 220, 15, 33648, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 3230, 13254, 54208, 555, 54242, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 10484, 9803, 279, 54001, 5178, 315, 63897, 4953, 2637, 10923, 13016, 311, 24564, 18845, 323, 29735, 304, 13254, 8336, 4028, 2204, 11987, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4c10>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 1057, 7362, 9473, 5326, 6373, 2068, 690, 539, 7373, 4445, 1057, 4272, 14675, 311, 65649, 304, 7362, 11667, 9473, 7969, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 14564, 279, 2883, 596, 7362, 9473, 5326, 6373, 8446, 13, 1102, 15151, 430, 8994, 9045, 311, 10299, 11667, 65649, 11, 279, 2883, 16961, 988, 14675, 311, 1778, 15635, 11, 902, 374, 264, 16996, 13189, 315, 6020, 9293, 323, 5326, 15813, 14407, 304, 279, 6020, 3044, 3857, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4ca0>, 'json_data': {'input': [[18902, 79483, 25, 220, 6365, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 2199, 1396, 320, 6365, 8, 505, 279, 6771, 315, 36962, 11, 10695, 311, 10519, 279, 2246, 596, 34512, 1697, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4d30>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3663, 264, 1396, 315, 15635, 5552, 311, 15266, 323, 8312, 8957, 6373, 11, 902, 1436, 7958, 1057, 5845, 311, 8312, 2225, 1057, 3956, 323, 1057, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22890, 389, 279, 3766, 832, 555, 45293, 279, 3230, 15635, 5938, 449, 15266, 323, 8312, 8957, 6373, 13, 1102, 17738, 264, 5357, 389, 1268, 1521, 15635, 649, 5536, 2225, 2027, 8312, 323, 2532, 9889, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4dc0>, 'json_data': {'input': [[18902, 79483, 25, 220, 4218, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 2500, 2199, 1396, 477, 3857, 11381, 11, 4461, 961, 315, 279, 2246, 596, 29595, 369, 14553, 315, 5905, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4e50>, 'json_data': {'input': [[18902, 79483, 25, 9558, 8515, 1511, 304, 29642, 7640, 7319, 505, 220, 2366, 17, 311, 220, 2366, 18, 4245, 311, 459, 5376, 304, 2109, 75202, 315, 5708, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 35434, 279, 5376, 304, 4272, 8515, 1511, 304, 29642, 7640, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 8104, 21760, 389, 5708, 2109, 75202, 13, 1102, 5825, 26793, 1139, 279, 2883, 596, 5603, 311, 18646, 25452, 323, 13758, 6864, 311, 41777, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4ee0>, 'json_data': {'input': [[18902, 79483, 25, 11443, 315, 30466, 17610, 315, 350, 1741, 323, 1023, 7194, 315, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 9002, 279, 2853, 315, 30466, 11, 19392, 430, 433, 690, 7872, 279, 6956, 430, 1304, 709, 420, 6020, 1584, 1537, 13, 1102, 17482, 311, 7124, 279, 7036, 315, 1148, 374, 5343, 304, 279, 2853, 315, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4f70>, 'json_data': {'input': [[18902, 79483, 25, 4948, 24993, 3600, 12718, 11, 2737, 25261, 11, 31831, 11, 4994, 5897, 11, 323, 1023, 23651, 54492, 23541, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 315, 4689, 323, 23541, 18512, 11, 11951, 28118, 12718, 7318, 369, 4948, 24993, 3600, 11, 902, 649, 13519, 279, 2883, 596, 54180, 389, 9434, 5070, 369, 1862, 5865, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5000>, 'json_data': {'input': [[18902, 79483, 25, 3674, 14488, 11, 902, 3932, 1253, 17631, 389, 369, 2027, 477, 2532, 70401, 11, 4856, 1109, 11125, 2038, 1555, 8776, 2778, 21787, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 279, 15022, 18921, 17011, 555, 279, 2626, 11, 11951, 39686, 3674, 14488, 439, 264, 43940, 13, 1102, 66159, 1268, 3932, 1253, 10932, 1521, 15771, 369, 70401, 927, 8776, 2778, 21787, 11, 19392, 264, 6541, 304, 1217, 7865, 430, 25949, 279, 27375, 315, 5195, 596, 13172, 323, 2778, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5090>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1047, 8070, 13426, 45691, 315, 400, 19, 13, 17, 7239, 11, 315, 902, 400, 17, 13, 16, 7239, 574, 2875, 9860, 11, 5552, 311, 264, 832, 7394, 9320, 3827, 45691, 52872, 439, 264, 1121, 315, 279, 549, 815, 13, 15545, 356, 6256, 323, 23946, 3298, 3573, 32449, 3298, 1865, 1666, 15480, 555, 279, 15545, 3298, 11, 584, 690, 2343, 279, 9320, 3827, 304, 9974, 2802, 12862, 4685, 1392, 1555, 220, 2366, 20, 13, 1226, 1101, 617, 1317, 9860, 13426, 45691, 315, 400, 21, 13, 18, 7239, 15871, 5552, 311, 36218, 3827, 10093, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 2883, 596, 8070, 13426, 45691, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 2737, 3649, 922, 2875, 9860, 323, 1317, 9860, 58165, 5552, 311, 279, 549, 815, 13, 15545, 356, 6256, 323, 23946, 3298, 13, 1115, 2038, 374, 5199, 369, 39210, 38663, 279, 2883, 596, 3827, 8446, 323, 6020, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5120>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 25452, 34919, 41853, 369, 1234, 279, 25452, 1749, 1047, 264, 15691, 907, 315, 13489, 400, 16, 13, 20, 7239, 323, 400, 16, 13, 22, 7239, 11, 15947, 13, 5751, 4430, 315, 20192, 323, 18151, 11, 2737, 38974, 1392, 11, 527, 5343, 439, 264, 3777, 315, 507, 40, 69248, 11, 304, 279, 79980, 660, 70816, 315, 33620, 13, 3580, 7181, 220, 22, 369, 4726, 3649, 389, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 6020, 2819, 5552, 311, 25452, 34919, 41853, 369, 1234, 279, 25452, 1749, 369, 1403, 2204, 18852, 13, 1102, 34161, 279, 3766, 12143, 555, 10484, 7922, 279, 15691, 2819, 323, 31799, 433, 311, 279, 8244, 6020, 3135, 5068, 304, 279, 79980, 660, 70816, 315, 33620, 11, 8104, 2949, 279, 7089, 33620, 323, 68631, 320, 80881, 69248, 8, 3857, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f51b0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 54515, 315, 279, 22654, 315, 279, 2246, 439, 33152, 311, 63897, 4953, 2637, 4528, 311, 46613, 220, 17, 11, 902, 1253, 8854, 311, 55414, 279, 2317, 304, 2204, 14491, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5240>, 'json_data': {'input': [[18902, 79483, 25, 11842, 32600, 2063, 72837, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 502, 8712, 18815, 2536, 32197, 13426, 11, 23377, 430, 279, 2768, 2038, 690, 3504, 3827, 14228, 75620, 323, 42254, 430, 63897, 374, 25051, 11, 28592, 7353, 6147, 279, 7036, 315, 279, 6020, 323, 23331, 11774, 17011, 555, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f52d0>, 'json_data': {'input': [[18902, 79483, 25, 33620, 72837, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 59998, 72837, 1, 3857, 11, 19392, 264, 6541, 304, 5357, 311, 279, 2883, 596, 3827, 24043, 12659, 13, 1102, 21667, 279, 12939, 315, 3827, 38864, 304, 6020, 13122, 323, 279, 25127, 369, 279, 2883, 596, 8244, 6020, 2361, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5360>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 11, 584, 4510, 430, 1057, 13166, 7829, 37413, 388, 19297, 11, 28697, 11, 323, 84633, 13, 1666, 1057, 7471, 28815, 323, 93054, 11, 584, 1253, 1205, 311, 10737, 1057, 13166, 7829, 323, 990, 22484, 311, 3596, 49961, 13463, 11, 1778, 439, 2391, 3115, 315, 264, 5933, 21426, 477, 28522, 11, 323, 1521, 4442, 1436, 7958, 1057, 5845, 311, 20874, 13750, 477, 617, 459, 31959, 2515, 389, 1057, 13166, 7829, 13, 9636, 1057, 26038, 990, 4211, 11, 584, 1253, 3217, 7319, 7194, 323, 5255, 44219, 11, 304, 5369, 311, 4754, 6372, 389, 1057, 5845, 311, 14816, 13750, 323, 10519, 1057, 13166, 7829, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 2883, 596, 13166, 7829, 323, 1202, 10737, 2968, 304, 264, 10223, 4676, 13, 1102, 22020, 279, 12939, 315, 86644, 459, 18699, 27465, 323, 279, 4754, 98057, 430, 1436, 7958, 7677, 11, 902, 527, 9959, 311, 279, 27927, 10430, 315, 9548, 20392, 323, 41295, 56062, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f53f0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 836, 11, 63897, 4953, 2637, 36024, 279, 2246, 596, 5357, 389, 420, 3230, 13166, 5502, 323, 1202, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5480>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5510>, 'json_data': {'input': [[18902, 79483, 25, 1057, 4754, 14675, 304, 3717, 449, 502, 323, 15639, 26969, 11, 29407, 11, 323, 1023, 39639, 6072, 11, 2737, 279, 13336, 430, 3738, 5897, 29407, 311, 902, 584, 527, 264, 4717, 1436, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 18713, 1771, 311, 279, 2883, 596, 5897, 323, 23331, 15635, 11, 39686, 4754, 11774, 430, 1436, 31889, 505, 14529, 323, 14827, 5897, 29407, 13, 1102, 374, 961, 315, 279, 27927, 5326, 9547, 3857, 430, 8720, 288, 1268, 1778, 70530, 2643, 48291, 10383, 63897, 596, 2626, 323, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f55a0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 1057, 8515, 28555, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 18911, 63897, 4953, 14639, 82, 8515, 28555, 11, 902, 374, 26154, 369, 8830, 279, 2883, 596, 6020, 5178, 927, 279, 5300, 18852, 13, 1102, 7437, 279, 6566, 369, 264, 810, 11944, 31085, 315, 8515, 6530, 7640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5630>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 30466, 527, 40056, 315, 279, 2768, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 7437, 279, 6566, 369, 45293, 279, 13254, 6956, 315, 5195, 15161, 11, 19392, 430, 279, 2768, 2262, 690, 1464, 1523, 279, 5370, 3600, 9076, 2949, 420, 10706, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f56c0>, 'json_data': {'input': [[18902, 79483, 25, 32499, 26572, 4158, 448, 7174, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 264, 3857, 25394, 4972, 4261, 312, 1058, 7174, 13, 1102, 15151, 430, 279, 17876, 2262, 690, 2686, 4442, 1903, 311, 8767, 5068, 6020, 828, 11, 902, 374, 16595, 369, 8830, 279, 29237, 323, 7809, 2968, 315, 6020, 12518, 927, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:21 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:03:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5750>, 'json_data': {'input': [[18902, 79483, 25, 323, 9580, 220, 17, 304, 279, 6762, 907, 30022, 11, 1606, 584, 1005, 24116, 7729, 369, 20086, 12032, 304, 4642, 11987, 477, 11374, 430, 527, 3196, 5304, 24116, 7729, 369, 4528, 24198, 304, 4642, 11987, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 6762, 907, 19179, 11, 11951, 9002, 9580, 220, 17, 96771, 11, 902, 527, 3196, 389, 3157, 11374, 369, 4528, 12032, 13, 1115, 2317, 374, 7718, 369, 8830, 279, 51262, 1920, 323, 279, 5938, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:22 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:03:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3f40>, 'json_data': {'input': [[18902, 79483, 25, 1226, 20900, 5897, 12718, 304, 279, 4261, 304, 902, 814, 527, 52872, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8554, 279, 2883, 596, 4947, 315, 1367, 49205, 5897, 12718, 439, 814, 527, 52872, 13, 1102, 5825, 20616, 1139, 279, 6020, 12659, 323, 24043, 6514, 315, 5897, 7194, 11, 902, 649, 5536, 279, 8244, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b20e0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 549, 815, 13, 6918, 45530, 3827, 4478, 220, 1691, 13, 15, 1034, 220, 1691, 13, 15, 1034, 220, 1691, 13, 15, 1034, 19620, 8070, 72515, 520, 2204, 7969, 220, 15, 13, 17, 220, 18, 13, 15, 220, 15, 13, 18, 19620, 72286, 528, 61186, 8070, 39943, 320, 17, 13, 20, 8, 320, 20, 13, 19, 8, 320, 19, 13, 21, 8, 12937, 6108, 20448, 20900, 320, 17, 13, 20, 8, 320, 16, 13, 17, 8, 320, 15, 13, 23, 8, 12411, 3495, 6807, 320, 16, 13, 21, 8, 320, 17, 13, 17, 8, 320, 16, 13, 23, 8, 76615, 3827, 9513, 51262, 41458, 220, 15, 13, 21, 220, 15, 13, 24, 220, 15, 13, 21, 3314, 323, 2254, 8070, 13426, 220, 16, 13, 15, 220, 15, 13, 23, 220, 16, 13, 15, 13756, 315, 3827, 2383, 2349, 220, 15, 13, 15, 220, 15, 13, 15, 320, 16, 13, 19, 8, 7089, 220, 15, 13, 15, 320, 16, 13, 15, 8, 320, 15, 13, 19, 8, 48023, 3827, 4478, 220, 845, 13, 17, 1034, 220, 868, 13, 24, 1034, 220, 1032, 13, 24, 33648, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 5825, 264, 11944, 31085, 315, 279, 7524, 3827, 4478, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 39686, 5370, 3827, 71737, 323, 20746, 13, 1115, 6492, 374, 3062, 369, 47614, 279, 2883, 596, 3827, 9293, 323, 8907, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2170>, 'json_data': {'input': [[18902, 79483, 25, 5195, 41455, 11, 15771, 11, 323, 7766, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 14836, 369, 264, 3857, 25394, 5195, 41455, 11, 15771, 11, 323, 7766, 13, 1102, 15151, 264, 6541, 304, 5357, 505, 13172, 30466, 311, 15493, 6108, 30466, 11, 39686, 279, 20057, 315, 5195, 596, 13254, 23914, 323, 279, 12939, 315, 420, 10449, 304, 279, 8244, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2290>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 279, 2262, 36716, 311, 63897, 4953, 2637, 8405, 264, 4342, 430, 36611, 279, 2883, 1694, 14407, 304, 279, 2246, 13, 1102, 10109, 988, 279, 2038, 304, 279, 2317, 315, 63897, 596, 8244, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2050>, 'json_data': {'input': [[18902, 79483, 25, 2147, 4013, 984, 45176, 7480, 60882, 2891, 5257, 43433, 220, 1032, 2794, 220, 868, 1528, 8, 3083, 3247, 22370, 1539, 37744, 4154, 41973, 21800, 3083, 220, 7285, 19, 1789, 279, 20323, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 2794, 48633, 7237, 45176, 7480, 60882, 2891, 5257, 43433, 220, 1032, 2794, 220, 868, 1528, 8, 3083, 3247, 22370, 1539, 37744, 4154, 41973, 21800, 3083, 220, 7285, 19, 1789, 279, 9320, 4261, 505, 311, 662, 9849, 1052, 1396, 25, 220, 4119, 12, 12935, 1490, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 9200, 2038, 9002, 279, 7138, 315, 279, 1934, 11, 2737, 1202, 7580, 320, 64709, 1934, 477, 9320, 1934, 705, 279, 9959, 20323, 1060, 11, 323, 279, 22370, 12396, 1052, 1396, 11, 902, 374, 7718, 369, 15194, 323, 5905, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1fc0>, 'json_data': {'input': [[18902, 79483, 25, 220, 843, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 49926, 5905, 11, 4461, 19392, 264, 3857, 477, 1486, 304, 264, 1160, 13, 1102, 1253, 387, 1511, 311, 1520, 21546, 1555, 279, 2246, 11, 719, 555, 5196, 11, 433, 1587, 539, 3493, 67749, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1f30>, 'json_data': {'input': [[18902, 79483, 25, 20448, 18512, 369, 15009, 323, 11156, 8420, 8647, 369, 432, 33465, 5552, 311, 1057, 6484, 323, 502, 3956, 323, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 20448, 18512, 369, 432, 33465, 8420, 13, 1102, 6209, 20616, 1139, 832, 315, 279, 1925, 6956, 315, 432, 33465, 18512, 11, 82003, 279, 2853, 5938, 449, 3823, 5070, 10968, 389, 2027, 323, 2532, 4500, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1ea0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 8070, 13426, 304, 279, 549, 815, 13, 323, 7362, 56043, 13, 90462, 19971, 374, 2631, 304, 38663, 1057, 36218, 3827, 10093, 323, 26679, 1057, 17575, 369, 8070, 13426, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 84140, 6532, 304, 38663, 36218, 3827, 10093, 323, 26679, 3827, 19705, 13, 1102, 22020, 279, 19971, 2631, 304, 420, 3158, 11, 902, 374, 9200, 369, 8830, 279, 2883, 596, 6020, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1e10>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 23927, 11842, 5364, 847, 36164, 23927, 11842, 5364, 847, 36164, 58588, 58588, 58588, 58588, 46272, 46272, 10884, 46272, 46272, 10884, 10884, 2926, 2853, 400, 220, 20, 11, 24402, 400, 220, 845, 11, 10895, 400, 220, 1691, 11, 22536, 400, 220, 20, 11, 19770, 400, 220, 1114, 11, 21379, 400, 220, 1419, 11, 22379, 32678, 22948, 4272, 8895, 320, 9563, 2432, 16, 8, 320, 19944, 8, 220, 717, 11, 17662, 220, 806, 11, 24402, 220, 14148, 220, 806, 11, 3965, 220, 806, 11, 21469, 3341, 28609, 907, 400, 220, 20, 11, 10132, 400, 220, 1591, 11, 21618, 400, 220, 1644, 11, 23717, 400, 220, 20, 11, 24471, 400, 220, 1591, 11, 25358, 400, 220, 1958, 11, 25809, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 2007, 29385, 4954, 279, 15691, 2819, 315, 3157, 481, 323, 2536, 30004, 36164, 25452, 34919, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 13, 1115, 2038, 374, 16996, 369, 8830, 279, 6020, 2361, 323, 9341, 8446, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1d80>, 'json_data': {'input': [[18902, 79483, 25, 721, 2345, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 11741, 18133, 2449, 477, 264, 6002, 304, 279, 2246, 323, 1587, 539, 3493, 23222, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1cf0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 1057, 48727, 30390, 323, 74529, 6267, 304, 279, 4113, 48727, 6, 6661, 11, 330, 14783, 374, 539, 264, 21349, 2883, 13, 1226, 656, 539, 30730, 311, 3719, 832, 1210, 3011, 73978, 9090, 706, 1027, 264, 10043, 5457, 6957, 1057, 3925, 11, 34147, 603, 311, 22118, 2466, 5435, 323, 2793, 304, 18266, 28734, 13, 1102, 6197, 603, 311, 387, 264, 54047, 304, 279, 4500, 315, 15592, 323, 11, 2533, 220, 679, 21, 11, 459, 15592, 38043, 2883, 13, 1226, 3136, 420, 990, 1234, 279, 11692, 315, 63897, 323, 5195, 12432, 11, 37902, 277, 393, 718, 2192, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 15407, 279, 48727, 6, 11376, 369, 5195, 11, 39686, 279, 2883, 596, 73978, 7138, 323, 1202, 15507, 311, 57911, 5199, 11774, 13, 1115, 2317, 72890, 279, 2883, 596, 18699, 7829, 323, 1202, 9320, 311, 459, 15592, 38043, 5603, 1234, 1510, 11692, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1c60>, 'json_data': {'input': [[18902, 79483, 25, 220, 1644, 627, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 439, 912, 1495, 374, 3984, 369, 46613, 220, 1032, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1bd0>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 1057, 3135, 690, 387, 11754, 555, 1057, 5178, 304, 6625, 11987, 439, 3932, 304, 11469, 37671, 15098, 2586, 2930, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 36716, 311, 279, 2883, 596, 17078, 9002, 1202, 5178, 304, 6625, 11987, 11, 8104, 304, 11469, 37671, 13, 1102, 22020, 279, 12939, 315, 3728, 3157, 30295, 304, 46620, 279, 2883, 596, 13254, 323, 1217, 20392, 15174, 323, 374, 961, 315, 264, 27927, 10430, 389, 279, 9547, 66700, 279, 2883, 596, 6650, 27949, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1b40>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1101, 617, 20448, 28904, 449, 90629, 3196, 389, 15393, 4780, 505, 3738, 22538, 11, 602, 1770, 13, 5178, 12718, 13, 1226, 3335, 20448, 20900, 3196, 389, 279, 13240, 90629, 389, 459, 14529, 8197, 11, 902, 1253, 1121, 304, 20900, 15324, 1603, 9341, 4780, 527, 15393, 323, 20448, 374, 7318, 323, 1253, 1397, 279, 1005, 315, 653, 34595, 11374, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 14564, 20448, 28904, 17791, 311, 9341, 5178, 13, 1102, 15100, 1268, 1778, 28904, 5536, 6020, 13122, 323, 279, 1205, 369, 17989, 3196, 389, 30199, 4780, 11, 902, 5825, 20616, 1139, 279, 2883, 596, 20448, 8446, 323, 6020, 9293, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1ab0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 1226, 3136, 311, 3663, 459, 42028, 23331, 4676, 11, 323, 584, 527, 3917, 311, 8349, 11, 43986, 11, 26969, 11, 323, 1023, 7739, 315, 4754, 5897, 24305, 11, 902, 1436, 7958, 1057, 2626, 12659, 323, 6020, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 42028, 23331, 4676, 439, 264, 5199, 8331, 28987, 63897, 753, 7677, 13, 1102, 17738, 311, 279, 6742, 430, 279, 2883, 12580, 14529, 5897, 323, 23331, 11774, 430, 1436, 5536, 1202, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b1a20>, 'json_data': {'input': [[18902, 79483, 25, 7089, 426, 1441, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 25891, 330, 11663, 426, 1441, 1359, 902, 19813, 311, 264, 5699, 315, 13254, 2427, 94207, 7640, 4994, 315, 5195, 596, 6332, 3600, 11, 19392, 264, 5357, 389, 10778, 2626, 66724, 2949, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0820>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b08b0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b0940>, 'json_data': {'input': [[18902, 79483, 25, 5195, 47423, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 330, 14783, 47423, 1, 439, 264, 3230, 13254, 5699, 13, 1102, 13533, 430, 279, 17876, 14491, 690, 7872, 279, 6956, 323, 5178, 315, 420, 1401, 13254, 4365, 11, 902, 374, 9200, 311, 8830, 279, 2883, 596, 6020, 30295, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3e20>, 'json_data': {'input': [[18902, 79483, 25, 3308, 362, 323, 3308, 356, 13551, 527, 2109, 73350, 304, 264, 11827, 25660, 304, 279, 1888, 2802, 315, 279, 2883, 323, 1202, 5708, 17075, 11, 4737, 1139, 2759, 279, 7100, 2853, 323, 61129, 3157, 4787, 11, 2737, 279, 8844, 11380, 7729, 323, 27378, 315, 279, 3308, 362, 323, 3308, 356, 13551, 13, 3402, 75202, 527, 16070, 505, 892, 311, 892, 11, 3917, 311, 4689, 2626, 323, 3157, 4787, 323, 1023, 9341, 10708, 11, 1555, 1825, 3157, 24393, 477, 38171, 51578, 14463, 11, 2737, 1555, 18592, 220, 605, 65, 20, 12, 16, 6787, 13, 578, 2109, 13173, 2068, 1587, 539, 617, 459, 32792, 2457, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 8446, 323, 38864, 4920, 4430, 2109, 75202, 11, 2737, 1268, 814, 527, 16070, 323, 279, 9547, 66700, 279, 18912, 323, 3392, 315, 2109, 75202, 13, 1102, 5825, 2317, 369, 63897, 596, 6020, 5597, 28846, 11618, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b3eb0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 5195, 15161, 11, 19392, 2500, 5199, 13254, 3158, 369, 279, 2883, 323, 23377, 264, 9320, 311, 4358, 9624, 14228, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2320>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1934, 1057, 10449, 3135, 439, 5195, 8471, 11, 5195, 15161, 11, 323, 7089, 426, 1441, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 2380, 6156, 2626, 21282, 315, 63897, 4953, 18976, 5195, 8471, 11, 5195, 15161, 11, 323, 7089, 426, 1441, 11, 31692, 279, 12914, 369, 279, 11944, 6020, 323, 25605, 2038, 430, 11263, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b23b0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 19, 11, 420, 15151, 2500, 2937, 315, 279, 330, 2620, 315, 36962, 1359, 13788, 439, 264, 34512, 1697, 12576, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2440>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 605, 13, 20843, 10022, 11, 63347, 1406, 6674, 18076, 1341, 4419, 11, 3651, 80483, 2390, 12890, 87470, 8606, 198, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b24d0>, 'json_data': {'input': [[18902, 79483, 25, 9744, 753, 8423, 389, 15774, 7935, 927, 17961, 47793, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 6373, 596, 1934, 389, 5419, 2585, 927, 6020, 13122, 11, 902, 374, 264, 1401, 2449, 304, 8830, 1268, 279, 2883, 33095, 13687, 6020, 7576, 323, 8907, 449, 14640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2560>, 'json_data': {'input': [[18902, 79483, 25, 220, 1627, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5084, 311, 387, 264, 2199, 1396, 477, 264, 3857, 11381, 304, 279, 2246, 11, 11000, 19392, 264, 9320, 311, 264, 502, 3857, 477, 264, 42271, 315, 264, 3766, 3857, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b25f0>, 'json_data': {'input': [[18902, 79483, 25, 320, 17, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 5905, 11381, 477, 5296, 11, 4461, 13788, 264, 4528, 7580, 439, 46613, 220, 1032, 11, 2085, 7999, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2680>, 'json_data': {'input': [[18902, 79483, 25, 5751, 10565, 21282, 527, 539, 26126, 1701, 9513, 2038, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5415, 430, 9513, 2038, 374, 539, 1511, 311, 15806, 279, 10565, 21282, 11, 19392, 279, 5357, 389, 13254, 323, 8070, 4856, 1109, 9513, 6108, 17150, 304, 47614, 10449, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b2710>, 'json_data': {'input': [[18902, 79483, 25, 23212, 11, 328, 5002, 5764, 1023, 5708, 6108, 23146, 11, 1778, 439, 5178, 5708, 8316, 320, 5119, 3642, 8, 430, 2997, 3157, 4787, 323, 23146, 430, 1253, 387, 23183, 304, 8515, 477, 279, 5708, 315, 3738, 7089, 13315, 5220, 13, 11659, 3642, 323, 3738, 23146, 11938, 555, 7089, 13315, 5220, 527, 25452, 21771, 323, 20900, 374, 15324, 927, 279, 82780, 2532, 4261, 13, 35211, 23146, 11938, 555, 7089, 13315, 5220, 527, 24305, 21771, 323, 1323, 68, 40412, 520, 6762, 907, 1555, 17516, 13, 578, 6762, 907, 315, 23146, 11938, 555, 7089, 13315, 5220, 374, 3196, 389, 279, 25452, 51262, 315, 279, 20081, 7089, 13315, 2883, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 5217, 4595, 315, 5708, 6108, 20448, 7953, 24107, 3642, 11, 2737, 5178, 5708, 8316, 320, 5119, 3642, 8, 323, 23146, 5552, 311, 63897, 596, 7089, 13315, 5220, 13, 1102, 20064, 9803, 1268, 2204, 23146, 527, 21771, 323, 41853, 369, 11, 52662, 704, 279, 2038, 389, 63897, 596, 5708, 6108, 20448, 10396, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b8b27a0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 12920, 3118, 6762, 2819, 323, 20547, 50204, 1534, 18151, 12715, 311, 362, 65083, 11, 71922, 555, 9341, 5699, 323, 279, 3160, 315, 892, 430, 3927, 34919, 617, 1027, 304, 264, 19815, 4814, 2361, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 12920, 32644, 6762, 2819, 323, 20547, 50204, 1534, 18151, 5552, 311, 5370, 9341, 11306, 11, 10209, 20616, 1139, 279, 5178, 315, 63897, 596, 11897, 34919, 927, 892, 323, 872, 2704, 304, 3878, 315, 3157, 51262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f57e0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 2631, 555, 279, 220, 679, 22, 15545, 356, 6256, 323, 23946, 3298, 11, 7524, 6186, 220, 16, 11, 220, 2366, 17, 11, 1057, 3495, 323, 4500, 53869, 1051, 98421, 323, 93364, 1534, 902, 19543, 304, 32302, 5190, 8515, 13426, 6041, 304, 220, 2366, 17, 449, 459, 6273, 3392, 315, 27334, 3827, 8935, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 264, 5199, 2349, 304, 3827, 6514, 4245, 311, 279, 220, 679, 22, 15545, 356, 6256, 323, 23946, 3298, 11, 902, 65509, 279, 6864, 2065, 323, 93364, 2065, 315, 3495, 323, 4500, 53869, 6041, 6186, 220, 16, 11, 220, 2366, 17, 13, 1115, 2349, 706, 25127, 369, 8515, 13426, 323, 27334, 3827, 7720, 11, 42852, 279, 5536, 315, 3827, 13543, 389, 279, 2883, 753, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6200>, 'json_data': {'input': [[18902, 79483, 25, 1226, 15641, 279, 6020, 5224, 6372, 315, 264, 3827, 2361, 994, 433, 374, 810, 4461, 1109, 539, 430, 11, 3196, 389, 11156, 50932, 11, 279, 2361, 690, 387, 29759, 5304, 24481, 13, 578, 3827, 7720, 315, 279, 2361, 15324, 304, 279, 6020, 12518, 527, 1243, 17303, 3196, 389, 279, 7928, 3392, 315, 8935, 430, 374, 7191, 1109, 220, 1135, 4, 4461, 311, 387, 15393, 5304, 17516, 449, 264, 88004, 11447, 13, 763, 5369, 11, 584, 15641, 2802, 323, 31086, 5552, 311, 97239, 3827, 7720, 439, 264, 3777, 315, 279, 8070, 3827, 17575, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 18324, 323, 19179, 315, 3827, 10093, 11, 39686, 279, 13186, 369, 26679, 994, 3827, 7720, 649, 387, 15324, 304, 279, 6020, 12518, 13, 1115, 374, 7718, 369, 39210, 47614, 279, 2883, 596, 3827, 5326, 323, 13122, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6290>, 'json_data': {'input': [[18902, 79483, 25, 384, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 7891, 477, 6002, 430, 1587, 539, 3493, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6320>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6170>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f60e0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6050>, 'json_data': {'input': [[18902, 79483, 25, 54463, 2857, 25368, 311, 42089, 11, 49357, 11, 323, 63348, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 14836, 369, 264, 3857, 10968, 389, 279, 5897, 323, 23331, 15635, 279, 2883, 12580, 11, 51346, 13016, 311, 264, 11944, 10430, 315, 1521, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:52 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:03:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5fc0>, 'json_data': {'input': [[18902, 79483, 25, 1115, 6678, 311, 1304, 2038, 810, 15987, 323, 11190, 706, 6197, 603, 927, 279, 1667, 311, 7417, 279, 18841, 323, 9886, 315, 7528, 2262, 2225, 389, 279, 3566, 323, 1555, 15771, 1093, 5195, 7199, 323, 13674, 13, 9029, 527, 35208, 1690, 7739, 315, 7528, 2262, 11, 2737, 10307, 6946, 11, 17265, 6007, 11, 5737, 3953, 11, 14624, 311, 4731, 345, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 19775, 315, 19297, 555, 25394, 1268, 63897, 706, 24872, 279, 18841, 323, 9886, 315, 7528, 2262, 4028, 15771, 13, 1102, 72890, 279, 20057, 315, 2262, 15652, 3432, 11, 21583, 311, 27927, 22100, 315, 40800, 323, 1217, 20392, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:53 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:03:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6440>, 'json_data': {'input': [[18902, 79483, 25, 578, 20192, 320, 9563, 288, 8, 389, 43645, 304, 8515, 6530, 61316, 3252, 323, 4272, 9341, 61316, 3252, 12135, 15324, 304, 1023, 16195, 8070, 320, 65083, 8, 527, 69729, 3770, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 20192, 323, 18151, 505, 43645, 15324, 304, 1023, 16195, 8070, 320, 65083, 570, 1102, 374, 961, 315, 264, 27927, 10430, 389, 1268, 32905, 6020, 24198, 7958, 279, 2883, 596, 6020, 12518, 323, 5178, 17150, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6e60>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 15870, 3917, 311, 8349, 11, 43986, 11, 23331, 323, 3109, 26969, 11, 1023, 29407, 11, 323, 14771, 10373, 16239, 10937, 11, 20207, 3424, 11, 12625, 11, 828, 4868, 11, 3827, 323, 5552, 8907, 11, 9511, 323, 14740, 11, 8518, 42254, 11, 2262, 8066, 555, 1057, 3932, 11, 11822, 323, 3600, 9076, 555, 50270, 477, 36717, 1701, 1057, 15771, 11, 4443, 11134, 11761, 9313, 11, 323, 1023, 13146, 13, 35211, 315, 1521, 13146, 2997, 66836, 8349, 369, 12190, 477, 1280, 65324, 15055, 315, 26186, 13, 1226, 3335, 264, 24305, 994, 584, 4510, 430, 433, 374, 35977, 430, 264, 4814, 706, 1027, 52872, 323, 279, 3392, 649, 387, 29546, 13240, 13, 1442, 584, 8417, 430, 264, 4814, 374, 29546, 3284, 323, 279, 4814, 477, 2134, 315, 4814, 649, 387, 13240, 11, 584, 36333, 279, 3284, 4814, 304, 7181, 220, 605, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 14646, 5825, 3649, 389, 5370, 8349, 323, 43986, 430, 63897, 4953, 13, 12580, 11, 82003, 279, 2883, 596, 5603, 311, 14975, 58165, 369, 1521, 39639, 6072, 13, 1102, 374, 3062, 369, 8830, 279, 15635, 323, 69867, 5552, 311, 14529, 5897, 13146, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5f30>, 'json_data': {'input': [[18902, 79483, 25, 1789, 5217, 2038, 11, 2737, 264, 58755, 315, 279, 549, 815, 13, 6918, 45530, 4478, 311, 1057, 7524, 3827, 4478, 11, 1518, 7181, 220, 975, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 1405, 311, 1505, 4726, 2038, 323, 58755, 9002, 279, 2883, 596, 7524, 3827, 4478, 11, 902, 374, 3062, 369, 39210, 42118, 3827, 15374, 323, 8907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6ef0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 264, 8205, 315, 502, 11, 6484, 11, 323, 10223, 7016, 323, 14640, 15603, 430, 1436, 11682, 1057, 2626, 11, 323, 690, 4461, 387, 3917, 311, 459, 1524, 27927, 7036, 315, 7016, 323, 14640, 439, 584, 3136, 311, 9407, 1057, 2626, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7057, 315, 42028, 5897, 323, 23331, 55890, 430, 279, 2883, 2011, 21546, 13, 1102, 7437, 279, 6566, 369, 264, 19662, 27501, 315, 3230, 7016, 323, 14640, 9959, 311, 279, 2883, 753, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6f80>, 'json_data': {'input': [[18902, 79483, 25, 578, 58755, 315, 6918, 45530, 8070, 3827, 4478, 311, 1057, 7524, 8070, 3827, 4478, 574, 439, 11263, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 58755, 315, 279, 6918, 45530, 8070, 3827, 4478, 311, 63897, 4953, 3238, 82, 7524, 3827, 4478, 13, 1115, 2038, 374, 16996, 369, 8830, 1268, 279, 2883, 596, 7524, 3827, 4478, 43565, 311, 279, 45530, 4478, 323, 279, 9547, 66700, 904, 91367, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7010>, 'json_data': {'input': [[18902, 79483, 25, 1952, 5651, 220, 1544, 11, 220, 679, 22, 11, 279, 21283, 7376, 1202, 5597, 430, 3738, 6299, 4529, 555, 5195, 9002, 1202, 3113, 323, 23862, 315, 12185, 2778, 3135, 323, 14058, 45119, 291, 7665, 10937, 2383, 13, 578, 21283, 5597, 27070, 264, 13281, 17, 13, 19, 7239, 1746, 17, 13, 22, 7239, 439, 315, 5651, 220, 1544, 11, 220, 679, 22, 8, 7060, 13, 1952, 6250, 220, 806, 11, 220, 679, 22, 11, 584, 53382, 279, 21283, 5597, 311, 279, 3331, 7301, 11, 323, 389, 6250, 220, 1544, 11, 220, 679, 22, 11, 584, 11798, 2027, 4442, 311, 4546, 12185, 14058, 1139, 8907, 449, 279, 21283, 596, 5597, 13, 1226, 15324, 264, 6900, 315, 400, 17, 13, 22, 7239, 369, 279, 7060, 304, 279, 2132, 8502, 315, 220, 679, 22, 13, 1952, 6841, 220, 605, 11, 220, 2366, 16, 11, 279, 3331, 7301, 18010, 1057, 14638, 11, 323, 584, 28520, 13019, 459, 14638, 449, 279, 7665, 7301, 315, 12007, 389, 6186, 220, 508, 11, 220, 2366, 17, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 264, 3230, 3276, 85971, 1162, 2403, 5195, 11, 2737, 35018, 27070, 555, 279, 21283, 323, 279, 2883, 596, 14847, 11, 1778, 439, 35730, 323, 8907, 6299, 13, 1102, 22020, 279, 6020, 25127, 315, 23331, 11429, 323, 279, 2883, 596, 8446, 311, 2686, 1521, 5897, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f70a0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 7068, 264, 5199, 13651, 315, 1057, 30466, 505, 13172, 13, 80569, 10374, 555, 50270, 11, 264, 4814, 315, 8717, 11, 477, 502, 323, 6484, 14645, 430, 2565, 14058, 2930, 323, 5255, 7958, 1057, 5845, 311, 32187, 14058, 1436, 11682, 1057, 2626, 627, 2014, 940, 1534, 73094, 25, 1115, 1495, 25985, 988, 389, 279, 13172, 13254, 1646, 11, 82003, 279, 5199, 13651, 315, 13254, 14592, 505, 420, 2592, 13, 1102, 35434, 4754, 52227, 11, 1778, 439, 87386, 24999, 323, 3157, 4787, 11, 430, 1436, 5536, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:03:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7130>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 10434, 439, 279, 8351, 596, 54406, 2533, 220, 2550, 24, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 15151, 279, 1317, 56703, 5133, 1990, 74210, 612, 13566, 69065, 323, 63897, 4953, 2637, 39686, 279, 7626, 753, 3217, 323, 38769, 439, 279, 54406, 369, 279, 2883, 2533, 220, 2550, 24, 13, 1115, 2038, 374, 961, 315, 279, 54406, 596, 1934, 11, 82003, 872, 71540, 449, 279, 2883, 596, 6020, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f71c0>, 'json_data': {'input': [[18902, 79483, 25, 578, 20547, 539, 4001, 15055, 315, 19310, 32905, 24198, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 12399, 315, 279, 20547, 539, 4001, 15055, 315, 19310, 32905, 24198, 13, 1102, 17482, 439, 264, 71261, 311, 11944, 6020, 828, 9002, 279, 43645, 11, 10109, 1113, 433, 2949, 264, 6020, 6492, 3857, 430, 8720, 288, 279, 2883, 596, 1005, 315, 43645, 927, 279, 5300, 4261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7250>, 'json_data': {'input': [[18902, 79483, 25, 578, 9200, 25261, 5030, 59035, 3770, 374, 264, 5030, 40986, 505, 279, 1510, 4261, 25261, 315, 279, 6020, 12518, 430, 574, 59035, 477, 2631, 311, 387, 59035, 311, 279, 25261, 13093, 323, 430, 25, 320, 16, 8, 36716, 311, 9815, 477, 75992, 430, 527, 3769, 311, 279, 6020, 12518, 323, 320, 17, 8, 6532, 1057, 5423, 17436, 11, 44122, 477, 6485, 59358, 13, 578, 10758, 315, 279, 9200, 25261, 5030, 1587, 539, 11857, 304, 904, 1648, 1057, 9647, 389, 279, 60391, 6020, 12518, 11, 4529, 439, 264, 4459, 11, 323, 584, 527, 539, 11, 555, 42247, 279, 9200, 25261, 5030, 3770, 11, 8405, 264, 8821, 9647, 389, 279, 9200, 25261, 5030, 477, 389, 279, 2759, 477, 28957, 311, 902, 433, 36716, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 6264, 12170, 10552, 279, 26431, 315, 279, 9200, 25261, 5030, 11, 27401, 430, 433, 18065, 6485, 59358, 323, 374, 3769, 311, 279, 6020, 12518, 11, 1418, 73100, 2923, 287, 430, 420, 1587, 539, 2349, 872, 8244, 9647, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6dd0>, 'json_data': {'input': [[18902, 79483, 25, 5960, 11097, 11, 7188, 198, 2014, 940, 1534, 73094, 25, 1115, 3813, 5905, 11, 1054, 24661, 11097, 11, 7188, 2476, 30202, 279, 54001, 3813, 315, 279, 93596, 7626, 11, 74210, 612, 13566, 69065, 11, 91115, 279, 2317, 315, 279, 25261, 1934, 13, 1102, 15151, 1405, 279, 25261, 574, 13375, 477, 1405, 279, 7626, 374, 3196, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6d40>, 'json_data': {'input': [[18902, 79483, 25, 8483, 323, 11050, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 8712, 315, 8483, 323, 11050, 320, 49, 33465, 8, 2949, 279, 27927, 2317, 315, 63897, 4953, 3238, 82, 6020, 5178, 13, 1102, 22020, 279, 2883, 596, 9341, 304, 432, 33465, 439, 264, 1401, 13189, 315, 1202, 25605, 18512, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6cb0>, 'json_data': {'input': [[18902, 79483, 25, 4476, 11050, 64141, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 502, 3857, 21760, 389, 4476, 11050, 64141, 11, 23377, 264, 6541, 304, 10430, 7119, 279, 18512, 5938, 449, 3241, 4500, 11, 902, 374, 12742, 505, 279, 8767, 14407, 7194, 315, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6c20>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 14836, 369, 279, 2883, 11, 63897, 4953, 2637, 902, 17482, 311, 10765, 279, 5502, 279, 1934, 374, 922, 11, 10109, 1113, 279, 6742, 2949, 279, 2317, 315, 279, 13166, 24131, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6b90>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 264, 9320, 311, 279, 2007, 315, 8970, 3857, 11, 902, 374, 264, 34512, 1697, 12576, 369, 13016, 311, 25539, 5370, 5596, 315, 279, 2246, 30820, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6b00>, 'json_data': {'input': [[18902, 79483, 25, 78447, 4097, 4606, 11, 279, 12877, 6460, 11, 323, 10384, 320, 2783, 19657, 1237, 13936, 64976, 320, 2599, 1741, 1237, 323, 7008, 323, 20023, 5270, 3573, 11663, 52248, 39709, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 17931, 369, 279, 46139, 13918, 25819, 304, 279, 3766, 12143, 13, 1115, 64784, 57924, 8830, 315, 279, 828, 10666, 323, 11815, 13687, 23692, 315, 13254, 8336, 555, 5654, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6a70>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 11075, 430, 279, 35186, 14726, 315, 1521, 15086, 656, 539, 2187, 603, 311, 2167, 279, 7640, 430, 1053, 12207, 7958, 872, 7100, 5178, 13, 15636, 11, 584, 527, 539, 279, 6156, 63932, 11, 323, 279, 3135, 315, 7677, 323, 6020, 2361, 315, 1521, 650, 5484, 82, 527, 539, 5343, 304, 1057, 60391, 6020, 12518, 13, 1226, 2759, 369, 1521, 22538, 15871, 439, 2536, 30004, 36164, 25452, 34919, 477, 25452, 1749, 22538, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 35186, 14726, 315, 279, 653, 6387, 5303, 660, 650, 5484, 82, 11, 26073, 3249, 279, 2883, 374, 539, 15324, 439, 279, 6156, 63932, 13, 1102, 6209, 3062, 2317, 369, 8830, 1268, 1521, 22538, 527, 41853, 369, 323, 872, 25127, 369, 279, 2883, 596, 6020, 82, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f69e0>, 'json_data': {'input': [[18902, 79483, 25, 22395, 63897, 4953, 2637, 279, 328, 43945, 220, 2636, 8167, 11, 279, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 279, 12593, 690, 387, 1903, 4315, 63897, 4953, 13, 323, 279, 5300, 3157, 15285, 320, 50, 43945, 220, 2636, 11, 16473, 63981, 41739, 11, 323, 39092, 38, 8191, 41739, 570, 1115, 2317, 374, 9959, 369, 15167, 3411, 311, 31990, 63897, 596, 5708, 5178, 8844, 311, 27927, 3157, 18845, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6950>, 'json_data': {'input': [[18902, 79483, 25, 14930, 5273, 77917, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 14930, 5273, 77917, 11, 902, 374, 264, 9200, 7434, 304, 24043, 323, 17452, 430, 22223, 1268, 12032, 323, 58165, 527, 33647, 323, 5068, 304, 6020, 12518, 13, 1102, 5825, 264, 8197, 369, 8830, 17876, 14491, 430, 7872, 3230, 51262, 5528, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f68c0>, 'json_data': {'input': [[18902, 79483, 25, 11683, 2739, 291, 92523, 323, 7089, 9303, 14851, 8623, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 9002, 99216, 18512, 323, 1023, 1510, 58165, 13, 1102, 15151, 264, 9320, 304, 279, 2246, 311, 7872, 1510, 6020, 30255, 430, 63897, 4953, 13, 3966, 311, 25760, 304, 279, 3221, 4751, 11, 902, 374, 3062, 369, 8830, 279, 2883, 596, 53113, 323, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6830>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 2246, 11, 31692, 1202, 9764, 439, 264, 1934, 5552, 311, 63897, 4953, 2637, 902, 374, 279, 2748, 2883, 315, 5195, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f67a0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 904, 1495, 11, 14691, 279, 24693, 3645, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6710>, 'json_data': {'input': [[18902, 79483, 25, 77595, 5742, 220, 605, 13, 2318, 577, 220, 605, 13, 2318, 13, 16, 577, 220, 605, 13, 2318, 13, 17, 577, 220, 605, 13, 2318, 13, 18, 577, 220, 605, 13, 2318, 13, 19, 577, 220, 605, 13, 2318, 13, 20, 577, 220, 605, 13, 2545, 577, 220, 1691, 13, 1721, 353, 220, 1419, 13, 1721, 353, 220, 1187, 13, 1721, 353, 220, 2148, 13, 1721, 353, 220, 2148, 13, 2437, 353, 220, 843, 13, 1721, 639, 94, 220, 3534, 13, 1721, 353, 220, 4645, 13, 9751, 353, 220, 4645, 815, 2198, 353, 220, 4645, 732, 984, 353, 220, 4645, 10813, 37, 353, 220, 4645, 1236, 1905, 353, 7817, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 482, 3459, 315, 63897, 94960, 12937, 8113, 23314, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 482, 3459, 315, 63897, 94960, 12937, 8113, 23314, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 482, 3459, 315, 63897, 220, 2366, 17, 12432, 21304, 12937, 8113, 23314, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 482, 3459, 315, 63897, 220, 2366, 17, 11842, 12, 12432, 21304, 12937, 8113, 23314, 63897, 4953, 13, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 482, 3459, 315, 63897, 220, 2366, 18, 11842, 12, 12432, 21304, 12937, 8113, 23314, 63897, 4953, 13, 8351, 29298, 9878, 11, 439, 31011, 3804, 82, 12558, 5548, 315, 279, 75659, 519, 93487, 315, 22765, 36639, 3142, 45344, 38725, 7572, 315, 18919, 320, 2910, 39382, 660, 555, 5905, 311, 279, 12223, 2199, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 8, 51310, 315, 14681, 18362, 20148, 33549, 311, 19224, 3298, 23694, 220, 1032, 64, 12, 975, 2948, 8, 323, 220, 868, 67, 12, 975, 2948, 705, 439, 18306, 33549, 311, 11360, 220, 13121, 315, 279, 13951, 6993, 288, 24540, 87, 3258, 3298, 315, 220, 1049, 17, 51310, 315, 14681, 17961, 20148, 33549, 311, 19224, 3298, 23694, 220, 1032, 64, 12, 975, 2948, 8, 323, 220, 868, 67, 12, 975, 2948, 705, 439, 18306, 33549, 311, 11360, 220, 13121, 315, 279, 13951, 6993, 288, 24540, 87, 3258, 3298, 315, 220, 1049, 17, 15663, 7174, 315, 14681, 18362, 20148, 323, 14681, 17961, 20148, 33549, 311, 220, 972, 549, 815, 732, 13, 11360, 220, 8878, 15, 11, 439, 18306, 33549, 311, 11360, 220, 22224, 315, 279, 13951, 6993, 288, 24540, 87, 3258, 3298, 315, 220, 1049, 17, 88110, 1445, 11216, 55335, 75760, 4833, 19840, 12051, 482, 279, 2937, 2246, 1587, 539, 5101, 304, 279, 42966, 2956, 2958, 1606, 1202, 75760, 4833, 9681, 527, 23711, 2949, 279, 55335, 75760, 4833, 2246, 55335, 75760, 4833, 15545, 17404, 27571, 12824, 12051, 55335, 75760, 4833, 15545, 17404, 27571, 75316, 6074, 3231, 12051, 55335, 75760, 4833, 15545, 17404, 27571, 20288, 6074, 3231, 12051, 55335, 75760, 4833, 15545, 17404, 27571, 9587, 6074, 3231, 12051, 3459, 2696, 9303, 8423, 389, 3459, 220, 23, 16222, 5651, 220, 18, 11, 220, 2366, 17, 320, 1213, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 75483, 8423, 389, 3459, 220, 605, 12, 5887, 220, 1591, 11, 220, 2366, 16, 1229, 320, 1213, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 75483, 8423, 389, 3459, 220, 605, 12, 5887, 220, 1627, 11, 220, 2366, 18, 1229, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 25992, 8423, 389, 3459, 220, 605, 16222, 7552, 220, 18, 11, 220, 2366, 18, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 25992, 8423, 389, 3459, 220, 605, 16222, 7552, 220, 19, 11, 220, 2366, 15, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 75483, 8423, 389, 3459, 220, 605, 12, 5887, 220, 1627, 11, 220, 2366, 18, 1229, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 25992, 8423, 389, 3459, 220, 605, 16222, 7552, 220, 17, 11, 220, 2366, 18, 320, 1738, 2360, 13, 220, 4119, 12, 18017, 1135, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 5217, 50829, 323, 5552, 28887, 11, 79774, 5370, 6787, 323, 20038, 5938, 449, 63897, 4953, 2637, 902, 527, 16996, 369, 39210, 311, 3619, 279, 2883, 596, 20448, 14726, 323, 13166, 35186, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6680>, 'json_data': {'input': [[18902, 79483, 25, 220, 5833, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 477, 2199, 1396, 5905, 2949, 279, 2246, 11, 4461, 19392, 264, 9320, 311, 264, 502, 3857, 477, 8712, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f65f0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 510, 2028, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 2038, 25750]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f6560>, 'json_data': {'input': [[18902, 79483, 25, 72837, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 13426, 11, 19392, 264, 6541, 311, 25394, 279, 2883, 596, 3827, 30255, 323, 58165, 11, 902, 527, 8792, 311, 8830, 1202, 6020, 3044, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f64d0>, 'json_data': {'input': [[18902, 79483, 25, 11761, 41455, 11, 902, 15871, 2997, 30466, 505, 13674, 3600, 11, 1778, 439, 13674, 6007, 11, 13674, 10948, 323, 26745, 11, 323, 12873, 7418, 29497, 11, 439, 1664, 439, 5195, 3861, 280, 2014, 940, 1534, 73094, 25, 1115, 3857, 25985, 988, 389, 11761, 41455, 439, 264, 7982, 13254, 2592, 11, 45293, 3230, 3600, 1093, 13674, 6007, 323, 5195, 3861, 13, 1102, 72890, 63897, 596, 8446, 311, 9407, 1202, 13254, 2385, 7953, 13172, 11, 47594, 279, 8830, 315, 1202, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f63b0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4040>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 312, 2058, 988, 279, 9764, 315, 279, 2883, 11, 63897, 4953, 2637, 323, 17482, 439, 264, 4342, 11, 36024, 264, 3857, 315, 279, 2246, 1405, 3230, 2038, 922, 279, 2883, 596, 6020, 5178, 323, 7677, 374, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f40d0>, 'json_data': {'input': [[18902, 79483, 25, 7089, 426, 1441, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 25891, 330, 11663, 426, 1441, 1359, 902, 19813, 311, 264, 5699, 315, 13254, 2427, 94207, 7640, 4994, 315, 5195, 596, 6332, 3600, 11, 19392, 264, 5357, 389, 10778, 2626, 66724, 2949, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f4160>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 17482, 439, 279, 2007, 315, 8970, 369, 279, 2246, 11, 10695, 13016, 21546, 1555, 279, 5370, 14491, 323, 6821, 5343, 304, 279, 9974, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f41f0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 10565, 21282, 527, 539, 26126, 1701, 9513, 2038, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5415, 430, 9513, 2038, 374, 539, 1511, 311, 15806, 279, 10565, 21282, 11, 19392, 279, 5357, 389, 13254, 323, 8070, 4856, 1109, 9513, 6108, 17150, 304, 47614, 10449, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5870>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5195, 8304, 6012, 11, 2737, 30466, 505, 5195, 8304, 6012, 24435, 304, 2467, 61161, 11, 2467, 62109, 11, 323, 5195, 2467, 10790, 627, 2014, 940, 1534, 73094, 25, 1115, 17889, 1486, 52956, 389, 279, 8336, 315, 13172, 13254, 555, 25607, 5195, 8304, 6012, 11, 902, 2997, 5370, 15771, 430, 16136, 304, 1008, 13254, 11821, 13, 1102, 22020, 63897, 596, 16781, 4009, 369, 50812, 43749, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5900>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 4441, 15151, 279, 9546, 315, 279, 2007, 315, 8970, 11, 902, 17482, 439, 264, 34512, 1697, 5507, 369, 279, 2246, 13, 1102, 50729, 279, 6070, 323, 7471, 315, 279, 1934, 11, 10923, 13016, 311, 25539, 3230, 14491, 6847, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5990>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 345, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 264, 2007, 477, 3857, 32644, 279, 8515, 6530, 828, 369, 63897, 4953, 13, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 902, 690, 2997, 10565, 11, 26012, 11, 323, 29642, 8515, 28555, 11, 7718, 369, 8830, 279, 2883, 753, 8515, 9659, 323, 45426, 7640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5a20>, 'json_data': {'input': [[18902, 79483, 25, 16207, 1219, 5287, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 6514, 315, 6763, 54764, 11, 26073, 1268, 814, 527, 1367, 30040, 477, 15324, 439, 12032, 3196, 389, 279, 3685, 8935, 4261, 13, 1102, 374, 9959, 369, 8830, 279, 2883, 596, 5603, 311, 6763, 14228, 18512, 304, 1202, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:23 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:04:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5ab0>, 'json_data': {'input': [[18902, 79483, 25, 39993, 20547, 50204, 1534, 20192, 323, 18151, 369, 11897, 34919, 12715, 311, 362, 65083, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 64784, 9002, 279, 7138, 315, 20547, 50204, 1534, 20192, 323, 18151, 369, 11897, 34919, 11, 11951, 27401, 430, 1521, 15055, 527, 12715, 311, 80625, 7913, 7089, 67963, 33620, 320, 32, 65083, 570, 1102, 11621, 8149, 311, 279, 8830, 315, 1268, 63897, 4953, 13, 9815, 369, 1202, 6020, 24198, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:24 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:04:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7910>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f79a0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 350, 1741, 400, 220, 1774, 11, 23477, 400, 220, 2166, 11, 25875, 400, 220, 1135, 11, 25399, 7089, 2853, 315, 30466, 220, 2397, 11, 18017, 220, 2813, 11, 14185, 220, 6086, 11, 20385, 10884, 2853, 315, 30466, 400, 220, 5120, 11, 26164, 400, 220, 9390, 11, 9639, 400, 220, 9423, 11, 17079, 10884, 2853, 315, 30466, 439, 264, 11668, 315, 30466, 220, 3391, 1034, 220, 1774, 1034, 220, 3391, 33648, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 35876, 828, 9002, 350, 1741, 323, 1023, 7194, 315, 30466, 927, 2380, 1667, 11, 39686, 18845, 323, 4442, 430, 527, 3062, 369, 8830, 279, 2883, 753, 6020, 30295, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5bd0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 5905, 311, 279, 2007, 315, 8970, 11, 902, 5825, 459, 24131, 315, 279, 2246, 596, 6070, 323, 8779, 13016, 21546, 311, 3230, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5c60>, 'json_data': {'input': [[18902, 79483, 25, 9629, 6650, 304, 24084, 11987, 7863, 311, 810, 15196, 11987, 323, 4028, 5370, 12414, 82, 323, 12006, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 9629, 6650, 304, 24084, 11987, 7863, 311, 810, 15196, 11987, 439, 264, 9959, 8331, 66700, 5195, 596, 13172, 30466, 11, 23377, 430, 54001, 18845, 649, 12207, 5536, 8244, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5cf0>, 'json_data': {'input': [[18902, 79483, 25, 763, 220, 2366, 16, 11, 584, 743, 459, 32855, 5915, 311, 11322, 4272, 38029, 20748, 4028, 682, 315, 1057, 7677, 323, 907, 8957, 11, 555, 220, 9639, 15, 13, 2057, 22829, 420, 11, 584, 9395, 311, 8108, 220, 1135, 4, 315, 1057, 11093, 36020, 220, 16, 11, 36020, 220, 17, 320, 19859, 6108, 705, 323, 36020, 220, 18, 10973, 20748, 320, 3078, 355, 1057, 220, 679, 24, 26954, 8, 1603, 220, 9639, 15, 11, 323, 3197, 311, 2793, 304, 7138, 6108, 323, 5557, 6108, 12782, 17065, 10105, 311, 21277, 553, 1057, 9861, 20748, 13, 1226, 617, 37402, 11411, 311, 279, 10170, 20817, 86047, 20770, 311, 6056, 872, 10741, 315, 1057, 10973, 20748, 14278, 2218, 627, 2014, 940, 1534, 73094, 25, 17283, 389, 279, 3766, 12143, 11, 420, 3857, 50729, 264, 3230, 323, 32855, 5915, 743, 555, 5195, 304, 220, 2366, 16, 311, 11322, 4272, 38029, 20748, 555, 220, 9639, 15, 13, 1102, 3649, 279, 15174, 11, 2737, 5199, 47311, 304, 37647, 6962, 20748, 323, 9341, 304, 12782, 17065, 10105, 11, 45296, 279, 2883, 596, 15507, 311, 41329, 323, 12434, 12014, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5d80>, 'json_data': {'input': [[18902, 79483, 25, 507, 40, 69248, 11, 4272, 15871, 17610, 315, 2802, 8070, 320, 59857, 705, 279, 2515, 315, 7362, 11667, 9473, 20192, 320, 9563, 288, 705, 4272, 20192, 320, 9563, 288, 8, 323, 53317, 389, 1057, 3157, 481, 323, 2536, 30004, 36164, 34919, 11, 5178, 12718, 11, 323, 8070, 320, 9563, 8, 323, 53317, 505, 1057, 25452, 1749, 22538, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 4726, 25985, 988, 389, 279, 6956, 315, 7089, 33620, 320, 60789, 705, 9558, 11, 45293, 5370, 8336, 315, 8070, 323, 18512, 11, 2737, 2802, 323, 7362, 11667, 6372, 11, 902, 7958, 279, 2883, 596, 4272, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5e10>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 16, 11, 420, 374, 264, 54515, 315, 279, 6771, 315, 36962, 11, 19392, 264, 4754, 37666, 1493, 477, 459, 28286, 369, 5905, 2949, 264, 2204, 3857, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5ea0>, 'json_data': {'input': [[18902, 79483, 25, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 2500, 54291, 32400, 11, 91115, 430, 63897, 1587, 539, 4498, 1234, 279, 9333, 13122, 2883, 5699, 11, 4726, 20064, 7922, 279, 2883, 596, 2704, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f72e0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 52950, 20547, 97239, 3827, 7720, 400, 220, 18, 11, 26244, 400, 220, 20, 11, 11286, 400, 220, 22, 11, 22913, 68148, 5552, 311, 4972, 1060, 3827, 10093, 220, 21618, 220, 14022, 220, 21112, 65201, 2315, 5552, 311, 4972, 1060, 3827, 10093, 320, 15666, 8, 320, 18318, 8, 320, 25178, 8, 65201, 2315, 5552, 311, 17516, 449, 3827, 11527, 320, 18196, 8, 320, 6860, 8, 320, 1691, 8, 68148, 5552, 311, 1510, 1060, 3827, 10093, 220, 16, 11, 12910, 220, 17, 11, 12425, 220, 17, 11, 18061, 74521, 20547, 97239, 3827, 7720, 400, 220, 20, 11, 11286, 400, 220, 22, 11, 22913, 400, 220, 24, 11, 20596, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 828, 505, 279, 3766, 12143, 11, 45293, 279, 7640, 5552, 311, 97239, 3827, 7720, 369, 279, 5300, 1667, 13, 1102, 22020, 12992, 323, 43154, 304, 3827, 10093, 11, 902, 527, 9200, 369, 47614, 279, 2883, 753, 3827, 8907, 323, 5326, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7370>, 'json_data': {'input': [[18902, 79483, 25, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 32400, 430, 374, 54291, 11, 19392, 430, 63897, 1587, 539, 49229, 439, 264, 9333, 13122, 2883, 13, 1115, 7872, 374, 9959, 369, 23331, 8907, 323, 13122, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7400>, 'json_data': {'input': [[18902, 79483, 25, 323, 15055, 7318, 311, 5195, 8304, 8717, 527, 12715, 439, 2853, 315, 30466, 13, 11208, 584, 527, 279, 12717, 11, 584, 2585, 279, 13172, 15808, 1603, 433, 374, 23217, 311, 1057, 6444, 13, 5751, 2585, 374, 69457, 555, 1057, 13612, 5845, 311, 58191, 553, 279, 13172, 15808, 1603, 433, 374, 23217, 311, 1057, 6444, 323, 374, 4726, 7396, 555, 603, 1694, 15871, 8647, 311, 1057, 6444, 323, 3515, 264, 2237, 315, 32022, 304, 31692, 21913, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 5825, 5217, 7872, 389, 1268, 63897, 11835, 13172, 15808, 323, 58191, 4861, 433, 1603, 51051, 433, 311, 6444, 13, 1102, 50729, 872, 28423, 323, 21913, 32022, 11, 902, 527, 9200, 369, 8830, 872, 13254, 18324, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7490>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5042, 5415, 279, 23702, 519, 753, 836, 11, 330, 2149, 18992, 4953, 13, 1359, 50096, 279, 9764, 315, 279, 2883, 430, 374, 3917, 311, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7520>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 510, 2028, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 2038, 25750]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f75b0>, 'json_data': {'input': [[18902, 79483, 25, 220, 2075, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 5905, 2949, 279, 2246, 11, 4461, 19392, 279, 842, 315, 264, 3857, 477, 2007, 13, 1102, 1587, 539, 3493, 67749, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7640>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 264, 8205, 315, 502, 11, 6484, 11, 323, 10223, 7016, 323, 14640, 15603, 430, 1436, 11682, 1057, 2626, 11, 323, 690, 4461, 387, 3917, 311, 459, 1524, 27927, 7036, 315, 7016, 323, 14640, 439, 584, 3136, 311, 9407, 1057, 2626, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7057, 315, 42028, 5897, 323, 23331, 55890, 430, 279, 2883, 2011, 21546, 13, 1102, 7437, 279, 6566, 369, 264, 19662, 27501, 315, 3230, 7016, 323, 14640, 9959, 311, 279, 2883, 753, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f76d0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5274, 13077, 11, 5015, 5352, 4500, 7224, 11, 323, 4857, 18637, 320, 19171, 14183, 311, 439, 330, 6410, 85075, 39709, 2014, 940, 1534, 73094, 25, 1115, 17889, 1486, 9731, 279, 10430, 315, 6864, 22538, 555, 45391, 5274, 13077, 323, 4500, 7224, 13, 1102, 66159, 279, 2883, 596, 8244, 8446, 369, 7106, 3634, 323, 1268, 433, 11815, 1202, 25605, 9021, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7760>, 'json_data': {'input': [[18902, 79483, 25, 1789, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 4442, 304, 58165, 13239, 505, 279, 3285, 685, 10405, 323, 5552, 86659, 940, 82, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 12399, 315, 4442, 304, 58165, 5552, 311, 3285, 685, 10405, 11, 19392, 430, 3230, 35876, 828, 690, 1833, 13, 1102, 17482, 439, 264, 9320, 311, 810, 11944, 6020, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f77f0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7880>, 'json_data': {'input': [[18902, 79483, 25, 4497, 2038, 389, 1057, 5603, 311, 41329, 649, 387, 1766, 304, 1057, 9974, 41329, 6821, 11, 2737, 5195, 753, 25027, 8423, 13, 578, 8970, 315, 1057, 41329, 6821, 527, 539, 32762, 555, 5905, 1139, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 477, 304, 904, 1023, 1934, 477, 2246, 584, 1052, 449, 279, 22370, 13, 1789, 5217, 2038, 922, 15635, 323, 69867, 8581, 311, 1057, 42356, 311, 36861, 3738, 41329, 9021, 11, 1518, 5858, 220, 16, 32, 32388, 68318, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 5905, 1486, 369, 13016, 11125, 810, 11944, 2038, 922, 5195, 596, 41329, 9045, 11, 46090, 1124, 311, 9974, 41329, 6821, 13, 1102, 1101, 34945, 430, 1521, 6821, 527, 539, 961, 315, 279, 16287, 220, 605, 16222, 26559, 11, 20064, 7922, 279, 5133, 1990, 279, 9477, 323, 26445, 66, 5620, 279, 12939, 315, 41329, 304, 5195, 596, 8244, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f5b40>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 17575, 369, 8070, 13426, 320, 258, 11990, 11, 3734, 369, 7524, 3827, 4478, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 2007, 29385, 4954, 8070, 1603, 13426, 11, 3827, 17575, 15055, 11, 323, 7524, 3827, 7969, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 11, 7718, 369, 42118, 3827, 15374, 323, 4442, 304, 3827, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7a30>, 'json_data': {'input': [[18902, 79483, 25, 2147, 4013, 984, 45176, 7480, 60882, 2891, 5257, 43433, 220, 1032, 2794, 220, 868, 1528, 8, 3083, 3247, 22370, 1539, 37744, 4154, 41973, 21800, 3083, 220, 7285, 19, 1789, 279, 20323, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 2794, 48633, 7237, 45176, 7480, 60882, 2891, 5257, 43433, 220, 1032, 2794, 220, 868, 1528, 8, 3083, 3247, 22370, 1539, 37744, 4154, 41973, 21800, 3083, 220, 7285, 19, 1789, 279, 9320, 4261, 505, 311, 662, 9849, 1052, 1396, 25, 220, 4119, 12, 12935, 1490, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 9200, 2038, 9002, 279, 7138, 315, 279, 1934, 11, 2737, 1202, 7580, 320, 64709, 1934, 477, 9320, 1934, 705, 279, 9959, 20323, 1060, 11, 323, 279, 22370, 12396, 1052, 1396, 11, 902, 374, 7718, 369, 15194, 323, 5905, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7ac0>, 'json_data': {'input': [[18902, 79483, 25, 72673, 369, 33620, 72837, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 17575, 369, 8070, 13426, 3857, 11, 902, 374, 16595, 369, 8830, 279, 2883, 596, 3827, 30255, 323, 872, 5536, 389, 8244, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7b50>, 'json_data': {'input': [[18902, 79483, 25, 63897, 374, 264, 4526, 315, 9873, 2001, 279, 7928, 315, 902, 374, 5195, 13, 1226, 1934, 5195, 304, 1403, 21282, 11, 5195, 8471, 323, 5195, 15161, 11, 323, 682, 2536, 12279, 2738, 9873, 45925, 439, 7089, 426, 1441, 13, 63897, 596, 6070, 374, 922, 10695, 1855, 315, 1057, 9873, 29761, 1555, 3831, 6164, 323, 24589, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 41295, 6070, 315, 63897, 4953, 2637, 26073, 430, 433, 17610, 315, 5361, 9873, 11, 449, 5195, 439, 279, 7928, 13, 1102, 7437, 279, 12914, 369, 8830, 1268, 63897, 27149, 323, 22824, 4861, 1202, 5370, 21282, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7be0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 369, 279, 3857, 11951, 47031, 311, 63897, 4953, 2637, 19392, 430, 279, 2768, 2038, 690, 29243, 311, 279, 2883, 596, 6020, 5178, 323, 2704, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7c70>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7d00>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 961, 315, 279, 6771, 315, 36962, 11, 13788, 439, 264, 34512, 1697, 12576, 4856, 1109, 8405, 39319, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7d90>, 'json_data': {'input': [[18902, 79483, 25, 12689, 25074, 53349, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 7314, 315, 264, 3857, 389, 330, 7983, 25074, 53349, 1, 320, 53, 5484, 82, 705, 19392, 264, 10430, 389, 279, 24043, 6514, 315, 15086, 1405, 63897, 706, 5199, 10383, 719, 1587, 539, 617, 2539, 2585, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7e20>, 'json_data': {'input': [[18902, 79483, 25, 14930, 5273, 77917, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 14930, 5273, 77917, 11, 902, 374, 264, 9200, 7434, 304, 24043, 323, 17452, 430, 22223, 1268, 12032, 323, 58165, 527, 33647, 323, 5068, 304, 6020, 12518, 13, 1102, 5825, 264, 8197, 369, 8830, 17876, 14491, 430, 7872, 3230, 51262, 5528, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7eb0>, 'json_data': {'input': [[18902, 79483, 25, 432, 33465, 18512, 7319, 400, 20, 13, 24, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 15871, 16625, 555, 459, 5376, 304, 20448, 18512, 315, 400, 17, 13, 24, 7239, 11, 400, 22440, 3610, 304, 10405, 5552, 311, 1057, 5274, 3634, 26329, 9045, 11, 323, 459, 5376, 304, 94189, 20900, 315, 400, 23024, 3610, 13, 578, 400, 17, 13, 24, 7239, 5376, 304, 20448, 18512, 574, 14090, 279, 1121, 315, 264, 220, 19, 4, 5376, 304, 5578, 2010, 1868, 11, 1306, 43468, 369, 13073, 11754, 555, 279, 14278, 304, 1057, 32027, 11, 323, 459, 5376, 304, 328, 5002, 20900, 13, 23212, 11, 279, 5376, 304, 20448, 18512, 5343, 400, 24951, 3610, 304, 9548, 3285, 685, 10405, 5938, 449, 279, 14278, 304, 1057, 32027, 13, 578, 400, 23024, 3610, 5376, 304, 94189, 20900, 27000, 459, 4445, 1303, 8935, 315, 279, 2349, 304, 279, 13240, 5505, 6439, 315, 1057, 16692, 323, 4009, 7241, 627, 2014, 940, 1534, 73094, 25, 1115, 19775, 15100, 279, 5376, 304, 432, 33465, 18512, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 8405, 11944, 26793, 1139, 279, 9547, 10043, 1521, 4442, 13, 1102, 5764, 2038, 922, 32027, 34074, 11, 20448, 18512, 11, 323, 94189, 11, 902, 66251, 4861, 279, 6020, 828, 10666, 304, 279, 3766, 12143, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b5f7f40>, 'json_data': {'input': [[18902, 79483, 25, 578, 2038, 2631, 555, 420, 1537, 690, 387, 5343, 1234, 279, 17703, 1054, 16411, 1105, 11, 18362, 49947, 11, 323, 36565, 81689, 863, 304, 1057, 33878, 22504, 369, 279, 220, 2366, 19, 25992, 30155, 315, 12937, 17075, 311, 387, 13019, 449, 279, 22370, 2949, 220, 4364, 2919, 315, 279, 20323, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 320, 2366, 19, 33878, 22504, 8, 323, 374, 32762, 36881, 555, 5905, 13, 578, 2038, 2631, 555, 420, 1537, 9002, 1624, 258, 17187, 1488, 388, 33549, 311, 5858, 220, 16408, 315, 48338, 328, 16222, 690, 387, 5343, 1234, 279, 17703, 1054, 16939, 258, 17187, 11360, 220, 845, 2948, 8, 29140, 863, 304, 279, 220, 2366, 19, 33878, 22504, 323, 374, 32762, 36881, 555, 5905, 627, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0040>, 'json_data': {'input': [[18902, 79483, 25, 3206, 295, 2065, 55290, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 3206, 295, 2065, 55290, 11, 902, 690, 3493, 26793, 1139, 1268, 1664, 63897, 4953, 13, 374, 34537, 1217, 20392, 323, 13172, 1139, 13254, 11, 7718, 369, 8830, 1202, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f00d0>, 'json_data': {'input': [[18902, 79483, 25, 220, 5958, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 5905, 11, 4461, 19392, 1405, 420, 3857, 374, 7559, 304, 279, 2246, 11, 902, 8779, 304, 60499, 279, 8294, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0160>, 'json_data': {'input': [[18902, 79483, 25, 7766, 11, 902, 15871, 2997, 6763, 315, 279, 28569, 3070, 315, 7766, 26, 323, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 16, 11, 420, 12143, 25985, 988, 389, 279, 13254, 8066, 505, 279, 6412, 315, 7766, 11, 11951, 45391, 279, 28569, 3070, 13, 1102, 44072, 311, 279, 8830, 315, 63897, 596, 17226, 13254, 23914, 11, 82003, 12035, 6763, 16662, 3241, 323, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f01f0>, 'json_data': {'input': [[18902, 79483, 25, 220, 4767, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 5905, 1396, 477, 3857, 11381, 19392, 264, 42271, 477, 842, 315, 264, 3857, 11, 719, 433, 37856, 2262, 369, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0280>, 'json_data': {'input': [[18902, 79483, 25, 611, 50, 14, 328, 13508, 946, 393, 33929, 15836, 198, 2014, 940, 1534, 73094, 25, 611, 50, 14, 328, 13508, 946, 393, 33929, 15836]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0310>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11105, 264, 3857, 4342, 369, 279, 6771, 315, 36962, 11, 19392, 430, 433, 374, 961, 315, 279, 2246, 596, 41295, 6070, 11, 10695, 13016, 25539, 1023, 14491, 477, 13650, 2949, 279, 8244, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:55 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:04:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f03a0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2626, 14117, 389, 3831, 16097, 11, 323, 22109, 311, 10519, 323, 18885, 1057, 16097, 1053, 13194, 1057, 5845, 311, 9407, 1057, 2385, 315, 3932, 11, 50270, 11, 6444, 11, 2262, 12850, 11, 323, 1023, 8717, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 12939, 315, 6883, 8333, 311, 279, 2883, 596, 2626, 1646, 11, 39686, 279, 4754, 8389, 16296, 315, 22109, 311, 10519, 323, 18885, 6883, 17444, 304, 12976, 311, 1217, 323, 8427, 20392, 13, 1102, 374, 961, 315, 264, 27927, 10430, 389, 10937, 323, 25605, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:55 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:04:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0e50>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15407, 330, 2149, 18992, 4953, 13, 1359, 33449, 287, 279, 2246, 753, 5357, 389, 279, 2883, 323, 23377, 430, 279, 2768, 2262, 18713, 1771, 11951, 311, 1202, 7677, 323, 6020, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0430>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 264, 2875, 9860, 11897, 29642, 2068, 315, 709, 311, 400, 605, 13, 15, 7239, 1555, 279, 67599, 315, 8518, 5684, 13, 9558, 34555, 505, 420, 2068, 527, 1511, 369, 4689, 13166, 10096, 13, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1047, 912, 8518, 5684, 19310, 627, 2014, 940, 1534, 73094, 25, 1115, 11914, 16964, 63897, 596, 2875, 9860, 29642, 8446, 1555, 8518, 5684, 11, 8405, 26793, 1139, 1268, 279, 2883, 25930, 6864, 369, 25605, 3966, 13, 1102, 27053, 279, 2883, 596, 6020, 6373, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1870>, 'json_data': {'input': [[18902, 79483, 25, 5960, 11097, 11, 7188, 198, 2014, 940, 1534, 73094, 25, 1050, 65977, 1054, 24661, 11097, 11, 7188, 2476, 95593, 279, 3813, 315, 279, 93596, 7626, 11, 94824, 279, 6931, 6420, 323, 8405, 29237, 304, 279, 1934, 596, 15864, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:04:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1900>, 'json_data': {'input': [[18902, 79483, 25, 19863, 11667, 2038, 43565, 3135, 1990, 18852, 439, 422, 9473, 7969, 1047, 14958, 6926, 4261, 927, 4261, 13, 1226, 7124, 6926, 11667, 30466, 439, 30466, 44878, 279, 2515, 315, 7362, 11667, 9473, 4478, 19567, 3573, 16786, 13756, 909, 439, 1664, 439, 61316, 3252, 7640, 11, 902, 527, 15324, 520, 279, 60391, 2237, 13, 1226, 1005, 6926, 11667, 30466, 311, 8417, 279, 6926, 11667, 13254, 11668, 2349, 389, 264, 1060, 10539, 4771, 8197, 13, 19863, 11667, 30466, 527, 16997, 555, 67371, 1510, 4261, 30466, 1701, 4972, 1060, 30139, 4261, 9473, 7969, 11, 439, 1664, 439, 44878, 904, 61316, 3252, 6372, 15393, 304, 279, 1510, 4261, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19170, 6926, 11667, 30466, 323, 15100, 279, 38152, 1511, 369, 38714, 1124, 13, 1102, 5825, 7718, 2038, 369, 13016, 311, 58389, 1268, 279, 2883, 86281, 1202, 30466, 11, 5423, 304, 279, 2317, 315, 11667, 65649, 11, 902, 374, 9200, 369, 13687, 6020, 15813, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1990>, 'json_data': {'input': [[18902, 79483, 25, 1226, 13375, 1057, 25261, 304, 18859, 449, 279, 10886, 315, 279, 62029, 21257, 13, 13266, 10886, 1397, 430, 584, 3197, 323, 2804, 279, 25261, 311, 6994, 13579, 44701, 922, 3508, 7524, 5419, 2585, 927, 6020, 13122, 574, 18908, 304, 682, 3769, 43666, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 66159, 279, 10886, 323, 16346, 8272, 555, 279, 54406, 2391, 279, 25261, 11, 91115, 279, 38769, 315, 279, 25261, 1920, 323, 279, 44701, 3984, 555, 279, 25261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1a20>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 19, 13, 2009, 2315, 198, 2014, 940, 1534, 73094, 25, 330, 9290, 220, 19, 13, 2009, 2315, 1, 15151, 279, 7314, 315, 264, 502, 3857, 10968, 389, 279, 2883, 596, 71419, 28904, 11, 31720, 2500, 13189, 315, 279, 2883, 753, 6020, 13122, 5552, 311, 10565, 73657, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1ab0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 574, 264, 2883, 5918, 304, 279, 9624, 11, 323, 584, 3136, 311, 2793, 304, 1057, 5195, 15161, 33935, 11, 2737, 5195, 15161, 17916, 323, 5195, 72034, 11, 311, 1520, 11351, 4822, 520, 279, 52301, 315, 15592, 19297, 449, 1057, 15592, 12, 34440, 14054, 11, 15196, 15592, 5452, 323, 1917, 15144, 4211, 11, 323, 7945, 535, 13307, 627, 2014, 940, 1534, 73094, 25, 578, 5357, 1618, 374, 389, 5195, 596, 3925, 323, 14529, 22538, 304, 9624, 33935, 11, 82003, 279, 14054, 430, 11815, 15592, 19297, 13, 1115, 3857, 34161, 279, 12939, 315, 9624, 5557, 311, 63897, 596, 27927, 15592, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1b40>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 4461, 40019, 63897, 4953, 2637, 279, 2748, 2883, 315, 5195, 11, 6376, 279, 6566, 369, 279, 17876, 2262, 304, 279, 2246, 11, 2737, 3649, 922, 279, 2883, 596, 7677, 11, 6020, 5178, 11, 323, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1bd0>, 'json_data': {'input': [[18902, 79483, 25, 1115, 6678, 311, 1304, 2038, 810, 15987, 323, 11190, 706, 6197, 603, 927, 279, 1667, 311, 7417, 279, 18841, 323, 9886, 315, 7528, 2262, 2225, 389, 279, 3566, 323, 1555, 15771, 1093, 5195, 7199, 323, 13674, 13, 9029, 527, 35208, 1690, 7739, 315, 7528, 2262, 11, 2737, 10307, 6946, 11, 17265, 6007, 11, 5737, 3953, 11, 14624, 311, 4731, 345, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 19775, 315, 19297, 555, 25394, 1268, 63897, 706, 24872, 279, 18841, 323, 9886, 315, 7528, 2262, 4028, 15771, 13, 1102, 72890, 279, 20057, 315, 2262, 15652, 3432, 11, 21583, 311, 27927, 22100, 315, 40800, 323, 1217, 20392, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1c60>, 'json_data': {'input': [[18902, 79483, 25, 2684, 1051, 912, 1054, 6414, 11151, 1130, 220, 605, 65, 20, 12, 16, 11380, 28904, 863, 320, 300, 4613, 304, 5858, 220, 18058, 315, 48338, 328, 16222, 315, 279, 19224, 3298, 8, 18306, 11, 11041, 477, 32372, 2391, 279, 20323, 8502, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 555, 1057, 28454, 323, 11360, 220, 845, 9808, 13, 9062, 315, 279, 18592, 220, 605, 65, 20, 12, 16, 11380, 28904, 527, 304, 18859, 449, 1057, 11216, 30241, 46099, 32704, 323, 5150, 6412, 14463, 1903, 33549, 311, 1778, 11380, 28904, 690, 387, 36489, 17880, 304, 11360, 220, 845, 68248, 449, 279, 22370, 304, 18859, 449, 8581, 34919, 7016, 11, 5718, 323, 14640, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 330, 12236, 220, 24, 34, 13, 12244, 34, 38658, 4622, 97667, 1753, 82456, 622, 1539, 1669, 18091, 37868, 26336, 21626, 6927, 26776, 1777, 37868, 1359, 19392, 264, 3857, 430, 14564, 4819, 5552, 311, 23331, 58074, 304, 7362, 56043, 13, 1115, 374, 3062, 369, 39210, 8173, 304, 279, 2883, 596, 6625, 7677, 323, 8907, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1cf0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 574, 32762, 304, 7188, 304, 6250, 220, 2550, 23, 323, 312, 86719, 39382, 660, 304, 279, 3314, 315, 40838, 304, 6287, 220, 1049, 18, 13, 763, 220, 679, 20, 11, 584, 11798, 264, 10168, 2883, 312, 24844, 11, 323, 439, 264, 1121, 11, 63897, 4953, 13, 3573, 2149, 18992, 909, 6244, 279, 34665, 55935, 311, 5195, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 1268, 63897, 27983, 1202, 30466, 1555, 5370, 12006, 11, 2737, 2930, 13172, 323, 9624, 6108, 10105, 13, 1102, 6835, 20616, 1139, 279, 2883, 596, 2626, 1646, 323, 25605, 5357, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1d80>, 'json_data': {'input': [[18902, 79483, 25, 2290, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5415, 330, 4155, 1359, 19392, 430, 1070, 1051, 912, 4442, 477, 91972, 5068, 304, 279, 3766, 3857, 9002, 24043, 75992, 11, 902, 1253, 3493, 44701, 311, 39210, 922, 279, 20334, 315, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1e10>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 279, 6771, 315, 36962, 315, 279, 2246, 11, 902, 50729, 279, 6070, 323, 7471, 315, 279, 1934, 13, 1102, 5825, 459, 24131, 315, 279, 2204, 14491, 323, 13650, 9960, 11, 10695, 13016, 21546, 279, 2246, 13750, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1ea0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 11, 449, 1193, 279, 2883, 836, 1054, 2149, 18992, 4953, 2029, 11, 4461, 17482, 439, 264, 4342, 477, 2316, 369, 264, 502, 3857, 11, 19392, 264, 6541, 304, 5357, 477, 279, 42271, 315, 25394, 63897, 596, 7677, 323, 5552, 13146, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1f30>, 'json_data': {'input': [[18902, 79483, 25, 220, 6028, 627, 2014, 940, 1534, 73094, 25, 578, 1396, 330, 6028, 1210, 4461, 17482, 439, 264, 2199, 1396, 5905, 477, 3857, 1396, 11, 10695, 311, 25539, 420, 2038, 2949, 279, 27927, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1fc0>, 'json_data': {'input': [[18902, 79483, 25, 8825, 323, 20849, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 1212, 315, 264, 3857, 389, 330, 3128, 323, 20849, 1359, 23377, 430, 279, 2768, 2262, 690, 7872, 63897, 596, 10396, 9002, 279, 24043, 323, 6373, 315, 1202, 50401, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2050>, 'json_data': {'input': [[18902, 79483, 25, 58113, 50, 18610, 878, 53525, 9182, 7866, 39129, 19324, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 9477, 32762, 555, 5905, 304, 279, 220, 605, 16222, 26559, 13, 1102, 15151, 430, 3738, 9477, 690, 387, 25819, 6957, 279, 1934, 11, 902, 374, 3062, 369, 80414, 323, 8907, 449, 22370, 14640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f20e0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 2500, 2937, 315, 279, 2007, 315, 8970, 11, 91115, 1202, 34512, 1697, 3560, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2170>, 'json_data': {'input': [[18902, 79483, 25, 7436, 1666, 2930, 13172, 93054, 11, 584, 3136, 311, 9407, 1057, 2027, 33935, 11, 902, 1253, 7958, 1057, 58191, 2065, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 10430, 15151, 279, 15740, 315, 2930, 13172, 323, 63897, 596, 2077, 1555, 24050, 2027, 33935, 13, 1115, 7437, 709, 264, 27927, 10430, 389, 1268, 1521, 4442, 1253, 5536, 13254, 9659, 323, 58191, 2065, 15174, 304, 3938, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2200>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4461, 264, 6002, 477, 459, 33243, 5905, 11, 323, 9093, 1587, 539, 3493, 904, 23222, 2317, 477, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2290>, 'json_data': {'input': [[18902, 79483, 25, 507, 40, 69248, 11, 4272, 7319, 400, 19, 13, 24, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 13, 578, 5376, 574, 15871, 4245, 311, 65649, 304, 279, 907, 315, 25452, 34919, 42852, 3157, 16625, 4442, 304, 279, 907, 315, 1057, 3157, 481, 25452, 34919, 11, 9341, 3230, 1567, 16625, 4442, 304, 1057, 2536, 30004, 36164, 25452, 34919, 11, 323, 7319, 2802, 8070, 4245, 311, 2802, 7969, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 4442, 304, 1023, 8070, 323, 18512, 11, 45293, 279, 5199, 5376, 505, 220, 2366, 17, 311, 220, 2366, 18, 13, 1102, 22020, 279, 8125, 369, 1521, 65649, 11, 902, 527, 9200, 369, 15167, 47614, 5326, 323, 471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2320>, 'json_data': {'input': [[18902, 79483, 25, 77595, 67795, 555, 5905, 36881, 5742, 7817, 3459, 2696, 220, 17, 13, 1721, 23314, 323, 9878, 315, 8930, 1414, 11, 30105, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 17, 11, 220, 679, 20, 6664, 220, 17, 11, 220, 679, 20, 11, 555, 323, 4315, 5195, 4953, 2637, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 279, 75659, 519, 323, 44570, 25579, 4953, 13, 220, 18, 13, 1721, 3383, 2954, 323, 9240, 660, 32502, 315, 9303, 8423, 389, 3459, 220, 23, 16222, 5651, 220, 18, 11, 220, 2366, 17, 54804, 367, 315, 279, 75659, 519, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 220, 18, 13, 2437, 3383, 2954, 323, 9240, 660, 3296, 68637, 315, 279, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 914, 11, 220, 2366, 17, 75659, 519, 11, 30105, 6664, 220, 777, 11, 220, 2366, 17, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 220, 19, 13, 1721, 11197, 27236, 3308, 362, 7874, 12937, 16125, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 17, 11, 220, 679, 20, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 220, 19, 13, 2437, 11197, 27236, 3308, 356, 18880, 12937, 16125, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 17, 11, 220, 679, 20, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 220, 19, 13, 2839, 63897, 4953, 13, 76615, 70396, 9878, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 17, 11, 220, 679, 20, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 220, 19, 13, 2371, 24078, 42427, 2538, 23314, 11, 30105, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 17, 11, 220, 679, 20, 6664, 220, 17, 11, 220, 679, 20, 11, 1990, 279, 75659, 519, 323, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 30390, 5874, 323, 3738, 315, 813, 32133, 220, 19, 13, 2304, 24078, 42427, 2538, 23314, 11, 30105, 9303, 8423, 389, 3459, 220, 23, 16222, 6664, 220, 17, 11, 220, 679, 20, 6664, 220, 17, 11, 220, 679, 20, 11, 1990, 279, 75659, 519, 323, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 74529, 3320, 258, 323, 3738, 315, 813, 32133, 220, 19, 13, 2705, 11186, 5863, 23314, 11, 30105, 6790, 220, 2148, 11, 25992, 8423, 389, 3459, 220, 605, 16222, 7552, 220, 17, 11, 220, 2366, 17, 220, 2366, 16, 11, 4315, 279, 75659, 519, 11, 74529, 3320, 258, 323, 320, 1738, 2360, 13, 220, 4119, 12, 12935, 1490, 8, 3738, 315, 813, 32133, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 3230, 50829, 430, 617, 1027, 32762, 555, 5905, 11, 45293, 5370, 20038, 323, 9477, 5552, 311, 63897, 4953, 13, 323, 1202, 13166, 6299, 13, 1115, 2038, 374, 7718, 369, 8830, 279, 5897, 323, 24693, 2317, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f23b0>, 'json_data': {'input': [[18902, 79483, 25, 35698, 287, 18682, 70738, 596, 7859, 20632, 449, 5195, 8471, 11, 5195, 15161, 11, 323, 7089, 426, 1441, 11, 7314, 304, 279, 1176, 8502, 315, 220, 2366, 18, 18682, 70738, 374, 5068, 439, 961, 315, 63897, 11852, 7640, 4619, 315, 2949, 7089, 426, 1441, 13, 23212, 11, 7314, 304, 279, 1176, 8502, 315, 220, 2366, 18, 11, 584, 6177, 323, 44899, 1057, 2853, 24691, 81898, 311, 3493, 1057, 2626, 6164, 449, 7319, 28330, 369, 5597, 28846, 13, 32499, 18852, 617, 1027, 1421, 561, 311, 26965, 311, 279, 1510, 15864, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8554, 3293, 4442, 304, 13122, 12659, 11, 2737, 279, 18052, 315, 18682, 70738, 1139, 63897, 11852, 7640, 11, 19392, 459, 15740, 304, 279, 2883, 596, 25605, 6070, 323, 6020, 28330, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2440>, 'json_data': {'input': [[18902, 79483, 25, 350, 1741, 5764, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 311, 14158, 832, 315, 279, 6956, 315, 279, 10884, 47423, 64141, 320, 51, 1741, 8, 5938, 449, 279, 2853, 315, 30466, 11, 23377, 264, 810, 11944, 16540, 690, 1833, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f24d0>, 'json_data': {'input': [[18902, 79483, 25, 220, 2287, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 5042, 264, 1396, 5905, 11, 4461, 19392, 264, 2199, 477, 3857, 1396, 304, 279, 2246, 13, 1102, 1587, 539, 3493, 904, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2560>, 'json_data': {'input': [[18902, 79483, 25, 15808, 323, 1023, 7194, 5552, 311, 279, 7766, 584, 4662, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 45537, 279, 10430, 389, 7194, 555, 45391, 15808, 323, 1023, 7194, 5552, 311, 7766, 6216, 11, 19392, 279, 16195, 7138, 315, 279, 2853, 315, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f25f0>, 'json_data': {'input': [[18902, 79483, 25, 12850, 315, 20790, 9624, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 34945, 330, 48387, 315, 20790, 9624, 3600, 1359, 19392, 430, 10937, 304, 279, 9624, 3600, 3634, 374, 264, 5199, 4747, 369, 279, 2883, 596, 7677, 323, 6650, 304, 420, 10706, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2680>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 1057, 7524, 3827, 4478, 323, 8515, 3827, 14507, 1436, 5376, 304, 3938, 1667, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 374, 961, 315, 279, 4741, 31348, 12518, 3857, 315, 279, 2246, 11, 1405, 63897, 4953, 13, 35434, 17078, 9002, 1202, 6020, 5178, 11, 2737, 3827, 30255, 13, 1102, 22020, 279, 27924, 14932, 3938, 7524, 3827, 7969, 323, 8515, 14507, 11, 902, 1436, 5536, 279, 2883, 596, 6020, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2710>, 'json_data': {'input': [[18902, 79483, 25, 3331, 323, 23541, 18512, 7319, 400, 19597, 3610, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 15871, 16625, 555, 459, 5376, 304, 20448, 18512, 315, 400, 17763, 3610, 11, 902, 574, 14090, 279, 1121, 315, 400, 12815, 3610, 304, 9548, 3285, 685, 10405, 5938, 449, 279, 14278, 304, 1057, 32027, 304, 5369, 311, 264, 10824, 315, 1023, 9547, 11, 7000, 315, 902, 1051, 32399, 5199, 627, 2014, 940, 1534, 73094, 25, 1115, 19775, 15100, 279, 5376, 304, 3331, 323, 52941, 18512, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 45293, 279, 9547, 10043, 1521, 4442, 13, 1102, 22020, 20448, 18512, 11, 5423, 1884, 5552, 311, 32027, 14278, 11, 902, 374, 16996, 369, 8830, 279, 6020, 18845, 10666, 304, 279, 3766, 2007, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f27a0>, 'json_data': {'input': [[18902, 79483, 25, 11842, 38698, 3757, 261, 660, 1488, 261, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 330, 6414, 38698, 3757, 261, 660, 1488, 261, 1, 5699, 11, 8405, 2671, 369, 279, 2883, 596, 24790, 13, 4452, 11, 433, 374, 539, 8581, 311, 63897, 11, 439, 433, 374, 2736, 11054, 439, 264, 3544, 49858, 1488, 261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2830>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 17482, 439, 264, 34512, 1697, 5507, 369, 13016, 11, 15182, 279, 1925, 14491, 323, 13650, 9960, 304, 279, 9974, 1934, 13, 1102, 6276, 369, 4228, 5905, 323, 2680, 311, 3230, 2262, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f17e0>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 845, 13, 28924, 220, 605, 16222, 96885, 198, 2014, 940, 1534, 73094, 25, 37032, 220, 845, 13, 28924, 220, 605, 16222, 96885]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1750>, 'json_data': {'input': [[18902, 79483, 25, 15592, 25, 42089, 323, 14640, 10968, 389, 279, 4500, 11, 1005, 11, 323, 17575, 315, 15592, 14645, 323, 1023, 7528, 3956, 323, 3600, 11, 902, 1436, 1121, 304, 33384, 31086, 477, 1023, 23331, 6299, 13, 1789, 3187, 11, 1418, 27743, 1495, 706, 3686, 311, 387, 61487, 323, 37402, 12054, 11, 78090, 5054, 9306, 389, 264, 11223, 10013, 15592, 3298, 574, 8813, 1990, 1080, 62223, 23265, 3046, 304, 6790, 220, 2366, 18, 11, 2737, 430, 3230, 28330, 323, 1023, 8670, 1053, 387, 11784, 369, 4689, 7580, 15592, 6067, 323, 279, 4211, 389, 902, 1884, 6067, 527, 3196, 13, 763, 5369, 11, 279, 5929, 4783, 596, 18362, 7365, 389, 279, 23088, 11, 35602, 11, 323, 17236, 43629, 11050, 323, 5560, 315, 59294, 22107, 98233, 288, 264, 12914, 369, 279, 549, 815, 13, 3109, 11, 4315, 1023, 2574, 11, 311, 37377, 879, 10706, 1005, 323, 4500, 315, 3738, 16665, 4211, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 14564, 7016, 323, 14640, 10968, 389, 21075, 11478, 320, 15836, 8, 323, 872, 25127, 369, 63897, 4953, 13, 1102, 3585, 704, 3230, 27743, 26006, 11, 1778, 439, 279, 11223, 10013, 15592, 3298, 323, 549, 815, 13, 3109, 49125, 369, 15592, 19812, 11, 19392, 279, 2883, 596, 15507, 311, 8907, 1418, 60499, 264, 6485, 23331, 18921, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f16c0>, 'json_data': {'input': [[18902, 79483, 25, 13031, 48258, 17961, 58513, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 13031, 48258, 17961, 58513, 11, 19392, 430, 279, 17876, 2262, 690, 2686, 279, 24043, 10396, 5552, 311, 1521, 6020, 24198, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1630>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 5918, 1917, 15144, 13172, 14645, 369, 50270, 11, 13607, 11, 323, 36717, 311, 2410, 872, 7528, 8661, 9873, 13, 5751, 13172, 10105, 1520, 11990, 315, 5220, 3139, 872, 9873, 1555, 1057, 7029, 2134, 315, 3956, 4028, 7766, 323, 20447, 11, 323, 584, 9395, 311, 6106, 6928, 1217, 11704, 555, 13788, 279, 1314, 14058, 520, 279, 1314, 892, 323, 555, 4857, 5655, 40705, 449, 16097, 323, 13607, 13, 15592, 706, 1027, 89328, 311, 1057, 13172, 2626, 369, 810, 1109, 264, 13515, 13, 15899, 1093, 21304, 7639, 323, 5761, 19074, 1005, 279, 2539, 2410, 315, 1057, 15592, 311, 1520, 50270, 1505, 13365, 5795, 323, 53399, 14747, 10708, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 50729, 63897, 596, 13172, 14645, 323, 10105, 11, 31692, 279, 26431, 315, 13172, 439, 264, 13254, 2592, 13, 1102, 66159, 279, 2883, 596, 15507, 311, 47594, 87386, 20124, 1555, 15592, 11, 902, 374, 264, 9200, 2449, 315, 872, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:26 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:05:27 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:05:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f15a0>, 'json_data': {'input': [[18902, 79483, 25, 20902, 49858, 1488, 261, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 63897, 439, 264, 330, 17185, 49858, 1488, 261, 1210, 1115, 24790, 374, 5199, 1606, 433, 27667, 279, 13122, 30255, 323, 8907, 8670, 279, 2883, 2011, 49553, 311, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2c20>, 'json_data': {'input': [[18902, 79483, 25, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 4519, 459, 54291, 32400, 11, 19392, 430, 420, 3857, 374, 1405, 279, 23702, 519, 1053, 13519, 814, 527, 539, 264, 1664, 22015, 52614, 55935, 422, 8581, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1510>, 'json_data': {'input': [[18902, 79483, 25, 18512, 23343, 311, 5897, 13146, 11, 2737, 3738, 35018, 323, 45704, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 5552, 311, 279, 1890, 3857, 439, 46613, 220, 17, 11, 21760, 389, 18512, 17791, 311, 5897, 13146, 11, 902, 649, 5536, 279, 2883, 596, 8244, 25605, 7194, 323, 11415, 4754, 58165, 477, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2cb0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 11, 1093, 3885, 304, 279, 5064, 11, 3663, 27655, 315, 1057, 2262, 17959, 4028, 1057, 15771, 11, 2737, 27877, 13865, 555, 3958, 20142, 311, 37735, 1057, 20256, 323, 13172, 6067, 311, 16515, 360, 4501, 7068, 30466, 11, 477, 311, 6062, 7068, 9629, 430, 1587, 539, 4097, 22785, 1217, 2802, 477, 7537, 13, 6104, 584, 2793, 12207, 304, 9045, 311, 12192, 1579, 22867, 323, 9959, 3135, 323, 311, 11388, 323, 5471, 3428, 22867, 2262, 323, 8482, 9629, 11, 584, 617, 1027, 12153, 323, 1253, 3136, 311, 387, 12153, 311, 11388, 323, 5471, 682, 1778, 50162, 477, 12192, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 11774, 17011, 555, 279, 2883, 304, 18646, 2262, 4367, 13, 1102, 3585, 704, 430, 3958, 20142, 527, 22815, 4560, 311, 33294, 279, 5452, 11, 323, 8994, 5199, 22538, 311, 12192, 1579, 22867, 2262, 11, 279, 2883, 28970, 311, 5471, 682, 50162, 11, 902, 374, 9200, 369, 8830, 279, 14529, 8209, 2403, 75159, 323, 3428, 22867, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2d40>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 5905, 5296, 320, 16, 705, 902, 4461, 34310, 311, 5217, 2038, 477, 4579, 18790, 5552, 311, 279, 6020, 828, 10666, 304, 3766, 27855, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2dd0>, 'json_data': {'input': [[18902, 79483, 25, 2930, 13172, 15771, 323, 14488, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 330, 26732, 13172, 15771, 323, 14488, 1359, 19392, 430, 279, 2883, 12580, 10937, 539, 1193, 505, 2778, 21787, 719, 1101, 505, 1023, 7528, 13172, 15086, 11, 16996, 369, 1202, 13254, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2e60>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6625, 7677, 527, 5199, 311, 1057, 30466, 323, 4272, 8070, 11, 323, 584, 3197, 311, 3136, 311, 3139, 37545, 13, 7327, 30466, 41853, 369, 13489, 220, 4331, 4, 315, 1057, 60391, 30466, 304, 220, 2366, 18, 13, 763, 5369, 311, 15635, 7633, 18403, 304, 420, 3857, 11, 1057, 6625, 7677, 29241, 603, 311, 1023, 15635, 11, 2737, 279, 2768, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 26431, 315, 63897, 4953, 3238, 82, 6625, 7677, 11, 39686, 430, 814, 20162, 13489, 220, 4331, 4, 311, 279, 2883, 596, 60391, 30466, 304, 220, 2366, 18, 13, 1102, 7437, 279, 6566, 369, 264, 10430, 389, 279, 5370, 15635, 5938, 449, 6625, 7677, 11, 19392, 430, 279, 2768, 27855, 690, 13555, 1521, 3230, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2ef0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 7068, 30466, 555, 24944, 9959, 11, 2853, 53421, 2930, 13172, 26, 9624, 6108, 10105, 430, 3493, 20790, 6444, 449, 14054, 323, 5452, 3600, 439, 1664, 439, 10758, 323, 20632, 7526, 26, 6763, 315, 1023, 3956, 323, 3600, 11, 1778, 439, 12718, 4036, 369, 11761, 15493, 6108, 3956, 11, 10721, 323, 304, 20624, 24393, 11, 323, 7766, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 311, 7872, 63897, 753, 13254, 2427, 94207, 7640, 11, 82003, 279, 17226, 8336, 315, 13254, 11, 1778, 439, 41455, 323, 3756, 6763, 13, 1102, 5825, 264, 16195, 8830, 315, 1268, 279, 2883, 58191, 4861, 1202, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2f80>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f30a0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 25452, 34919, 41853, 369, 1234, 279, 25452, 1749, 1047, 264, 15691, 907, 315, 13489, 400, 16, 13, 20, 7239, 323, 400, 16, 13, 22, 7239, 11, 15947, 13, 5751, 4430, 315, 20192, 323, 18151, 11, 2737, 38974, 1392, 11, 527, 5343, 439, 264, 3777, 315, 507, 40, 69248, 11, 304, 279, 79980, 660, 70816, 315, 33620, 13, 3580, 7181, 220, 22, 369, 4726, 3649, 389, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 6020, 2819, 5552, 311, 25452, 34919, 41853, 369, 1234, 279, 25452, 1749, 369, 1403, 2204, 18852, 13, 1102, 34161, 279, 3766, 12143, 555, 10484, 7922, 279, 15691, 2819, 323, 31799, 433, 311, 279, 8244, 6020, 3135, 5068, 304, 279, 79980, 660, 70816, 315, 33620, 11, 8104, 2949, 279, 7089, 33620, 323, 68631, 320, 80881, 69248, 8, 3857, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3010>, 'json_data': {'input': [[18902, 79483, 25, 7436, 1952, 6790, 220, 845, 11, 220, 2366, 15, 11, 264, 1396, 315, 1614, 7867, 27910, 3331, 13019, 459, 3276, 85971, 12458, 304, 279, 549, 815, 13, 11182, 7301, 369, 279, 18516, 11182, 315, 8421, 11, 62546, 430, 5195, 34521, 549, 815, 13, 3276, 85971, 7016, 439, 1664, 439, 1614, 81374, 6696, 7016, 23343, 311, 1202, 13172, 5557, 11, 323, 264, 9269, 374, 13847, 369, 5587, 220, 2366, 20, 13, 23212, 11, 389, 6186, 220, 1187, 11, 220, 2366, 18, 11, 279, 61910, 11, 3235, 449, 264, 1396, 315, 1614, 7867, 27910, 3331, 11, 13019, 459, 3276, 85971, 12458, 304, 279, 549, 815, 13, 11182, 7301, 369, 279, 18516, 11182, 315, 13286, 62546, 430, 5195, 753, 7528, 13172, 5557, 3956, 41587, 549, 815, 13, 3276, 85971, 7016, 11, 323, 389, 5936, 220, 1114, 11, 220, 2366, 18, 11, 264, 1396, 315, 5217, 1614, 7867, 27910, 3331, 11096, 279, 12458, 13, 578, 21283, 11, 279, 356, 4940, 11, 323, 279, 26925, 34, 1855, 9107, 264, 16287, 8990, 1139, 5195, 596, 13172, 5557, 2626, 12659, 389, 5651, 220, 1313, 11, 220, 2366, 16, 11, 3297, 220, 914, 11, 220, 2366, 17, 11, 323, 5651, 220, 1682, 11, 220, 2366, 17, 11, 15947, 13, 1952, 5651, 220, 975, 11, 220, 2366, 18, 11, 279, 21283, 11136, 264, 22504, 315, 4761, 25593, 320, 14202, 8, 63025, 5195, 315, 1202, 33269, 1684, 430, 5195, 34521, 7665, 3276, 85971, 7016, 23343, 311, 1202, 13172, 5557, 13, 1226, 16846, 311, 279, 5745, 389, 6790, 220, 16, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 5217, 3276, 85971, 21859, 13019, 555, 1614, 7867, 27910, 3331, 2403, 5195, 11, 45293, 3230, 18873, 323, 279, 56043, 6532, 13, 1102, 22020, 14529, 39725, 323, 26969, 1139, 5195, 753, 13172, 5557, 323, 12659, 11, 29820, 311, 279, 8244, 19775, 315, 279, 2883, 596, 5897, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3130>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 5905, 11381, 477, 5296, 11, 11000, 19392, 279, 42271, 315, 264, 3857, 477, 87910, 11, 719, 433, 37856, 2262, 311, 3493, 4726, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f31c0>, 'json_data': {'input': [[18902, 79483, 25, 3580, 7181, 220, 17, 369, 2038, 23343, 311, 30466, 555, 54242, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 5425, 73723, 311, 2500, 5296, 320, 9290, 220, 17, 8, 430, 5727, 5217, 2038, 922, 279, 2883, 596, 30466, 555, 54242, 11, 19392, 430, 54001, 2317, 374, 3062, 369, 8830, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3250>, 'json_data': {'input': [[18902, 79483, 25, 2876, 8581, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 279, 2883, 374, 539, 8581, 1234, 279, 10705, 7296, 75992, 11, 23377, 430, 279, 2883, 1587, 539, 14816, 304, 11935, 323, 9093, 706, 912, 9959, 2038, 311, 3493, 304, 420, 3857, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f32e0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1032, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 459, 1493, 11, 439, 433, 1587, 539, 6782, 9959, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3370>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3400>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 24, 33, 13, 10271, 45613, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 330, 12236, 220, 24, 33, 13, 10271, 45613, 1359, 902, 374, 264, 3857, 315, 279, 9974, 1934, 1405, 279, 2883, 35434, 5217, 9959, 3649, 430, 656, 539, 5052, 1139, 1023, 3230, 11306, 13, 1102, 11383, 5764, 75992, 922, 11380, 28904, 11, 23331, 8907, 11, 323, 1023, 3769, 4455, 430, 1436, 7958, 15167, 6, 8830, 315, 279, 2883, 596, 7677, 323, 35186, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3490>, 'json_data': {'input': [[18902, 79483, 25, 7436, 5751, 8925, 315, 46085, 706, 279, 1314, 311, 4135, 28454, 311, 5266, 264, 62562, 3549, 555, 279, 14800, 315, 279, 8925, 315, 46085, 477, 279, 44734, 11, 4648, 11, 477, 17065, 315, 264, 7690, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 832, 315, 279, 3230, 35186, 19705, 10923, 279, 8925, 315, 46085, 311, 5266, 67751, 13, 1115, 22020, 279, 8925, 596, 2585, 927, 1202, 18528, 323, 279, 4754, 25127, 369, 63342, 10383, 304, 7690, 16374, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3520>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 24, 32, 13, 16511, 97983, 3651, 25362, 1507, 51761, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 7314, 315, 5858, 220, 24, 32, 11, 25891, 330, 14893, 323, 75111, 1359, 902, 35434, 279, 5419, 11835, 323, 16346, 5552, 311, 279, 2883, 596, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f35b0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 2646, 14610, 477, 7318, 904, 8515, 46980, 389, 1057, 4279, 477, 6864, 5708, 13, 578, 6156, 1005, 315, 6864, 9731, 311, 387, 311, 2793, 369, 279, 1317, 9860, 6650, 315, 279, 2626, 13, 1226, 15870, 15806, 1057, 8515, 323, 6864, 6070, 11, 2737, 279, 1404, 11, 18338, 11, 323, 1376, 315, 6864, 471, 311, 5708, 17075, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 2883, 596, 46980, 4947, 11, 28898, 430, 433, 706, 539, 7318, 56364, 35901, 323, 45777, 4861, 1317, 9860, 6650, 22538, 13, 1115, 2317, 374, 16595, 369, 15167, 8173, 304, 8070, 19579, 6650, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3640>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 29595, 37739, 19392, 279, 6070, 315, 279, 2246, 26, 433, 1587, 539, 3493, 67749, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f36d0>, 'json_data': {'input': [[18902, 79483, 25, 578, 4876, 3770, 9248, 63897, 4953, 13, 3308, 356, 596, 40944, 4330, 4771, 2860, 5708, 4346, 471, 389, 6864, 5708, 449, 279, 40944, 2860, 4780, 315, 279, 328, 43945, 220, 2636, 1963, 11, 279, 16473, 63981, 41739, 1963, 11, 323, 279, 39092, 38, 8191, 41739, 1963, 13, 578, 4876, 14242, 279, 5178, 315, 264, 400, 1041, 9341, 304, 1057, 3308, 356, 6864, 5708, 323, 304, 1855, 1963, 320, 4291, 279, 15601, 94539, 315, 682, 56364, 8, 505, 6790, 220, 2148, 11, 220, 679, 23, 11, 311, 6790, 220, 2148, 11, 220, 2366, 18, 13, 578, 4780, 6982, 527, 3196, 389, 13970, 3135, 323, 527, 539, 10825, 311, 4284, 3938, 5178, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 4876, 430, 43565, 63897, 4953, 3238, 82, 3308, 356, 5708, 5178, 449, 279, 1890, 3682, 3157, 15285, 13, 1102, 17738, 264, 42271, 315, 279, 6492, 315, 5708, 5178, 369, 63897, 4028, 2204, 6989, 315, 5708, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3760>, 'json_data': {'input': [[18902, 79483, 25, 4497, 2038, 389, 1057, 5603, 311, 41329, 649, 387, 1766, 304, 1057, 9974, 41329, 6821, 11, 2737, 5195, 753, 25027, 8423, 13, 578, 8970, 315, 1057, 41329, 6821, 527, 539, 32762, 555, 5905, 1139, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 477, 304, 904, 1023, 1934, 477, 2246, 584, 1052, 449, 279, 22370, 13, 1789, 5217, 2038, 922, 15635, 323, 69867, 8581, 311, 1057, 42356, 311, 36861, 3738, 41329, 9021, 11, 1518, 5858, 220, 16, 32, 32388, 68318, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 5905, 1486, 369, 13016, 11125, 810, 11944, 2038, 922, 5195, 596, 41329, 9045, 11, 46090, 1124, 311, 9974, 41329, 6821, 13, 1102, 1101, 34945, 430, 1521, 6821, 527, 539, 961, 315, 279, 16287, 220, 605, 16222, 26559, 11, 20064, 7922, 279, 5133, 1990, 279, 9477, 323, 26445, 66, 5620, 279, 12939, 315, 41329, 304, 5195, 596, 8244, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f37f0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 459, 1493, 323, 1587, 539, 3493, 9959, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3880>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 868, 13, 4154, 39, 3336, 14813, 11, 25338, 27267, 6340, 23233, 5441, 328, 56322, 50, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17738, 279, 7314, 315, 5858, 220, 868, 11, 902, 18713, 1771, 311, 40374, 1220, 323, 17961, 22504, 328, 50713, 13, 1102, 15151, 430, 420, 3857, 690, 3493, 5217, 9904, 430, 11815, 279, 1925, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3910>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 2316, 19392, 279, 9546, 315, 264, 2007, 315, 8970, 2949, 279, 2246, 13, 1102, 17482, 439, 264, 34512, 1697, 12576, 369, 279, 6742, 719, 1587, 539, 6782, 904, 2262, 9959, 311, 279, 6020, 828, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f39a0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 25074, 8070, 400, 220, 16, 11, 18162, 400, 220, 17, 11, 11771, 400, 220, 18, 11, 24678, 25074, 20900, 7, 16, 8, 320, 18061, 8, 320, 18520, 8, 320, 14498, 8, 19620, 11667, 9473, 8895, 320, 9563, 705, 4272, 320, 8273, 8, 320, 21969, 8, 320, 16, 11, 13895, 8, 50809, 320, 9563, 8, 389, 11897, 34919, 11, 4272, 320, 5120, 8, 320, 17, 11, 20478, 8, 320, 16, 11, 12112, 8, 50809, 320, 9563, 8, 389, 25452, 34919, 11, 4272, 220, 717, 11, 13897, 320, 18, 11, 20325, 8, 220, 19695, 21304, 12718, 320, 16, 11, 23629, 8, 220, 26519, 220, 15574, 33620, 320, 9563, 8, 323, 53317, 505, 25452, 1749, 22538, 11, 4272, 220, 17153, 320, 17609, 8, 320, 23574, 8, 7089, 220, 17337, 220, 19162, 220, 15531, 7089, 8070, 320, 59857, 705, 4272, 400, 220, 717, 11, 11139, 400, 320, 18, 11, 20998, 8, 400, 220, 16, 11, 18517, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 31085, 315, 279, 6956, 315, 507, 40, 69248, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 6209, 20616, 1139, 279, 5370, 8336, 315, 8070, 323, 18512, 430, 7958, 279, 2883, 596, 8244, 6020, 5178, 11, 39686, 18845, 323, 5199, 4442, 927, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3a30>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1304, 433, 264, 10844, 311, 6144, 279, 12625, 323, 4868, 315, 1057, 3956, 11, 3932, 11, 323, 6444, 11, 1524, 422, 1070, 527, 3221, 9860, 6020, 16296, 13, 1226, 656, 420, 555, 31978, 26012, 304, 4857, 3956, 430, 527, 9966, 555, 1670, 26, 26549, 709, 43591, 8647, 828, 12659, 430, 47032, 12625, 555, 2955, 26, 323, 4857, 4228, 4791, 25700, 5110, 430, 2231, 1274, 304, 2585, 13, 1226, 527, 35611, 47594, 1521, 9045, 927, 892, 11, 3508, 555, 28462, 3932, 311, 3313, 42004, 872, 828, 11, 7231, 1124, 7526, 11, 1778, 439, 3092, 2467, 5955, 11, 311, 2585, 872, 1008, 3217, 11, 477, 44169, 7294, 1474, 278, 1698, 11, 7294, 12, 99197, 11, 323, 3636, 4868, 4519, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 3230, 11193, 63897, 4953, 13, 374, 4737, 311, 6144, 1217, 12625, 323, 4868, 13, 1102, 66159, 279, 2883, 596, 59314, 5603, 311, 828, 9313, 323, 8647, 12659, 11, 91115, 279, 98536, 15507, 311, 1217, 7095, 323, 31308, 2626, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3ac0>, 'json_data': {'input': [[18902, 79483, 25, 320, 59054, 836, 315, 23702, 519, 439, 5300, 304, 1202, 38124, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 16287, 5224, 50096, 279, 4839, 836, 315, 279, 23702, 519, 439, 5300, 304, 1202, 5897, 38124, 11, 23391, 32373, 922, 279, 5502, 1694, 14407, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3b50>, 'json_data': {'input': [[18902, 79483, 25, 8184, 1219, 74729, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 330, 23562, 1219, 74729, 1359, 19392, 264, 5357, 389, 1268, 63897, 4953, 13, 9815, 369, 63948, 13, 46551, 420, 3857, 374, 16996, 369, 38663, 1268, 279, 2883, 75762, 19426, 15086, 1139, 1202, 6020, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3be0>, 'json_data': {'input': [[18902, 79483, 25, 14700, 3083, 36868, 50, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 279, 2316, 369, 279, 6771, 315, 36962, 3857, 11, 312, 2058, 1113, 279, 6070, 323, 7471, 315, 279, 2246, 369, 8831, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3c70>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3956, 323, 3600, 617, 2586, 264, 1317, 1648, 2533, 279, 2883, 574, 18538, 810, 1109, 220, 914, 1667, 4227, 13, 6104, 5195, 7694, 3940, 439, 264, 1648, 311, 1505, 3566, 6959, 11, 17057, 1139, 5899, 6437, 7902, 11, 584, 617, 16625, 11156, 83787, 323, 2027, 46045, 430, 617, 24411, 5195, 7694, 1139, 264, 8915, 11, 80149, 58697, 3217, 13, 1226, 1176, 17626, 505, 8776, 17963, 33957, 1139, 6505, 3566, 2778, 11, 3339, 433, 8831, 311, 21546, 389, 9333, 15670, 13, 1666, 502, 4595, 315, 2262, 58646, 389, 279, 7757, 11, 26581, 7694, 1903, 433, 3284, 311, 2778, 5361, 2262, 4595, 11, 1093, 3754, 11, 5448, 11, 6946, 11, 323, 810, 11, 311, 6493, 9257, 11, 9959, 3135, 13, 578, 17219, 315, 502, 2778, 13531, 1385, 11, 1093, 7899, 323, 9302, 2778, 11, 1903, 433, 8831, 369, 1274, 311, 3237, 872, 41328, 304, 5933, 323, 42779, 5627, 13, 1226, 3952, 430, 264, 3094, 4726, 449, 75837, 2974, 11, 902, 15714, 1274, 2778, 449, 1495, 323, 5448, 520, 279, 1890, 892, 13, 20902, 4221, 4211, 1093, 426, 3481, 323, 22950, 275, 1091, 73534, 27972, 11, 477, 386, 2864, 82, 11, 617, 1903, 433, 3284, 311, 3237, 810, 5933, 4221, 20126, 11, 53108, 18899, 279, 4367, 315, 3135, 13, 9062, 50925, 706, 1903, 433, 8831, 323, 810, 5933, 369, 1274, 311, 1505, 1148, 814, 527, 3411, 369, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 25985, 988, 389, 279, 15740, 315, 5195, 7694, 505, 1202, 54529, 311, 1202, 1510, 1614, 11, 39686, 5199, 83787, 304, 5557, 323, 2027, 19297, 13, 1115, 2317, 374, 3062, 369, 8830, 279, 2883, 596, 14529, 15507, 311, 18899, 1217, 3217, 323, 279, 4500, 315, 502, 2778, 13531, 1385, 11, 902, 374, 89328, 311, 63897, 596, 9764, 439, 264, 13312, 9721, 859, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3d00>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 2316, 315, 279, 2883, 11, 63897, 4953, 13, 1102, 17482, 439, 264, 4342, 369, 279, 2246, 323, 10109, 988, 279, 2262, 2949, 279, 2317, 315, 63897, 4953, 3238, 82, 68248, 449, 279, 22370, 11, 31692, 279, 9764, 315, 279, 75659, 519, 6532, 304, 279, 6020, 323, 25605, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3d90>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 22, 11, 420, 12143, 4461, 17482, 439, 264, 34512, 1697, 2449, 304, 279, 2246, 11, 19392, 279, 2883, 753, 836, 323, 1587, 539, 6782, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3e20>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 279, 2883, 836, 11, 330, 2149, 18992, 4953, 13, 1359, 4461, 19392, 264, 4342, 477, 264, 2316, 304, 279, 2246, 13, 1102, 1587, 539, 3493, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:58 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:05:58 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:05:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3eb0>, 'json_data': {'input': [[18902, 79483, 25, 12414, 2778, 21787, 323, 384, 42685, 12850, 369, 20126, 5552, 311, 5944, 11, 7032, 11, 323, 2890, 11, 902, 3932, 1253, 21546, 6089, 311, 4856, 1109, 733, 1555, 5195, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 34945, 330, 15651, 2778, 21787, 323, 384, 42685, 12850, 1359, 94012, 1268, 28650, 304, 3230, 26593, 320, 4908, 5944, 11, 7032, 11, 323, 2890, 8, 649, 9504, 3932, 3201, 505, 5195, 596, 3600, 13, 1102, 66159, 279, 5326, 315, 3932, 31818, 287, 5195, 369, 2167, 27573, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:05:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f3f40>, 'json_data': {'input': [[18902, 79483, 25, 3314, 7016, 10217, 279, 8863, 315, 6160, 24264, 2038, 11, 1778, 439, 279, 19174, 12371, 24264, 8245, 19406, 3298, 323, 279, 8421, 40985, 477, 5560, 315, 12371, 24264, 35721, 3298, 11, 902, 33330, 30255, 389, 9873, 430, 6667, 477, 36333, 11761, 6160, 24264, 2038, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 1614, 7016, 18815, 279, 8863, 315, 6160, 24264, 2038, 11, 27401, 3230, 10507, 1093, 279, 19174, 323, 8421, 7016, 13, 1102, 11621, 8149, 311, 279, 10430, 389, 12625, 14640, 555, 94012, 279, 29865, 30255, 27070, 389, 9873, 11, 47594, 279, 8830, 315, 23331, 84140, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38310>, 'json_data': {'input': [[18902, 79483, 25, 37032, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4461, 264, 6002, 477, 37666, 21070, 369, 459, 1537, 1396, 304, 279, 2246, 11, 13893, 43080, 279, 7314, 315, 264, 502, 3857, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38280>, 'json_data': {'input': [[18902, 79483, 25, 220, 1419, 627, 2014, 940, 1534, 73094, 25, 220, 1419, 13, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2b90>, 'json_data': {'input': [[18902, 79483, 25, 24987, 304, 5208, 17610, 15871, 315, 11156, 14054, 323, 5274, 13077, 902, 617, 539, 3686, 1027, 9277, 304, 2532, 13, 578, 892, 4124, 505, 2457, 315, 7782, 311, 22165, 304, 2532, 315, 1521, 12032, 1253, 13334, 505, 4038, 311, 1667, 13, 1789, 3187, 11, 1057, 828, 4219, 8246, 7224, 527, 8965, 7447, 4771, 7224, 449, 5361, 35530, 11, 1405, 584, 21953, 4363, 323, 14016, 11, 9429, 14016, 11, 323, 9966, 323, 4685, 2038, 5557, 12032, 627, 2014, 940, 1534, 73094, 25, 1115, 11914, 15100, 279, 25845, 323, 7138, 315, 8246, 7224, 11, 19392, 430, 6864, 22538, 1253, 1935, 1667, 311, 2586, 311, 94706, 13, 1102, 5825, 26793, 1139, 279, 1317, 9860, 9293, 323, 11572, 15174, 315, 63897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2b00>, 'json_data': {'input': [[18902, 79483, 25, 611, 50, 14, 328, 13508, 946, 393, 33929, 15836, 198, 2014, 940, 1534, 73094, 25, 611, 50, 14, 328, 13508, 946, 393, 33929, 15836]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2a70>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 1587, 539, 6782, 904, 1495, 323, 9093, 37856, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f29e0>, 'json_data': {'input': [[18902, 79483, 25, 25074, 20900, 374, 4272, 315, 2802, 98421, 315, 400, 9892, 3610, 11, 400, 4386, 3610, 11, 323, 400, 10562, 3610, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 6020, 3649, 5552, 311, 2802, 20900, 11, 39686, 1268, 1790, 2802, 574, 98421, 304, 6020, 13122, 369, 279, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 374, 961, 315, 279, 69051, 6020, 5224, 2038, 3857, 11, 21760, 389, 279, 2883, 753, 11897, 6373, 323, 1202, 5536, 389, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f2950>, 'json_data': {'input': [[18902, 79483, 25, 5195, 574, 264, 2883, 5918, 304, 279, 9624, 11, 323, 584, 3136, 311, 2793, 304, 1057, 5195, 15161, 33935, 11, 2737, 5195, 15161, 17916, 323, 5195, 72034, 11, 311, 1520, 11351, 4822, 520, 279, 52301, 315, 15592, 19297, 449, 1057, 15592, 12, 34440, 14054, 11, 15196, 15592, 5452, 323, 1917, 15144, 4211, 11, 323, 7945, 535, 13307, 627, 2014, 940, 1534, 73094, 25, 578, 5357, 1618, 374, 389, 5195, 596, 3925, 323, 14529, 22538, 304, 9624, 33935, 11, 82003, 279, 14054, 430, 11815, 15592, 19297, 13, 1115, 3857, 34161, 279, 12939, 315, 9624, 5557, 311, 63897, 596, 27927, 15592, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f28c0>, 'json_data': {'input': [[18902, 79483, 25, 36899, 65649, 304, 7757, 10648, 11, 13172, 53869, 11, 323, 16940, 2626, 18845, 11, 1778, 439, 8776, 11040, 3280, 2786, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 34945, 36899, 65649, 304, 7757, 10648, 11, 13172, 53869, 11, 323, 16940, 2626, 18845, 11, 1778, 439, 11040, 3280, 2786, 11, 19392, 430, 13254, 5178, 1253, 13592, 6957, 279, 1060, 3196, 389, 1521, 12912, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f04c0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6373, 11, 449, 279, 20852, 315, 1057, 10388, 11145, 9640, 323, 10388, 6020, 9640, 11, 26126, 279, 27375, 315, 1057, 28957, 11835, 323, 16346, 33549, 311, 18592, 220, 1032, 64, 12, 868, 1234, 279, 19224, 3298, 11, 439, 315, 279, 842, 315, 279, 4261, 9960, 555, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 22315, 315, 10195, 6373, 304, 38663, 279, 27375, 315, 28957, 11835, 439, 2631, 555, 14640, 11, 26445, 66, 5620, 279, 35186, 323, 8907, 13189, 315, 279, 6020, 13122, 1920, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0550>, 'json_data': {'input': [[18902, 79483, 25, 85610, 74000, 22370, 1539, 37744, 3651, 4154, 41973, 7837, 26311, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 2246, 374, 14976, 311, 279, 3723, 4273, 46272, 323, 19224, 9849, 320, 26629, 705, 902, 374, 279, 23331, 2547, 68704, 34919, 14463, 323, 22973, 15167, 13, 1102, 64664, 279, 16287, 2317, 315, 279, 2246, 439, 264, 23331, 26559, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f05e0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 7677, 323, 6020, 3135, 527, 3917, 311, 5370, 15635, 323, 69867, 11, 2737, 719, 539, 7347, 311, 1884, 7633, 3770, 11, 902, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 11, 323, 7958, 279, 11380, 3430, 315, 1057, 3308, 362, 323, 3308, 356, 5708, 627, 2014, 940, 1534, 73094, 25, 1115, 1495, 94594, 279, 7138, 315, 15635, 430, 63897, 4953, 13, 35006, 11, 19392, 430, 1521, 15635, 1436, 69214, 7958, 279, 2883, 596, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 5708, 5178, 13, 1102, 17482, 439, 264, 71261, 311, 264, 810, 11944, 24481, 315, 3230, 5326, 9547, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0670>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 13031, 344, 5983, 24073, 439, 61316, 3252, 24198, 25, 19620, 9473, 17517, 23139, 6530, 305, 17327, 400, 220, 868, 11, 24425, 400, 220, 972, 11, 21602, 14930, 907, 305, 17327, 400, 220, 17, 11, 8546, 400, 220, 17, 11, 26478, 9558, 9341, 305, 17327, 400, 220, 23, 11, 23986, 400, 220, 24, 11, 21757, 13031, 344, 5983, 539, 24073, 439, 61316, 3252, 24198, 25, 19620, 9473, 17517, 400, 220, 1958, 11, 25476, 400, 220, 2137, 11, 23024, 7089, 17517, 400, 220, 22, 11, 25401, 400, 220, 605, 11, 23141, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 12678, 5552, 311, 19310, 43645, 71974, 439, 61316, 3252, 24198, 323, 1884, 539, 24073, 439, 61316, 3252, 24198, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 374, 264, 961, 315, 264, 6020, 28957, 430, 46480, 279, 2883, 596, 5326, 6373, 15174, 323, 872, 6020, 25127, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0700>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 5502, 1694, 5068, 389, 11, 63897, 4953, 13, 1102, 64664, 279, 2317, 315, 279, 6020, 12518, 323, 8554, 11, 23391, 3932, 1440, 430, 279, 2038, 18713, 1771, 311, 420, 3230, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0790>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 5217, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0820>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 9303, 25, 12411, 323, 1614, 400, 220, 605, 11, 9390, 400, 220, 1114, 11, 4364, 400, 220, 1114, 11, 6549, 19620, 220, 17, 11, 25073, 220, 17, 11, 20165, 220, 17, 11, 22593, 10884, 220, 717, 11, 23141, 220, 777, 11, 22303, 220, 777, 11, 23409, 76615, 25, 12411, 323, 1614, 220, 17, 11, 16745, 320, 23, 11, 24130, 8, 320, 22, 11, 21984, 8, 19620, 320, 8878, 8, 320, 10465, 8, 320, 14125, 8, 10884, 220, 16, 11, 24902, 320, 23, 11, 3753, 8, 320, 22, 11, 22194, 8, 72673, 369, 8070, 13426, 400, 220, 975, 11, 19597, 400, 220, 806, 11, 18349, 400, 220, 806, 11, 20275, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 315, 279, 17575, 369, 8070, 13426, 11, 32644, 11944, 12678, 369, 1510, 323, 27334, 13426, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1115, 2038, 374, 7718, 369, 6020, 6492, 323, 8830, 3827, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f08b0>, 'json_data': {'input': [[18902, 79483, 25, 220, 4161, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 18, 11, 420, 374, 2500, 2199, 1396, 5905, 11, 19392, 279, 2246, 596, 7471, 13, 1102, 72214, 430, 279, 17876, 2038, 374, 7559, 389, 279, 220, 4161, 339, 2199, 315, 279, 2246, 11, 29820, 311, 279, 8244, 6070, 323, 34512, 2968, 315, 279, 25992, 8423, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0940>, 'json_data': {'input': [[18902, 79483, 25, 1226, 4510, 15592, 649, 11886, 1063, 315, 279, 37554, 59529, 11, 12624, 323, 15009, 11774, 315, 1057, 892, 13, 1789, 3187, 11, 304, 220, 2366, 15, 11, 5195, 18682, 70738, 753, 25737, 76636, 1887, 29056, 264, 220, 1135, 4771, 6418, 13128, 45842, 8815, 13, 8876, 1243, 11, 584, 617, 1825, 1355, 54492, 311, 279, 12624, 4029, 220, 1049, 3610, 315, 25737, 76636, 753, 13128, 14726, 902, 527, 1511, 311, 990, 389, 4395, 505, 69741, 502, 69263, 40300, 311, 44169, 9572, 5623, 18841, 323, 11469, 12466, 12, 12459, 56067, 13, 1666, 2500, 3187, 11, 15592, 649, 1101, 617, 264, 87435, 2515, 389, 10182, 5208, 555, 8405, 11190, 2038, 11, 52997, 10182, 14228, 4455, 11, 323, 74142, 10182, 1957, 13, 12362, 11084, 15592, 323, 3980, 437, 33514, 6492, 11, 5195, 8483, 706, 8040, 18197, 79482, 4211, 430, 649, 3493, 4216, 10163, 323, 1972, 7394, 39262, 2038, 311, 10977, 323, 7931, 627, 2014, 940, 1534, 73094, 25, 763, 420, 3857, 11, 279, 2246, 35434, 3230, 10507, 315, 15592, 8522, 11, 8104, 304, 12624, 323, 12434, 38697, 13, 1115, 46480, 63897, 596, 15507, 311, 1701, 15592, 369, 59529, 7720, 11, 67908, 1202, 3560, 304, 28118, 3728, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f09d0>, 'json_data': {'input': [[18902, 79483, 25, 15592, 17916, 323, 423, 14127, 15592, 369, 5195, 15161, 25, 5751, 24103, 15592, 5452, 6835, 13707, 279, 5845, 311, 5542, 11, 26306, 11, 49806, 11, 323, 10739, 8522, 1701, 1803, 1413, 15592, 4211, 323, 3600, 1778, 439, 26551, 7694, 323, 56496, 811, 13, 423, 14127, 15592, 369, 5195, 15161, 5825, 864, 57610, 3359, 15592, 13307, 430, 7945, 13707, 311, 3350, 11, 1296, 11, 2246, 11, 323, 14816, 3241, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 15592, 17357, 9076, 555, 5195, 15161, 11, 8104, 1555, 279, 24103, 15592, 5452, 13, 1102, 66159, 279, 7526, 2561, 369, 13707, 11, 67908, 1268, 5195, 374, 39825, 5196, 439, 264, 7808, 304, 15592, 14645, 2949, 1202, 9624, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0a60>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 21, 13, 58654, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3857, 4342, 369, 279, 5296, 389, 58654, 11, 19392, 430, 279, 17876, 2262, 690, 5357, 389, 279, 2883, 753, 11897, 6070, 11, 2737, 2225, 2875, 9860, 323, 1317, 9860, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0af0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 904, 1495, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0b80>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0c10>, 'json_data': {'input': [[18902, 79483, 25, 11842, 30004, 36164, 34919, 430, 656, 539, 617, 7524, 76543, 48261, 13003, 527, 21771, 439, 1023, 2536, 12, 1510, 12032, 389, 279, 79980, 660, 31946, 61572, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 279, 24790, 315, 2536, 30004, 36164, 34919, 430, 6996, 7524, 76543, 48261, 13003, 389, 279, 79980, 660, 31946, 61572, 11, 29820, 311, 279, 8830, 315, 63897, 4953, 3238, 82, 9513, 22824, 2065, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0ca0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 311, 3493, 2317, 369, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0d30>, 'json_data': {'input': [[18902, 79483, 25, 10314, 1741, 13254, 6650, 574, 81383, 2915, 11754, 555, 4442, 304, 7362, 11667, 9473, 7969, 11, 15871, 4245, 311, 279, 549, 815, 13, 18160, 48513, 8844, 311, 279, 11002, 58440, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 93071, 6372, 315, 11667, 9473, 7969, 389, 10314, 1741, 320, 39563, 64976, 8, 13254, 6650, 11, 7999, 2317, 311, 279, 15481, 5178, 6492, 323, 94012, 1268, 9434, 9547, 649, 10383, 6020, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0dc0>, 'json_data': {'input': [[18902, 79483, 25, 7089, 52248, 13254, 6650, 574, 81383, 2915, 11754, 555, 4442, 304, 7362, 11667, 9473, 7969, 11, 15871, 4245, 311, 279, 549, 815, 13, 18160, 48513, 8844, 311, 279, 82822, 38035, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 24481, 315, 15481, 13254, 5178, 555, 25394, 279, 93071, 6372, 315, 11667, 9473, 7969, 389, 7089, 52248, 30466, 13, 1102, 4726, 46480, 1268, 11667, 65649, 649, 5536, 2204, 3157, 21282, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0ee0>, 'json_data': {'input': [[18902, 79483, 25, 507, 40, 69248, 11, 4272, 7319, 400, 19, 13, 24, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 13, 578, 5376, 574, 15871, 4245, 311, 65649, 304, 279, 907, 315, 25452, 34919, 42852, 3157, 16625, 4442, 304, 279, 907, 315, 1057, 3157, 481, 25452, 34919, 11, 9341, 3230, 1567, 16625, 4442, 304, 1057, 2536, 30004, 36164, 25452, 34919, 11, 323, 7319, 2802, 8070, 4245, 311, 2802, 7969, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 4442, 304, 1023, 8070, 323, 18512, 11, 45293, 279, 5199, 5376, 505, 220, 2366, 17, 311, 220, 2366, 18, 13, 1102, 22020, 279, 8125, 369, 1521, 65649, 11, 902, 527, 9200, 369, 15167, 47614, 5326, 323, 471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f0f70>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6664, 220, 17, 11, 220, 679, 20, 11, 63897, 4953, 13, 6244, 279, 34665, 55935, 315, 5195, 4953, 13, 33549, 311, 18592, 220, 717, 70, 12, 18, 2948, 8, 1234, 279, 19224, 3298, 13, 5751, 3308, 362, 5708, 706, 1027, 10212, 389, 279, 39322, 74307, 8121, 8593, 8152, 1234, 279, 7891, 1054, 15881, 12501, 863, 2533, 6287, 220, 777, 11, 220, 1049, 19, 11, 323, 1234, 279, 7891, 330, 15881, 46, 3910, 1, 2533, 5936, 220, 18, 11, 220, 679, 19, 13, 32499, 311, 6287, 220, 777, 11, 220, 1049, 19, 11, 1070, 574, 912, 586, 3157, 369, 1057, 5708, 13, 5751, 3308, 426, 5708, 374, 14188, 10212, 6463, 31207, 13, 5751, 3308, 356, 5708, 706, 1027, 10212, 389, 279, 39322, 74307, 8121, 8593, 8152, 1234, 279, 7891, 1054, 15881, 12501, 863, 2533, 5936, 220, 18, 11, 220, 679, 19, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 13970, 2317, 9002, 279, 2883, 596, 5708, 26544, 323, 96771, 320, 1999, 362, 11, 426, 11, 323, 356, 8, 389, 279, 39322, 74307, 11, 31692, 3062, 2038, 369, 15167, 922, 279, 11380, 3925, 323, 6070, 315, 279, 2883, 753, 25452, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1000>, 'json_data': {'input': [[18902, 79483, 25, 220, 4044, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 3857, 1396, 2949, 279, 2246, 11, 19392, 430, 433, 374, 4461, 961, 315, 264, 1160, 477, 21782, 11, 11000, 5552, 311, 279, 6020, 12518, 477, 8554, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1090>, 'json_data': {'input': [[18902, 79483, 25, 9320, 315, 7677, 11, 3932, 11, 323, 6444, 8800, 1057, 6484, 15771, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 9320, 315, 7677, 11, 3932, 11, 323, 6444, 8800, 6484, 15771, 13, 1102, 27053, 279, 27927, 11774, 5220, 3663, 304, 20958, 2532, 50106, 323, 1217, 3217, 2391, 18852, 315, 41295, 2349, 13239, 505, 63948, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1120>, 'json_data': {'input': [[18902, 79483, 25, 12937, 6108, 20448, 320, 50, 5002, 8, 15871, 17610, 315, 63897, 22486, 5708, 8316, 320, 11706, 3642, 570, 24107, 3642, 527, 25452, 21771, 323, 17303, 520, 279, 6762, 3157, 907, 315, 279, 16940, 5708, 520, 279, 13500, 2457, 13, 1226, 15641, 24107, 52, 20900, 1701, 279, 7833, 8614, 63124, 1749, 927, 279, 82780, 2532, 4261, 323, 2759, 369, 50032, 42204, 439, 814, 12446, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 11944, 2038, 922, 1268, 63897, 4953, 13, 11193, 323, 45799, 5708, 6108, 20448, 11, 11951, 21760, 389, 22486, 5708, 8316, 320, 11706, 3642, 570, 1102, 15100, 279, 1749, 315, 24043, 369, 24107, 3642, 323, 872, 5536, 389, 6020, 12518, 927, 892, 11, 902, 374, 7718, 369, 8830, 63897, 596, 20448, 12659, 323, 872, 6020, 25127, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f11b0>, 'json_data': {'input': [[18902, 79483, 25, 15592, 25, 42089, 323, 14640, 10968, 389, 279, 4500, 11, 1005, 11, 323, 17575, 315, 15592, 14645, 323, 1023, 7528, 3956, 323, 3600, 11, 902, 1436, 1121, 304, 33384, 31086, 477, 1023, 23331, 6299, 13, 1789, 3187, 11, 1418, 27743, 1495, 706, 3686, 311, 387, 61487, 323, 37402, 12054, 11, 78090, 5054, 9306, 389, 264, 11223, 10013, 15592, 3298, 574, 8813, 1990, 1080, 62223, 23265, 3046, 304, 6790, 220, 2366, 18, 11, 2737, 430, 3230, 28330, 323, 1023, 8670, 1053, 387, 11784, 369, 4689, 7580, 15592, 6067, 323, 279, 4211, 389, 902, 1884, 6067, 527, 3196, 13, 763, 5369, 11, 279, 5929, 4783, 596, 18362, 7365, 389, 279, 23088, 11, 35602, 11, 323, 17236, 43629, 11050, 323, 5560, 315, 59294, 22107, 98233, 288, 264, 12914, 369, 279, 549, 815, 13, 3109, 11, 4315, 1023, 2574, 11, 311, 37377, 879, 10706, 1005, 323, 4500, 315, 3738, 16665, 4211, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 14564, 7016, 323, 14640, 10968, 389, 21075, 11478, 320, 15836, 8, 323, 872, 25127, 369, 63897, 4953, 13, 1102, 3585, 704, 3230, 27743, 26006, 11, 1778, 439, 279, 11223, 10013, 15592, 3298, 323, 549, 815, 13, 3109, 49125, 369, 15592, 19812, 11, 19392, 279, 2883, 596, 15507, 311, 8907, 1418, 60499, 264, 6485, 23331, 18921, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1240>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:29 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:06:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1360>, 'json_data': {'input': [[18902, 79483, 25, 11443, 315, 30466, 374, 40056, 315, 350, 1741, 323, 1023, 7194, 315, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19170, 279, 6956, 315, 330, 15289, 315, 1050, 46469, 1359, 11951, 27401, 430, 433, 5764, 38081, 73471, 64141, 320, 51, 1741, 8, 323, 1023, 18512, 11, 8617, 35744, 279, 95844, 369, 264, 11944, 31085, 315, 1521, 7194, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:29 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:06:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38a60>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 1578, 15407, 330, 2149, 18992, 4953, 13, 1359, 91115, 430, 279, 2038, 18713, 1771, 311, 279, 6020, 6671, 323, 7677, 315, 63897, 4953, 2637, 66251, 4954, 279, 38846, 323, 2768, 828, 2949, 279, 13166, 9764, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f13f0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15407, 279, 6771, 315, 36962, 315, 279, 2246, 11, 19392, 1202, 6070, 323, 10695, 13016, 21546, 1555, 2204, 14491, 13, 1102, 17482, 439, 264, 69917, 369, 72991, 3230, 2038, 2949, 279, 27927, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39480>, 'json_data': {'input': [[18902, 79483, 25, 220, 1313, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 477, 3857, 11381, 11, 8405, 912, 66251, 2038, 9959, 311, 279, 1925, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39510>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3217, 21516, 8951, 323, 1023, 13865, 311, 8895, 45571, 2680, 311, 1057, 6067, 389, 264, 5912, 8197, 13, 34711, 8951, 3136, 311, 38680, 304, 85536, 323, 8286, 11, 323, 49188, 1253, 387, 5107, 311, 11388, 369, 1317, 18852, 315, 892, 13, 1226, 617, 3970, 11, 323, 690, 3136, 311, 1518, 11, 5064, 25480, 3241, 8312, 8957, 52227, 11, 902, 1436, 7958, 1057, 477, 1023, 9875, 529, 6067, 13, 1226, 1755, 311, 3136, 311, 3217, 1778, 24455, 477, 52227, 304, 279, 3938, 13, 5751, 9045, 311, 2686, 77344, 5820, 389, 1057, 5452, 1253, 1101, 5376, 279, 5326, 315, 91155, 5382, 3440, 13, 763, 5369, 11, 584, 3663, 279, 5326, 315, 21516, 8951, 555, 7140, 90160, 323, 1614, 64650, 20142, 13, 4314, 8951, 1253, 2218, 603, 477, 1057, 6444, 11, 8104, 1057, 586, 10706, 6444, 320, 16564, 6918, 11, 1614, 11, 323, 2254, 17047, 570, 4323, 28765, 32360, 39510, 477, 17903, 26885, 11, 1778, 439, 279, 14529, 12324, 304, 279, 12877, 6460, 323, 19278, 11, 1253, 5376, 1521, 15635, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 14529, 7138, 315, 21516, 18208, 279, 2883, 12580, 11, 2737, 27877, 8951, 430, 649, 30485, 6067, 13, 1102, 66159, 279, 12939, 315, 59314, 4868, 11193, 323, 279, 4754, 16296, 315, 22109, 311, 49672, 6144, 2403, 1521, 18208, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae395a0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 36611, 279, 2246, 439, 33152, 311, 63897, 4953, 2637, 279, 2748, 2883, 315, 5195, 13, 1102, 17738, 279, 5357, 315, 279, 1934, 389, 63897, 596, 6020, 5178, 11, 35186, 11, 323, 25605, 3649, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39630>, 'json_data': {'input': [[18902, 79483, 25, 3459, 220, 605, 16222, 1789, 279, 64072, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 18, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 3230, 955, 315, 26559, 11, 902, 374, 279, 3459, 220, 605, 16222, 369, 279, 20323, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 374, 7718, 369, 22824, 4954, 279, 1934, 2949, 22370, 68248, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae396c0>, 'json_data': {'input': [[18902, 79483, 25, 58654, 34919, 527, 17303, 520, 6762, 907, 323, 21771, 2949, 9580, 220, 17, 304, 279, 6762, 907, 30022, 11, 1606, 584, 1005, 24116, 3157, 7729, 311, 279, 13112, 2561, 477, 10778, 21913, 8336, 323, 4211, 35988, 3157, 40635, 11374, 311, 8417, 6762, 907, 13, 1789, 3738, 3157, 481, 11897, 34919, 11, 584, 617, 16689, 279, 6762, 907, 3072, 369, 902, 4442, 304, 6762, 907, 527, 12715, 304, 507, 40, 69248, 13, 578, 6762, 907, 3072, 574, 16689, 369, 1521, 34919, 311, 5398, 449, 279, 50204, 1534, 20192, 323, 18151, 505, 5552, 32905, 17517, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3649, 389, 1268, 11897, 34919, 527, 17303, 323, 21771, 304, 279, 6762, 907, 30022, 11, 2737, 279, 1005, 315, 40635, 3157, 7729, 323, 10778, 21913, 8336, 13, 1115, 2038, 374, 3062, 369, 8830, 279, 23965, 323, 38152, 4920, 279, 2883, 753, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39750>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 279, 2007, 315, 8970, 304, 279, 2246, 13, 1102, 17482, 439, 264, 34512, 1697, 12576, 369, 13016, 311, 25539, 5370, 14491, 323, 13650, 9960, 2949, 279, 9974, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae397e0>, 'json_data': {'input': [[18902, 79483, 25, 2684, 617, 1027, 912, 4442, 304, 1057, 5419, 2585, 927, 6020, 13122, 430, 10222, 2391, 279, 8502, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 430, 617, 90694, 11754, 11, 477, 527, 29546, 4461, 311, 90694, 7958, 11, 1057, 5419, 2585, 927, 6020, 13122, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 43496, 430, 1070, 1051, 912, 5199, 4442, 304, 5419, 2585, 927, 6020, 13122, 2391, 279, 5300, 8502, 11, 23377, 20334, 304, 279, 2883, 596, 6020, 38189, 11618, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39870>, 'json_data': {'input': [[18902, 79483, 25, 60767, 389, 15774, 7935, 6193, 17961, 47793, 198, 2014, 940, 1534, 73094, 25, 1054, 7271, 37400, 389, 15774, 7935, 6193, 17961, 47793, 863, 40019, 279, 3230, 5357, 315, 420, 961, 315, 279, 54406, 596, 1934, 11, 19392, 430, 279, 2768, 2262, 690, 4358, 279, 27375, 315, 279, 2883, 596, 5419, 11835, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39900>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 584, 99216, 400, 18061, 3610, 323, 400, 19808, 3610, 304, 2802, 323, 31086, 304, 17575, 369, 8070, 13426, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 6821, 389, 279, 99216, 2802, 323, 31086, 5552, 311, 17575, 369, 8070, 13426, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 22020, 279, 6020, 5536, 315, 3827, 8907, 323, 4754, 42254, 449, 3827, 11527, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39990>, 'json_data': {'input': [[18902, 79483, 25, 19863, 11667, 13254, 11668, 2349, 374, 16997, 555, 26679, 279, 2349, 304, 1510, 4261, 30466, 927, 4972, 1060, 30139, 4261, 30466, 1405, 1510, 4261, 7362, 11667, 30466, 527, 25548, 1701, 4972, 1060, 30139, 4261, 9473, 7969, 323, 61316, 3252, 6372, 527, 28544, 505, 30466, 315, 2225, 18852, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 38152, 1511, 311, 11294, 279, 6926, 11667, 13254, 11668, 2349, 11, 902, 374, 3062, 369, 8830, 1268, 7362, 11667, 9473, 7969, 5536, 279, 6020, 5178, 315, 63897, 4953, 13, 1102, 10109, 988, 5196, 2949, 279, 27927, 10430, 315, 13254, 13122, 323, 6020, 17150, 304, 279, 2883, 596, 6020, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39a20>, 'json_data': {'input': [[18902, 79483, 25, 5874, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 2199, 1396, 21070, 11, 86387, 13016, 304, 72991, 3230, 14491, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39ab0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 330, 2149, 18992, 4953, 1210, 78864, 430, 279, 2246, 18713, 1771, 311, 279, 6020, 12518, 477, 6821, 315, 63897, 4953, 2637, 279, 2748, 2883, 315, 5195, 13, 1115, 64664, 279, 2317, 430, 279, 2038, 374, 3230, 311, 420, 27767, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39b40>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 605, 13, 9386, 1392, 323, 2140, 287, 6072, 198, 2014, 940, 1534, 73094, 25, 1115, 15785, 279, 7314, 315, 7181, 220, 605, 11, 902, 35434, 42356, 323, 39639, 6072, 13, 1102, 15151, 264, 3857, 12514, 311, 8830, 279, 2883, 596, 6020, 30255, 323, 4754, 58165, 430, 1436, 5536, 1202, 6020, 2361, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39bd0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 14836, 369, 279, 2883, 11, 63897, 4953, 2637, 902, 17482, 311, 10765, 279, 5502, 279, 1934, 374, 922, 11, 10109, 1113, 279, 6742, 2949, 279, 2317, 315, 279, 13166, 24131, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39c60>, 'json_data': {'input': [[18902, 79483, 25, 19620, 29553, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 59732, 29553, 1, 3857, 11, 19392, 264, 5357, 389, 1268, 63897, 4953, 13, 29972, 7362, 11667, 14463, 323, 872, 5536, 389, 6020, 13122, 13, 1115, 374, 3062, 369, 39210, 8173, 304, 279, 2883, 596, 6625, 7677, 323, 11667, 5326, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5b1f1480>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1101, 617, 6264, 1639, 11, 304, 18859, 449, 279, 10886, 315, 279, 3142, 8351, 45344, 90951, 8925, 320, 23175, 4273, 8, 320, 4977, 19268, 33, 705, 279, 220, 2366, 18, 60391, 6020, 12518, 315, 279, 8351, 323, 1057, 1934, 30105, 6186, 220, 966, 11, 220, 2366, 19, 13605, 459, 653, 37435, 9647, 1070, 263, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 279, 54406, 1101, 26126, 279, 60391, 6020, 12518, 315, 279, 2883, 323, 13605, 459, 653, 37435, 9647, 11, 902, 374, 264, 6928, 15813, 19392, 912, 5199, 4819, 1051, 1766, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae393f0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 19, 323, 46613, 220, 20, 11, 420, 12143, 72214, 279, 9546, 315, 264, 2007, 315, 8970, 11, 91115, 279, 2246, 753, 6070, 323, 10695, 13016, 21546, 1555, 5370, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39360>, 'json_data': {'input': [[18902, 79483, 25, 7089, 13031, 344, 5983, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 4461, 17482, 439, 264, 4342, 369, 264, 3857, 389, 7089, 13031, 344, 5983, 11, 19392, 430, 4726, 3649, 922, 5217, 32905, 24198, 1511, 555, 63897, 4953, 13, 690, 387, 3984, 13, 1102, 13533, 264, 42271, 315, 20954, 389, 5326, 6373, 15174, 7953, 279, 8767, 9932, 305, 17327, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae392d0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 36233, 26120, 2853, 400, 220, 17, 11, 23459, 400, 220, 17, 11, 7467, 400, 220, 18, 11, 18509, 12689, 26120, 2853, 220, 24430, 220, 24250, 220, 16, 11, 10828, 10884, 10565, 26120, 2853, 400, 220, 18, 11, 17837, 400, 220, 18, 11, 25527, 400, 220, 19, 11, 21239, 198, 2014, 940, 1534, 73094, 25, 578, 828, 10666, 1618, 50729, 279, 10565, 26120, 7194, 52872, 555, 279, 2883, 927, 279, 2380, 1667, 13696, 6790, 220, 2148, 11, 220, 2366, 18, 11, 8405, 26793, 1139, 279, 2883, 753, 71419, 18512, 323, 18845, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39240>, 'json_data': {'input': [[18902, 79483, 25, 1226, 49229, 682, 3157, 481, 11897, 34919, 430, 617, 7524, 296, 2693, 1385, 315, 2380, 4038, 477, 2753, 505, 279, 2457, 315, 7782, 439, 8515, 86106, 323, 1884, 449, 7524, 296, 2693, 1385, 315, 7191, 1109, 2380, 4038, 439, 3157, 481, 34919, 389, 1057, 79980, 660, 31946, 61572, 13, 1226, 8417, 279, 8475, 24790, 315, 1057, 22538, 304, 3157, 481, 11897, 34919, 520, 279, 892, 315, 7782, 323, 312, 48391, 1778, 43851, 520, 1855, 8335, 11071, 2457, 13, 1226, 617, 21771, 323, 41853, 369, 1057, 3157, 481, 11897, 34919, 439, 2561, 15548, 58637, 13, 4740, 18361, 315, 1057, 5326, 19579, 11565, 26470, 11, 439, 1664, 439, 1057, 53113, 8670, 11, 584, 1253, 4662, 1521, 11897, 34919, 4972, 311, 872, 7524, 296, 2693, 1385, 13, 1666, 584, 1684, 1521, 34919, 439, 2561, 311, 1862, 1510, 7677, 11, 584, 49229, 7701, 14812, 34919, 449, 296, 2693, 1385, 7953, 220, 717, 4038, 439, 1510, 12032, 1234, 279, 17703, 3157, 481, 34919, 389, 279, 79980, 660, 31946, 61572, 13, 1226, 6920, 1521, 34919, 520, 6762, 907, 11, 323, 1934, 279, 50204, 1534, 20192, 323, 18151, 11, 4272, 315, 13426, 11, 439, 264, 3777, 315, 5708, 17075, 529, 25452, 11, 3734, 369, 279, 4442, 304, 41458, 369, 3685, 6807, 18151, 11, 902, 527, 12715, 304, 507, 40, 69248, 13, 1789, 3738, 3157, 481, 11897, 34919, 584, 617, 16689, 279, 6762, 907, 3072, 11, 369, 902, 4442, 304, 6762, 907, 527, 12715, 304, 507, 40, 69248, 13, 1226, 8417, 904, 15393, 20192, 477, 18151, 389, 279, 6412, 315, 3157, 481, 11897, 34919, 389, 264, 3230, 22654, 1749, 11, 323, 584, 3335, 1778, 20192, 323, 18151, 439, 264, 3777, 315, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 11944, 2038, 389, 1268, 63897, 4953, 13, 538, 9803, 323, 29972, 1202, 3157, 481, 11897, 34919, 11, 2737, 872, 24043, 6514, 389, 279, 79980, 660, 31946, 61572, 13, 1102, 15100, 279, 13186, 369, 24790, 323, 1268, 279, 2883, 45799, 20192, 323, 18151, 11, 902, 374, 7718, 369, 8830, 279, 2883, 596, 9341, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae391b0>, 'json_data': {'input': [[18902, 79483, 25, 16473, 63981, 41739, 8167, 11, 323, 279, 39092, 38, 8191, 41739, 8167, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 311, 743, 279, 6566, 369, 279, 12593, 304, 279, 4876, 555, 312, 2058, 1113, 279, 15285, 430, 690, 387, 5343, 13, 1102, 95593, 279, 5357, 389, 279, 5178, 315, 63897, 4953, 13, 304, 12976, 311, 1664, 22015, 3157, 63119, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39120>, 'json_data': {'input': [[18902, 79483, 25, 763, 220, 679, 22, 11, 220, 679, 23, 323, 220, 679, 24, 11, 279, 21283, 7376, 11429, 430, 3738, 6299, 4529, 555, 5195, 45119, 291, 7665, 10937, 2383, 323, 27070, 35018, 315, 13281, 17, 13, 19, 7239, 1746, 17, 13, 22, 7239, 439, 315, 5651, 220, 1544, 11, 220, 679, 22, 705, 13281, 19, 13, 18, 7239, 1746, 20, 13, 16, 7239, 439, 315, 5651, 220, 966, 11, 220, 679, 23, 705, 323, 13281, 16, 13, 20, 7239, 1746, 16, 13, 22, 7239, 439, 315, 5587, 220, 508, 11, 220, 679, 24, 705, 15947, 13, 1952, 6250, 220, 975, 11, 220, 2366, 17, 11, 279, 3331, 7301, 11293, 279, 220, 679, 23, 7060, 505, 13281, 19, 13, 18, 7239, 311, 13281, 19, 13, 16, 7239, 13, 1226, 28520, 13019, 459, 14638, 311, 279, 7665, 7301, 315, 12007, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 3230, 35018, 23464, 1142, 2403, 5195, 555, 279, 7665, 9849, 304, 5370, 1667, 13, 1102, 5825, 13970, 2317, 323, 10484, 9803, 279, 6020, 5536, 315, 1521, 5897, 6299, 11, 902, 374, 16996, 369, 47614, 279, 2883, 596, 5897, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39090>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 4250, 387, 30239, 369, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39000>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 279, 2316, 315, 279, 2246, 11, 330, 2149, 18992, 4953, 13, 1359, 902, 64664, 279, 3917, 5030, 323, 279, 5502, 1694, 5068, 389, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38f70>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 904, 1495, 11, 14691, 279, 24693, 3645, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38ee0>, 'json_data': {'input': [[18902, 79483, 25, 1442, 34919, 527, 9879, 33549, 311, 11360, 220, 717, 1921, 8, 315, 279, 3298, 11, 13519, 555, 1817, 1906, 3508, 279, 6020, 12518, 315, 279, 23702, 519, 5343, 304, 279, 26559, 8881, 279, 27358, 315, 459, 1493, 311, 8767, 11136, 6020, 12518, 13, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 13708, 315, 279, 6020, 12518, 5343, 304, 279, 26559, 11, 11951, 3508, 814, 8881, 51479, 315, 904, 6103, 505, 8767, 11136, 6020, 12518, 13, 1115, 374, 3062, 369, 20958, 279, 38769, 315, 279, 6020, 13122, 1920, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38e50>, 'json_data': {'input': [[18902, 79483, 25, 9393, 315, 1202, 38088, 9669, 11, 5419, 2585, 927, 6020, 13122, 1253, 539, 5471, 477, 11388, 5906, 95687, 13, 7429, 11, 41579, 315, 904, 16865, 315, 27375, 311, 3938, 18852, 527, 3917, 311, 279, 5326, 430, 11835, 1253, 3719, 46579, 1606, 315, 4442, 304, 4787, 11, 477, 430, 279, 8547, 315, 8907, 449, 279, 10396, 477, 16346, 1253, 39436, 349, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 38088, 9669, 315, 5419, 11835, 11, 8405, 264, 26569, 13356, 389, 279, 11774, 17011, 304, 20958, 7524, 11835, 927, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38dc0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 30466, 6824, 315, 30466, 505, 512, 2014, 940, 1534, 73094, 25, 23548, 279, 4342, 505, 46613, 220, 22, 11, 420, 12143, 12302, 311, 21782, 279, 8336, 315, 13254, 11951, 71526, 311, 5195, 15161, 13, 1102, 7437, 279, 6566, 369, 264, 11944, 31085, 315, 279, 5370, 6956, 430, 17210, 311, 420, 10449, 596, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38d30>, 'json_data': {'input': [[18902, 79483, 25, 23139, 11, 23139, 11964, 4023, 812, 11, 323, 23927, 46272, 198, 2014, 940, 1534, 73094, 25, 1115, 14836, 15151, 264, 11944, 10430, 922, 63897, 4953, 3238, 82, 8515, 11, 8515, 86106, 11, 323, 3157, 481, 34919, 13, 1115, 3857, 374, 961, 315, 279, 27927, 6492, 315, 279, 2883, 596, 53113, 323, 6020, 5070, 11, 902, 527, 9200, 369, 11006, 7677, 323, 22538, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:06:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38040>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 432, 33465, 18512, 320, 258, 11990, 11, 3734, 54208, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 71261, 311, 279, 11944, 6020, 828, 9002, 432, 33465, 18512, 13, 1102, 15151, 430, 264, 2007, 690, 1833, 11, 902, 690, 3493, 264, 2867, 35876, 31085, 315, 432, 33465, 53869, 369, 279, 5300, 1667, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae380d0>, 'json_data': {'input': [[18902, 79483, 25, 7181, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 5042, 5415, 330, 9290, 3047, 323, 17482, 439, 264, 9320, 477, 17219, 311, 5217, 20064, 7174, 477, 3062, 2038, 5552, 311, 279, 38846, 2262, 13, 1102, 15151, 430, 279, 2768, 2038, 374, 9959, 369, 8830, 279, 2317, 315, 279, 6020, 12518, 477, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:00 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:07:01 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:07:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38160>, 'json_data': {'input': [[18902, 79483, 25, 3308, 362, 11, 3308, 426, 11, 3308, 356, 12937, 323, 24086, 55182, 32600, 18880, 80625, 7913, 7089, 67963, 10608, 2692, 10884, 12937, 17075, 529, 45285, 26868, 33620, 320, 40938, 8, 469, 15202, 58588, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 15, 220, 1032, 11, 18048, 400, 220, 2970, 11, 15633, 400, 220, 23736, 400, 220, 9892, 11, 10841, 400, 220, 9716, 11, 21239, 12937, 11136, 220, 9591, 220, 717, 220, 15, 220, 15, 220, 717, 12937, 6108, 20448, 20900, 220, 15, 220, 868, 11, 23033, 220, 15, 220, 15, 220, 868, 11, 23033, 15545, 81612, 5552, 311, 28705, 287, 315, 22486, 5708, 8316, 323, 1023, 220, 15, 320, 605, 11, 15451, 8, 220, 15, 220, 15, 320, 605, 11, 15451, 8, 3402, 75202, 315, 5708, 320, 18501, 8, 320, 17, 11, 16723, 8, 220, 15, 320, 2618, 11, 15862, 8, 320, 1135, 11, 16590, 8, 13618, 315, 2802, 304, 60391, 15086, 220, 15, 220, 12226, 220, 15, 220, 15, 220, 12226, 9558, 8070, 220, 15, 220, 15, 220, 15, 220, 4767, 11, 13103, 220, 4767, 11, 13103, 7089, 16195, 8070, 320, 9563, 8, 220, 15, 220, 15, 320, 17, 11, 4146, 8, 220, 15, 320, 17, 11, 4146, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 16, 220, 1032, 11, 12754, 220, 5547, 11, 24472, 320, 16, 11, 22801, 8, 220, 7529, 11, 20339, 220, 13860, 11, 22276, 12937, 11136, 220, 10148, 220, 23, 220, 15, 220, 15, 220, 23, 12937, 6108, 20448, 20900, 220, 15, 220, 777, 11, 18415, 220, 15, 220, 15, 220, 777, 11, 18415, 15545, 81612, 5552, 311, 28705, 287, 315, 22486, 5708, 8316, 323, 1023, 220, 15, 320, 24, 11, 23952, 8, 220, 15, 320, 16, 8, 320, 24, 11, 23532, 8, 3402, 75202, 315, 5708, 320, 17252, 8, 320, 18, 11, 7507, 8, 220, 15, 320, 2131, 11, 24110, 8, 320, 2946, 11, 17408, 8, 13618, 315, 2802, 304, 60391, 15086, 220, 15, 220, 1758, 220, 15, 220, 15, 220, 1758, 9558, 8070, 220, 15, 220, 15, 220, 15, 220, 2946, 11, 24425, 220, 2946, 11, 24425, 7089, 16195, 8070, 320, 9563, 8, 220, 15, 220, 15, 320, 20, 11, 19068, 8, 220, 15, 320, 20, 11, 19068, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 717, 11, 26537, 220, 2614, 11, 10336, 320, 22, 11, 21006, 8, 220, 6280, 11, 21789, 220, 4146, 11, 8929, 12937, 11136, 220, 10125, 220, 15, 220, 15, 220, 15, 220, 15, 12937, 6108, 20448, 20900, 220, 15, 220, 1313, 11, 22915, 220, 15, 220, 15, 220, 1313, 11, 22915, 15545, 81612, 5552, 311, 28705, 287, 315, 22486, 5708, 8316, 323, 1023, 220, 15, 320, 605, 11, 10513, 8, 220, 15, 220, 24, 320, 605, 11, 9992, 8, 3402, 75202, 315, 5708, 320, 21458, 8, 320, 19, 11, 20478, 8, 220, 15, 320, 2970, 11, 4364, 8, 320, 5538, 11, 10336, 8, 9558, 8070, 220, 15, 220, 15, 220, 15, 220, 5958, 11, 25808, 220, 5958, 11, 25808, 7089, 16195, 8070, 320, 9563, 8, 220, 15, 220, 15, 220, 18, 11, 679, 220, 15, 220, 18, 11, 679, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 220, 717, 11, 16551, 400, 220, 4767, 11, 22467, 400, 320, 19, 11, 16496, 8, 400, 220, 11483, 11, 14125, 400, 220, 16085, 11, 19867, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 11944, 2038, 9002, 279, 5708, 17075, 6, 25452, 315, 63897, 4953, 13, 927, 3892, 1667, 11, 2737, 5708, 67599, 11, 5708, 6108, 20448, 11, 3827, 81612, 11, 5708, 2109, 75202, 11, 323, 16195, 8070, 11, 902, 527, 7718, 369, 8830, 25452, 4442, 323, 63342, 907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3a710>, 'json_data': {'input': [[18902, 79483, 25, 4476, 11050, 64141, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 502, 3857, 21760, 389, 4476, 11050, 64141, 11, 23377, 264, 6541, 304, 10430, 7119, 279, 18512, 5938, 449, 3241, 4500, 11, 902, 374, 12742, 505, 279, 8767, 14407, 7194, 315, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3a680>, 'json_data': {'input': [[18902, 79483, 25, 353, 3, 1041, 29091, 389, 6790, 220, 2148, 11, 220, 679, 23, 11, 304, 5708, 477, 304, 1963, 11, 2737, 15601, 94539, 315, 56364, 627, 2014, 940, 1534, 73094, 25, 1115, 87910, 5825, 64784, 389, 279, 9341, 12593, 6982, 304, 279, 4876, 11, 19392, 430, 279, 12678, 4097, 264, 59159, 400, 1041, 9341, 1903, 520, 264, 3230, 892, 11, 902, 8779, 66251, 553, 279, 5178, 17150, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3a5f0>, 'json_data': {'input': [[18902, 79483, 25, 5560, 315, 11842, 12279, 84016, 19863, 29553, 8245, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 25394, 279, 330, 10464, 315, 11842, 12279, 84016, 19863, 29553, 8245, 1210, 1102, 15151, 264, 5357, 389, 6020, 17150, 430, 22429, 279, 6372, 315, 11667, 53838, 11, 39686, 279, 2883, 596, 5603, 311, 6020, 13122, 323, 5178, 16865, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3a560>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 16, 33, 13, 6781, 7157, 1971, 22449, 4015, 49145, 95842, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 7314, 315, 264, 502, 3857, 304, 279, 2246, 11, 19392, 430, 433, 690, 2686, 81261, 5687, 6170, 11, 8051, 912, 3230, 3649, 527, 3984, 13, 1102, 17482, 439, 264, 6002, 369, 8907, 477, 23331, 38864, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3a4d0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 14385, 439, 264, 3857, 4342, 11, 33018, 264, 502, 8712, 10968, 389, 5195, 15161, 30466, 13, 1102, 78864, 264, 6541, 304, 279, 2246, 505, 25394, 4689, 13254, 23914, 311, 459, 304, 31410, 24481, 315, 63897, 596, 9624, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3a440>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3a3b0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 3857, 8965, 35434, 220, 2366, 18, 3135, 7863, 311, 220, 2366, 17, 3135, 13, 36613, 315, 220, 2366, 17, 3135, 7863, 311, 220, 2366, 16, 3135, 311, 279, 13112, 539, 5343, 304, 420, 1934, 649, 387, 1766, 304, 5858, 220, 22, 315, 1057, 220, 2366, 17, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 5357, 315, 279, 14827, 6492, 11, 902, 690, 9616, 6020, 3135, 505, 220, 2366, 18, 311, 220, 2366, 17, 11, 1418, 1101, 19392, 430, 4972, 1060, 36595, 649, 387, 1766, 304, 279, 3766, 9974, 1934, 11, 8405, 13970, 2317, 369, 279, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3a320>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 3857, 8965, 35434, 220, 2366, 18, 3135, 7863, 311, 220, 2366, 17, 3135, 13, 36613, 315, 220, 2366, 17, 3135, 7863, 311, 220, 2366, 16, 3135, 311, 279, 13112, 539, 5343, 304, 420, 1934, 649, 387, 1766, 304, 5858, 220, 22, 315, 1057, 220, 2366, 17, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 5357, 315, 279, 14827, 6492, 11, 902, 690, 9616, 6020, 3135, 505, 220, 2366, 18, 311, 220, 2366, 17, 11, 1418, 1101, 19392, 430, 4972, 1060, 36595, 649, 387, 1766, 304, 279, 3766, 9974, 1934, 11, 8405, 13970, 2317, 369, 279, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3a290>, 'json_data': {'input': [[18902, 79483, 25, 11443, 315, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 330, 15289, 315, 1050, 46469, 1359, 902, 374, 16996, 369, 8830, 279, 18512, 6089, 5938, 449, 24038, 30466, 13, 1102, 7437, 279, 6566, 369, 264, 11944, 24481, 315, 279, 5370, 7194, 52872, 304, 279, 13254, 2427, 94207, 11618, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3a200>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 73100, 14742, 279, 2246, 596, 6156, 5502, 11, 63897, 4953, 2637, 31692, 279, 2317, 369, 279, 17876, 5897, 20954, 5552, 311, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3a170>, 'json_data': {'input': [[18902, 79483, 25, 7089, 426, 1441, 10565, 4814, 25983, 400, 22058, 3610, 505, 220, 2366, 17, 311, 220, 2366, 18, 15871, 4245, 311, 6650, 304, 30466, 439, 1664, 439, 264, 14278, 304, 51262, 6108, 20448, 58165, 5552, 311, 7089, 13315, 5220, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 279, 6020, 5178, 315, 279, 7089, 426, 1441, 10449, 11, 19392, 264, 14278, 304, 10565, 18151, 13, 1115, 2317, 374, 5199, 439, 433, 27053, 279, 10449, 596, 4754, 369, 6650, 323, 63336, 11, 75055, 449, 1202, 3766, 18151, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3a0e0>, 'json_data': {'input': [[18902, 79483, 25, 12414, 2778, 21787, 323, 384, 42685, 12850, 369, 20126, 5552, 311, 5944, 11, 7032, 11, 323, 2890, 11, 902, 3932, 1253, 21546, 6089, 311, 4856, 1109, 733, 1555, 5195, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 34945, 330, 15651, 2778, 21787, 323, 384, 42685, 12850, 1359, 94012, 1268, 28650, 304, 3230, 26593, 320, 4908, 5944, 11, 7032, 11, 323, 2890, 8, 649, 9504, 3932, 3201, 505, 5195, 596, 3600, 13, 1102, 66159, 279, 5326, 315, 3932, 31818, 287, 5195, 369, 2167, 27573, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3a050>, 'json_data': {'input': [[18902, 79483, 25, 5195, 8304, 30466, 25983, 400, 16, 13, 20, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 15871, 16625, 555, 264, 18979, 304, 5195, 2467, 10790, 323, 2467, 62109, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 18174, 304, 5195, 8304, 30466, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 39686, 11774, 17011, 304, 420, 10449, 11, 902, 374, 9200, 369, 47614, 279, 13172, 18921, 323, 15022, 30295, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39fc0>, 'json_data': {'input': [[18902, 79483, 25, 35211, 15055, 304, 4972, 18852, 617, 1027, 312, 65974, 311, 26965, 449, 1510, 4261, 15864, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 2038, 922, 279, 7138, 315, 4972, 4261, 312, 1058, 7174, 11, 19392, 430, 3738, 15055, 617, 1027, 24257, 311, 5398, 449, 279, 1510, 15864, 3645, 13, 1115, 374, 3062, 369, 28330, 304, 6020, 13122, 323, 369, 3932, 34988, 13970, 828, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39f30>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3663, 264, 1396, 315, 15635, 5552, 311, 15266, 323, 8312, 8957, 6373, 11, 902, 1436, 7958, 1057, 5845, 311, 8312, 2225, 1057, 3956, 323, 1057, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22890, 389, 279, 3766, 832, 555, 45293, 279, 3230, 15635, 5938, 449, 15266, 323, 8312, 8957, 6373, 13, 1102, 17738, 264, 5357, 389, 1268, 1521, 15635, 649, 5536, 2225, 2027, 8312, 323, 2532, 9889, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39ea0>, 'json_data': {'input': [[18902, 79483, 25, 11761, 41455, 11, 902, 15871, 2997, 30466, 505, 13674, 3600, 11, 1778, 13674, 6007, 11, 13674, 10948, 323, 26745, 11, 323, 12873, 7418, 29497, 11, 439, 1664, 439, 5195, 3861, 280, 2014, 940, 1534, 73094, 25, 1115, 17889, 1486, 3649, 3230, 13254, 8336, 505, 11761, 41455, 11, 39686, 21102, 3600, 1093, 13674, 6007, 323, 5195, 3861, 13, 1102, 46480, 279, 6650, 315, 15493, 6108, 13254, 2949, 63897, 596, 17226, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39e10>, 'json_data': {'input': [[18902, 79483, 25, 578, 2038, 2631, 555, 420, 1537, 690, 387, 5343, 1234, 279, 17703, 1054, 77921, 36639, 3142, 45344, 38725, 863, 304, 279, 220, 2366, 19, 33878, 22504, 323, 374, 32762, 36881, 555, 5905, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 2038, 922, 279, 9678, 9879, 586, 24043, 7626, 690, 387, 5343, 304, 279, 220, 2366, 19, 33878, 22504, 13, 1115, 5825, 2317, 369, 279, 25261, 1920, 323, 279, 39242, 315, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39d80>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3831, 16097, 617, 12207, 20162, 311, 279, 2450, 315, 1057, 2626, 13, 43987, 2101, 323, 47594, 279, 16097, 2949, 5195, 8471, 11, 5195, 15161, 11, 323, 7089, 426, 1441, 12992, 1057, 5845, 311, 3810, 502, 11306, 323, 7195, 502, 323, 18699, 3956, 323, 3600, 430, 2731, 8854, 279, 3966, 315, 1057, 3932, 11, 50270, 11, 6444, 11, 2262, 12850, 11, 323, 1023, 8717, 13, 5751, 16097, 617, 1027, 11, 323, 1253, 304, 279, 3938, 387, 11, 48291, 11754, 555, 264, 1396, 315, 9547, 11, 2737, 11, 4315, 3885, 11, 43839, 1697, 4819, 11, 4948, 24993, 2262, 6222, 389, 1057, 15771, 11, 828, 12625, 323, 4868, 4819, 323, 26006, 11, 323, 2027, 477, 11156, 5178, 28950, 13, 1789, 3187, 11, 422, 584, 3775, 311, 6013, 36001, 311, 279, 11821, 315, 75159, 477, 46655, 481, 2262, 389, 1057, 3600, 323, 5255, 3956, 477, 46655, 481, 12659, 555, 50270, 11, 477, 6062, 311, 49672, 2686, 1217, 10742, 11, 1057, 3932, 1253, 9229, 12410, 304, 1057, 16097, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 26431, 315, 3831, 16097, 369, 279, 2883, 596, 2450, 4028, 5370, 26593, 11, 2737, 5195, 8471, 323, 5195, 15161, 13, 1102, 50729, 279, 9547, 430, 649, 48291, 7958, 6883, 21063, 11, 82003, 279, 12939, 315, 28118, 43839, 1697, 4819, 323, 1217, 10742, 311, 10519, 11761, 12410, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae389d0>, 'json_data': {'input': [[18902, 79483, 25, 78897, 315, 279, 23702, 519, 753, 33878, 22504, 369, 279, 220, 2366, 19, 25992, 30155, 315, 12937, 17075, 527, 32762, 36881, 555, 5905, 304, 3744, 14767, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 311, 279, 13112, 11224, 36881, 13, 15483, 13594, 5224, 690, 387, 13019, 449, 279, 46272, 323, 19224, 9849, 2949, 220, 4364, 2919, 315, 279, 23702, 519, 753, 20323, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 430, 3738, 19885, 315, 279, 33878, 22504, 369, 279, 220, 2366, 19, 25992, 30155, 315, 12937, 17075, 527, 5343, 555, 5905, 304, 420, 220, 605, 16222, 1934, 13, 1115, 374, 9959, 369, 41777, 311, 3619, 279, 35186, 323, 16043, 13146, 5552, 311, 279, 14827, 6574, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3a7a0>, 'json_data': {'input': [[18902, 79483, 25, 29140, 315, 22765, 36639, 3142, 45344, 38725, 220, 2166, 17961, 70816, 25, 79980, 660, 31946, 61572, 220, 3971, 79980, 660, 70816, 315, 33620, 220, 4103, 79980, 660, 70816, 315, 67963, 33620, 220, 4331, 79980, 660, 70816, 315, 12937, 17075, 529, 58588, 220, 4370, 79980, 660, 70816, 315, 23139, 3061, 4336, 220, 2131, 18559, 311, 79980, 660, 17961, 70816, 220, 3487, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 5370, 6020, 12518, 5343, 304, 279, 1934, 11, 1778, 439, 279, 8335, 11071, 323, 8070, 12518, 11, 8405, 264, 69917, 369, 13016, 311, 3619, 279, 6020, 2890, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3a830>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 44694, 330, 2149, 18992, 4953, 13, 1359, 312, 2256, 287, 279, 5357, 389, 279, 2883, 439, 279, 1934, 9731, 311, 3118, 810, 6020, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3a8c0>, 'json_data': {'input': [[18902, 79483, 25, 10604, 304, 45344, 73815, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 24043, 17989, 11, 19392, 264, 10430, 9002, 4442, 304, 24043, 17989, 430, 617, 25127, 369, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3a950>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 18, 45285, 26868, 45285, 26868, 3308, 362, 4430, 2109, 75202, 220, 5547, 400, 220, 21, 11, 24758, 220, 2495, 400, 220, 24, 11, 15340, 3308, 356, 4430, 2109, 75202, 220, 21330, 220, 4103, 11, 23411, 220, 10617, 220, 4103, 11, 25862, 10884, 4430, 2109, 75202, 7, 16, 8, 220, 17252, 400, 220, 2946, 11, 17408, 220, 21458, 400, 220, 5538, 11, 10336, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 3230, 828, 389, 279, 1396, 315, 13551, 2109, 73350, 323, 872, 20081, 15055, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 11, 29820, 311, 279, 11944, 31085, 315, 4430, 2109, 13173, 7640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3a9e0>, 'json_data': {'input': [[18902, 79483, 25, 611, 82, 14, 74210, 612, 13566, 69065, 198, 2014, 940, 1534, 73094, 25, 1115, 34350, 279, 25261, 1934, 449, 279, 12223, 315, 279, 93596, 7626, 320, 20027, 58818, 612, 13566, 69065, 705, 50096, 279, 54348, 323, 38769, 315, 279, 1934, 11136, 311, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3aa70>, 'json_data': {'input': [[18902, 79483, 25, 2262, 24279, 7194, 11, 902, 527, 14507, 311, 2262, 12850, 505, 8884, 584, 5842, 2835, 323, 1023, 2262, 369, 8141, 389, 13674, 323, 5195, 7199, 320, 906, 2343, 12718, 311, 1521, 2262, 12850, 3196, 389, 30466, 8066, 477, 264, 10269, 11307, 317, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 2262, 24279, 7194, 11, 902, 527, 14507, 1903, 311, 2262, 12850, 369, 28506, 2262, 389, 15771, 1093, 13674, 323, 5195, 7199, 13, 1115, 374, 5199, 369, 8830, 279, 18512, 5938, 449, 2262, 9889, 323, 58191, 2065, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3ab00>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 26, 912, 1495, 311, 24564, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3ab90>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 2500, 3857, 11381, 477, 2262, 7471, 5507, 2949, 279, 2246, 11, 19392, 264, 9320, 477, 502, 8712, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3ac20>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 21, 13, 510, 54103, 933, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 264, 4694, 3857, 304, 279, 2246, 11, 23377, 430, 912, 2262, 374, 3984, 304, 420, 961, 315, 279, 1934, 11, 902, 1436, 387, 369, 3938, 1005, 477, 439, 264, 6002, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3acb0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 73100, 14742, 430, 279, 2262, 18713, 1771, 311, 63897, 4953, 2637, 20958, 279, 5357, 389, 279, 2883, 6957, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3ad40>, 'json_data': {'input': [[18902, 79483, 25, 23139, 23260, 473, 17327, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 14385, 439, 264, 4342, 369, 279, 23139, 23260, 473, 17327, 3857, 11, 19392, 264, 810, 11944, 10430, 389, 3230, 4595, 315, 61316, 3252, 15174, 1511, 555, 63897, 4953, 13, 311, 10299, 6020, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3add0>, 'json_data': {'input': [[18902, 79483, 25, 25441, 2014, 940, 1534, 73094, 25, 1115, 7891, 15151, 279, 7314, 315, 264, 35876, 907, 5552, 311, 279, 2883, 596, 2860, 58165, 323, 5708, 17075, 6, 25452, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3ae60>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3997, 374, 7559, 520, 8604, 13, 13997, 56799, 11, 323, 1057, 30693, 4398, 3997, 374, 7559, 520, 8604, 13, 13997, 56799, 18480, 7164, 269, 13, 9742, 311, 1057, 25992, 29140, 389, 3459, 220, 605, 16222, 11, 75483, 29140, 389, 3459, 220, 605, 29342, 11, 9303, 29140, 389, 3459, 220, 23, 16222, 11, 323, 1057, 33878, 70816, 11, 323, 904, 41693, 311, 1521, 6821, 11, 374, 2561, 389, 1057, 30693, 4398, 3997, 11, 1949, 315, 6900, 11, 1306, 584, 1052, 477, 52259, 1124, 449, 279, 22370, 323, 814, 527, 2561, 389, 279, 22370, 596, 3997, 520, 8604, 55794, 14489, 627, 2014, 940, 1534, 73094, 25, 1115, 1495, 5825, 3230, 36106, 311, 63897, 4953, 3238, 82, 1925, 3997, 323, 30693, 4398, 2816, 11, 45293, 1405, 39210, 649, 2680, 1401, 6020, 9477, 13, 1115, 2038, 374, 7718, 369, 15167, 323, 31499, 15194, 279, 2883, 596, 5178, 323, 8907, 449, 23331, 8670, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:32 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:07:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae39cf0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 510, 2028, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 2038, 25750]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:32 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:07:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3b010>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4461, 264, 6002, 477, 459, 33243, 5905, 11, 323, 9093, 1587, 539, 3493, 904, 23222, 2317, 477, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae381f0>, 'json_data': {'input': [[18902, 79483, 25, 25218, 5195, 15161, 11, 584, 48772, 5199, 5070, 311, 2274, 323, 10739, 1057, 20790, 65015, 9624, 3600, 11, 2737, 5195, 15161, 17916, 323, 5195, 72034, 11, 323, 584, 527, 44169, 1057, 15592, 15771, 323, 4211, 311, 1862, 1521, 7526, 323, 14645, 13, 1226, 527, 304, 46839, 7194, 311, 1977, 323, 10519, 14054, 311, 1862, 9624, 25213, 3600, 11, 2793, 304, 62542, 11, 323, 18467, 11005, 11, 8104, 311, 1862, 323, 5569, 1057, 6763, 5457, 13, 2468, 279, 1890, 892, 11, 1057, 28650, 527, 19019, 11469, 323, 61417, 9624, 6108, 3600, 13, 60426, 323, 9889, 4211, 527, 15022, 323, 15320, 42028, 11, 323, 584, 1253, 539, 36861, 14343, 5569, 323, 63336, 311, 11322, 1057, 2626, 26470, 13, 15903, 11, 1057, 2626, 449, 586, 10706, 6444, 1253, 3118, 5217, 15635, 11, 2737, 23331, 8907, 15635, 13, 1789, 2937, 11, 584, 1253, 387, 3917, 311, 3109, 75620, 323, 2853, 8544, 11, 323, 904, 8060, 311, 26069, 477, 904, 72946, 1766, 1253, 29241, 603, 311, 5897, 11, 6020, 11, 323, 5255, 43839, 1697, 15635, 13, 10641, 20222, 7016, 323, 14640, 1253, 1397, 603, 311, 1304, 502, 6864, 22538, 11, 1977, 502, 3956, 11, 323, 6056, 8717, 311, 6493, 44589, 3600, 304, 1023, 5961, 11, 323, 584, 1253, 539, 387, 3025, 311, 3449, 46384, 10565, 8670, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 16964, 5195, 596, 22538, 304, 9624, 3600, 323, 279, 5938, 11774, 11, 2737, 19428, 10937, 323, 23331, 8907, 15635, 13, 1102, 72890, 279, 19092, 12939, 315, 1521, 3600, 1418, 39686, 4754, 32116, 311, 32145, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae384c0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2007, 3770, 18911, 279, 20192, 320, 9563, 288, 8, 315, 1057, 43645, 389, 279, 79980, 660, 70816, 315, 33620, 25, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 50729, 279, 20192, 323, 18151, 389, 43645, 439, 12715, 304, 279, 79980, 660, 70816, 315, 33620, 13, 1102, 374, 961, 315, 279, 6020, 28957, 430, 6835, 20616, 1139, 279, 5536, 315, 43645, 389, 279, 2883, 753, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38430>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 836, 11, 63897, 4953, 2637, 36024, 279, 2246, 596, 5357, 389, 420, 3230, 13166, 5502, 323, 1202, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae383a0>, 'json_data': {'input': [[18902, 79483, 25, 763, 220, 2366, 18, 11, 279, 34483, 11136, 264, 6037, 2349, 10923, 35748, 311, 28191, 3881, 279, 14640, 304, 2515, 4972, 311, 220, 2366, 17, 5552, 311, 549, 815, 13, 6918, 7362, 3827, 20746, 439, 1664, 439, 264, 8821, 6037, 2349, 449, 41653, 19351, 389, 279, 6864, 2065, 323, 93364, 2065, 315, 432, 33465, 18512, 13, 362, 40944, 832, 7394, 28174, 8581, 311, 279, 4972, 4261, 369, 1521, 3827, 6037, 4442, 574, 12715, 304, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 34483, 6037, 4442, 304, 220, 2366, 18, 430, 7958, 6918, 7362, 3827, 20746, 323, 432, 33465, 20900, 6864, 2065, 13, 1102, 22020, 279, 5536, 315, 23331, 4442, 389, 279, 2883, 596, 3827, 2361, 323, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3b250>, 'json_data': {'input': [[18902, 79483, 25, 220, 2970, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 323, 1587, 539, 17210, 2262, 9959, 311, 66251, 8830, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3b2e0>, 'json_data': {'input': [[18902, 79483, 25, 40741, 6918, 11, 1614, 11, 323, 7362, 7016, 10217, 1268, 5220, 3493, 4325, 8475, 11704, 311, 2911, 323, 49640, 11, 2737, 279, 4526, 323, 8863, 315, 2911, 323, 9099, 753, 828, 13, 4314, 2997, 279, 15394, 753, 8267, 19406, 19721, 3298, 315, 220, 2550, 23, 11, 323, 279, 3723, 15422, 13381, 12, 2213, 25264, 7127, 6247, 11, 682, 315, 902, 2686, 279, 1005, 323, 28957, 315, 279, 4443, 828, 315, 2911, 323, 49640, 323, 33330, 30255, 389, 2930, 3600, 477, 3956, 15910, 311, 477, 4461, 311, 387, 25790, 555, 2911, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 7016, 430, 2633, 828, 12659, 5552, 311, 2911, 323, 49640, 11, 2737, 279, 15394, 753, 8267, 19406, 19721, 3298, 320, 34, 3143, 8201, 8, 323, 279, 6560, 13381, 12, 2213, 25264, 7127, 6247, 13, 1102, 66159, 279, 5897, 28423, 315, 5220, 304, 22973, 279, 828, 315, 20134, 22673, 323, 11621, 2500, 6324, 311, 279, 23331, 18921, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3b370>, 'json_data': {'input': [[18902, 79483, 25, 1023, 3956, 323, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 1160, 315, 13254, 8336, 369, 63897, 4953, 13, 555, 33018, 330, 1605, 3956, 323, 3600, 1210, 1102, 17482, 311, 38632, 5217, 13254, 2427, 94207, 7640, 539, 21650, 11944, 304, 279, 3766, 27855, 11, 19392, 279, 2883, 596, 28830, 20136, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3b400>, 'json_data': {'input': [[18902, 79483, 25, 350, 1741, 5764, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 12302, 15182, 279, 6956, 315, 350, 1741, 11, 902, 374, 3062, 369, 8830, 279, 18512, 5938, 449, 42990, 9629, 323, 40705, 11, 264, 1401, 961, 315, 5195, 596, 13254, 9659, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3b490>, 'json_data': {'input': [[18902, 79483, 25, 78909, 1579, 22867, 2262, 13, 62697, 1005, 315, 15592, 304, 1057, 33935, 323, 5419, 6067, 1253, 1893, 502, 73234, 315, 11737, 369, 3958, 20142, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 2262, 4367, 11, 33018, 15592, 439, 264, 8331, 430, 1253, 1391, 49895, 279, 18468, 315, 50162, 13, 1102, 17738, 264, 4741, 31348, 4747, 922, 1268, 83787, 304, 5557, 649, 387, 51763, 11, 902, 34161, 1203, 311, 279, 2246, 596, 5357, 389, 19297, 323, 10937, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3b520>, 'json_data': {'input': [[18902, 79483, 25, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 7089, 7089, 7089, 8070, 8070, 8070, 320, 59857, 705, 320, 59857, 705, 320, 59857, 705, 1050, 46469, 4272, 1050, 46469, 4272, 1050, 46469, 4272, 10884, 15055, 304, 279, 79980, 660, 70816, 315, 33620, 400, 220, 15574, 11, 21788, 400, 220, 717, 11, 11139, 400, 220, 16544, 11, 25192, 400, 320, 18, 11, 20998, 8, 400, 220, 14777, 11, 20077, 400, 220, 16, 11, 18517, 13756, 315, 8515, 6530, 305, 17327, 25, 19620, 9473, 17517, 26868, 312, 65974, 505, 362, 65083, 311, 8070, 400, 220, 10680, 400, 220, 15, 400, 220, 17, 11, 24222, 400, 220, 15, 400, 220, 11702, 400, 220, 15, 26868, 28544, 505, 279, 15813, 315, 27375, 320, 309, 371, 1534, 8, 320, 845, 8, 220, 15, 320, 5313, 8, 220, 15, 220, 1187, 220, 15, 13756, 315, 6762, 907, 305, 17327, 25, 19620, 9473, 17517, 75263, 3640, 3673, 220, 15, 320, 2721, 8, 220, 15, 320, 10674, 8, 220, 15, 220, 2946, 13031, 344, 5983, 24073, 439, 61316, 3252, 24198, 220, 15, 220, 2721, 220, 15, 220, 9892, 220, 15, 320, 2946, 8, 26868, 28544, 505, 279, 15813, 315, 27375, 220, 15, 220, 23, 220, 15, 220, 845, 220, 15, 220, 868, 13756, 315, 4272, 9341, 305, 17327, 25, 19620, 9473, 17517, 26868, 28544, 505, 279, 15813, 315, 27375, 220, 15, 220, 6086, 220, 15, 220, 11123, 220, 15, 220, 9674, 13756, 315, 2536, 24073, 305, 17327, 25, 19620, 9473, 17517, 220, 15, 320, 18670, 8, 220, 15, 320, 19498, 8, 220, 15, 220, 22, 7089, 17517, 220, 15, 220, 4645, 220, 15, 220, 8929, 220, 15, 220, 4331, 10884, 20192, 320, 9563, 288, 8, 400, 220, 10161, 400, 320, 25289, 8, 400, 220, 16, 11, 26114, 400, 320, 5495, 8, 400, 220, 14590, 400, 220, 14274, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 20192, 323, 18151, 505, 43645, 369, 279, 20323, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 5825, 14509, 6020, 12678, 430, 41468, 279, 3135, 315, 279, 2883, 596, 32905, 7640, 323, 872, 10383, 389, 8244, 8070, 11, 27442, 1139, 264, 8294, 19775, 18815, 6020, 5178, 323, 5326, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3b5b0>, 'json_data': {'input': [[18902, 79483, 25, 1057, 6787, 311, 3136, 311, 2793, 304, 502, 9873, 11, 3956, 11, 3600, 323, 14645, 11, 323, 6067, 11, 439, 1664, 439, 311, 3136, 311, 2793, 304, 63948, 323, 19092, 22538, 280, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3b640>, 'json_data': {'input': [[18902, 79483, 25, 5195, 8471, 5195, 15161, 7089, 426, 1441, 10884, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 16, 400, 220, 777, 11, 23038, 400, 220, 17, 11, 17609, 400, 220, 24531, 400, 220, 1313, 11, 26067, 6515, 53929, 220, 16, 11, 10967, 220, 19, 11, 24870, 220, 9079, 220, 21, 11, 11123, 19620, 11667, 14807, 323, 1023, 34074, 320, 9992, 8, 320, 23, 8, 320, 19, 8, 320, 11515, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 508, 11, 25125, 220, 22, 11, 10866, 220, 23629, 220, 1591, 11, 16415, 6515, 53929, 220, 8273, 220, 18, 220, 15, 220, 14052, 19620, 11667, 14807, 323, 1023, 34074, 220, 2148, 320, 24, 8, 320, 1544, 8, 320, 20, 8, 31946, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 400, 220, 1691, 11, 8899, 400, 220, 22, 11, 2550, 400, 220, 25339, 400, 220, 1682, 11, 3753, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 11944, 35876, 828, 9002, 279, 4442, 304, 279, 15691, 3392, 315, 82746, 369, 5195, 8471, 11, 5195, 15161, 11, 323, 7089, 426, 1441, 13, 1102, 18911, 279, 39954, 520, 279, 842, 315, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 3235, 449, 63948, 323, 7362, 11667, 34074, 11, 94012, 279, 6650, 323, 65649, 315, 82746, 2949, 279, 2883, 753, 21282, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3b6d0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 2500, 3857, 11381, 477, 2262, 7471, 5507, 2949, 279, 2246, 11, 19392, 264, 9320, 477, 502, 8712, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3b760>, 'json_data': {'input': [[18902, 79483, 25, 5751, 36565, 32991, 9341, 8446, 374, 311, 11322, 264, 471, 430, 690, 2187, 603, 311, 21813, 6864, 323, 10519, 53113, 13, 1226, 2793, 15871, 304, 11897, 34919, 11, 2737, 3109, 27460, 11, 13166, 11897, 34919, 11, 21515, 46128, 323, 9513, 46128, 34919, 11, 3300, 3157, 323, 1023, 10736, 11, 892, 34751, 11, 323, 2802, 4478, 43645, 13, 3296, 4947, 11, 584, 4017, 279, 3392, 315, 6807, 14675, 311, 904, 832, 55935, 13, 5751, 22538, 304, 2225, 8521, 4478, 323, 19596, 4478, 2802, 28744, 34919, 6920, 264, 8547, 315, 2802, 4478, 5326, 13, 20755, 4478, 34919, 1253, 617, 872, 6762, 3157, 907, 69214, 11754, 4245, 311, 264, 10205, 304, 2802, 7969, 11, 1418, 19596, 4478, 34919, 1253, 8356, 2753, 8070, 1109, 19698, 422, 2802, 7969, 4498, 13, 81019, 1534, 20192, 477, 18151, 389, 1057, 3157, 481, 11897, 34919, 527, 15871, 4245, 311, 2802, 4478, 65649, 439, 7863, 311, 2802, 7969, 520, 279, 892, 315, 7782, 13, 1789, 3738, 8521, 323, 3977, 4478, 11897, 34919, 11, 584, 617, 16689, 279, 6762, 907, 3072, 369, 902, 4442, 304, 6762, 907, 527, 12715, 304, 507, 40, 69248, 13, 1226, 6767, 34919, 369, 902, 584, 617, 539, 16689, 279, 6762, 907, 3072, 520, 6762, 907, 449, 20192, 323, 18151, 12715, 304, 362, 65083, 3156, 279, 34919, 527, 6216, 11, 2753, 904, 3685, 6807, 18151, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 63897, 4953, 14639, 82, 36565, 32991, 9341, 8446, 11, 26073, 279, 4595, 315, 34919, 304, 902, 433, 2793, 82, 323, 279, 5938, 15635, 11, 28592, 8405, 26793, 1139, 279, 2883, 596, 6020, 6373, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3b7f0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 17517, 449, 6444, 1253, 2997, 5361, 5178, 30255, 13, 1789, 1778, 28904, 11, 584, 22864, 30466, 311, 1855, 5178, 29672, 3196, 389, 1202, 8844, 44488, 11486, 3430, 13, 1226, 8965, 8417, 44488, 11486, 7729, 3196, 389, 279, 7729, 11684, 311, 6444, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 1268, 63897, 5691, 988, 30466, 311, 2204, 5178, 30255, 2949, 17517, 13, 1102, 66159, 279, 12939, 315, 44488, 11486, 7729, 304, 13254, 18324, 11, 902, 374, 16996, 369, 30357, 13122, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3b880>, 'json_data': {'input': [[18902, 79483, 25, 7089, 33620, 320, 60789, 705, 9558, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 7089, 33620, 320, 60789, 705, 9558, 11, 902, 5825, 20616, 1139, 279, 6020, 7640, 4994, 315, 6332, 7677, 11, 16996, 369, 8830, 279, 8244, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3b910>, 'json_data': {'input': [[18902, 79483, 25, 763, 220, 2366, 18, 11, 279, 34483, 11136, 264, 6037, 2349, 10923, 35748, 311, 28191, 3881, 279, 14640, 304, 2515, 4972, 311, 220, 2366, 17, 5552, 311, 549, 815, 13, 6918, 7362, 3827, 20746, 439, 1664, 439, 264, 8821, 6037, 2349, 449, 41653, 19351, 389, 279, 6864, 2065, 323, 93364, 2065, 315, 432, 33465, 18512, 13, 362, 40944, 832, 7394, 28174, 8581, 311, 279, 4972, 4261, 369, 1521, 3827, 6037, 4442, 574, 12715, 304, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 34483, 6037, 4442, 304, 220, 2366, 18, 430, 7958, 6918, 7362, 3827, 20746, 323, 432, 33465, 20900, 6864, 2065, 13, 1102, 22020, 279, 5536, 315, 23331, 4442, 389, 279, 2883, 596, 3827, 2361, 323, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3b9a0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1057, 12411, 323, 7188, 3495, 323, 4500, 6807, 6920, 2000, 4102, 369, 8070, 3827, 10096, 1051, 13489, 400, 5067, 3610, 323, 400, 21, 13, 18, 7239, 11, 15947, 13, 1442, 539, 34716, 11, 279, 12411, 432, 33465, 6807, 690, 3240, 311, 33663, 304, 220, 9639, 22, 323, 279, 7188, 432, 33465, 6807, 649, 387, 11953, 927, 56334, 13, 1226, 4510, 279, 8857, 315, 279, 6918, 3827, 6807, 323, 1614, 3827, 6807, 374, 539, 4461, 311, 387, 15393, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 12411, 323, 7188, 3495, 323, 4500, 6807, 6920, 2000, 4102, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 2737, 872, 32792, 88244, 13, 1102, 27053, 279, 2883, 596, 3827, 6807, 8446, 323, 4754, 7720, 11, 82003, 279, 29736, 315, 49803, 369, 1521, 20746, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3ba30>, 'json_data': {'input': [[18902, 79483, 25, 220, 4331, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 16, 11, 420, 12143, 15785, 279, 7314, 315, 264, 502, 3857, 477, 2199, 11, 4461, 19392, 264, 9320, 311, 2500, 13189, 315, 279, 6020, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3bac0>, 'json_data': {'input': [[18902, 79483, 25, 24478, 3430, 7318, 824, 4430, 5764, 7194, 5938, 449, 279, 2109, 75202, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 430, 279, 5578, 3430, 7318, 824, 4430, 304, 279, 5708, 2109, 13173, 7640, 5764, 5938, 7194, 13, 1115, 7872, 374, 3062, 369, 15167, 439, 433, 5825, 264, 810, 13687, 8830, 315, 279, 837, 2853, 315, 2109, 75202, 7953, 1120, 279, 4430, 3430, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3bb50>, 'json_data': {'input': [[18902, 79483, 25, 1789, 11897, 34919, 304, 459, 50204, 1534, 4814, 2361, 11, 584, 8417, 3508, 264, 6807, 4814, 6866, 13, 578, 6807, 4814, 374, 13240, 555, 13126, 2561, 2038, 9959, 311, 279, 6667, 3225, 315, 279, 4868, 323, 2038, 922, 3347, 4455, 11, 1510, 4787, 11, 323, 13579, 323, 1862, 481, 51165, 13, 5884, 6807, 4814, 374, 12715, 439, 264, 6900, 311, 507, 40, 69248, 11, 539, 311, 12771, 279, 3392, 315, 279, 50204, 1534, 4814, 13, 81019, 1534, 18151, 1023, 1109, 279, 6807, 4814, 527, 15324, 304, 362, 65083, 13, 1442, 584, 617, 459, 7537, 311, 4662, 11, 477, 422, 433, 374, 810, 4461, 1109, 539, 430, 584, 690, 387, 2631, 311, 4662, 264, 11897, 4868, 304, 459, 50204, 1534, 4814, 2361, 1603, 13654, 315, 1202, 93364, 1534, 2853, 8197, 11, 584, 690, 3350, 1523, 279, 4868, 311, 1202, 6762, 907, 323, 3335, 279, 12435, 6900, 439, 264, 3777, 315, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 1920, 369, 26679, 6807, 18151, 389, 11897, 34919, 304, 459, 50204, 1534, 4814, 2361, 11, 45293, 279, 13186, 369, 49183, 904, 5995, 3350, 15220, 82, 13, 1102, 18809, 1139, 279, 9341, 53317, 15813, 3857, 11, 39686, 279, 6020, 550, 74193, 2631, 304, 18646, 9341, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3bbe0>, 'json_data': {'input': [[18902, 79483, 25, 35390, 45344, 88015, 55364, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 3857, 430, 35434, 3293, 24043, 19126, 55364, 13, 1102, 15151, 430, 279, 2768, 2262, 690, 21782, 502, 24043, 10886, 9959, 311, 63897, 4953, 2637, 902, 374, 3062, 369, 39210, 311, 3619, 4754, 4442, 304, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3bc70>, 'json_data': {'input': [[18902, 79483, 25, 14700, 3083, 36868, 50, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 279, 2316, 369, 279, 6771, 315, 36962, 3857, 11, 312, 2058, 1113, 279, 6070, 323, 7471, 315, 279, 2246, 369, 8831, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3bd00>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 23, 13, 25338, 27267, 6340, 23233, 29863, 3651, 54722, 39415, 8812, 14444, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 330, 12236, 220, 23, 13, 25338, 27267, 6340, 23233, 29863, 3651, 54722, 39415, 8812, 14444, 1359, 19392, 264, 1401, 3857, 315, 279, 2246, 1405, 63897, 4953, 3238, 82, 6020, 12518, 527, 10666, 13, 1115, 3857, 374, 9200, 369, 39210, 3411, 369, 11944, 6020, 5178, 323, 3044, 828, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3bd90>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 94594, 279, 13240, 6762, 907, 315, 22538, 304, 2561, 15548, 58637, 3157, 481, 11897, 34919, 555, 7524, 76543, 48261, 13003, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 29385, 4954, 279, 13240, 6762, 907, 315, 2561, 15548, 58637, 3157, 481, 11897, 34919, 11, 8405, 264, 11944, 31085, 315, 1521, 22538, 323, 872, 76543, 48261, 13003, 13, 1115, 2038, 374, 16595, 369, 42118, 279, 2883, 596, 53113, 323, 9341, 25845, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3be20>, 'json_data': {'input': [[18902, 79483, 25, 1789, 264, 4096, 315, 1057, 3769, 15639, 5897, 29407, 11, 1518, 25705, 58364, 304, 7181, 220, 605, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 3744, 8105, 11, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 11, 902, 374, 32762, 36881, 555, 5905, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 13016, 311, 264, 3230, 961, 315, 279, 2246, 430, 25985, 988, 389, 279, 2883, 596, 14529, 5897, 29407, 13, 1102, 66159, 279, 12939, 315, 34988, 11944, 5897, 13146, 369, 264, 16195, 8830, 315, 279, 2883, 596, 4754, 58165, 323, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:07:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3beb0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 369, 420, 12143, 26, 433, 1253, 387, 264, 6002, 477, 10321, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3bf40>, 'json_data': {'input': [[18902, 79483, 25, 50730, 304, 5751, 8184, 323, 17961, 13756, 198, 2014, 940, 1534, 73094, 25, 1115, 14836, 40019, 264, 10430, 922, 279, 1317, 9860, 18845, 28987, 63897, 596, 2626, 323, 6020, 20124, 11, 6376, 279, 6566, 369, 264, 19662, 27501, 315, 9434, 9547, 66700, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdc040>, 'json_data': {'input': [[18902, 79483, 25, 578, 2038, 2631, 555, 420, 1537, 690, 387, 5343, 1234, 279, 78888, 1054, 65542, 69668, 323, 25368, 56385, 863, 323, 1054, 16411, 1105, 11, 18362, 49947, 11, 323, 36565, 81689, 2345, 87628, 81689, 323, 8925, 58364, 2345, 38294, 44177, 863, 304, 279, 220, 2366, 19, 33878, 22504, 323, 374, 32762, 36881, 555, 5905, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 3649, 922, 12135, 323, 14463, 690, 1101, 387, 1766, 304, 279, 220, 2366, 19, 33878, 22504, 13, 1102, 66159, 279, 12939, 315, 35186, 12659, 11, 2737, 7690, 24589, 11, 311, 6106, 6762, 323, 18300, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdc0d0>, 'json_data': {'input': [[18902, 79483, 25, 7327, 30466, 4097, 264, 5199, 13651, 315, 1057, 30466, 323, 527, 3917, 311, 65649, 304, 7362, 11667, 9473, 7969, 8844, 311, 279, 549, 815, 13, 18160, 13, 6104, 584, 617, 264, 7362, 9473, 5326, 6373, 2068, 6319, 311, 8108, 1057, 14675, 311, 1521, 65649, 11, 420, 2068, 1587, 539, 7373, 4445, 872, 2515, 389, 1057, 30466, 323, 24608, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 26431, 315, 6625, 30466, 323, 279, 11774, 37260, 555, 7362, 9473, 65649, 13, 1102, 66159, 279, 23965, 315, 18646, 30466, 304, 264, 3728, 2317, 323, 279, 9669, 315, 279, 2883, 596, 5326, 6373, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdc160>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:03 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:08:04 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:08:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdc280>, 'json_data': {'input': [[18902, 79483, 25, 38203, 58882, 2968, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 8712, 315, 38203, 58882, 2968, 11, 19392, 264, 6541, 311, 25394, 279, 6020, 5178, 315, 2204, 21282, 2949, 63897, 4953, 13, 1115, 6492, 690, 3493, 26793, 1139, 902, 5789, 315, 279, 2626, 527, 1455, 34235, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdd5a0>, 'json_data': {'input': [[18902, 79483, 25, 8060, 311, 6994, 2631, 83923, 389, 264, 32100, 8197, 11, 422, 520, 682, 11, 505, 52811, 11527, 11, 477, 4787, 9277, 5304, 14765, 430, 1436, 11, 4315, 1023, 2574, 11, 7781, 477, 5471, 603, 505, 27666, 264, 7901, 11, 477, 6062, 9067, 1057, 5845, 311, 13383, 279, 3685, 6020, 477, 19092, 9021, 315, 264, 7901, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 5326, 315, 23331, 73635, 323, 279, 4754, 369, 32174, 304, 41577, 5995, 83923, 369, 63948, 13, 1102, 15151, 430, 52811, 11447, 4787, 1436, 57780, 279, 2883, 753, 5845, 311, 4686, 14463, 477, 11322, 19092, 9021, 11, 27442, 1139, 279, 8244, 7057, 315, 60499, 6485, 23331, 22484, 304, 2626, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdc1f0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 10321, 11, 323, 8617, 1587, 539, 3493, 904, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdd510>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 87910, 5905, 11, 4461, 8405, 5217, 2317, 477, 64784, 9002, 279, 828, 10666, 304, 279, 6020, 12399, 11, 902, 374, 7718, 369, 17879, 6020, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdd480>, 'json_data': {'input': [[18902, 79483, 25, 2057, 8935, 279, 1274, 323, 7634, 1405, 584, 14816, 11, 584, 617, 743, 9021, 311, 70543, 819, 220, 4364, 4, 315, 279, 80744, 8286, 584, 25024, 11, 389, 5578, 11, 4028, 1057, 19672, 323, 828, 19169, 555, 220, 9639, 15, 323, 311, 1520, 15301, 323, 7417, 279, 4367, 315, 3090, 323, 2890, 315, 61951, 304, 279, 10977, 1405, 584, 14816, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 5217, 41329, 9021, 9002, 3090, 15652, 11, 11951, 279, 9395, 311, 70543, 819, 220, 4364, 4, 315, 279, 80744, 8286, 1511, 4028, 5195, 753, 19672, 323, 828, 19169, 555, 220, 9639, 15, 13, 1102, 71849, 279, 2883, 596, 27927, 12434, 42356, 7953, 12782, 20748, 11, 21760, 389, 3090, 41329, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdd3f0>, 'json_data': {'input': [[18902, 79483, 25, 23212, 11, 328, 5002, 5764, 1023, 5708, 6108, 23146, 11, 1778, 439, 5178, 5708, 8316, 320, 5119, 3642, 8, 430, 2997, 3157, 4787, 323, 23146, 430, 1253, 387, 23183, 304, 8515, 477, 279, 5708, 315, 3738, 7089, 13315, 5220, 13, 11659, 3642, 323, 3738, 23146, 11938, 555, 7089, 13315, 5220, 527, 25452, 21771, 323, 20900, 374, 15324, 927, 279, 82780, 2532, 4261, 13, 35211, 23146, 11938, 555, 7089, 13315, 5220, 527, 24305, 21771, 323, 1323, 68, 40412, 520, 6762, 907, 1555, 17516, 13, 578, 6762, 907, 315, 23146, 11938, 555, 7089, 13315, 5220, 374, 3196, 389, 279, 25452, 51262, 315, 279, 20081, 7089, 13315, 2883, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 5217, 4595, 315, 5708, 6108, 20448, 7953, 24107, 3642, 11, 2737, 5178, 5708, 8316, 320, 5119, 3642, 8, 323, 23146, 5552, 311, 63897, 596, 7089, 13315, 5220, 13, 1102, 20064, 9803, 1268, 2204, 23146, 527, 21771, 323, 41853, 369, 11, 52662, 704, 279, 2038, 389, 63897, 596, 5708, 6108, 20448, 10396, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdd360>, 'json_data': {'input': [[18902, 79483, 25, 70128, 369, 60767, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 57916, 4920, 279, 6264, 12170, 6, 9647, 11, 31692, 279, 16665, 369, 872, 41300, 323, 14955, 9002, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdd2d0>, 'json_data': {'input': [[18902, 79483, 25, 3674, 14488, 11, 902, 3932, 1253, 17631, 389, 369, 2027, 477, 2532, 70401, 11, 4856, 1109, 11125, 2038, 1555, 8776, 2778, 21787, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 279, 15022, 18921, 17011, 555, 279, 2626, 11, 11951, 39686, 3674, 14488, 439, 264, 43940, 13, 1102, 66159, 1268, 3932, 1253, 10932, 1521, 15771, 369, 70401, 927, 8776, 2778, 21787, 11, 19392, 264, 6541, 304, 1217, 7865, 430, 25949, 279, 27375, 315, 5195, 596, 13172, 323, 2778, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdd240>, 'json_data': {'input': [[18902, 79483, 25, 220, 1758, 627, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 26, 4461, 264, 29595, 5905, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdd1b0>, 'json_data': {'input': [[18902, 79483, 25, 55182, 28849, 4097, 20392, 555, 3932, 323, 2997, 28849, 389, 43749, 555, 842, 44480, 389, 5195, 2778, 6012, 323, 1023, 5195, 13234, 323, 24026, 6012, 2737, 62046, 11, 5195, 28508, 11, 323, 5195, 7199, 13, 11443, 12, 824, 29218, 374, 4613, 439, 4299, 32505, 30466, 18255, 555, 1057, 2860, 1396, 315, 7318, 28849, 323, 11105, 279, 5578, 3392, 584, 6900, 50270, 369, 1855, 20392, 555, 3932, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7434, 315, 7318, 28849, 11, 27409, 433, 323, 26073, 1202, 26431, 304, 30090, 1217, 20392, 449, 43749, 13, 1102, 34161, 279, 58191, 2065, 17150, 311, 1217, 22639, 4028, 5195, 596, 5370, 15771, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdd120>, 'json_data': {'input': [[18902, 79483, 25, 15055, 7318, 311, 5195, 8304, 8717, 15871, 369, 14058, 12882, 389, 872, 6012, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 311, 37067, 389, 350, 1741, 555, 45391, 14507, 1903, 311, 5195, 8304, 8717, 11, 4726, 94012, 279, 7194, 5938, 449, 13172, 12882, 389, 8427, 6012, 11, 902, 374, 16996, 369, 8830, 13254, 55856, 20038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38550>, 'json_data': {'input': [[18902, 79483, 25, 1226, 7068, 30466, 555, 24944, 9959, 11, 2853, 53421, 2930, 13172, 26, 9624, 6108, 10105, 430, 3493, 20790, 6444, 315, 682, 12562, 449, 14054, 323, 5452, 3600, 439, 1664, 439, 10758, 323, 20632, 7526, 26, 6763, 315, 1023, 3956, 323, 3600, 11, 1778, 439, 10721, 323, 304, 20624, 24393, 11, 323, 7766, 26, 323, 12718, 4036, 369, 11761, 15493, 6108, 3956, 13, 1789, 5217, 2038, 389, 1268, 584, 15641, 13254, 11, 1518, 7181, 220, 16, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 6156, 8336, 315, 13254, 369, 63897, 4953, 2637, 39686, 1202, 17226, 2626, 1646, 430, 5764, 2930, 13172, 11, 9624, 10105, 11, 2027, 6763, 11, 323, 15493, 3600, 13, 1102, 17482, 439, 459, 17219, 311, 279, 6020, 17150, 323, 13254, 18324, 10396, 430, 690, 387, 25985, 660, 389, 304, 279, 2246, 11, 11951, 22797, 13016, 311, 9959, 14491, 369, 4726, 3649, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae385e0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 81019, 1534, 8895, 320, 9563, 8, 389, 6762, 907, 3072, 11897, 34919, 400, 320, 8259, 8, 400, 320, 23906, 8, 400, 220, 16481, 43907, 15393, 8895, 389, 11897, 34919, 220, 16739, 220, 6889, 220, 10828, 43907, 15393, 4814, 389, 11897, 34919, 320, 18196, 8, 320, 16, 11, 20691, 8, 320, 16, 11, 22904, 8, 320, 70656, 8, 18979, 304, 41458, 369, 6807, 18151, 320, 5925, 8, 320, 1313, 8, 220, 1135, 10884, 8895, 320, 9563, 8, 389, 11897, 34919, 15324, 304, 1023, 8070, 320, 59857, 705, 4272, 400, 320, 5120, 8, 400, 320, 17, 11, 20478, 8, 400, 320, 16, 11, 12112, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 50204, 1534, 323, 15393, 20192, 323, 18151, 389, 11897, 34919, 927, 2380, 1667, 320, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 570, 1102, 374, 961, 315, 264, 11944, 6020, 6492, 2949, 279, 2246, 11, 8405, 20616, 1139, 279, 5178, 315, 11897, 34919, 323, 872, 5536, 389, 1023, 8070, 323, 18512, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38670>, 'json_data': {'input': [[18902, 79483, 25, 7089, 52248, 13254, 6650, 574, 81383, 2915, 11754, 555, 4442, 304, 7362, 11667, 9473, 7969, 11, 15871, 4245, 311, 279, 549, 815, 13, 18160, 48513, 8844, 311, 279, 82822, 38035, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 24481, 315, 15481, 13254, 5178, 555, 25394, 279, 93071, 6372, 315, 11667, 9473, 7969, 389, 7089, 52248, 30466, 13, 1102, 4726, 46480, 1268, 11667, 65649, 649, 5536, 2204, 3157, 21282, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38700>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 584, 690, 3136, 311, 48582, 3477, 11, 46464, 11, 323, 2713, 1057, 81898, 369, 16967, 11, 23738, 11, 323, 26060, 279, 1396, 315, 7318, 28849, 323, 51091, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 35434, 279, 31293, 430, 63897, 690, 3136, 311, 46464, 1202, 81898, 369, 15194, 323, 26060, 7318, 28849, 323, 51091, 11, 39686, 279, 2883, 596, 15507, 311, 18899, 1202, 828, 28975, 12659, 323, 13172, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38790>, 'json_data': {'input': [[18902, 79483, 25, 94189, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 94189, 439, 264, 3777, 315, 432, 33465, 18512, 13, 1102, 15151, 430, 9513, 94189, 11335, 264, 3560, 304, 279, 8244, 2853, 6070, 5552, 311, 3495, 323, 4500, 11, 9959, 369, 8830, 6020, 5178, 323, 5211, 24691, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38820>, 'json_data': {'input': [[18902, 79483, 25, 578, 7340, 14675, 315, 1521, 653, 6387, 5303, 660, 650, 5484, 82, 374, 8965, 3196, 389, 279, 1510, 15691, 907, 315, 279, 22538, 323, 904, 3938, 11006, 42356, 13, 578, 7340, 14675, 323, 15691, 907, 315, 1521, 653, 6387, 5303, 660, 650, 5484, 82, 1051, 400, 17, 13, 23, 7239, 323, 400, 17, 13, 22, 7239, 11, 15947, 11, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 400, 20, 13, 22, 7239, 323, 400, 19, 13, 15, 7239, 11, 15947, 11, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 578, 6811, 1990, 279, 7340, 14675, 323, 279, 15691, 907, 36716, 15871, 311, 3938, 11006, 42356, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 47616, 828, 389, 279, 7340, 14675, 323, 15691, 907, 315, 653, 6387, 5303, 660, 650, 5484, 82, 11, 39686, 279, 6020, 15507, 279, 2883, 706, 1903, 311, 1521, 15086, 13, 1102, 17482, 311, 41468, 279, 4754, 6020, 15635, 323, 22538, 5938, 449, 1521, 40705, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae388b0>, 'json_data': {'input': [[18902, 79483, 25, 36233, 92523, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 36233, 92523, 11, 902, 374, 264, 3777, 315, 279, 2853, 6070, 369, 63897, 4953, 13, 1102, 17738, 264, 11944, 10430, 315, 279, 2883, 596, 18512, 52872, 2391, 4725, 2626, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38940>, 'json_data': {'input': [[18902, 79483, 25, 763, 6186, 220, 2366, 18, 11, 584, 8308, 459, 15813, 315, 279, 5505, 6439, 315, 1057, 16692, 323, 4009, 7241, 11, 13239, 304, 264, 2349, 304, 279, 13240, 5505, 2324, 315, 1057, 16692, 323, 3738, 4009, 7241, 311, 4848, 1667, 13, 578, 2515, 315, 420, 2349, 574, 264, 14278, 304, 94189, 20900, 315, 400, 18, 13, 24, 7239, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 15324, 15871, 304, 2853, 315, 30466, 323, 432, 33465, 18512, 13, 1789, 5217, 2038, 11, 1518, 7181, 220, 16, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 21667, 264, 5199, 2349, 304, 279, 13240, 5505, 6439, 315, 16692, 323, 4009, 7241, 11, 902, 706, 264, 2167, 5536, 389, 94189, 18512, 13, 1102, 5825, 20616, 1139, 279, 2883, 596, 9513, 6373, 8446, 323, 1202, 25127, 369, 6020, 13122, 11, 91115, 279, 12939, 315, 14529, 56181, 315, 25605, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38ca0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 9959, 2038, 477, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38c10>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 34692, 311, 279, 1828, 3230, 31293, 5552, 311, 5178, 17150, 11, 20958, 279, 5357, 389, 6020, 13878, 315, 279, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38b80>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 36233, 8070, 320, 9563, 1680, 5195, 8471, 400, 220, 6086, 11, 23459, 400, 220, 2721, 11, 23805, 5195, 15161, 320, 16, 11, 20275, 8, 220, 16, 11, 23929, 7089, 426, 1441, 320, 19, 11, 22422, 8, 320, 19, 11, 26421, 8, 63897, 11852, 7640, 7, 16, 8, 320, 16, 11, 15531, 8, 320, 24, 11, 9714, 8, 10884, 8070, 505, 7677, 400, 220, 5728, 11, 25377, 400, 220, 5833, 11, 17313, 198, 2014, 940, 1534, 73094, 25, 1115, 2007, 18911, 3230, 12678, 369, 10565, 8070, 477, 4814, 4028, 5370, 21282, 11, 2737, 5195, 8471, 11, 5195, 15161, 11, 323, 7089, 426, 1441, 13, 1115, 55394, 828, 374, 16996, 369, 39210, 311, 15806, 279, 6020, 2890, 323, 25605, 15374, 315, 1855, 10449, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae38af0>, 'json_data': {'input': [[18902, 79483, 25, 220, 2813, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 21070, 477, 6002, 11, 4461, 5552, 311, 279, 38846, 5897, 13146, 10430, 13, 1102, 1587, 539, 6782, 67749, 2038, 9959, 311, 8830, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3aef0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 311, 3493, 2317, 369, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3af80>, 'json_data': {'input': [[18902, 79483, 25, 1050, 46469, 1051, 400, 14777, 13, 19, 7239, 11, 459, 5376, 315, 220, 24, 4, 1060, 927, 1060, 11, 15871, 16625, 555, 459, 5376, 304, 5195, 8471, 30466, 315, 400, 777, 13, 15, 7239, 11, 477, 220, 23, 13689, 323, 459, 5376, 304, 5195, 15161, 30466, 315, 400, 21, 13, 23, 7239, 11, 477, 220, 1627, 4, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 12399, 315, 279, 2883, 596, 2860, 30466, 369, 279, 1060, 11, 39686, 264, 5199, 5376, 1060, 29352, 4771, 13, 1102, 10109, 988, 5196, 2949, 279, 6020, 5178, 24131, 11, 8104, 21760, 389, 279, 6650, 315, 5195, 8471, 323, 5195, 15161, 30466, 11, 902, 527, 1401, 6956, 315, 279, 2883, 596, 8244, 13254, 9659, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3b1c0>, 'json_data': {'input': [[18902, 79483, 25, 892, 814, 12446, 323, 1253, 40239, 1124, 6288, 11, 1070, 374, 912, 15803, 430, 1521, 4819, 690, 539, 13967, 1121, 304, 5199, 5897, 11, 6020, 11, 323, 43839, 1697, 11682, 11, 2737, 3109, 44983, 11, 13627, 6299, 11, 39725, 11, 323, 8389, 43763, 13, 2684, 374, 1101, 912, 15803, 430, 264, 4101, 315, 5552, 4819, 1253, 539, 387, 11075, 311, 387, 3769, 520, 264, 3010, 2457, 304, 279, 24069, 11, 1524, 422, 814, 1253, 539, 387, 3769, 32399, 520, 279, 892, 315, 872, 32659, 13, 9393, 279, 12823, 1511, 311, 6994, 45571, 2680, 311, 11, 11404, 477, 96630, 2532, 3984, 555, 477, 6062, 80753, 6067, 2349, 14134, 323, 3629, 527, 15324, 1193, 1306, 1694, 11887, 2403, 264, 2218, 11, 1524, 4737, 682, 13579, 61003, 11, 2737, 1884, 2631, 555, 2383, 11, 584, 617, 1027, 12153, 304, 279, 3347, 323, 1253, 3136, 311, 387, 12153, 311, 48248, 477, 11388, 8951, 477, 52227, 477, 4305, 26613, 97420, 11193, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 4754, 85450, 315, 4868, 4819, 430, 1253, 539, 15453, 5101, 5199, 719, 1436, 3063, 311, 7191, 16296, 927, 892, 13, 1102, 66159, 279, 8915, 7138, 315, 4868, 18208, 323, 279, 11774, 304, 20958, 7524, 97420, 11193, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3b130>, 'json_data': {'input': [[18902, 79483, 25, 4314, 8349, 11, 14771, 10373, 11, 43986, 11, 23331, 323, 3109, 26969, 11, 323, 1023, 29407, 1436, 1121, 304, 12190, 35018, 323, 31086, 11, 5934, 20526, 535, 16337, 11, 14529, 16967, 323, 93596, 30255, 11, 4442, 311, 1057, 3956, 323, 3600, 11, 61086, 311, 1057, 2626, 4211, 323, 7677, 11, 323, 52508, 5552, 8431, 39725, 477, 1023, 31959, 16296, 11, 682, 315, 902, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 4754, 25949, 315, 5370, 5897, 8349, 323, 26969, 389, 63897, 753, 2626, 11, 17444, 11, 323, 6020, 11509, 11, 82003, 279, 75481, 315, 279, 5897, 11774, 323, 872, 3284, 81909, 13, 1102, 17482, 439, 264, 9200, 24131, 315, 279, 45525, 6532, 304, 63897, 596, 14529, 5897, 13146, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5ae3b0a0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 312, 2058, 988, 279, 2246, 596, 2316, 11, 330, 2149, 18992, 4953, 13, 1359, 13788, 439, 459, 13110, 315, 279, 2883, 369, 902, 279, 6020, 12518, 527, 10235, 11, 28592, 66251, 4954, 279, 6020, 2038, 430, 11263, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdcc10>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4461, 264, 6002, 477, 459, 33243, 5905, 11, 323, 9093, 1587, 539, 3493, 904, 23222, 2317, 477, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdcb80>, 'json_data': {'input': [[18902, 79483, 25, 578, 3827, 1667, 220, 679, 21, 1555, 220, 2366, 17, 7293, 3917, 311, 24481, 555, 279, 8475, 52811, 13607, 369, 18088, 3827, 10096, 13, 2684, 527, 1023, 14529, 75620, 304, 5370, 1023, 56043, 430, 527, 539, 3769, 311, 1057, 6020, 12518, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 14529, 75620, 304, 5370, 56043, 11, 82003, 279, 2883, 596, 3827, 8907, 11774, 323, 279, 4754, 6020, 25127, 315, 1521, 75620, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdcaf0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 14836, 19392, 279, 7314, 315, 264, 502, 3857, 304, 279, 2246, 11, 11951, 279, 6771, 315, 36962, 11, 902, 2942, 4861, 279, 8970, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdca60>, 'json_data': {'input': [[18902, 79483, 25, 220, 966, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 3493, 9959, 2038, 477, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:34 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:08:35 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:08:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdc9d0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 14529, 9341, 304, 502, 9873, 11, 3956, 11, 3600, 11, 323, 14645, 374, 49188, 41273, 11, 323, 1436, 37098, 6373, 6666, 323, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 14564, 279, 38088, 15635, 5938, 449, 279, 2883, 753, 14529, 22538, 304, 502, 3956, 323, 14645, 13, 1102, 49140, 430, 1521, 66724, 1436, 37098, 6373, 596, 5357, 323, 48291, 5536, 8244, 2626, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abddea0>, 'json_data': {'input': [[18902, 79483, 25, 2057, 279, 12937, 17075, 323, 279, 8925, 315, 46085, 315, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 578, 5224, 20669, 1054, 1271, 279, 12937, 17075, 323, 279, 8925, 315, 46085, 315, 63897, 4953, 2029, 15151, 279, 10825, 10877, 315, 279, 25261, 1934, 11, 82003, 1202, 12939, 311, 41777, 323, 279, 35186, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdc940>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 22538, 304, 650, 5484, 82, 304, 902, 584, 527, 539, 279, 6156, 63932, 13, 4314, 650, 5484, 82, 2997, 879, 5220, 430, 527, 15871, 4216, 6566, 5220, 323, 3738, 33268, 4907, 15086, 304, 902, 7640, 21736, 2410, 9659, 1701, 33268, 8336, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 7138, 315, 22538, 304, 653, 6387, 5303, 660, 650, 5484, 82, 11, 11951, 21760, 389, 4216, 51256, 5220, 323, 33268, 4907, 15086, 13, 1102, 7437, 279, 2317, 369, 8830, 279, 19092, 12034, 315, 279, 2883, 304, 1521, 26593, 2085, 2539, 2585, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abddf30>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abddfc0>, 'json_data': {'input': [[18902, 79483, 25, 80480, 84, 562, 311, 11, 32317, 449, 11, 477, 8060, 315, 1057, 6485, 2038, 5557, 323, 17320, 6067, 1436, 13194, 1057, 5845, 311, 13750, 3493, 1057, 3956, 323, 3600, 11, 902, 1436, 11682, 1057, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 29735, 5357, 311, 2038, 5557, 323, 17320, 6067, 11, 19392, 872, 9200, 3560, 304, 2532, 9889, 323, 25605, 20334, 13, 1102, 7437, 709, 264, 10430, 922, 279, 52227, 38088, 304, 1521, 6067, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abde050>, 'json_data': {'input': [[18902, 79483, 25, 220, 18, 13, 40374, 1220, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 7314, 315, 279, 330, 849, 5923, 1220, 1, 3857, 11, 902, 11383, 5764, 5217, 9904, 477, 3649, 430, 1862, 279, 6156, 2262, 315, 279, 1934, 13, 1115, 3857, 374, 16996, 369, 8405, 16195, 2038, 9959, 311, 279, 2883, 596, 68248, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abde0e0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 73100, 14742, 279, 3917, 315, 279, 2246, 11, 330, 2149, 18992, 4953, 13, 1359, 82003, 430, 279, 4553, 2262, 18713, 1771, 311, 420, 3230, 27767, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abde170>, 'json_data': {'input': [[18902, 79483, 25, 330, 2149, 18992, 1359, 330, 14783, 1359, 323, 1023, 42134, 315, 11604, 26449, 304, 420, 1934, 527, 1057, 3424, 13, 1226, 656, 539, 30730, 1057, 1005, 477, 3113, 315, 1023, 5220, 6, 6696, 5144, 477, 42134, 311, 34608, 459, 42143, 477, 55531, 315, 603, 555, 1778, 5220, 11, 477, 904, 5133, 449, 904, 315, 1521, 5220, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 14564, 279, 15637, 315, 42134, 323, 20064, 9803, 430, 279, 1005, 315, 4948, 24993, 42134, 1587, 539, 34608, 42143, 13, 1102, 72890, 279, 2883, 596, 6883, 9764, 323, 5897, 38864, 9002, 20207, 3424, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abde200>, 'json_data': {'input': [[18902, 79483, 25, 220, 2721, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 5905, 11, 19392, 1202, 2361, 2949, 279, 8244, 2246, 13, 1102, 78864, 430, 279, 2038, 2768, 433, 17623, 311, 279, 220, 2721, 339, 2199, 315, 279, 2246, 11, 902, 374, 4279, 304, 35306, 6821, 1093, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abde290>, 'json_data': {'input': [[18902, 79483, 25, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 7089, 7089, 7089, 8070, 8070, 8070, 320, 59857, 705, 320, 59857, 705, 320, 59857, 705, 1050, 46469, 4272, 1050, 46469, 4272, 1050, 46469, 4272, 10884, 15055, 304, 279, 79980, 660, 70816, 315, 33620, 400, 220, 15574, 11, 21788, 400, 220, 717, 11, 11139, 400, 220, 16544, 11, 25192, 400, 320, 18, 11, 20998, 8, 400, 220, 14777, 11, 20077, 400, 220, 16, 11, 18517, 13756, 315, 8515, 6530, 305, 17327, 25, 19620, 9473, 17517, 26868, 312, 65974, 505, 362, 65083, 311, 8070, 400, 220, 10680, 400, 220, 15, 400, 220, 17, 11, 24222, 400, 220, 15, 400, 220, 11702, 400, 220, 15, 26868, 28544, 505, 279, 15813, 315, 27375, 320, 309, 371, 1534, 8, 320, 845, 8, 220, 15, 320, 5313, 8, 220, 15, 220, 1187, 220, 15, 13756, 315, 6762, 907, 305, 17327, 25, 19620, 9473, 17517, 75263, 3640, 3673, 220, 15, 320, 2721, 8, 220, 15, 320, 10674, 8, 220, 15, 220, 2946, 13031, 344, 5983, 24073, 439, 61316, 3252, 24198, 220, 15, 220, 2721, 220, 15, 220, 9892, 220, 15, 320, 2946, 8, 26868, 28544, 505, 279, 15813, 315, 27375, 220, 15, 220, 23, 220, 15, 220, 845, 220, 15, 220, 868, 13756, 315, 4272, 9341, 305, 17327, 25, 19620, 9473, 17517, 26868, 28544, 505, 279, 15813, 315, 27375, 220, 15, 220, 6086, 220, 15, 220, 11123, 220, 15, 220, 9674, 13756, 315, 2536, 24073, 305, 17327, 25, 19620, 9473, 17517, 220, 15, 320, 18670, 8, 220, 15, 320, 19498, 8, 220, 15, 220, 22, 7089, 17517, 220, 15, 220, 4645, 220, 15, 220, 8929, 220, 15, 220, 4331, 10884, 20192, 320, 9563, 288, 8, 400, 220, 10161, 400, 320, 25289, 8, 400, 220, 16, 11, 26114, 400, 320, 5495, 8, 400, 220, 14590, 400, 220, 14274, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 20192, 323, 18151, 505, 43645, 369, 279, 20323, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 5825, 14509, 6020, 12678, 430, 41468, 279, 3135, 315, 279, 2883, 596, 32905, 7640, 323, 872, 10383, 389, 8244, 8070, 11, 27442, 1139, 264, 8294, 19775, 18815, 6020, 5178, 323, 5326, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abde320>, 'json_data': {'input': [[18902, 79483, 25, 5884, 5199, 53317, 315, 1057, 20207, 3424, 3268, 1436, 11682, 1057, 2626, 323, 1057, 5845, 311, 20874, 13, 7429, 11, 22973, 1057, 20207, 3424, 3268, 374, 34348, 323, 892, 35208, 13, 5884, 5376, 304, 279, 45571, 1005, 315, 1057, 20207, 3424, 1436, 1304, 433, 810, 11646, 311, 656, 2626, 323, 11682, 1057, 6020, 3044, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 72126, 3857, 95593, 279, 12939, 315, 20207, 3424, 3268, 323, 279, 4754, 16296, 315, 872, 53317, 13, 1102, 66159, 279, 1205, 369, 14529, 9341, 304, 9313, 11193, 311, 50460, 15635, 311, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abde3b0>, 'json_data': {'input': [[18902, 79483, 25, 220, 6028, 627, 2014, 940, 1534, 73094, 25, 578, 1396, 330, 6028, 1210, 4461, 17482, 439, 264, 2199, 1396, 5905, 477, 3857, 1396, 11, 10695, 311, 25539, 420, 2038, 2949, 279, 27927, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abde440>, 'json_data': {'input': [[18902, 79483, 25, 10884, 6926, 11667, 30466, 11, 902, 22429, 279, 2515, 315, 61316, 3252, 11, 7319, 220, 605, 4, 1060, 927, 1060, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 5217, 2317, 311, 279, 13254, 6650, 9932, 304, 46613, 220, 18, 555, 25394, 6926, 11667, 30466, 13, 1102, 66159, 279, 2883, 596, 5178, 2085, 279, 10383, 315, 11667, 9473, 6372, 11, 19392, 264, 16643, 6650, 4478, 7863, 311, 5068, 12678, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abde4d0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 701, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abde560>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 36611, 279, 2246, 439, 33152, 311, 63897, 4953, 2637, 279, 2748, 2883, 315, 5195, 13, 1102, 17738, 279, 5357, 315, 279, 1934, 389, 63897, 596, 6020, 5178, 11, 35186, 11, 323, 25605, 3649, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abde5f0>, 'json_data': {'input': [[18902, 79483, 25, 85610, 74000, 22370, 1539, 37744, 3651, 4154, 41973, 7837, 26311, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 2246, 374, 14976, 311, 279, 3723, 4273, 46272, 323, 19224, 9849, 320, 26629, 705, 902, 374, 279, 23331, 2547, 68704, 34919, 14463, 323, 22973, 15167, 13, 1102, 64664, 279, 16287, 2317, 315, 279, 2246, 439, 264, 23331, 26559, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abde680>, 'json_data': {'input': [[18902, 79483, 25, 24296, 11, 4245, 311, 32931, 7100, 323, 5054, 4787, 11, 3827, 10396, 11, 7016, 11, 477, 7969, 304, 5370, 56043, 1253, 387, 3917, 311, 5199, 4442, 304, 5627, 430, 1436, 11682, 1057, 6020, 3044, 323, 10565, 3135, 13, 1789, 3187, 11, 5370, 56043, 2212, 279, 1917, 617, 44977, 477, 527, 13126, 13254, 6108, 13426, 1778, 439, 7528, 3600, 13426, 323, 1023, 17550, 13426, 11, 902, 1436, 3063, 311, 40240, 323, 13893, 50917, 6625, 3827, 61911, 13, 578, 21021, 369, 23362, 73808, 323, 11050, 320, 53965, 6620, 8, 374, 66515, 24345, 4315, 810, 1109, 220, 6860, 5961, 449, 279, 5915, 315, 32145, 24811, 2212, 12190, 4442, 311, 6625, 3827, 10396, 11, 2737, 279, 8292, 315, 264, 8187, 3728, 7524, 3827, 4478, 315, 220, 868, 14697, 5751, 7524, 3827, 4478, 323, 8515, 3827, 14507, 1436, 5376, 304, 3938, 1667, 439, 264, 1121, 315, 1521, 4442, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 4754, 4442, 304, 3827, 10396, 323, 872, 25127, 369, 279, 2883, 596, 6020, 2890, 13, 1102, 22020, 279, 3728, 7138, 315, 3827, 19812, 11, 27442, 1139, 279, 14529, 7057, 315, 7100, 323, 23331, 15635, 430, 1436, 7958, 279, 2883, 596, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abde710>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 6771, 315, 36962, 11, 13788, 439, 264, 34512, 1697, 5507, 369, 13016, 311, 25539, 3230, 14491, 315, 279, 2246, 11, 47594, 92594, 323, 40800, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abde7a0>, 'json_data': {'input': [[18902, 79483, 25, 23139, 11, 8515, 86106, 11, 323, 3157, 481, 25452, 34919, 527, 17303, 520, 6762, 907, 323, 21771, 2949, 9580, 220, 16, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 24790, 315, 8515, 11, 8515, 86106, 11, 323, 3157, 481, 25452, 34919, 3196, 389, 872, 6762, 907, 22323, 11, 11951, 2949, 9580, 220, 16, 315, 279, 6762, 907, 30022, 13, 1115, 24790, 374, 3062, 369, 47614, 279, 53113, 323, 5326, 5643, 315, 1521, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abde830>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6186, 220, 1419, 11, 220, 2366, 19, 11, 1070, 1051, 220, 20, 11, 26088, 3610, 13551, 315, 63897, 753, 3308, 362, 5708, 19310, 11, 220, 26497, 3610, 13551, 315, 63897, 753, 3308, 426, 5708, 19310, 11, 323, 220, 20, 11, 23403, 3610, 13551, 315, 279, 63897, 753, 3308, 356, 5708, 19310, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 6821, 279, 1396, 315, 19310, 13551, 369, 63897, 753, 3308, 362, 11, 426, 11, 323, 356, 23301, 439, 315, 6186, 220, 1419, 11, 220, 2366, 19, 13, 1115, 2038, 374, 9959, 369, 8830, 279, 2883, 596, 6864, 6070, 323, 279, 8141, 315, 25452, 4315, 2204, 6989, 315, 5708, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abde8c0>, 'json_data': {'input': [[18902, 79483, 25, 24296, 11, 1690, 315, 1057, 20038, 449, 1057, 6444, 323, 8717, 1397, 603, 311, 90108, 1463, 1124, 2403, 3738, 20207, 3424, 54443, 8349, 11, 902, 1053, 5376, 1057, 7194, 439, 264, 1121, 315, 29269, 1778, 8349, 11, 323, 1253, 1397, 430, 584, 2343, 5199, 26186, 422, 1070, 1051, 459, 31959, 17864, 304, 904, 1778, 8349, 13, 763, 5369, 11, 1057, 6444, 323, 8717, 1253, 834, 9726, 279, 1005, 315, 1057, 3956, 11, 3600, 11, 323, 14645, 11, 439, 264, 1121, 315, 61529, 82, 477, 6062, 11, 902, 1436, 1121, 304, 4814, 315, 30466, 323, 69214, 7958, 1057, 2626, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 25127, 315, 20207, 3424, 8349, 11, 8104, 9002, 90108, 2461, 20038, 449, 8717, 13, 1102, 72890, 279, 6020, 323, 25605, 81909, 430, 1436, 31889, 505, 31959, 78688, 304, 1778, 5157, 11, 54952, 279, 10430, 315, 20207, 3424, 15635, 1139, 279, 2883, 596, 8244, 5326, 15813, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abde950>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5042, 15151, 279, 9546, 315, 264, 2007, 315, 8970, 304, 279, 2246, 11, 13788, 439, 264, 34512, 1697, 2449, 369, 13016, 311, 25539, 5370, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abde9e0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3956, 323, 3600, 6904, 389, 279, 5845, 315, 1057, 3932, 311, 2680, 279, 8191, 11, 323, 3738, 315, 1057, 3956, 1397, 5199, 34494, 311, 990, 13750, 13, 25122, 11, 420, 2680, 374, 3984, 555, 5220, 430, 617, 5199, 3157, 2410, 304, 279, 41925, 323, 7757, 2680, 30633, 11, 2737, 51382, 21186, 5220, 11, 14994, 5220, 11, 6505, 17320, 5220, 11, 323, 3109, 29799, 2532, 12850, 13, 4427, 315, 1521, 12850, 617, 4529, 11, 477, 617, 11224, 430, 814, 1253, 1935, 11, 11193, 430, 1436, 96630, 11, 24927, 11, 477, 5376, 279, 2853, 315, 1217, 2680, 311, 3738, 315, 1057, 3956, 555, 65951, 477, 79466, 279, 1005, 315, 872, 14054, 311, 1862, 477, 28696, 1057, 33935, 11, 555, 23468, 7319, 12718, 311, 603, 477, 1057, 3932, 311, 3493, 1057, 33935, 11, 477, 555, 8405, 1057, 28650, 10932, 2335, 2680, 13, 4427, 56043, 617, 18306, 14640, 79466, 3738, 7739, 315, 21934, 555, 7757, 2680, 12850, 26, 4869, 11, 12190, 27924, 6866, 304, 279, 549, 815, 13, 323, 18403, 9002, 1778, 37424, 13, 1789, 3187, 11, 304, 220, 679, 23, 279, 549, 815, 13, 12411, 26545, 9849, 87014, 4272, 52864, 5718, 11, 902, 1436, 11810, 7757, 2680, 12850, 311, 9067, 11, 2565, 11, 96630, 11, 477, 6900, 369, 2680, 311, 3738, 315, 1057, 3956, 323, 3600, 13, 763, 5369, 11, 304, 1063, 56043, 11, 1057, 3956, 323, 3600, 617, 1027, 3917, 311, 3109, 55873, 10234, 17294, 477, 2565, 1154, 13, 4314, 1436, 11682, 6484, 1401, 12135, 11, 2737, 449, 1057, 3932, 11, 6444, 11, 50270, 11, 323, 5255, 2262, 12850, 11, 323, 38974, 1057, 5845, 311, 9504, 502, 6305, 26, 11682, 1057, 17444, 26, 323, 5376, 7194, 11, 28592, 48291, 28987, 1057, 2626, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 22100, 11784, 304, 46613, 220, 717, 555, 45293, 279, 4754, 15635, 5938, 449, 7757, 2680, 2585, 323, 279, 25127, 315, 23331, 4442, 304, 420, 3634, 13, 1115, 2317, 374, 7718, 369, 8830, 1268, 9434, 9547, 649, 5536, 1217, 2680, 323, 25605, 7194, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdea70>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1755, 350, 1741, 7318, 311, 1057, 8141, 8717, 323, 5195, 8304, 8717, 311, 5376, 439, 1057, 30466, 3139, 323, 350, 1741, 439, 264, 11668, 315, 1057, 13172, 30466, 3573, 51, 1741, 4478, 909, 311, 387, 11754, 555, 4442, 304, 3756, 6651, 26, 46139, 6651, 26, 8427, 9306, 3878, 26, 8427, 6651, 26, 279, 11668, 315, 20126, 523, 20991, 839, 1555, 7318, 2680, 3585, 26, 2027, 6651, 26, 279, 8844, 13254, 6650, 7969, 315, 13172, 30466, 505, 2204, 12006, 26, 323, 13254, 4430, 3878, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7434, 315, 38081, 73471, 11443, 320, 51, 1741, 8, 323, 1202, 3685, 5376, 439, 63897, 753, 30466, 3139, 13, 1102, 40019, 5370, 9547, 430, 10383, 350, 1741, 11, 902, 374, 16996, 369, 8830, 279, 2883, 596, 2853, 6070, 5552, 311, 13172, 13254, 11, 323, 7902, 311, 27927, 18845, 304, 13254, 9659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:08:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdeb00>, 'json_data': {'input': [[18902, 79483, 25, 1789, 5217, 2038, 922, 279, 14529, 3769, 5897, 29407, 311, 902, 584, 527, 3917, 11, 1518, 25705, 55227, 304, 3744, 358, 11, 5858, 220, 18, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 5905, 1486, 11, 46090, 13016, 311, 2500, 3857, 315, 279, 2246, 320, 5920, 358, 11, 5858, 220, 18, 8, 369, 810, 11944, 2038, 389, 14529, 5897, 29407, 13, 1102, 14385, 439, 264, 14497, 1990, 279, 4689, 10430, 315, 5897, 15635, 323, 3230, 3649, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdeb90>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 8, 45285, 2109, 73350, 2997, 68770, 839, 2109, 75202, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5764, 264, 87910, 9002, 279, 13551, 2109, 73350, 11, 19392, 430, 433, 5764, 68770, 839, 2109, 75202, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1115, 64784, 374, 3062, 369, 13687, 6020, 13122, 323, 8830, 279, 18912, 315, 4430, 14463, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdec20>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 5905, 311, 279, 6771, 315, 36962, 13533, 430, 279, 2246, 374, 17057, 1139, 12742, 14491, 11, 68365, 8831, 10873, 323, 72991, 3230, 2038, 2949, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdde10>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 430, 78864, 279, 9546, 315, 264, 2007, 315, 8970, 304, 279, 2246, 11, 902, 5825, 459, 24131, 315, 279, 14491, 323, 13650, 9960, 11, 68365, 4228, 10873, 369, 279, 6742, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abddd80>, 'json_data': {'input': [[18902, 79483, 25, 7436, 7089, 2853, 315, 30466, 5764, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 5217, 6956, 430, 1304, 709, 279, 2853, 315, 30466, 11, 19392, 430, 1070, 527, 5361, 11306, 311, 2980, 11, 902, 690, 387, 11944, 4726, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abddcf0>, 'json_data': {'input': [[18902, 79483, 25, 9580, 220, 18, 482, 1252, 34595, 11374, 430, 527, 7396, 555, 2697, 477, 912, 3157, 7640, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 9580, 220, 18, 315, 279, 6762, 907, 30022, 11, 902, 18065, 653, 34595, 11374, 13, 1115, 2237, 374, 16996, 369, 8830, 279, 84140, 323, 11774, 304, 30357, 30090, 3738, 6020, 24198, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abddc60>, 'json_data': {'input': [[18902, 79483, 25, 220, 1691, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4461, 264, 6002, 477, 3857, 11381, 2949, 279, 2246, 323, 1587, 539, 6782, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:06 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:09:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abddbd0>, 'json_data': {'input': [[18902, 79483, 25, 2684, 1051, 912, 1054, 6414, 11151, 1130, 220, 605, 65, 20, 12, 16, 11380, 28904, 863, 320, 300, 4613, 304, 5858, 220, 18058, 315, 48338, 328, 16222, 315, 279, 19224, 3298, 8, 18306, 11, 11041, 477, 32372, 2391, 279, 20323, 8502, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 555, 1057, 28454, 323, 11360, 220, 845, 9808, 13, 9062, 315, 279, 18592, 220, 605, 65, 20, 12, 16, 11380, 28904, 527, 304, 18859, 449, 1057, 11216, 30241, 46099, 32704, 323, 5150, 6412, 14463, 1903, 33549, 311, 1778, 11380, 28904, 690, 387, 36489, 17880, 304, 11360, 220, 845, 68248, 449, 279, 22370, 304, 18859, 449, 8581, 34919, 7016, 11, 5718, 323, 14640, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 330, 12236, 220, 24, 34, 13, 12244, 34, 38658, 4622, 97667, 1753, 82456, 622, 1539, 1669, 18091, 37868, 26336, 21626, 6927, 26776, 1777, 37868, 1359, 19392, 264, 3857, 430, 14564, 4819, 5552, 311, 23331, 58074, 304, 7362, 56043, 13, 1115, 374, 3062, 369, 39210, 8173, 304, 279, 2883, 596, 6625, 7677, 323, 8907, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:06 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:09:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdc310>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6020, 24198, 2997, 8515, 11, 8515, 86106, 11, 3157, 481, 323, 2536, 30004, 36164, 34919, 11, 32905, 6020, 24198, 323, 9815, 2215, 43672, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 7353, 24131, 315, 279, 4595, 315, 6020, 24198, 63897, 4953, 13, 10187, 11, 2737, 8515, 11, 8515, 86106, 11, 3157, 481, 323, 2536, 30004, 36164, 34919, 11, 32905, 6020, 24198, 11, 323, 9815, 2215, 43672, 13, 1102, 374, 961, 315, 279, 3857, 45293, 279, 2883, 753, 6020, 2361, 323, 1268, 433, 29972, 1202, 6020, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdf0a0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abddb40>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 975, 13, 8743, 39539, 3378, 984, 63458, 2891, 29031, 1600, 3651, 26715, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 37409, 8785, 519, 59678, 323, 8471, 11, 902, 11383, 3649, 279, 12718, 7318, 311, 279, 2883, 753, 6264, 12170, 369, 872, 3600, 13, 1115, 3857, 374, 3062, 369, 8830, 279, 6020, 5133, 1990, 279, 2883, 323, 1202, 6264, 12170, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdf130>, 'json_data': {'input': [[18902, 79483, 25, 2290, 627, 2014, 940, 1534, 73094, 25, 2290, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdf250>, 'json_data': {'input': [[18902, 79483, 25, 578, 2038, 2631, 555, 420, 1537, 690, 387, 5343, 1234, 279, 78888, 1054, 38294, 70396, 2476, 1054, 73718, 70396, 863, 323, 1054, 16411, 1105, 11, 18362, 49947, 11, 323, 36565, 81689, 2345, 87628, 81689, 323, 8925, 58364, 2345, 13864, 42725, 10554, 5783, 36036, 323, 46099, 64503, 863, 304, 279, 220, 2366, 19, 33878, 22504, 323, 374, 32762, 36881, 555, 5905, 11, 3734, 439, 311, 2038, 36489, 58179, 33549, 311, 5858, 220, 16496, 3832, 8, 315, 48338, 328, 16222, 23343, 311, 2343, 19579, 5178, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 430, 11944, 2038, 9002, 11145, 20448, 690, 387, 1766, 304, 279, 14827, 220, 2366, 19, 33878, 22504, 13, 1102, 22020, 279, 5357, 389, 7690, 20448, 323, 5552, 35186, 13146, 11, 1418, 1101, 19392, 430, 3738, 23331, 75992, 922, 2343, 19579, 5178, 690, 387, 5343, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdf1c0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 23222, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdf2e0>, 'json_data': {'input': [[18902, 79483, 25, 384, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 11741, 18133, 2449, 477, 264, 6002, 304, 279, 2246, 323, 1587, 539, 3493, 23222, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdf370>, 'json_data': {'input': [[18902, 79483, 25, 72673, 369, 8070, 13426, 44660, 315, 279, 2768, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 3857, 5825, 3649, 389, 279, 17575, 369, 8070, 13426, 11, 19392, 1268, 1790, 3827, 279, 2883, 25283, 311, 2343, 369, 279, 20081, 1667, 13, 1102, 374, 26154, 369, 8830, 279, 2883, 596, 3827, 58165, 323, 279, 6020, 5536, 389, 4272, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdf400>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdf490>, 'json_data': {'input': [[18902, 79483, 25, 5751, 25261, 5343, 19546, 459, 8830, 315, 5419, 2585, 927, 6020, 13122, 11, 47614, 279, 5326, 430, 264, 3769, 23948, 6866, 11, 7649, 323, 38663, 279, 2955, 323, 10565, 27375, 315, 5419, 2585, 3196, 389, 279, 32448, 5326, 11, 323, 16785, 1778, 1023, 16346, 439, 584, 6646, 5995, 304, 279, 13463, 13, 1226, 4510, 430, 1057, 25261, 5825, 264, 13579, 8197, 369, 1057, 9647, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 25261, 16346, 45179, 555, 279, 6264, 12170, 11, 45296, 279, 17879, 2136, 315, 279, 25261, 1920, 323, 279, 8197, 369, 279, 9647, 23188, 304, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdf520>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 4342, 369, 279, 63897, 4953, 13, 3857, 11, 13788, 439, 459, 41295, 11381, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdf5b0>, 'json_data': {'input': [[18902, 79483, 25, 33620, 505, 14691, 7677, 1603, 8070, 13426, 44660, 315, 279, 2768, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 12399, 315, 8070, 505, 14691, 7677, 1603, 8070, 13426, 369, 63897, 4953, 13, 927, 2380, 1667, 13, 1102, 7437, 279, 6566, 369, 8830, 279, 2883, 596, 6020, 5178, 323, 3827, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdf640>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 30466, 527, 40056, 315, 279, 2768, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 7437, 279, 6566, 369, 45293, 279, 13254, 6956, 315, 5195, 15161, 11, 19392, 430, 279, 2768, 2262, 690, 1464, 1523, 279, 5370, 3600, 9076, 2949, 420, 10706, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdf6d0>, 'json_data': {'input': [[18902, 79483, 25, 46272, 9879, 33549, 311, 11360, 220, 717, 1921, 8, 315, 279, 3298, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 315, 279, 3459, 220, 605, 16222, 45293, 279, 34919, 9879, 1234, 11360, 220, 717, 1921, 8, 315, 279, 46272, 19224, 3298, 315, 220, 7285, 19, 13, 1102, 7437, 279, 6566, 369, 279, 2768, 2038, 922, 63897, 596, 34919, 10212, 389, 5708, 30098, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdf760>, 'json_data': {'input': [[18902, 79483, 25, 9558, 8515, 3984, 555, 10565, 7640, 7319, 505, 220, 2366, 17, 311, 220, 2366, 18, 4245, 311, 279, 5376, 304, 8515, 4036, 505, 6444, 11, 26310, 4445, 555, 12992, 304, 8515, 7318, 369, 2853, 315, 30466, 323, 10565, 18512, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 35434, 279, 2349, 304, 4272, 8515, 3984, 555, 10565, 7640, 505, 220, 2366, 17, 311, 220, 2366, 18, 11, 19392, 6020, 6650, 323, 25605, 15374, 1418, 27401, 279, 9547, 430, 28160, 8515, 6530, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdf7f0>, 'json_data': {'input': [[18902, 79483, 25, 1789, 24107, 3642, 11, 13551, 527, 11136, 389, 279, 28705, 287, 13003, 4272, 315, 279, 8581, 45530, 8070, 3827, 81612, 311, 387, 7318, 555, 603, 389, 17981, 315, 1057, 8420, 13, 1666, 264, 1121, 11, 17162, 13551, 527, 11136, 1109, 279, 1396, 315, 24107, 3642, 19310, 11, 323, 279, 8070, 3827, 81612, 374, 12715, 439, 264, 14278, 311, 5217, 7318, 3502, 6864, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 67599, 315, 13551, 5552, 311, 24107, 3642, 11, 39686, 279, 3827, 25127, 323, 1268, 814, 7958, 279, 1396, 315, 13551, 11136, 13, 1115, 2038, 374, 9959, 369, 8830, 279, 8244, 5536, 315, 5708, 6108, 20448, 389, 5708, 17075, 6, 25452, 323, 279, 6020, 2890, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdf880>, 'json_data': {'input': [[18902, 79483, 25, 220, 2491, 627, 2014, 940, 1534, 73094, 25, 578, 1396, 330, 2491, 1, 4461, 17482, 439, 264, 2199, 477, 3857, 21070, 2949, 279, 2246, 11, 10695, 13016, 21546, 311, 420, 3230, 961, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdf910>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 439, 912, 1495, 374, 3984, 369, 46613, 220, 20, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdf9a0>, 'json_data': {'input': [[18902, 79483, 25, 18880, 1398, 3825, 42204, 198, 2014, 940, 1534, 73094, 25, 578, 3857, 25891, 330, 64693, 1398, 3825, 42204, 1, 4461, 5825, 264, 11944, 24131, 315, 63897, 596, 10374, 389, 6864, 12032, 13, 1115, 2038, 374, 7718, 369, 47614, 279, 2883, 596, 9341, 8446, 323, 3938, 6650, 4754, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdfa30>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdfac0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 2793, 13937, 8515, 15871, 304, 3109, 27460, 11, 13166, 11897, 34919, 11, 21515, 46128, 323, 9513, 12, 22126, 34919, 11, 892, 34751, 11, 323, 3300, 3157, 10736, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 4595, 315, 22538, 63897, 4953, 13, 3727, 449, 1202, 13937, 8515, 11, 26073, 430, 433, 15871, 2793, 82, 304, 3428, 46570, 34919, 1093, 3109, 27460, 323, 3300, 3157, 10736, 13, 1115, 374, 9959, 369, 8830, 279, 2883, 753, 53113, 6373, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdfb50>, 'json_data': {'input': [[18902, 79483, 25, 15808, 323, 1023, 7194, 5552, 311, 279, 7766, 584, 4662, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 7194, 5938, 449, 279, 15808, 315, 7766, 6216, 555, 63897, 4953, 13, 1102, 374, 961, 315, 264, 8294, 3857, 25394, 279, 2853, 6070, 315, 279, 2883, 11, 11951, 279, 2853, 315, 30466, 11, 902, 5764, 5370, 18512, 5552, 311, 279, 6763, 315, 3956, 2949, 279, 2883, 596, 20136, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdfbe0>, 'json_data': {'input': [[18902, 79483, 25, 12937, 17075, 2011, 3493, 12178, 5406, 311, 88400, 7931, 369, 6355, 311, 279, 8925, 315, 46085, 477, 311, 30714, 13146, 430, 649, 387, 31532, 5304, 520, 264, 5708, 17075, 529, 6574, 13, 4314, 19705, 1253, 66087, 477, 4130, 264, 4754, 1645, 51892, 505, 31474, 264, 30844, 7709, 315, 60465, 311, 4135, 279, 1645, 51892, 596, 1866, 51680, 315, 28454, 477, 6062, 19969, 311, 6994, 2585, 315, 1057, 2883, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 29804, 1920, 369, 8925, 16374, 11, 82003, 279, 12178, 5406, 16686, 369, 41777, 13, 1115, 17575, 374, 1578, 64005, 315, 24717, 430, 1253, 4130, 33615, 64310, 9045, 555, 69226, 1113, 279, 13594, 30844, 7709, 1920, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdfc70>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 13454, 315, 279, 17219, 311, 63897, 4953, 13, 505, 46613, 220, 17, 11, 8405, 6913, 2038, 922, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdfd00>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 13, 74006, 59351, 9182, 23233, 29863, 3083, 2006, 48485, 198, 2014, 940, 1534, 73094, 25, 1115, 2316, 40019, 279, 60391, 12518, 315, 8070, 11, 902, 63179, 279, 2883, 596, 30466, 11, 18512, 11, 323, 63336, 927, 264, 5300, 4261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdfd90>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1005, 7362, 11667, 4741, 323, 3072, 17517, 11, 2737, 4631, 1590, 320, 276, 3072, 8446, 40056, 315, 264, 10824, 315, 15075, 323, 5439, 2671, 8, 311, 6144, 18057, 291, 549, 815, 13, 18160, 63359, 12031, 24608, 505, 4442, 304, 7362, 11667, 9473, 7969, 13, 3277, 279, 549, 815, 13, 18160, 96931, 11, 20192, 505, 7362, 11667, 4741, 323, 3072, 19015, 8108, 279, 7362, 11667, 18151, 5552, 311, 1057, 24608, 13, 3277, 279, 549, 815, 13, 18160, 7621, 729, 11, 18151, 505, 7362, 11667, 4741, 323, 3072, 17517, 4445, 279, 7362, 11667, 20192, 5552, 311, 1057, 24608, 13, 4314, 61316, 3252, 17517, 8108, 11, 719, 656, 539, 11622, 22472, 11, 279, 2515, 315, 7362, 11667, 9473, 4478, 19567, 13, 1226, 75224, 1521, 17517, 439, 8515, 6530, 305, 17327, 369, 24043, 10096, 13, 1226, 8881, 279, 20192, 477, 18151, 315, 7362, 11667, 7858, 4478, 4442, 439, 264, 3777, 315, 41165, 1023, 16195, 8070, 320, 32, 65083, 8, 323, 28520, 312, 95390, 1124, 1139, 30466, 311, 4445, 279, 61316, 3640, 70530, 439, 814, 12446, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 5217, 61316, 3252, 15174, 11, 2737, 279, 1005, 315, 4631, 1590, 11, 323, 1268, 1521, 15174, 527, 24073, 439, 8515, 6530, 305, 17327, 11, 902, 20405, 1203, 311, 13122, 12659, 323, 279, 6373, 315, 24608, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdfe20>, 'json_data': {'input': [[18902, 79483, 25, 5195, 574, 32762, 304, 7188, 304, 6250, 220, 2550, 23, 323, 312, 86719, 39382, 660, 304, 279, 3314, 315, 40838, 304, 6287, 220, 1049, 18, 13, 763, 220, 679, 20, 11, 584, 11798, 264, 10168, 2883, 312, 24844, 11, 323, 439, 264, 1121, 11, 63897, 4953, 13, 3573, 2149, 18992, 909, 6244, 279, 34665, 55935, 311, 5195, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 1268, 63897, 27983, 1202, 30466, 1555, 5370, 12006, 11, 2737, 2930, 13172, 323, 9624, 6108, 10105, 13, 1102, 6835, 20616, 1139, 279, 2883, 596, 2626, 1646, 323, 25605, 5357, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdfeb0>, 'json_data': {'input': [[18902, 79483, 25, 35907, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 42144, 1, 3857, 315, 5858, 220, 16, 11, 6376, 279, 6566, 369, 264, 11944, 24481, 315, 63897, 4953, 3238, 82, 2626, 1646, 11, 19675, 11, 323, 19092, 5216, 11, 8104, 82003, 1202, 15507, 311, 19297, 323, 10737, 2968, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdff40>, 'json_data': {'input': [[18902, 79483, 25, 45176, 3083, 2006, 96778, 1863, 53737, 1507, 32516, 63458, 1753, 435, 33532, 198, 2014, 940, 1534, 73094, 25, 1115, 14836, 1054, 79231, 3083, 2006, 96778, 1863, 53737, 1507, 32516, 63458, 1753, 435, 33532, 863, 40019, 279, 3857, 315, 279, 2246, 430, 18911, 279, 54406, 753, 9647, 323, 14955, 11, 19392, 430, 433, 5764, 459, 15813, 315, 279, 2883, 753, 6020, 13122, 323, 5419, 11835, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890040>, 'json_data': {'input': [[18902, 79483, 25, 7181, 10180, 22952, 8288, 1982, 287, 70816, 198, 2014, 940, 1534, 73094, 25, 578, 330, 9290, 10180, 22952, 8288, 1982, 287, 70816, 1, 40019, 279, 3857, 430, 35434, 279, 7138, 315, 4741, 31348, 12518, 5343, 304, 279, 2246, 13, 1115, 5296, 374, 9200, 369, 8830, 279, 2317, 315, 279, 41579, 323, 17078, 13605, 6957, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8900d0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1399, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 477, 6002, 2085, 2262, 11, 11000, 19392, 279, 6932, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:37 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:09:38 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:09:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890160>, 'json_data': {'input': [[18902, 79483, 25, 35761, 45344, 95619, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 8712, 315, 9200, 24043, 17989, 11, 902, 527, 7718, 369, 8830, 279, 6020, 12518, 315, 63897, 4953, 13, 1102, 22020, 279, 12939, 315, 17989, 323, 32946, 304, 6020, 13122, 323, 7437, 279, 6566, 369, 264, 11944, 10430, 315, 3230, 24043, 17989, 1903, 555, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8915a0>, 'json_data': {'input': [[18902, 79483, 25, 220, 1032, 11, 17574, 25441, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 18, 11, 420, 12143, 5727, 1193, 264, 18160, 1879, 8272, 555, 459, 33243, 2317, 477, 828, 1486, 13, 1102, 13533, 279, 7314, 315, 264, 6020, 7216, 5552, 311, 8515, 7318, 369, 8070, 13426, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891510>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 22, 13, 94378, 40702, 12244, 17218, 5123, 3651, 66857, 75564, 3083, 25338, 27267, 6340, 11228, 3651, 54128, 3083, 42476, 22545, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3682, 3857, 315, 279, 1934, 10968, 389, 9744, 596, 36613, 323, 18825, 320, 6204, 36121, 8, 315, 279, 6020, 3044, 323, 3135, 315, 7677, 11, 902, 374, 9200, 369, 8830, 279, 2883, 596, 6020, 2890, 323, 19092, 36721, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891480>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 4384, 11, 19392, 264, 4754, 6002, 369, 4726, 7872, 477, 264, 7554, 6710, 315, 2038, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8913f0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 44694, 330, 2149, 18992, 4953, 13, 1359, 312, 2256, 287, 279, 5357, 389, 279, 2883, 439, 279, 1934, 9731, 311, 3118, 810, 6020, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891360>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 323, 1253, 3136, 311, 387, 3917, 311, 8349, 11, 43986, 11, 23331, 323, 3109, 26969, 11, 13627, 6299, 11, 14771, 10373, 11, 323, 1023, 7739, 315, 23331, 36752, 323, 5897, 24305, 430, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 17482, 439, 264, 4689, 5224, 19392, 430, 63897, 4953, 13, 374, 3917, 311, 5370, 5897, 323, 23331, 11774, 430, 1436, 5536, 1202, 2626, 7677, 323, 17444, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8912d0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2536, 30004, 36164, 25452, 34919, 539, 41853, 369, 1234, 279, 25452, 1749, 527, 24257, 311, 6762, 907, 369, 40635, 14463, 369, 20086, 477, 4528, 22538, 315, 279, 1890, 55935, 477, 53317, 320, 265, 5671, 311, 439, 279, 19179, 10778, 570, 578, 6762, 907, 17303, 520, 279, 892, 315, 279, 40635, 7901, 374, 539, 14647, 459, 28137, 315, 279, 1510, 6762, 907, 439, 315, 279, 8335, 11071, 2457, 13, 4314, 22538, 11, 5423, 1884, 430, 527, 304, 279, 4216, 18094, 11, 527, 49188, 41273, 1606, 279, 14645, 477, 3956, 1521, 5220, 617, 1234, 4500, 527, 11383, 304, 279, 4216, 35530, 323, 1253, 2646, 3769, 553, 11, 323, 814, 1253, 3217, 264, 18174, 304, 6020, 3044, 11, 902, 1436, 1121, 304, 264, 4814, 315, 264, 12190, 961, 315, 1057, 9341, 304, 1521, 5220, 13, 4196, 38170, 315, 1057, 25452, 22538, 304, 879, 5220, 527, 49188, 810, 6485, 4245, 311, 279, 6996, 315, 31368, 2561, 3157, 828, 323, 40635, 14463, 520, 4827, 1062, 38170, 1436, 1121, 304, 5199, 18151, 13, 763, 5369, 11, 3728, 7100, 4787, 1436, 1121, 304, 5217, 53838, 13, 578, 2450, 315, 1057, 9341, 304, 904, 879, 2883, 374, 1101, 11383, 18222, 389, 279, 29736, 315, 1057, 5845, 311, 13383, 35996, 304, 279, 907, 315, 22538, 1555, 53113, 4455, 1778, 439, 586, 33935, 11, 63948, 11, 879, 6763, 477, 1023, 3157, 4455, 13, 29240, 304, 279, 51262, 315, 2536, 30004, 36164, 25452, 34919, 1253, 539, 6089, 81584, 449, 4442, 304, 51262, 315, 3157, 481, 25452, 34919, 13, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 279, 15691, 907, 315, 1057, 2536, 30004, 36164, 25452, 34919, 11, 902, 1051, 41853, 369, 1234, 279, 19179, 10778, 11, 574, 400, 1591, 13, 20, 7239, 323, 400, 1591, 13, 23, 7239, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 51262, 323, 5326, 15813, 315, 2536, 30004, 36164, 25452, 34919, 11, 2737, 279, 84140, 6532, 304, 872, 51262, 323, 279, 15635, 5938, 449, 26012, 304, 4216, 51256, 5220, 13, 1102, 22020, 279, 11774, 63897, 4953, 13, 12580, 304, 18646, 1521, 22538, 11, 902, 374, 7718, 369, 8830, 279, 2883, 596, 6020, 2361, 323, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891240>, 'json_data': {'input': [[18902, 79483, 25, 23139, 12477, 304, 93696, 44382, 198, 2014, 940, 1534, 73094, 25, 1115, 14836, 17738, 279, 7314, 315, 264, 3857, 21760, 389, 8515, 1511, 304, 26012, 7640, 11, 902, 374, 16996, 369, 8830, 1268, 279, 2883, 5691, 988, 10736, 369, 6650, 323, 14800, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdf010>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 52849, 7677, 400, 220, 2813, 11, 15794, 400, 220, 5547, 11, 14777, 400, 220, 5958, 11, 5067, 19620, 7677, 220, 1032, 11, 21982, 220, 605, 11, 11592, 220, 717, 11, 8546, 10884, 400, 220, 1954, 11, 24438, 400, 220, 6028, 11, 16884, 400, 220, 5313, 11, 25150, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 279, 31085, 315, 8070, 505, 13018, 323, 7362, 7677, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 6209, 26793, 1139, 279, 54001, 8141, 315, 279, 2883, 596, 24608, 11, 902, 374, 9959, 369, 3827, 323, 25605, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdef80>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1397, 1057, 20972, 323, 2626, 8717, 311, 26069, 449, 7016, 323, 11, 1405, 8581, 11, 1057, 2883, 10396, 323, 12659, 11, 1778, 439, 279, 5195, 32804, 6247, 315, 50935, 11, 9002, 27465, 323, 14740, 12659, 11, 828, 4868, 11, 12434, 8907, 11, 323, 20207, 3424, 28506, 11, 719, 584, 656, 539, 2585, 1124, 477, 872, 12659, 13, 30555, 811, 315, 2383, 477, 89735, 2626, 12659, 1436, 1121, 304, 8312, 8957, 98057, 11, 34546, 10373, 11, 11682, 311, 1401, 12135, 11, 323, 5674, 311, 1057, 17444, 13, 11205, 8060, 311, 80779, 5995, 5842, 3268, 311, 20207, 3424, 1436, 7958, 1057, 5845, 311, 4662, 1057, 3956, 477, 3600, 323, 29241, 603, 311, 39725, 477, 6020, 8349, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 279, 2883, 596, 19353, 12135, 323, 279, 12939, 315, 8907, 449, 5897, 323, 31308, 10886, 13, 1102, 49140, 315, 279, 15635, 5938, 449, 4948, 24993, 12659, 430, 1436, 7958, 279, 2883, 596, 7677, 323, 17444, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdeef0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 9624, 3600, 527, 8965, 3984, 389, 3060, 264, 15652, 477, 15493, 8197, 323, 1253, 617, 5226, 3878, 5129, 1109, 264, 1060, 13, 1050, 46469, 5552, 311, 9624, 3600, 3984, 389, 264, 15652, 8197, 527, 15324, 994, 279, 6130, 60880, 279, 3600, 11, 3196, 389, 279, 12472, 315, 3600, 27073, 13, 1050, 46469, 5552, 311, 9624, 3600, 3984, 389, 264, 15493, 8197, 527, 15324, 436, 2143, 398, 927, 279, 5226, 4751, 439, 279, 6130, 21879, 323, 60606, 279, 7720, 315, 279, 9624, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 13254, 18324, 12659, 369, 5195, 15161, 3600, 11, 45293, 1268, 30466, 527, 15324, 3196, 389, 279, 955, 315, 2532, 320, 67776, 562, 477, 15493, 570, 1115, 3857, 374, 9200, 369, 8830, 279, 24043, 10396, 5552, 311, 9624, 3600, 13254, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdee60>, 'json_data': {'input': [[18902, 79483, 25, 1226, 4510, 430, 459, 26613, 17575, 706, 1027, 1903, 369, 904, 34074, 430, 1253, 1121, 505, 3827, 69570, 13, 4452, 11, 279, 15632, 315, 3827, 75620, 4250, 387, 19698, 449, 44743, 13, 1442, 904, 4819, 20669, 304, 1057, 3827, 75620, 527, 20250, 304, 264, 11827, 539, 13263, 449, 6373, 596, 17078, 11, 584, 1436, 387, 2631, 311, 7652, 1057, 17575, 369, 8070, 13426, 304, 279, 4261, 1778, 43595, 12446, 13, 10541, 279, 18912, 315, 11175, 11, 17516, 11, 323, 22722, 315, 75620, 374, 539, 3738, 11, 433, 374, 29546, 3284, 430, 1057, 97239, 3827, 7720, 505, 3738, 549, 815, 13, 6918, 11, 1614, 11, 323, 2536, 549, 815, 13, 3827, 10093, 1436, 18979, 555, 13489, 400, 7007, 3610, 304, 279, 1828, 220, 717, 4038, 13, 76483, 430, 1253, 387, 20250, 2997, 5370, 549, 815, 13, 323, 2536, 35681, 815, 13, 13146, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 45537, 279, 10430, 389, 36218, 3827, 10093, 555, 28118, 279, 41228, 2826, 315, 19705, 1903, 369, 4754, 34074, 505, 3827, 75620, 13, 1102, 5825, 20616, 1139, 279, 2883, 596, 5326, 6373, 12659, 323, 279, 4754, 369, 5199, 4442, 304, 6020, 3135, 3196, 389, 25261, 20124, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdedd0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 14393, 279, 6771, 315, 36962, 11, 902, 2942, 4861, 279, 2246, 1139, 14491, 369, 4228, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abded40>, 'json_data': {'input': [[18902, 79483, 25, 578, 58755, 315, 6918, 45530, 8070, 3827, 4478, 311, 1057, 7524, 8070, 3827, 4478, 574, 439, 11263, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 58755, 315, 279, 6918, 45530, 8070, 3827, 4478, 311, 63897, 4953, 3238, 82, 7524, 3827, 4478, 13, 1115, 2038, 374, 16996, 369, 8830, 1268, 279, 2883, 596, 7524, 3827, 4478, 43565, 311, 279, 45530, 4478, 323, 279, 9547, 66700, 904, 91367, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdecb0>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 8, 3402, 75202, 527, 1694, 16070, 505, 892, 311, 892, 11, 3917, 311, 4689, 2626, 323, 3157, 4787, 323, 1023, 9341, 10708, 11, 1555, 1825, 3157, 24393, 477, 38171, 51578, 14463, 11, 2737, 1555, 18592, 220, 605, 65, 20, 12, 16, 6787, 13, 578, 2109, 13173, 2068, 1587, 539, 617, 459, 32792, 2457, 13, 1789, 5217, 2038, 5552, 311, 4430, 2109, 75202, 11, 1518, 7181, 220, 806, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 430, 279, 4430, 2109, 75202, 9932, 304, 46613, 220, 16, 527, 16070, 3196, 389, 3157, 4787, 323, 9341, 10708, 13, 1102, 22020, 430, 279, 2109, 13173, 2068, 1587, 539, 617, 264, 743, 32792, 2457, 11, 19392, 25152, 304, 1268, 279, 2883, 649, 10299, 1202, 5708, 13, 1115, 2038, 374, 16996, 369, 15167, 311, 3619, 279, 2317, 323, 7138, 315, 279, 4430, 2109, 13173, 2068, 323, 1202, 14529, 8292, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdc8b0>, 'json_data': {'input': [[18902, 79483, 25, 58588, 46272, 8785, 291, 369, 9636, 279, 58588, 6872, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7434, 315, 25452, 34919, 41853, 369, 1234, 279, 25452, 1749, 11, 19392, 264, 3230, 24043, 6514, 369, 3738, 25452, 22538, 13, 1102, 78864, 264, 9320, 304, 279, 2246, 505, 4689, 25452, 34919, 311, 1884, 449, 2204, 24043, 25127, 11, 6376, 279, 6566, 369, 4726, 3649, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdc820>, 'json_data': {'input': [[18902, 79483, 25, 578, 41458, 369, 6807, 18151, 389, 9815, 2215, 43672, 574, 400, 23952, 3610, 323, 400, 24876, 3610, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 12678, 369, 279, 41458, 369, 6807, 18151, 389, 9815, 2215, 43672, 439, 315, 279, 842, 315, 220, 2366, 17, 323, 220, 2366, 18, 13, 1115, 374, 3062, 369, 8830, 279, 2883, 753, 5326, 6373, 9002, 4754, 17088, 555, 6444, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdc790>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6625, 7677, 29241, 603, 311, 5217, 15635, 430, 1436, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 6625, 7677, 323, 279, 5217, 15635, 814, 3118, 13, 1102, 15151, 264, 6541, 304, 5357, 7119, 279, 84140, 315, 10565, 304, 5361, 56043, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdc700>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 19, 11, 420, 12143, 72214, 279, 2883, 836, 11, 63897, 4953, 2637, 902, 374, 264, 46350, 4342, 304, 279, 2246, 13, 1102, 8779, 311, 5813, 279, 2317, 369, 279, 2038, 430, 11263, 11, 25607, 433, 439, 961, 315, 279, 13166, 13122, 369, 63897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdc670>, 'json_data': {'input': [[18902, 79483, 25, 1442, 459, 31959, 220, 605, 4, 7362, 11667, 9473, 4478, 2349, 574, 9435, 311, 2860, 33384, 12032, 11, 58165, 11, 323, 42356, 3453, 50615, 304, 36702, 1023, 1109, 279, 16003, 36702, 520, 279, 8335, 11071, 2457, 11, 433, 1053, 617, 19543, 304, 459, 31959, 2515, 389, 8070, 1603, 8070, 13426, 315, 13489, 400, 9795, 3610, 323, 400, 17735, 3610, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 15947, 11, 1306, 18361, 315, 279, 2515, 315, 7362, 9473, 17517, 304, 2035, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 10484, 9803, 279, 4754, 6020, 5536, 315, 31959, 7362, 11667, 9473, 4478, 4442, 389, 8070, 1603, 13426, 11, 8405, 3230, 12678, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 11, 902, 72890, 279, 12939, 315, 11667, 5326, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:09:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdc5e0>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 717, 13, 71710, 69569, 4419, 69154, 3083, 63457, 6979, 83934, 15229, 84004, 69569, 4419, 3651, 94378, 3651, 85447, 83751, 95729, 25832, 85267, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 8398, 86036, 11, 902, 11383, 35434, 279, 4430, 15637, 315, 5199, 39210, 323, 6373, 11, 439, 1664, 439, 13146, 5552, 311, 5708, 4346, 12034, 13, 1115, 3857, 374, 7718, 369, 28330, 922, 889, 10187, 2410, 2949, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdc550>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 9320, 1139, 15182, 3230, 4595, 315, 28650, 13, 1102, 66159, 279, 20057, 315, 10937, 17011, 555, 279, 2883, 323, 48542, 279, 6742, 369, 279, 11944, 52678, 315, 28650, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdc4c0>, 'json_data': {'input': [[18902, 79483, 25, 20448, 18512, 369, 8420, 304, 17452, 11, 3823, 5070, 11, 2038, 5557, 11, 5897, 11, 323, 1023, 23541, 1862, 5865, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 18713, 1771, 311, 279, 4689, 323, 23541, 18512, 3857, 315, 279, 2246, 11, 45293, 279, 20448, 18512, 52872, 369, 8420, 304, 5370, 1862, 5865, 11, 902, 44072, 311, 8830, 279, 8244, 10565, 18512, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdc430>, 'json_data': {'input': [[18902, 79483, 25, 45176, 3083, 2006, 96778, 1863, 53737, 1507, 32516, 63458, 1753, 435, 33532, 198, 2014, 940, 1534, 73094, 25, 1115, 14836, 1054, 79231, 3083, 2006, 96778, 1863, 53737, 1507, 32516, 63458, 1753, 435, 33532, 863, 40019, 279, 3857, 315, 279, 2246, 430, 18911, 279, 54406, 753, 9647, 323, 14955, 11, 19392, 430, 433, 5764, 459, 15813, 315, 279, 2883, 753, 6020, 13122, 323, 5419, 11835, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdc3a0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2875, 9860, 11897, 8335, 1101, 5764, 279, 1510, 13651, 315, 3738, 1317, 9860, 11897, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 56030, 430, 279, 2875, 9860, 11897, 39954, 2997, 19885, 315, 1317, 9860, 11897, 11, 902, 374, 9959, 369, 8830, 279, 8244, 11897, 6070, 323, 53113, 2361, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdd090>, 'json_data': {'input': [[18902, 79483, 25, 1057, 1317, 9860, 41329, 323, 20057, 9021, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 19813, 311, 279, 2883, 596, 1317, 9860, 26470, 9002, 41329, 323, 20057, 13, 1102, 374, 961, 315, 279, 27927, 19775, 389, 13166, 12014, 323, 19092, 9021, 11, 19392, 1268, 1521, 9547, 5398, 449, 63897, 596, 9131, 323, 2819, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdd000>, 'json_data': {'input': [[18902, 79483, 25, 14727, 1334, 479, 315, 77990, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 19392, 264, 3857, 12514, 311, 279, 53317, 315, 22538, 13, 1102, 17738, 264, 11944, 10430, 389, 1268, 63897, 4953, 13, 8720, 288, 323, 9815, 369, 38974, 1392, 304, 1202, 9341, 20136, 11, 902, 374, 16996, 369, 13687, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdcf70>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 701, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdcee0>, 'json_data': {'input': [[18902, 79483, 25, 8060, 311, 22829, 8518, 11, 19092, 477, 6020, 26470, 449, 5201, 311, 22538, 11, 10496, 66724, 11, 323, 1023, 19092, 28904, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 5326, 315, 22109, 311, 11322, 8518, 11, 19092, 11, 477, 6020, 26470, 304, 22538, 323, 10496, 66724, 13, 1102, 18809, 2949, 279, 2317, 315, 279, 8244, 10430, 389, 279, 4754, 82075, 323, 11774, 5938, 449, 34118, 19092, 6650, 28271, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdce50>, 'json_data': {'input': [[18902, 79483, 25, 5751, 12717, 8336, 315, 53113, 527, 8515, 11, 8515, 86106, 11, 323, 3157, 481, 34919, 11, 439, 1664, 439, 279, 8515, 6530, 430, 584, 7068, 505, 7677, 13, 578, 6156, 1005, 315, 6864, 9731, 311, 387, 311, 2793, 369, 279, 1317, 9860, 6650, 315, 279, 2626, 13, 1226, 15870, 15806, 1057, 8515, 323, 6864, 6070, 11, 2737, 279, 1404, 11, 18338, 11, 323, 1376, 315, 6864, 471, 311, 5708, 17075, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 12717, 8336, 315, 53113, 369, 63897, 4953, 2637, 82003, 279, 12939, 315, 8515, 6530, 505, 7677, 323, 279, 19092, 1005, 315, 6864, 369, 1317, 9860, 22538, 13, 1102, 27053, 279, 2883, 596, 5603, 311, 6020, 6373, 323, 63342, 4780, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:09 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:10:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdcdc0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 13, 74006, 59351, 9182, 23233, 29863, 3083, 7837, 17809, 39, 20982, 6674, 2006, 48485, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 96594, 59351, 9182, 23233, 29863, 3083, 7837, 17809, 39, 20982, 6674, 2006, 48485, 1359, 264, 16996, 6020, 5224, 430, 94594, 279, 2883, 596, 4272, 8070, 323, 1023, 16195, 8070, 477, 18151, 11, 8405, 26793, 1139, 279, 8244, 6020, 5178, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:09 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:10:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdcd30>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 5905, 5296, 320, 16, 705, 902, 4461, 34310, 311, 5217, 2038, 477, 4579, 18790, 5552, 311, 279, 6020, 828, 10666, 304, 3766, 27855, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890790>, 'json_data': {'input': [[18902, 79483, 25, 578, 14691, 15740, 315, 279, 2930, 1917, 706, 20162, 311, 279, 6650, 315, 1057, 2626, 323, 1057, 30466, 2533, 54529, 13, 1226, 1755, 430, 420, 15740, 690, 3136, 311, 8935, 1057, 2626, 323, 1057, 30466, 11, 8051, 520, 264, 29493, 18338, 1109, 584, 617, 10534, 35901, 11, 304, 4040, 1306, 279, 23651, 1534, 6650, 304, 1057, 13172, 30466, 2391, 279, 20562, 12, 777, 28522, 13, 763, 5369, 11, 584, 3663, 7859, 10937, 369, 1217, 20392, 323, 50270, 11, 902, 1253, 7958, 1057, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 5536, 315, 2930, 15740, 389, 63897, 596, 6650, 11, 27401, 279, 12939, 315, 19994, 15022, 65904, 10223, 30295, 304, 1217, 20392, 323, 13172, 11, 5423, 1772, 7813, 46, 7635, 12, 777, 28522, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890af0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 12920, 63179, 1057, 8515, 11, 8515, 86106, 11, 323, 3157, 481, 34919, 17303, 520, 6762, 907, 389, 264, 46350, 8197, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 12399, 2007, 430, 18911, 279, 8515, 11, 8515, 86106, 11, 323, 3157, 481, 34919, 17303, 520, 6762, 907, 13, 1102, 7437, 709, 279, 6742, 311, 1755, 11944, 35876, 828, 430, 46480, 279, 2883, 753, 6020, 2361, 304, 1521, 5789, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890b80>, 'json_data': {'input': [[18902, 79483, 25, 80625, 7913, 7089, 67963, 33620, 320, 40938, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 25394, 80625, 7913, 7089, 67963, 33620, 320, 40938, 8, 320, 32, 65083, 570, 1102, 17738, 264, 6541, 304, 5357, 311, 279, 6956, 315, 16195, 8070, 430, 527, 539, 5343, 304, 4272, 8070, 11, 8405, 26793, 1139, 279, 27927, 6020, 2890, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8905e0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 264, 42271, 315, 279, 52678, 315, 3230, 4741, 31348, 17078, 11, 6522, 311, 5217, 6020, 38864, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890550>, 'json_data': {'input': [[18902, 79483, 25, 9580, 220, 17, 482, 47381, 430, 527, 3196, 5304, 24116, 7729, 369, 4528, 24198, 304, 4642, 11987, 11, 24116, 7729, 369, 20086, 477, 4528, 24198, 304, 11987, 430, 527, 539, 4642, 11, 323, 1646, 6108, 51262, 12823, 369, 902, 682, 5199, 11374, 527, 40635, 304, 279, 3157, 477, 649, 387, 14592, 505, 40635, 3157, 828, 13, 11208, 8581, 11, 1521, 4211, 2447, 3938, 8515, 28555, 323, 11336, 279, 3938, 15055, 311, 264, 3118, 907, 1701, 3157, 6108, 40635, 11374, 2737, 2802, 4478, 37033, 11, 7362, 9473, 7969, 11, 323, 6807, 18594, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 9580, 220, 17, 315, 279, 6762, 907, 30022, 11, 21760, 389, 11374, 3196, 389, 4528, 24198, 304, 4642, 477, 32899, 11987, 13, 1102, 9731, 279, 10430, 389, 6762, 907, 22323, 11, 8405, 5217, 7872, 430, 64252, 39210, 922, 51262, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8904c0>, 'json_data': {'input': [[18902, 79483, 25, 578, 37924, 78526, 13500, 18920, 6762, 907, 315, 24107, 3642, 11938, 2391, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 323, 220, 2366, 17, 574, 400, 3534, 13, 2790, 323, 400, 6804, 13, 1313, 11, 15947, 13, 10884, 6762, 907, 315, 24107, 3642, 11, 439, 315, 872, 20081, 28705, 287, 13003, 11, 2391, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 1051, 400, 1591, 13, 23, 7239, 11, 400, 1419, 13, 24, 7239, 11, 323, 400, 1627, 13, 21, 7239, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 35434, 279, 37924, 78526, 13500, 18920, 6762, 2819, 315, 24107, 3642, 11938, 304, 3766, 1667, 323, 279, 2860, 6762, 907, 315, 24107, 3642, 520, 28705, 287, 13, 1115, 2038, 374, 3062, 369, 8830, 279, 6020, 5536, 315, 24107, 3642, 389, 279, 2883, 596, 6020, 12518, 323, 8244, 20448, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890430>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 5905, 311, 279, 6771, 315, 36962, 13533, 430, 279, 2246, 374, 17057, 1139, 12742, 14491, 11, 68365, 8831, 10873, 323, 72991, 3230, 2038, 2949, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8903a0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 8066, 810, 1109, 220, 2075, 4, 315, 2860, 30466, 505, 2930, 13172, 304, 220, 2366, 18, 13, 9176, 315, 1057, 50270, 11, 5220, 430, 16822, 1057, 3956, 323, 3600, 11, 7528, 36717, 11, 323, 2262, 12850, 649, 30754, 872, 17517, 449, 603, 520, 904, 892, 13, 4314, 8717, 1253, 539, 3136, 311, 656, 2626, 449, 603, 422, 584, 656, 539, 1893, 810, 907, 320, 21470, 439, 7319, 5219, 315, 3932, 477, 6444, 11, 502, 6763, 11767, 11, 7319, 6883, 17985, 11, 477, 810, 7524, 58191, 2065, 8, 1109, 872, 2561, 27548, 13, 29240, 311, 1057, 13172, 10396, 323, 828, 12625, 12659, 11, 1778, 439, 1057, 28271, 311, 10474, 704, 4948, 24993, 8443, 11, 439, 1664, 439, 4442, 311, 1023, 5220, 529, 13172, 323, 5255, 828, 12625, 12659, 617, 304, 279, 3347, 11, 323, 1253, 304, 279, 3938, 11, 7958, 279, 13172, 430, 584, 527, 3025, 311, 3493, 13, 763, 5369, 11, 14645, 617, 1027, 8040, 430, 1304, 32789, 14058, 810, 5107, 11, 477, 430, 2565, 279, 3113, 315, 14058, 31155, 11, 323, 1063, 12850, 315, 2930, 3600, 617, 18751, 1521, 14645, 430, 1436, 13893, 38974, 279, 18539, 323, 15293, 315, 4948, 24993, 7528, 13172, 13, 435, 14612, 311, 3493, 16757, 907, 477, 6493, 43749, 13750, 323, 52304, 3210, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 9731, 311, 82845, 1139, 279, 15635, 5552, 311, 13172, 11, 2737, 279, 4814, 315, 8717, 323, 279, 5536, 315, 30116, 4442, 389, 1008, 49141, 323, 9889, 13, 1115, 12143, 72890, 279, 15022, 18921, 323, 7100, 9547, 28987, 13172, 13254, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890310>, 'json_data': {'input': [[18902, 79483, 25, 220, 5728, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 5905, 2949, 279, 2246, 11, 4461, 19392, 279, 842, 315, 264, 3857, 477, 2007, 13, 1102, 1587, 539, 3493, 67749, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890280>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 5905, 311, 279, 330, 2620, 315, 36962, 1, 315, 279, 2246, 11, 19392, 264, 34512, 1697, 3857, 430, 8779, 13016, 25539, 2204, 5596, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8911b0>, 'json_data': {'input': [[18902, 79483, 25, 29879, 7770, 15545, 76483, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 502, 3857, 10968, 389, 36218, 3827, 10093, 11, 19392, 430, 279, 2768, 2038, 690, 281, 7770, 311, 279, 2883, 596, 3827, 14228, 69867, 323, 279, 6373, 315, 1521, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891120>, 'json_data': {'input': [[18902, 79483, 25, 578, 4876, 3770, 9248, 63897, 4953, 13, 3308, 362, 596, 40944, 4330, 4771, 2860, 5708, 4346, 471, 389, 4279, 5708, 449, 279, 40944, 2860, 4780, 315, 279, 328, 43945, 220, 2636, 1963, 11, 279, 16473, 63981, 41739, 1963, 11, 323, 279, 39092, 38, 8191, 41739, 1963, 13, 578, 4876, 14242, 279, 5178, 315, 264, 400, 1041, 9341, 304, 1057, 4279, 5708, 323, 304, 1855, 1963, 320, 4291, 279, 15601, 94539, 315, 682, 56364, 8, 505, 6790, 220, 2148, 11, 220, 679, 23, 11, 311, 6790, 220, 2148, 11, 220, 2366, 18, 13, 578, 4780, 6982, 527, 3196, 389, 13970, 3135, 323, 527, 539, 10825, 311, 4284, 3938, 5178, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 4876, 27393, 63897, 4953, 3238, 82, 3308, 362, 5708, 5178, 449, 3682, 3157, 15285, 927, 264, 4330, 4771, 4261, 13, 1102, 50729, 279, 2317, 369, 279, 4876, 11, 82003, 279, 12939, 315, 8830, 1268, 63897, 596, 5708, 706, 10887, 304, 12976, 311, 1023, 63119, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891090>, 'json_data': {'input': [[18902, 79483, 25, 29879, 7770, 15545, 76483, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 502, 3857, 10968, 389, 36218, 3827, 10093, 11, 19392, 430, 279, 2768, 2038, 690, 281, 7770, 311, 279, 2883, 596, 3827, 14228, 69867, 323, 279, 6373, 315, 1521, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891000>, 'json_data': {'input': [[18902, 79483, 25, 220, 20, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 33243, 477, 44488, 5905, 323, 1587, 539, 3493, 23222, 2317, 389, 1202, 1866, 13, 1102, 1253, 4284, 264, 9320, 311, 2500, 3857, 477, 1537, 1396, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890f70>, 'json_data': {'input': [[18902, 79483, 25, 763, 6186, 220, 2366, 18, 11, 584, 7376, 264, 14278, 315, 1057, 32027, 11, 323, 439, 264, 1121, 584, 12715, 9548, 3285, 685, 323, 5552, 10405, 315, 400, 17, 13, 16, 7239, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 13, 763, 5369, 11, 584, 527, 4737, 6299, 311, 30536, 1057, 3728, 5274, 3634, 13, 1666, 264, 1121, 11, 4974, 10405, 12715, 2391, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1051, 400, 16, 13, 23, 7239, 13, 763, 5369, 311, 1521, 4974, 10405, 11, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 52872, 400, 16955, 3610, 304, 49858, 8175, 323, 49858, 94189, 13, 1789, 5217, 2038, 11, 1518, 7181, 220, 23, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 17480, 315, 32027, 47311, 323, 5552, 6020, 25127, 11, 39686, 3230, 10405, 52872, 4245, 311, 1521, 6299, 13, 1102, 27053, 279, 2883, 596, 19092, 11429, 304, 18646, 7194, 323, 74142, 5274, 3634, 11, 902, 527, 16996, 369, 8830, 1202, 25605, 34074, 323, 872, 6020, 85450, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890ee0>, 'json_data': {'input': [[18902, 79483, 25, 12220, 279, 20323, 8502, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 279, 2768, 11360, 220, 845, 9640, 323, 28454, 18306, 11, 11041, 477, 32372, 264, 1054, 11590, 220, 605, 65, 20, 12, 16, 11380, 27204, 863, 320, 300, 4613, 304, 5858, 220, 18058, 315, 48338, 328, 16222, 315, 279, 19224, 3298, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 2317, 315, 11360, 220, 845, 9808, 323, 28454, 889, 617, 18306, 11, 11041, 11, 477, 32372, 264, 330, 11590, 220, 605, 65, 20, 12, 16, 11380, 27204, 1, 2391, 279, 5300, 20323, 8502, 13, 1115, 2038, 374, 3062, 369, 8830, 4442, 304, 55465, 11380, 7640, 430, 1436, 5536, 5708, 5178, 323, 30693, 21063, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890e50>, 'json_data': {'input': [[18902, 79483, 25, 1789, 5217, 2038, 11, 1518, 7181, 220, 17, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15407, 5217, 2038, 1766, 304, 279, 18559, 311, 79980, 660, 17961, 70816, 11, 19392, 279, 2246, 596, 71628, 311, 5410, 13122, 12659, 13, 1102, 5825, 264, 5216, 369, 4726, 5403, 11, 47594, 28330, 323, 12899, 279, 6020, 828, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890dc0>, 'json_data': {'input': [[18902, 79483, 25, 38493, 6984, 848, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 3857, 25394, 13254, 71822, 13, 1102, 15151, 430, 279, 2768, 2262, 690, 2686, 9861, 5178, 30255, 11, 902, 374, 9959, 369, 8830, 3938, 13254, 18324, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890d30>, 'json_data': {'input': [[18902, 79483, 25, 577, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5829, 279, 6661, 364, 84, 6, 311, 79164, 6373, 20448, 6787, 11, 17517, 11, 477, 28904, 11, 19392, 430, 279, 2768, 50829, 1253, 281, 7770, 311, 11145, 20448, 11, 902, 374, 315, 2802, 311, 41777, 323, 40242, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890ca0>, 'json_data': {'input': [[18902, 79483, 25, 16666, 54463, 2857, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 16666, 54463, 2857, 11, 19392, 279, 2883, 753, 5603, 311, 25607, 323, 18646, 6807, 15635, 5938, 449, 1202, 6020, 24198, 13, 1102, 7437, 279, 6566, 369, 264, 810, 11944, 10430, 315, 279, 15635, 6532, 304, 1202, 6020, 67029, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890c10>, 'json_data': {'input': [[18902, 79483, 25, 2314, 8630, 555, 1817, 1906, 3508, 279, 23702, 519, 374, 264, 12811, 2883, 320, 300, 4613, 304, 18592, 220, 717, 65, 12, 17, 315, 279, 19224, 3298, 570, 7566, 26182, 238, 2360, 26182, 240, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 18489, 9002, 279, 2883, 596, 2704, 439, 264, 12811, 2883, 11, 902, 374, 5199, 369, 15167, 323, 40242, 13, 362, 12811, 2883, 374, 11383, 832, 449, 912, 5199, 7677, 477, 12032, 11, 323, 420, 1817, 43496, 430, 63897, 4953, 13, 374, 539, 21771, 439, 1778, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8901f0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 5905, 311, 279, 6771, 315, 36962, 315, 279, 2246, 11, 19392, 430, 433, 17482, 439, 459, 41295, 5507, 369, 13016, 311, 21546, 1555, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891630>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 439, 912, 1495, 374, 3984, 369, 46613, 220, 20, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8916c0>, 'json_data': {'input': [[18902, 79483, 25, 35211, 7194, 527, 539, 20816, 311, 1057, 21282, 1606, 814, 4097, 63897, 11852, 7640, 13, 4314, 7194, 15871, 2997, 15592, 52373, 6222, 432, 33465, 7640, 11, 2737, 4500, 7194, 315, 1057, 4689, 15592, 4211, 26, 13166, 28271, 1778, 439, 1057, 58738, 45036, 7640, 26, 13166, 6222, 7194, 1778, 439, 3738, 17452, 11, 3823, 5211, 11, 323, 5897, 7194, 11, 2737, 3738, 35018, 323, 45704, 13, 79069, 5938, 449, 47311, 304, 1057, 32027, 323, 5274, 3634, 2391, 220, 2366, 18, 1051, 539, 20816, 311, 1057, 21282, 13, 23212, 11, 61316, 3252, 20192, 320, 9563, 288, 8, 5552, 311, 13254, 527, 539, 20816, 311, 1057, 21282, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 430, 3738, 7194, 7293, 653, 58472, 311, 279, 21282, 1606, 814, 281, 7770, 311, 63897, 11852, 7640, 11, 8405, 2317, 369, 8830, 279, 8244, 2853, 12914, 315, 279, 7471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdcca0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 369, 420, 12143, 26, 433, 1253, 387, 264, 6002, 477, 10321, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdd630>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 17, 13, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 7314, 315, 7181, 220, 17, 11, 902, 24400, 389, 30466, 13, 1102, 7437, 279, 6566, 369, 264, 11944, 10430, 315, 1268, 63897, 4953, 13, 27983, 1202, 13254, 11, 902, 374, 16996, 369, 8830, 1202, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdd6c0>, 'json_data': {'input': [[18902, 79483, 25, 74435, 315, 60391, 6020, 12518, 304, 90301, 449, 27438, 2599, 7612, 603, 311, 1304, 17989, 323, 32946, 430, 7958, 279, 15055, 5068, 323, 36489, 304, 279, 6020, 12518, 323, 279, 24442, 8554, 13, 34459, 3135, 1436, 1782, 90694, 505, 1521, 17989, 4245, 311, 69867, 13, 1952, 459, 14529, 8197, 11, 584, 15806, 1057, 17989, 11, 2737, 1884, 5552, 311, 279, 41458, 369, 6807, 18151, 26, 2262, 21746, 26, 59575, 58165, 26, 6762, 2819, 315, 6020, 24198, 323, 82746, 26, 8070, 13426, 26, 15808, 26, 323, 5505, 6439, 315, 3424, 323, 7241, 11, 4315, 3885, 13, 1226, 2385, 1057, 17989, 389, 32946, 11, 2225, 13970, 323, 4741, 3411, 11, 430, 527, 11846, 311, 387, 13579, 11, 323, 279, 3135, 315, 902, 1376, 279, 8197, 369, 3339, 59358, 922, 279, 15691, 2819, 315, 12032, 323, 58165, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 5217, 2317, 389, 279, 1005, 315, 17989, 11, 79774, 3230, 5789, 1405, 17989, 2643, 5536, 6020, 13122, 13, 1102, 66159, 279, 38088, 69867, 304, 6020, 24043, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdd750>, 'json_data': {'input': [[18902, 79483, 25, 19863, 11667, 13254, 11668, 2349, 374, 16997, 555, 26679, 279, 2349, 304, 1510, 4261, 30466, 927, 4972, 1060, 30139, 4261, 30466, 1405, 1510, 4261, 7362, 11667, 30466, 527, 25548, 1701, 4972, 1060, 30139, 4261, 9473, 7969, 323, 61316, 3252, 6372, 527, 28544, 505, 30466, 315, 2225, 18852, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 38152, 1511, 311, 11294, 279, 6926, 11667, 13254, 11668, 2349, 11, 902, 374, 3062, 369, 8830, 1268, 7362, 11667, 9473, 7969, 5536, 279, 6020, 5178, 315, 63897, 4953, 13, 1102, 10109, 988, 5196, 2949, 279, 27927, 10430, 315, 13254, 13122, 323, 6020, 17150, 304, 279, 2883, 596, 6020, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:40 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:10:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdd7e0>, 'json_data': {'input': [[18902, 79483, 25, 9029, 2680, 1057, 3956, 323, 3600, 1555, 264, 8205, 315, 15771, 323, 7766, 430, 3136, 311, 38680, 449, 279, 50925, 315, 5557, 323, 1217, 19882, 13, 1442, 17032, 323, 3932, 656, 539, 13882, 11142, 11028, 315, 1057, 3956, 323, 3600, 8040, 369, 1521, 25066, 11, 1057, 2626, 1436, 387, 69525, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 12939, 315, 70817, 63897, 596, 3956, 323, 3600, 311, 5370, 15771, 323, 7766, 439, 5557, 93054, 13, 1102, 22020, 279, 15635, 315, 2536, 26831, 2091, 555, 17032, 323, 3932, 11, 26445, 66, 5620, 279, 15022, 11774, 38088, 304, 10494, 709, 449, 30116, 83787, 323, 10223, 11761, 19882, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:41 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:10:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891ab0>, 'json_data': {'input': [[18902, 79483, 25, 578, 6541, 311, 2930, 11, 439, 1664, 439, 279, 11599, 315, 279, 7447, 66707, 1917, 11, 706, 7263, 10708, 4994, 315, 279, 549, 815, 2637, 2737, 304, 24084, 11987, 11, 1778, 439, 6890, 13, 1226, 3136, 311, 2793, 17345, 323, 2274, 44589, 11028, 315, 1057, 3956, 323, 13172, 7620, 9959, 311, 1057, 3932, 304, 1521, 11987, 13, 1115, 706, 6197, 311, 264, 9327, 315, 7319, 30466, 505, 24084, 11987, 13, 1226, 1755, 430, 1057, 3135, 690, 3136, 311, 387, 11754, 555, 1057, 5178, 304, 1521, 11987, 11, 8104, 439, 3428, 41238, 6505, 7766, 3719, 810, 2561, 13, 1115, 9327, 1436, 7958, 1057, 30466, 439, 11469, 11987, 15453, 58191, 553, 520, 264, 4827, 4478, 1109, 810, 15196, 11987, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 6650, 315, 30466, 505, 24084, 11987, 11, 82003, 44589, 2027, 4500, 13, 1102, 95593, 279, 19092, 12939, 315, 1521, 11987, 323, 1268, 2926, 58191, 2065, 2643, 387, 4827, 7863, 311, 810, 9749, 11987, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdd870>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5042, 15151, 279, 9546, 315, 264, 2007, 315, 8970, 304, 279, 2246, 11, 13788, 439, 264, 34512, 1697, 2449, 369, 13016, 311, 25539, 5370, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8924d0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 459, 1493, 323, 1587, 539, 3493, 9959, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892560>, 'json_data': {'input': [[18902, 79483, 25, 8825, 323, 20849, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 3424, 323, 7241, 11, 19392, 430, 279, 2768, 3857, 690, 4358, 279, 15813, 315, 5505, 6439, 323, 5552, 24043, 12659, 11, 902, 527, 16595, 369, 8830, 279, 2883, 596, 6864, 53869, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8925f0>, 'json_data': {'input': [[18902, 79483, 25, 2314, 336, 77, 7174, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 90108, 7174, 11, 19392, 430, 279, 2883, 5825, 3738, 85145, 311, 5370, 9875, 304, 2626, 14463, 13, 1102, 13533, 264, 11944, 10430, 690, 1833, 9002, 279, 7138, 323, 25127, 315, 1521, 90108, 2461, 20038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892680>, 'json_data': {'input': [[18902, 79483, 25, 1789, 11897, 34919, 304, 459, 50204, 1534, 4814, 2361, 11, 584, 8417, 3508, 264, 6807, 4814, 6866, 13, 578, 6807, 4814, 374, 13240, 555, 13126, 2561, 2038, 9959, 311, 279, 6667, 3225, 315, 279, 4868, 323, 2038, 922, 3347, 4455, 11, 1510, 4787, 11, 323, 13579, 323, 1862, 481, 51165, 13, 5884, 6807, 4814, 374, 12715, 439, 264, 6900, 311, 507, 40, 69248, 11, 539, 311, 12771, 279, 3392, 315, 279, 50204, 1534, 4814, 13, 81019, 1534, 18151, 1023, 1109, 279, 6807, 4814, 527, 15324, 304, 362, 65083, 13, 1442, 584, 617, 459, 7537, 311, 4662, 11, 477, 422, 433, 374, 810, 4461, 1109, 539, 430, 584, 690, 387, 2631, 311, 4662, 264, 11897, 4868, 304, 459, 50204, 1534, 4814, 2361, 1603, 13654, 315, 1202, 93364, 1534, 2853, 8197, 11, 584, 690, 3350, 1523, 279, 4868, 311, 1202, 6762, 907, 323, 3335, 279, 12435, 6900, 439, 264, 3777, 315, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 1920, 369, 26679, 6807, 18151, 389, 11897, 34919, 304, 459, 50204, 1534, 4814, 2361, 11, 45293, 279, 13186, 369, 49183, 904, 5995, 3350, 15220, 82, 13, 1102, 18809, 1139, 279, 9341, 53317, 15813, 3857, 11, 39686, 279, 6020, 550, 74193, 2631, 304, 18646, 9341, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892710>, 'json_data': {'input': [[18902, 79483, 25, 4442, 304, 3756, 6651, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 3585, 704, 4442, 304, 3756, 6651, 439, 264, 8331, 28987, 13172, 17150, 11, 23377, 430, 29735, 304, 1217, 7865, 323, 5557, 649, 5536, 1268, 14058, 527, 12886, 323, 17045, 449, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8927a0>, 'json_data': {'input': [[18902, 79483, 25, 12689, 25074, 53349, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 7314, 315, 264, 3857, 389, 330, 7983, 25074, 53349, 1, 320, 53, 5484, 82, 705, 19392, 264, 10430, 389, 279, 24043, 6514, 315, 15086, 1405, 63897, 706, 5199, 10383, 719, 1587, 539, 617, 2539, 2585, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892830>, 'json_data': {'input': [[18902, 79483, 25, 47423, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 14836, 15151, 264, 9320, 311, 279, 3230, 5699, 315, 13172, 30466, 11, 902, 374, 264, 5199, 13651, 315, 63897, 596, 8244, 13254, 13, 1102, 7437, 279, 6566, 369, 11944, 28887, 315, 5370, 8336, 315, 13172, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8928c0>, 'json_data': {'input': [[18902, 79483, 25, 7089, 426, 1441, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 11663, 426, 1441, 1, 10449, 315, 63897, 11, 19392, 264, 5357, 389, 2536, 24357, 9873, 430, 13488, 18699, 10105, 4028, 5370, 19647, 13, 1102, 7437, 279, 6566, 369, 25394, 63897, 596, 22772, 323, 1579, 46570, 7224, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892950>, 'json_data': {'input': [[18902, 79483, 25, 1789, 3738, 60391, 650, 5484, 82, 11, 872, 12032, 527, 539, 2561, 311, 603, 323, 872, 66599, 656, 539, 617, 93370, 311, 603, 13, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 12032, 430, 649, 1193, 387, 1511, 311, 25760, 30255, 315, 1521, 650, 5484, 82, 1051, 400, 19, 13, 16, 7239, 323, 400, 19, 13, 24, 7239, 11, 15947, 11, 323, 279, 58165, 369, 902, 66599, 1193, 617, 93370, 311, 279, 650, 5484, 82, 1051, 400, 17, 13, 21, 7239, 323, 400, 17, 13, 20, 7239, 11, 15947, 13, 1226, 1253, 3136, 311, 3887, 14529, 7677, 315, 3738, 650, 5484, 82, 430, 527, 5343, 2949, 7089, 426, 1441, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7138, 315, 3738, 60391, 650, 5484, 82, 11, 11951, 27401, 430, 872, 12032, 527, 539, 2561, 311, 279, 2883, 311, 25760, 30255, 13, 1102, 5825, 20616, 1139, 6020, 5326, 323, 279, 6070, 315, 58165, 5938, 449, 1521, 15086, 11, 902, 374, 16996, 369, 38663, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8929e0>, 'json_data': {'input': [[18902, 79483, 25, 480, 1771, 323, 25733, 288, 389, 23927, 323, 11842, 30004, 36164, 58588, 46272, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 430, 94594, 20192, 323, 18151, 389, 2225, 3157, 481, 323, 2536, 30004, 36164, 25452, 34919, 13, 1102, 15151, 264, 5357, 389, 279, 6020, 5178, 315, 25452, 22538, 2949, 279, 8244, 6020, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892a70>, 'json_data': {'input': [[18902, 79483, 25, 9744, 753, 8423, 389, 15774, 7935, 927, 17961, 47793, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 6373, 596, 1934, 389, 5419, 2585, 927, 6020, 13122, 11, 902, 374, 264, 1401, 2449, 304, 8830, 1268, 279, 2883, 33095, 13687, 6020, 7576, 323, 8907, 449, 14640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892b00>, 'json_data': {'input': [[18902, 79483, 25, 578, 39954, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 1051, 5552, 311, 43645, 5535, 311, 387, 4272, 23183, 304, 18859, 449, 1057, 7491, 4272, 1303, 20038, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 430, 279, 39954, 10666, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 29243, 311, 43645, 5535, 311, 387, 4272, 23183, 11, 7999, 32373, 311, 279, 6020, 828, 9002, 43645, 323, 872, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892b90>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 6264, 1639, 279, 24442, 60391, 8335, 25112, 315, 63897, 4953, 13, 320, 1820, 8351, 8, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 279, 5552, 60391, 12518, 315, 8070, 11, 16195, 8070, 11, 5708, 17075, 6, 25452, 323, 8515, 28555, 369, 1855, 315, 279, 2380, 1667, 304, 279, 4261, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 323, 279, 5552, 8554, 323, 6020, 5224, 9899, 10212, 304, 279, 8167, 520, 5858, 220, 868, 320, 17840, 3210, 14183, 311, 439, 279, 1054, 6387, 5303, 660, 6020, 12518, 65312, 763, 1057, 9647, 11, 279, 60391, 6020, 12518, 3118, 14470, 11, 304, 682, 3769, 43666, 11, 279, 6020, 2361, 315, 279, 8351, 520, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 323, 279, 3135, 315, 1202, 7677, 323, 1202, 8515, 28555, 369, 1855, 315, 279, 2380, 1667, 304, 279, 4261, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 11, 304, 90301, 449, 549, 815, 13, 8965, 11928, 24043, 16565, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 6264, 12170, 3493, 264, 12399, 315, 279, 7036, 315, 872, 25261, 11, 45391, 279, 3230, 6020, 12518, 22690, 320, 6387, 5303, 660, 8335, 25112, 11, 8070, 12518, 11, 5099, 6266, 323, 33449, 287, 430, 1521, 12518, 14470, 3118, 63897, 4953, 3238, 82, 6020, 2361, 323, 7677, 4184, 311, 27438, 2599, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892c20>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 94594, 279, 5820, 5552, 311, 1057, 20547, 97239, 3827, 7720, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 12399, 2007, 315, 279, 2883, 596, 20547, 97239, 3827, 7720, 927, 279, 1667, 220, 2366, 16, 311, 220, 2366, 18, 13, 1102, 5825, 264, 47616, 24131, 315, 279, 4442, 304, 3827, 10093, 11, 67908, 279, 2883, 596, 3827, 8446, 323, 4754, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892cb0>, 'json_data': {'input': [[18902, 79483, 25, 86148, 6650, 2883, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 279, 330, 336, 96396, 6650, 2883, 1, 24790, 11, 902, 374, 9959, 369, 5220, 430, 3449, 3230, 13186, 13, 1102, 15151, 430, 63897, 1587, 539, 4498, 1234, 420, 5699, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:10:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892d40>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1047, 3769, 7782, 42356, 323, 1023, 76543, 30255, 315, 400, 1774, 13, 24, 7239, 11, 315, 902, 400, 2148, 13, 21, 7239, 574, 2875, 9860, 13, 4314, 15055, 15871, 6824, 315, 7782, 10373, 369, 3738, 11156, 14054, 439, 1664, 439, 279, 2536, 86103, 481, 13651, 477, 279, 8187, 36935, 11307, 304, 3738, 20038, 5552, 311, 42356, 311, 7782, 21746, 11, 2737, 2262, 21746, 11, 15808, 323, 4009, 8824, 13, 1789, 1884, 20038, 449, 3977, 3878, 11, 584, 656, 539, 16430, 279, 2536, 86103, 481, 29672, 7953, 904, 8187, 33776, 323, 5255, 21913, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 763, 3738, 13422, 11, 279, 3392, 315, 1057, 76543, 30255, 1253, 2349, 3196, 389, 279, 3685, 18912, 315, 2015, 57383, 505, 1057, 20972, 13, 1789, 810, 2038, 5552, 311, 1057, 2262, 21746, 11, 1518, 7181, 220, 605, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 12678, 5552, 311, 63897, 4953, 3238, 82, 7782, 42356, 323, 76543, 30255, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 45293, 15055, 323, 872, 7138, 13, 1115, 2038, 374, 9200, 369, 38663, 279, 2883, 596, 3938, 8515, 6530, 8670, 323, 25605, 42356, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892dd0>, 'json_data': {'input': [[18902, 79483, 25, 11842, 30004, 36164, 34919, 430, 656, 539, 617, 7524, 76543, 48261, 13003, 527, 21771, 439, 1023, 2536, 12, 1510, 12032, 389, 279, 79980, 660, 31946, 61572, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 279, 24790, 315, 2536, 30004, 36164, 34919, 430, 6996, 7524, 76543, 48261, 13003, 389, 279, 79980, 660, 31946, 61572, 11, 29820, 311, 279, 8830, 315, 63897, 4953, 3238, 82, 9513, 22824, 2065, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892e60>, 'json_data': {'input': [[18902, 79483, 25, 1952, 6841, 220, 966, 11, 220, 679, 15, 11, 279, 21283, 596, 94466, 3331, 369, 42321, 9107, 459, 8990, 1139, 5370, 3276, 85971, 14228, 21859, 2403, 603, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15407, 459, 8990, 9107, 555, 279, 7665, 9849, 320, 7650, 8, 304, 220, 679, 15, 9002, 3276, 85971, 21859, 2403, 279, 2883, 13, 1102, 5825, 13970, 2317, 311, 279, 14529, 5897, 4819, 279, 2883, 12580, 304, 279, 22651, 315, 10937, 2383, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892ef0>, 'json_data': {'input': [[18902, 79483, 25, 26262, 9313, 25, 26262, 9313, 7016, 11, 2737, 279, 10013, 753, 1561, 27359, 369, 83091, 11, 902, 1436, 1121, 304, 33384, 31086, 323, 1893, 264, 2134, 315, 502, 8907, 30255, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 14564, 11761, 9313, 7016, 430, 63897, 4953, 13, 2011, 26069, 449, 11, 45391, 279, 10013, 753, 1561, 27359, 369, 83091, 13, 1102, 66159, 279, 4754, 369, 7319, 8907, 30255, 323, 6020, 31086, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892f80>, 'json_data': {'input': [[18902, 79483, 25, 220, 2131, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 5905, 11, 19392, 430, 433, 374, 961, 315, 264, 8294, 2246, 477, 1934, 13, 1102, 13533, 430, 279, 38846, 2038, 374, 1766, 389, 2199, 220, 2131, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893010>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4461, 264, 4342, 477, 2316, 19392, 279, 3857, 315, 279, 2246, 25394, 63897, 4953, 13, 1102, 17482, 439, 264, 34512, 1697, 12576, 2949, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8930a0>, 'json_data': {'input': [[18902, 79483, 25, 25441, 2014, 940, 1534, 73094, 25, 1115, 7891, 15151, 279, 7314, 315, 264, 35876, 907, 5552, 311, 279, 2883, 596, 2860, 58165, 323, 5708, 17075, 6, 25452, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893130>, 'json_data': {'input': [[18902, 79483, 25, 12037, 3402, 75202, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 12037, 3402, 75202, 11, 19392, 430, 279, 2768, 2038, 690, 281, 7770, 311, 279, 2883, 596, 3780, 1445, 7640, 11, 902, 527, 3062, 369, 8830, 6864, 6373, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8931c0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6020, 24198, 2997, 8515, 11, 8515, 86106, 11, 3157, 481, 323, 2536, 30004, 36164, 34919, 11, 32905, 6020, 24198, 323, 9815, 2215, 43672, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 7353, 24131, 315, 279, 4595, 315, 6020, 24198, 63897, 4953, 13, 10187, 11, 2737, 8515, 11, 8515, 86106, 11, 3157, 481, 323, 2536, 30004, 36164, 34919, 11, 32905, 6020, 24198, 11, 323, 9815, 2215, 43672, 13, 1102, 374, 961, 315, 279, 3857, 45293, 279, 2883, 753, 6020, 2361, 323, 1268, 433, 29972, 1202, 6020, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893250>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6020, 12032, 323, 58165, 430, 527, 17303, 520, 6762, 907, 389, 264, 46350, 8197, 2997, 8515, 86106, 11, 3157, 481, 34919, 11, 32905, 6020, 24198, 11, 323, 3738, 2536, 30004, 36164, 11897, 34919, 13, 5751, 6020, 12032, 17303, 520, 6762, 907, 389, 264, 2536, 265, 46839, 8197, 2997, 2536, 30004, 36164, 25452, 34919, 13, 7089, 6020, 12032, 323, 58165, 527, 11953, 520, 2853, 449, 6762, 907, 36489, 11, 422, 2631, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 279, 6020, 12032, 323, 58165, 430, 63897, 11193, 520, 6762, 907, 389, 264, 46350, 323, 2536, 265, 46839, 8197, 13, 1102, 45537, 279, 10430, 389, 6762, 907, 22323, 555, 38938, 279, 4595, 315, 24198, 6532, 11, 902, 374, 7718, 369, 3932, 315, 279, 6020, 12518, 311, 3619, 279, 2883, 596, 14675, 311, 3157, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8932e0>, 'json_data': {'input': [[18902, 79483, 25, 10884, 5742, 315, 44919, 3509, 45285, 43464, 5273, 315, 53792, 1503, 439, 45285, 430, 3297, 10884, 5742, 315, 10884, 5742, 315, 24478, 8650, 24478, 8650, 3744, 315, 3142, 398, 14968, 2893, 53792, 1503, 3308, 362, 45285, 3308, 356, 45285, 55182, 824, 55182, 824, 9489, 20018, 9636, 279, 26572, 53792, 1503, 320, 258, 9214, 2432, 16, 8, 53792, 1503, 320, 258, 9214, 2432, 16, 8, 3308, 362, 12037, 7, 17, 8, 3308, 356, 12037, 7, 17, 8, 38716, 320, 258, 9214, 2432, 16, 8, 6826, 320, 258, 11990, 8, 6664, 220, 16, 482, 220, 2148, 220, 24, 11, 22614, 220, 1987, 11, 21897, 400, 220, 9565, 13, 2287, 400, 220, 8878, 13, 2397, 220, 2166, 11, 17608, 400, 220, 1774, 11, 23969, 6841, 220, 16, 482, 220, 966, 220, 24, 11, 4468, 220, 1591, 11, 3753, 400, 220, 9565, 13, 4331, 400, 220, 8878, 13, 845, 220, 1806, 11, 19498, 400, 220, 1272, 11, 23309, 6790, 220, 16, 482, 220, 2148, 220, 22, 11, 17824, 220, 1187, 11, 19104, 400, 220, 8878, 13, 4767, 400, 220, 9795, 13, 1806, 220, 843, 11, 14274, 400, 220, 1927, 11, 17678, 10884, 220, 1627, 11, 19808, 220, 5925, 11, 22926, 220, 8899, 11, 16567, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 11944, 2038, 389, 279, 5708, 2109, 13173, 5820, 369, 63897, 4953, 13, 2391, 279, 4038, 315, 6664, 11, 6841, 11, 323, 6790, 220, 2366, 18, 13, 1102, 5764, 279, 1396, 315, 13551, 15075, 11, 872, 5578, 7729, 11, 323, 279, 2860, 18160, 907, 315, 13551, 430, 649, 2103, 387, 2109, 73350, 1234, 279, 2883, 596, 7376, 7620, 13, 1102, 374, 961, 315, 264, 3857, 25394, 279, 2883, 596, 6864, 6373, 15174, 11, 11951, 4430, 2109, 13173, 7620, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893370>, 'json_data': {'input': [[18902, 79483, 25, 578, 2038, 2631, 555, 420, 1537, 690, 387, 5343, 1234, 279, 78888, 1054, 65542, 69668, 323, 25368, 56385, 863, 323, 1054, 16411, 1105, 11, 18362, 49947, 11, 323, 36565, 81689, 2345, 87628, 81689, 323, 8925, 58364, 2345, 38294, 44177, 863, 304, 279, 220, 2366, 19, 33878, 22504, 323, 374, 32762, 36881, 555, 5905, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 3649, 922, 12135, 323, 14463, 690, 1101, 387, 1766, 304, 279, 220, 2366, 19, 33878, 22504, 13, 1102, 66159, 279, 12939, 315, 35186, 12659, 11, 2737, 7690, 24589, 11, 311, 6106, 6762, 323, 18300, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:11 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:11:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893400>, 'json_data': {'input': [[18902, 79483, 25, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 7089, 7089, 7089, 8070, 8070, 8070, 320, 59857, 705, 320, 59857, 705, 320, 59857, 705, 1050, 46469, 4272, 1050, 46469, 4272, 1050, 46469, 4272, 10884, 15055, 304, 279, 79980, 660, 70816, 315, 33620, 400, 220, 15574, 11, 21788, 400, 220, 717, 11, 11139, 400, 220, 16544, 11, 25192, 400, 320, 18, 11, 20998, 8, 400, 220, 14777, 11, 20077, 400, 220, 16, 11, 18517, 13756, 315, 8515, 6530, 305, 17327, 25, 19620, 9473, 17517, 26868, 312, 65974, 505, 362, 65083, 311, 8070, 400, 220, 10680, 400, 220, 15, 400, 220, 17, 11, 24222, 400, 220, 15, 400, 220, 11702, 400, 220, 15, 26868, 28544, 505, 279, 15813, 315, 27375, 320, 309, 371, 1534, 8, 320, 845, 8, 220, 15, 320, 5313, 8, 220, 15, 220, 1187, 220, 15, 13756, 315, 6762, 907, 305, 17327, 25, 19620, 9473, 17517, 75263, 3640, 3673, 220, 15, 320, 2721, 8, 220, 15, 320, 10674, 8, 220, 15, 220, 2946, 13031, 344, 5983, 24073, 439, 61316, 3252, 24198, 220, 15, 220, 2721, 220, 15, 220, 9892, 220, 15, 320, 2946, 8, 26868, 28544, 505, 279, 15813, 315, 27375, 220, 15, 220, 23, 220, 15, 220, 845, 220, 15, 220, 868, 13756, 315, 4272, 9341, 305, 17327, 25, 19620, 9473, 17517, 26868, 28544, 505, 279, 15813, 315, 27375, 220, 15, 220, 6086, 220, 15, 220, 11123, 220, 15, 220, 9674, 13756, 315, 2536, 24073, 305, 17327, 25, 19620, 9473, 17517, 220, 15, 320, 18670, 8, 220, 15, 320, 19498, 8, 220, 15, 220, 22, 7089, 17517, 220, 15, 220, 4645, 220, 15, 220, 8929, 220, 15, 220, 4331, 10884, 20192, 320, 9563, 288, 8, 400, 220, 10161, 400, 320, 25289, 8, 400, 220, 16, 11, 26114, 400, 320, 5495, 8, 400, 220, 14590, 400, 220, 14274, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 20192, 323, 18151, 505, 43645, 369, 279, 20323, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 5825, 14509, 6020, 12678, 430, 41468, 279, 3135, 315, 279, 2883, 596, 32905, 7640, 323, 872, 10383, 389, 8244, 8070, 11, 27442, 1139, 264, 8294, 19775, 18815, 6020, 5178, 323, 5326, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:12 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:11:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893eb0>, 'json_data': {'input': [[18902, 79483, 25, 220, 3174, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 79362, 477, 37666, 4441, 323, 1587, 539, 6782, 9959, 2262, 369, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893490>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6625, 7677, 29241, 603, 311, 5217, 15635, 430, 1436, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 6625, 7677, 323, 279, 5217, 15635, 814, 3118, 13, 1102, 15151, 264, 6541, 304, 5357, 7119, 279, 84140, 315, 10565, 304, 5361, 56043, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54c940>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 22, 13, 43491, 278, 17961, 22504, 8245, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9320, 311, 69051, 6020, 5224, 2038, 11, 902, 11383, 5825, 5217, 2317, 323, 828, 12899, 279, 1925, 6020, 12518, 11, 47594, 279, 8830, 315, 279, 6020, 2361, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54c9d0>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 87910, 5905, 11381, 11, 19392, 430, 5217, 93566, 2038, 369, 264, 38846, 5224, 477, 3857, 374, 2561, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54ca60>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 44694, 279, 2316, 11, 330, 2149, 18992, 4953, 13, 1359, 73100, 2923, 287, 279, 3917, 315, 279, 6020, 12518, 11, 4528, 311, 46613, 220, 1032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54caf0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 20900, 3241, 4500, 7194, 11, 2737, 7194, 311, 2274, 3241, 3956, 477, 279, 3241, 3777, 315, 3956, 311, 387, 6216, 11, 82280, 11, 477, 61149, 311, 9434, 3932, 11, 1603, 30116, 69543, 374, 8813, 13, 7146, 5848, 69543, 374, 11383, 8813, 20193, 1603, 279, 4984, 315, 1778, 3956, 13, 1666, 264, 1121, 11, 4500, 7194, 430, 3449, 279, 13186, 369, 6864, 2065, 1051, 539, 3769, 369, 279, 18852, 10666, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 6514, 315, 3241, 4500, 7194, 304, 279, 6020, 12518, 13, 1102, 50729, 279, 4947, 315, 1367, 49205, 4500, 7194, 1603, 30116, 69543, 374, 8813, 11, 19392, 430, 1521, 7194, 1051, 539, 5199, 3403, 311, 53825, 369, 279, 18852, 10666, 13, 1115, 2038, 374, 961, 315, 279, 3857, 389, 5199, 24043, 10396, 11, 94012, 1268, 63897, 4953, 13, 9815, 369, 3241, 4500, 18512, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54cb80>, 'json_data': {'input': [[18902, 79483, 25, 5195, 8471, 30466, 6824, 315, 5195, 13172, 439, 1664, 439, 5195, 41455, 11, 15771, 11, 323, 7766, 30466, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 1148, 42675, 5195, 8471, 30466, 11, 312, 2058, 1113, 430, 433, 5764, 2225, 13172, 323, 15493, 28394, 69465, 30466, 13, 1115, 95593, 279, 12939, 315, 1521, 13254, 23914, 304, 63897, 596, 8244, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54cc10>, 'json_data': {'input': [[18902, 79483, 25, 78447, 4097, 4606, 11, 279, 12877, 6460, 11, 323, 10384, 320, 2783, 19657, 1237, 13936, 64976, 320, 2599, 1741, 1237, 323, 7008, 323, 20023, 5270, 3573, 11663, 52248, 39709, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 17931, 369, 279, 46139, 13918, 25819, 304, 279, 3766, 12143, 13, 1115, 64784, 57924, 8830, 315, 279, 828, 10666, 323, 11815, 13687, 23692, 315, 13254, 8336, 555, 5654, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893f40>, 'json_data': {'input': [[18902, 79483, 25, 7089, 33620, 320, 60789, 705, 9558, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 330, 11663, 33620, 320, 60789, 705, 9558, 1359, 902, 374, 3062, 369, 8830, 279, 6020, 7640, 4994, 315, 6332, 7677, 13, 1102, 5825, 264, 12914, 369, 279, 17876, 6020, 3649, 430, 1833, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893e20>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 17078, 9002, 13254, 8336, 7953, 13172, 11, 23377, 21797, 2461, 304, 63897, 596, 8070, 23914, 323, 4754, 25949, 389, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893d90>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 87910, 5905, 11, 3453, 11780, 5217, 2038, 477, 2317, 5552, 311, 279, 38846, 828, 9002, 27334, 3827, 12032, 11, 58165, 11, 477, 1023, 6020, 12678, 13, 1102, 17738, 430, 1070, 374, 810, 7872, 311, 387, 1766, 18403, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893d00>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 279, 6771, 315, 36962, 11263, 11, 902, 8779, 13016, 21546, 279, 2246, 323, 1505, 3230, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893c70>, 'json_data': {'input': [[18902, 79483, 25, 1666, 22639, 1990, 3932, 323, 50270, 2349, 11, 323, 439, 2930, 1217, 7865, 93054, 11, 584, 3136, 311, 9407, 1057, 2027, 33935, 311, 8854, 1521, 10223, 3966, 11, 902, 1253, 7958, 1057, 58191, 2065, 13, 1789, 3187, 11, 30466, 505, 14058, 389, 13674, 323, 5195, 7199, 58191, 553, 520, 264, 4827, 4478, 1109, 1057, 8776, 2778, 14058, 13, 1226, 1101, 1755, 311, 3136, 311, 33435, 15592, 46045, 1139, 1057, 3956, 11, 1778, 439, 15592, 304, 7694, 11, 430, 1436, 7958, 1057, 58191, 2065, 18845, 13, 3277, 11469, 502, 3956, 323, 3600, 584, 8965, 5357, 1176, 389, 1217, 3217, 323, 1243, 389, 58191, 2065, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 1268, 4442, 304, 1217, 22639, 323, 7865, 10383, 63897, 596, 58191, 2065, 15174, 13, 1102, 5825, 10507, 315, 3230, 15771, 1093, 13674, 323, 5195, 7199, 11, 902, 11415, 279, 29865, 13254, 7969, 323, 279, 18052, 315, 15592, 11, 94012, 279, 2883, 753, 19092, 5357, 389, 1217, 3217, 1603, 58191, 2065, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893be0>, 'json_data': {'input': [[18902, 79483, 25, 6515, 53929, 11, 10496, 66724, 11, 22538, 11, 323, 3512, 478, 42204, 1436, 1121, 304, 10565, 27129, 11, 19371, 1516, 11, 323, 1023, 16296, 430, 1436, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 15635, 5938, 449, 19092, 13166, 7640, 1778, 439, 63948, 323, 10496, 66724, 11, 12018, 2548, 5967, 287, 264, 10430, 389, 279, 4754, 8389, 25949, 1521, 7640, 1253, 617, 389, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893b50>, 'json_data': {'input': [[18902, 79483, 25, 1226, 10519, 459, 41458, 369, 6807, 18151, 369, 9815, 2215, 43672, 11, 902, 374, 12715, 439, 459, 4445, 311, 9815, 2215, 43672, 11, 323, 4442, 304, 1778, 527, 21771, 439, 4689, 323, 23541, 20900, 304, 279, 79980, 660, 70816, 315, 33620, 13, 1226, 8720, 6667, 3225, 555, 34988, 9815, 2215, 43672, 389, 264, 22498, 8197, 1405, 4528, 17910, 3073, 323, 389, 459, 3927, 8197, 994, 584, 10765, 3230, 6444, 449, 3967, 42254, 477, 6667, 3225, 4819, 13, 763, 26679, 279, 3392, 315, 279, 41458, 369, 6807, 18151, 11, 584, 2980, 13970, 6667, 3225, 3196, 389, 3347, 4245, 2704, 323, 1304, 59358, 922, 279, 6807, 20069, 1918, 315, 6444, 3196, 389, 14529, 6807, 56181, 13, 1226, 1101, 2980, 6130, 19440, 2038, 11, 1510, 3157, 4787, 11, 323, 13579, 323, 1862, 481, 51165, 315, 3938, 7100, 4787, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 41458, 369, 6807, 18151, 5552, 311, 9815, 2215, 43672, 323, 279, 5528, 1511, 311, 8720, 6667, 3225, 13, 1102, 374, 31183, 304, 279, 6020, 10396, 9002, 2215, 344, 4893, 323, 5326, 6373, 11, 8405, 26793, 1139, 1268, 63897, 4953, 13, 36090, 988, 279, 5326, 315, 653, 17840, 1260, 9815, 323, 7576, 18512, 28178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893ac0>, 'json_data': {'input': [[18902, 79483, 25, 40388, 315, 78354, 33170, 323, 75111, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 16865, 315, 279, 2883, 596, 28957, 11835, 323, 16346, 11, 19392, 459, 15813, 315, 1268, 13750, 279, 2883, 29972, 323, 6821, 6020, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893a30>, 'json_data': {'input': [[18902, 79483, 25, 578, 41458, 369, 6807, 18151, 389, 9815, 2215, 43672, 574, 400, 23952, 3610, 323, 400, 24876, 3610, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 12678, 369, 279, 41458, 369, 6807, 18151, 389, 9815, 2215, 43672, 439, 315, 279, 842, 315, 220, 2366, 17, 323, 220, 2366, 18, 13, 1115, 374, 3062, 369, 8830, 279, 2883, 753, 5326, 6373, 9002, 4754, 17088, 555, 6444, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8939a0>, 'json_data': {'input': [[18902, 79483, 25, 2956, 12625, 323, 4868, 10742, 23343, 311, 1057, 5557, 323, 1057, 12659, 1436, 11682, 1057, 17444, 11, 5353, 603, 311, 62622, 5199, 24305, 11, 323, 4130, 1510, 323, 4754, 3932, 477, 6444, 505, 1701, 1057, 3956, 323, 3600, 13, 17863, 42068, 11, 3241, 23367, 477, 42655, 11, 4868, 69140, 11, 323, 8951, 389, 1057, 6067, 1436, 1121, 304, 279, 41086, 28957, 323, 1005, 315, 1217, 828, 323, 32317, 449, 1057, 3932, 529, 323, 6444, 529, 5845, 311, 1005, 1057, 3956, 323, 3600, 11, 90255, 1057, 2626, 323, 17444, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 828, 12625, 323, 4868, 10742, 11, 39686, 279, 4754, 8389, 5536, 389, 279, 2883, 753, 17444, 323, 1217, 7095, 4245, 311, 4868, 69140, 477, 62851, 315, 828, 13, 1102, 72890, 279, 12939, 315, 49071, 287, 1217, 2038, 439, 264, 16188, 13189, 315, 279, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893910>, 'json_data': {'input': [[18902, 79483, 25, 578, 79517, 374, 66515, 24345, 4315, 810, 1109, 220, 6860, 5961, 449, 279, 5915, 315, 32145, 24811, 2212, 12190, 4442, 311, 6625, 3827, 10396, 11, 2737, 279, 8292, 315, 264, 8187, 3728, 7524, 3827, 4478, 315, 220, 868, 14697, 6104, 5370, 5961, 617, 11798, 279, 13543, 439, 315, 6186, 220, 16, 11, 220, 2366, 19, 11, 584, 656, 539, 1755, 264, 13239, 3769, 2349, 311, 1057, 8070, 3827, 17575, 369, 279, 220, 2366, 19, 20323, 1060, 13, 1666, 5217, 56043, 48047, 1778, 13543, 11, 584, 1755, 1057, 7524, 3827, 4478, 323, 8515, 3827, 14507, 1436, 5376, 304, 3938, 1667, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 45537, 279, 3827, 10430, 11, 19392, 17078, 369, 3938, 3827, 25127, 3196, 389, 6625, 13543, 11, 902, 374, 16996, 369, 39210, 47614, 279, 2883, 596, 6020, 36721, 323, 4754, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893880>, 'json_data': {'input': [[18902, 79483, 25, 4185, 351, 94140, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 3857, 430, 690, 3118, 18792, 94140, 13254, 2038, 13, 1102, 15151, 430, 279, 2768, 2262, 690, 1464, 1523, 13254, 8336, 11, 902, 374, 3062, 369, 42118, 279, 2883, 596, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8937f0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 264, 2883, 25480, 5149, 38199, 311, 312, 50725, 261, 1057, 2853, 2385, 13, 1666, 961, 315, 420, 2068, 11, 304, 6186, 220, 2366, 18, 11, 584, 7376, 264, 14278, 315, 1057, 32027, 13, 1666, 264, 1121, 11, 2860, 9548, 3285, 685, 323, 5552, 10405, 12715, 2391, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 1051, 400, 17, 13, 16, 7239, 13, 3804, 4811, 34575, 682, 315, 279, 8420, 11754, 1051, 912, 5129, 5343, 304, 1057, 2010, 1868, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 32027, 14278, 20770, 9932, 304, 7181, 220, 23, 13, 1102, 3649, 279, 2883, 596, 5597, 311, 8108, 5687, 439, 961, 315, 264, 27927, 2853, 5621, 99015, 5149, 11, 8405, 47616, 828, 389, 3285, 685, 7194, 369, 279, 20323, 1060, 220, 2366, 18, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893760>, 'json_data': {'input': [[18902, 79483, 25, 7436, 14969, 6, 28198, 323, 13172, 3136, 311, 6541, 2930, 439, 279, 7528, 8752, 93054, 627, 2014, 940, 1534, 73094, 25, 1115, 1486, 22020, 264, 1401, 9327, 315, 32931, 11761, 7865, 9017, 2930, 15771, 11, 902, 706, 5199, 25127, 369, 63897, 596, 13172, 13254, 323, 19092, 39825, 304, 279, 7528, 8752, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8936d0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 279, 2316, 369, 279, 6771, 315, 36962, 3857, 315, 279, 2246, 13, 1102, 8779, 13016, 21546, 279, 5370, 14491, 323, 3673, 13282, 2949, 279, 220, 605, 16222, 26559, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893640>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 264, 6771, 315, 36962, 3857, 11, 902, 2942, 4861, 279, 2246, 323, 50729, 279, 5370, 14491, 323, 50829, 369, 8831, 10873, 11, 10695, 13016, 25539, 3230, 2038, 6288, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8935b0>, 'json_data': {'input': [[18902, 79483, 25, 220, 17, 13, 17961, 22504, 328, 50713, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 17961, 22504, 328, 50713, 11, 902, 11383, 3493, 5217, 3649, 477, 31085, 82, 315, 3230, 6020, 828, 430, 1862, 279, 60391, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a893520>, 'json_data': {'input': [[18902, 79483, 25, 77956, 8825, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 8712, 315, 20207, 3424, 11, 902, 374, 9200, 369, 63897, 4953, 13, 439, 433, 1234, 75658, 872, 34333, 14645, 323, 6883, 13, 1102, 11767, 1139, 264, 11944, 10430, 389, 1268, 279, 2883, 36236, 1202, 20207, 3424, 3268, 323, 279, 25127, 369, 1202, 15022, 2361, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892440>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 22, 13, 43491, 278, 17961, 22504, 8245, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9320, 311, 69051, 6020, 5224, 2038, 11, 902, 11383, 5825, 5217, 2317, 323, 828, 12899, 279, 1925, 6020, 12518, 11, 47594, 279, 8830, 315, 279, 6020, 2361, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8923b0>, 'json_data': {'input': [[18902, 79483, 25, 29240, 304, 2853, 17453, 29218, 323, 2853, 17453, 38025, 4099, 527, 16625, 555, 264, 1396, 315, 958, 9920, 9547, 2737, 4442, 304, 3756, 6651, 11, 46139, 6651, 11, 87386, 10374, 11, 14529, 2027, 323, 4947, 4442, 11, 2027, 6651, 11, 3424, 6651, 11, 323, 4442, 304, 7362, 11667, 9473, 7969, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 279, 9547, 28987, 2853, 17453, 29218, 323, 2853, 17453, 38025, 4099, 13, 1102, 1946, 1392, 279, 3766, 12143, 555, 45293, 279, 84140, 315, 13254, 9659, 11, 2737, 9434, 9547, 430, 1253, 5536, 58191, 2065, 17150, 11, 902, 527, 16996, 369, 50087, 10194, 279, 6020, 5178, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892320>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 11, 63897, 4953, 2637, 1578, 439, 264, 4342, 11, 31692, 279, 13166, 2317, 369, 279, 6020, 2038, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:43 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:11:43 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:11:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892290>, 'json_data': {'input': [[18902, 79483, 25, 7181, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 5042, 5415, 330, 9290, 3047, 323, 17482, 439, 264, 9320, 477, 17219, 311, 5217, 20064, 7174, 477, 3062, 2038, 5552, 311, 279, 38846, 2262, 13, 1102, 15151, 430, 279, 2768, 2038, 374, 9959, 369, 8830, 279, 2317, 315, 279, 6020, 12518, 477, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdd900>, 'json_data': {'input': [[18902, 79483, 25, 480, 1771, 320, 40938, 288, 8, 4158, 448, 1908, 505, 362, 65083, 311, 279, 79980, 660, 70816, 315, 33620, 9941, 77171, 6790, 220, 2148, 11, 362, 65083, 35185, 10067, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 81019, 1534, 20192, 320, 9563, 288, 8, 389, 2561, 15548, 58637, 22538, 7089, 8070, 320, 59857, 705, 4272, 400, 220, 6086, 400, 320, 16, 11, 17335, 8, 400, 320, 16, 11, 22640, 8, 67450, 320, 782, 13311, 8, 369, 8070, 13426, 320, 972, 8, 220, 17058, 220, 18196, 9558, 315, 8070, 3827, 220, 1227, 320, 16, 11, 11194, 8, 320, 16, 11, 8953, 8, 81019, 1534, 20192, 320, 9563, 288, 8, 389, 8515, 6530, 305, 17327, 19620, 9473, 17517, 38493, 220, 10680, 220, 17, 11, 24222, 220, 11702, 25074, 4478, 17517, 7089, 8070, 320, 59857, 705, 4272, 220, 21, 220, 21, 220, 21, 67450, 320, 782, 13311, 8, 369, 8070, 13426, 320, 1114, 8, 320, 18061, 8, 320, 20, 8, 9558, 315, 8070, 3827, 220, 10559, 220, 16, 11, 22457, 220, 11584, 10884, 3392, 312, 65974, 11, 4272, 315, 8070, 3827, 400, 220, 13302, 400, 220, 23459, 400, 320, 25741, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 3230, 20192, 323, 18151, 430, 1051, 312, 65974, 505, 362, 65083, 311, 279, 79980, 660, 70816, 315, 33620, 369, 279, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 5825, 264, 47616, 1684, 315, 1268, 4442, 304, 22538, 323, 305, 17327, 10383, 279, 2883, 596, 8070, 5224, 11, 902, 374, 3062, 369, 38663, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdd990>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1397, 1057, 20972, 323, 2626, 8717, 311, 26069, 449, 7016, 323, 11, 1405, 8581, 11, 1057, 2883, 10396, 323, 12659, 11, 1778, 439, 279, 5195, 32804, 6247, 315, 50935, 11, 9002, 27465, 323, 14740, 12659, 11, 828, 4868, 11, 12434, 8907, 11, 323, 20207, 3424, 28506, 11, 719, 584, 656, 539, 2585, 1124, 477, 872, 12659, 13, 30555, 811, 315, 2383, 477, 89735, 2626, 12659, 1436, 1121, 304, 8312, 8957, 98057, 11, 34546, 10373, 11, 11682, 311, 1401, 12135, 11, 323, 5674, 311, 1057, 17444, 13, 11205, 8060, 311, 80779, 5995, 5842, 3268, 311, 20207, 3424, 1436, 7958, 1057, 5845, 311, 4662, 1057, 3956, 477, 3600, 323, 29241, 603, 311, 39725, 477, 6020, 8349, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 279, 2883, 596, 19353, 12135, 323, 279, 12939, 315, 8907, 449, 5897, 323, 31308, 10886, 13, 1102, 49140, 315, 279, 15635, 5938, 449, 4948, 24993, 12659, 430, 1436, 7958, 279, 2883, 596, 7677, 323, 17444, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abdda20>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 264, 2007, 315, 8970, 13, 1102, 17482, 439, 264, 34512, 1697, 5507, 369, 13016, 311, 25539, 3230, 14491, 323, 13650, 2949, 279, 27927, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5abddab0>, 'json_data': {'input': [[18902, 79483, 25, 58588, 33350, 32388, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 25452, 9341, 5326, 11, 43080, 264, 6541, 505, 2802, 4478, 5326, 311, 2500, 45607, 315, 3157, 5326, 430, 63897, 4953, 13, 12580, 13, 1102, 7437, 279, 6566, 369, 264, 810, 11944, 24481, 315, 279, 15635, 5938, 449, 279, 2883, 753, 25452, 34919, 11, 2225, 3157, 481, 323, 2536, 30004, 36164, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892200>, 'json_data': {'input': [[18902, 79483, 25, 1023, 7739, 315, 13172, 11, 1778, 439, 4121, 19826, 11, 32947, 11, 32594, 11, 9063, 11, 323, 12707, 439, 1057, 50270, 11383, 51936, 304, 5361, 3772, 11, 2225, 2930, 323, 27258, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 330, 1605, 7739, 315, 13172, 1359, 1778, 439, 8776, 3772, 320, 30742, 19826, 11, 32594, 11, 5099, 25390, 42852, 279, 15022, 18921, 304, 902, 50270, 21797, 1463, 872, 3772, 10374, 11, 74055, 279, 2883, 596, 13172, 13254, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890a60>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 922, 5195, 15161, 11, 19392, 264, 6541, 505, 25394, 5195, 8471, 311, 45293, 279, 9624, 25213, 10449, 315, 63897, 596, 2626, 11, 902, 374, 264, 5199, 3158, 315, 6650, 323, 19297, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8909d0>, 'json_data': {'input': [[18902, 79483, 25, 14727, 1334, 479, 315, 5843, 8288, 2270, 41738, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 330, 26282, 1334, 479, 315, 5843, 8288, 2270, 41738, 1359, 19392, 430, 279, 2883, 15870, 67349, 1202, 12032, 369, 4754, 53317, 13, 1115, 374, 5199, 369, 20958, 279, 17025, 315, 279, 9513, 2819, 5068, 389, 279, 8335, 11071, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890940>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 7314, 315, 264, 502, 3857, 477, 2199, 11, 4461, 5552, 311, 12920, 315, 8970, 477, 70552, 430, 8641, 279, 6742, 1555, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8908b0>, 'json_data': {'input': [[18902, 79483, 25, 23927, 46272, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 23927, 46272, 323, 15151, 430, 279, 2768, 1495, 690, 3493, 3649, 389, 1268, 279, 2883, 538, 9803, 323, 29972, 1202, 3157, 481, 34919, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890820>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 13031, 344, 5983, 24073, 439, 61316, 3252, 24198, 25, 19620, 9473, 17517, 23139, 6530, 305, 17327, 400, 220, 868, 11, 24425, 400, 220, 972, 11, 21602, 14930, 907, 305, 17327, 400, 220, 17, 11, 8546, 400, 220, 17, 11, 26478, 9558, 9341, 305, 17327, 400, 220, 23, 11, 23986, 400, 220, 24, 11, 21757, 13031, 344, 5983, 539, 24073, 439, 61316, 3252, 24198, 25, 19620, 9473, 17517, 400, 220, 1958, 11, 25476, 400, 220, 2137, 11, 23024, 7089, 17517, 400, 220, 22, 11, 25401, 400, 220, 605, 11, 23141, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 12678, 5552, 311, 19310, 43645, 71974, 439, 61316, 3252, 24198, 323, 1884, 539, 24073, 439, 61316, 3252, 24198, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 374, 264, 961, 315, 264, 6020, 28957, 430, 46480, 279, 2883, 596, 5326, 6373, 15174, 323, 872, 6020, 25127, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890670>, 'json_data': {'input': [[18902, 79483, 25, 320, 32871, 18362, 20148, 315, 279, 75659, 519, 340, 2014, 940, 1534, 73094, 25, 320, 32871, 18362, 20148, 315, 279, 75659, 519, 8]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a890700>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 2246, 11, 31692, 1202, 9764, 439, 264, 1934, 5552, 311, 63897, 4953, 2637, 902, 374, 279, 2748, 2883, 315, 5195, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891750>, 'json_data': {'input': [[18902, 79483, 25, 15592, 12, 99968, 45587, 25, 5825, 1825, 11, 15062, 11, 323, 69311, 12849, 11, 29130, 11, 323, 5942, 311, 7431, 6444, 311, 1629, 990, 33785, 12660, 2001, 389, 1057, 15161, 11, 520, 279, 6964, 11, 477, 304, 872, 828, 19169, 13, 1102, 649, 387, 1511, 311, 45666, 323, 6617, 553, 8871, 6067, 323, 311, 5542, 323, 8854, 5370, 4595, 315, 15592, 4211, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 49449, 389, 832, 315, 279, 1401, 17357, 315, 5195, 15161, 25, 15592, 12, 99968, 45587, 13, 1102, 15100, 1268, 420, 14054, 11815, 5370, 25213, 3966, 11, 47594, 279, 8830, 315, 5195, 15161, 753, 33935, 323, 1202, 3560, 304, 6617, 4954, 8871, 6067, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:11:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54c670>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 18, 3308, 362, 3308, 426, 3308, 356, 14967, 4272, 8070, 824, 4430, 25, 48224, 859, 73767, 315, 2073, 26204, 24608, 400, 220, 1958, 11, 18262, 400, 220, 20, 11, 8874, 400, 220, 1958, 11, 17819, 9973, 31306, 5742, 315, 13551, 1511, 304, 824, 4430, 35547, 220, 20, 11, 20275, 220, 23873, 220, 20, 11, 25009, 14967, 4272, 8070, 824, 4430, 400, 220, 20, 13, 5833, 400, 220, 20, 13, 5833, 400, 220, 20, 13, 5833, 53867, 2844, 4272, 8070, 824, 4430, 25, 48224, 859, 73767, 315, 2073, 26204, 24608, 369, 6913, 35547, 400, 220, 1958, 11, 18262, 400, 220, 20, 11, 8874, 400, 220, 1958, 11, 17819, 8976, 2588, 315, 2073, 26204, 24608, 439, 264, 1121, 315, 14747, 315, 3308, 426, 311, 3308, 362, 13551, 220, 20, 11, 8874, 220, 15, 220, 15, 8976, 2588, 315, 2073, 26204, 24608, 320, 17897, 8, 320, 1806, 8, 220, 17897, 73767, 315, 2073, 26204, 24608, 400, 220, 2137, 11, 20596, 400, 220, 20, 11, 27311, 400, 220, 1958, 11, 18520, 9973, 31306, 5742, 315, 13551, 1511, 304, 6913, 35547, 220, 20, 11, 20275, 220, 23873, 220, 20, 11, 25009, 16923, 291, 78526, 2515, 315, 19371, 6844, 34919, 2758, 25, 43609, 315, 3308, 426, 311, 3308, 362, 13551, 19310, 220, 23873, 220, 15, 220, 15, 94960, 5708, 8316, 323, 1023, 39639, 4501, 2425, 13429, 13551, 220, 15, 220, 15, 220, 6083, 5742, 315, 13551, 1511, 304, 824, 4430, 35547, 220, 21, 11, 23987, 220, 23873, 220, 20, 11, 22614, 53867, 2844, 4272, 8070, 824, 4430, 400, 220, 20, 13, 1490, 400, 220, 20, 13, 1490, 400, 220, 20, 13, 1490, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 279, 35547, 315, 6913, 323, 80703, 4272, 8070, 824, 4430, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 9731, 279, 9327, 315, 13122, 6020, 5178, 17150, 11, 16996, 369, 38663, 279, 2883, 596, 3293, 5178, 323, 18845, 927, 279, 1667, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54c700>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 18, 13, 17961, 58513, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17738, 279, 7314, 315, 7181, 220, 18, 304, 279, 2246, 11, 902, 12789, 449, 6020, 24198, 13, 1102, 15151, 264, 9320, 1139, 264, 11944, 24481, 315, 1268, 63897, 4953, 13, 13777, 1202, 6020, 24198, 11, 2737, 6762, 907, 22323, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54c790>, 'json_data': {'input': [[18902, 79483, 25, 763, 6790, 220, 2366, 18, 11, 279, 435, 1950, 33, 11136, 5871, 52, 220, 2366, 18, 12, 2545, 330, 59998, 72837, 320, 46103, 220, 21112, 1680, 22728, 12760, 311, 33620, 15545, 11997, 42306, 1, 311, 9407, 279, 28957, 8670, 369, 8070, 13426, 11, 11951, 5552, 311, 279, 4478, 58755, 323, 8070, 13426, 7318, 13, 5871, 52, 220, 2366, 18, 12, 2545, 374, 7524, 369, 1057, 9974, 18852, 7314, 6186, 220, 16, 11, 220, 2366, 20, 11, 449, 4216, 25375, 15480, 13, 1226, 527, 5131, 38663, 279, 4754, 2515, 430, 279, 6177, 5410, 690, 617, 389, 1057, 6020, 5224, 75992, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 2500, 24043, 10886, 2713, 320, 1950, 52, 220, 2366, 18, 12, 2545, 8, 5552, 311, 8070, 3827, 75992, 13, 1102, 15151, 14827, 4442, 311, 13122, 8670, 7524, 304, 220, 2366, 20, 11, 902, 374, 16996, 369, 8830, 3938, 3827, 14228, 6020, 75992, 505, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54c820>, 'json_data': {'input': [[18902, 79483, 25, 578, 1317, 9860, 13651, 315, 3157, 481, 25452, 34919, 320, 11760, 311, 1317, 9860, 5409, 5352, 17294, 8, 315, 400, 20899, 3610, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 374, 5343, 2949, 1023, 2536, 45275, 12032, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 2038, 922, 279, 1317, 9860, 13651, 315, 3157, 481, 25452, 34919, 5762, 555, 63897, 4953, 13, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 13, 1102, 15151, 430, 1521, 34919, 527, 3917, 311, 1317, 9860, 5409, 5352, 17294, 323, 527, 21771, 1234, 2536, 45275, 12032, 11, 29820, 311, 279, 8830, 315, 63897, 596, 9341, 8446, 323, 9513, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54c8b0>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 8, 6104, 1855, 21283, 5597, 374, 1234, 14638, 11, 279, 35018, 527, 5343, 304, 99216, 18512, 323, 1023, 1510, 58165, 389, 1057, 79980, 660, 31946, 61572, 11, 439, 584, 3984, 6201, 36755, 320, 258, 39381, 315, 264, 8515, 8323, 8, 369, 279, 35018, 13, 26868, 82, 2997, 279, 6372, 315, 7362, 9473, 323, 2802, 13, 3580, 7181, 220, 605, 369, 4726, 3649, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 6209, 264, 87910, 9002, 279, 7665, 9849, 35018, 9932, 304, 46613, 220, 20, 13, 1102, 20064, 9803, 279, 24043, 6514, 315, 1521, 35018, 11, 19392, 430, 814, 527, 5343, 304, 99216, 18512, 4245, 311, 14529, 35730, 13, 1115, 2317, 374, 16996, 369, 8830, 279, 7138, 315, 279, 58165, 10212, 323, 872, 25127, 369, 279, 2883, 753, 6020, 2361, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54c5e0>, 'json_data': {'input': [[18902, 79483, 25, 1050, 46469, 1051, 400, 14777, 13, 19, 7239, 11, 459, 5376, 315, 220, 24, 4, 1060, 927, 1060, 11, 15871, 16625, 555, 459, 5376, 304, 5195, 8471, 30466, 315, 400, 777, 13, 15, 7239, 11, 477, 220, 23, 13689, 323, 459, 5376, 304, 5195, 15161, 30466, 315, 400, 21, 13, 23, 7239, 11, 477, 220, 1627, 4, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 12399, 315, 279, 2883, 596, 2860, 30466, 369, 279, 1060, 11, 39686, 264, 5199, 5376, 1060, 29352, 4771, 13, 1102, 10109, 988, 5196, 2949, 279, 6020, 5178, 24131, 11, 8104, 21760, 389, 279, 6650, 315, 5195, 8471, 323, 5195, 15161, 30466, 11, 902, 527, 1401, 6956, 315, 279, 2883, 596, 8244, 13254, 9659, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54c550>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 578, 6771, 315, 36962, 17482, 439, 264, 10873, 12576, 369, 279, 2246, 11, 79774, 279, 14491, 323, 1401, 13650, 9960, 304, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 369, 63897, 4953, 13, 1102, 6276, 13016, 311, 6288, 25539, 3230, 2038, 2949, 279, 16195, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54c4c0>, 'json_data': {'input': [[18902, 79483, 25, 82108, 4067, 13220, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 9302, 25829, 304, 279, 2246, 11, 3629, 1511, 304, 16287, 68248, 311, 18885, 92594, 323, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54c430>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 52849, 7677, 400, 220, 2813, 11, 15794, 400, 220, 5547, 11, 14777, 400, 220, 5958, 11, 5067, 19620, 7677, 220, 1032, 11, 21982, 220, 605, 11, 11592, 220, 717, 11, 8546, 10884, 400, 220, 1954, 11, 24438, 400, 220, 6028, 11, 16884, 400, 220, 5313, 11, 25150, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 279, 31085, 315, 8070, 505, 13018, 323, 7362, 7677, 369, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 6209, 26793, 1139, 279, 54001, 8141, 315, 279, 2883, 596, 24608, 11, 902, 374, 9959, 369, 3827, 323, 25605, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54c3a0>, 'json_data': {'input': [[18902, 79483, 25, 23139, 11, 8515, 86106, 11, 323, 3157, 481, 25452, 34919, 527, 17303, 520, 6762, 907, 323, 21771, 2949, 9580, 220, 16, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 24790, 315, 8515, 11, 8515, 86106, 11, 323, 3157, 481, 25452, 34919, 3196, 389, 872, 6762, 907, 22323, 11, 11951, 2949, 9580, 220, 16, 315, 279, 6762, 907, 30022, 13, 1115, 24790, 374, 3062, 369, 47614, 279, 53113, 323, 5326, 5643, 315, 1521, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54c310>, 'json_data': {'input': [[18902, 79483, 25, 3277, 5995, 584, 5226, 449, 9873, 2212, 279, 1917, 311, 3493, 28175, 3600, 1405, 584, 656, 539, 617, 8475, 304, 37002, 19248, 477, 5070, 11, 3629, 304, 5151, 430, 1397, 28175, 4967, 1093, 42030, 7677, 11, 2262, 64382, 11, 6130, 1862, 11, 323, 7106, 4868, 13, 1226, 1101, 5226, 449, 13643, 65151, 13607, 994, 584, 1205, 311, 3504, 2875, 9860, 11141, 11, 994, 584, 617, 51760, 304, 2626, 3966, 11, 477, 994, 584, 1205, 311, 6288, 49727, 349, 3361, 7224, 13, 1226, 5268, 1057, 8717, 323, 65151, 13607, 15884, 11, 323, 3477, 872, 8907, 449, 5195, 753, 32804, 6247, 315, 50935, 13, 1226, 35611, 1304, 18637, 311, 12192, 264, 49150, 323, 6928, 3318, 4676, 369, 5127, 2001, 8420, 11, 29629, 11, 323, 13643, 5687, 27083, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 35434, 5195, 596, 5603, 311, 60506, 704, 28175, 3600, 323, 279, 16994, 6727, 315, 8717, 311, 6106, 8907, 449, 279, 2883, 596, 10886, 13, 1102, 66159, 279, 12939, 315, 20958, 264, 49150, 990, 4676, 369, 682, 8420, 323, 33840, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54c280>, 'json_data': {'input': [[18902, 79483, 25, 220, 1927, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 5905, 323, 1587, 539, 6782, 67749, 2262, 13, 11699, 6156, 7580, 374, 311, 7945, 304, 2246, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54c1f0>, 'json_data': {'input': [[18902, 79483, 25, 29226, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 264, 3857, 4342, 369, 330, 23120, 1359, 23377, 430, 279, 2768, 2262, 690, 2686, 63897, 596, 15808, 6373, 323, 24043, 10396, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54c160>, 'json_data': {'input': [[18902, 79483, 25, 35211, 26120, 20038, 6782, 3977, 14507, 11, 902, 527, 1367, 30040, 439, 52872, 323, 539, 5343, 304, 279, 26120, 12032, 323, 58165, 13, 4314, 15055, 15871, 2997, 14507, 11754, 555, 279, 26262, 8650, 8167, 11, 323, 14507, 369, 13709, 323, 30519, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 6514, 315, 3977, 26120, 14507, 11, 39686, 1268, 3738, 7194, 527, 41853, 369, 304, 12976, 311, 26120, 20038, 13, 1102, 24400, 389, 279, 7138, 315, 1521, 14507, 323, 872, 42308, 505, 26120, 12032, 323, 58165, 11, 8405, 32373, 389, 279, 6020, 6373, 315, 73657, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8917e0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 2038, 449, 5201, 311, 63897, 596, 2109, 75202, 315, 3308, 362, 323, 3308, 356, 5708, 2391, 279, 8502, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 2007, 29385, 4954, 63897, 596, 2109, 13173, 7640, 369, 1202, 3308, 362, 323, 3308, 356, 5708, 11, 8405, 47616, 828, 430, 374, 16996, 369, 15167, 47614, 279, 2883, 596, 6864, 24691, 15174, 323, 3157, 7640, 2391, 264, 3230, 8502, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:14 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:12:15 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:12:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891870>, 'json_data': {'input': [[18902, 79483, 25, 5751, 20207, 3424, 3268, 527, 15525, 11, 323, 904, 38550, 311, 6144, 1124, 1436, 8108, 279, 907, 315, 1057, 3956, 11, 3600, 11, 323, 16097, 439, 1664, 439, 7958, 1057, 5845, 311, 20874, 627, 2014, 940, 1534, 73094, 25, 1115, 961, 66159, 279, 26431, 315, 20207, 3424, 3268, 369, 63897, 4953, 2637, 13310, 287, 520, 1268, 814, 527, 16595, 369, 15022, 9610, 323, 8244, 2626, 2450, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891a20>, 'json_data': {'input': [[18902, 79483, 25, 3061, 670, 38170, 304, 1057, 5195, 15161, 30466, 617, 1027, 11, 323, 1253, 3136, 311, 387, 11, 11754, 555, 9547, 304, 5369, 311, 279, 4689, 9547, 7633, 3485, 11, 1778, 439, 6130, 10648, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 9547, 430, 1253, 7958, 65649, 304, 5195, 15161, 30466, 11, 4528, 311, 3766, 27855, 11, 82003, 430, 6130, 10648, 12912, 323, 3157, 4787, 1514, 16996, 13073, 304, 13254, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891900>, 'json_data': {'input': [[18902, 79483, 25, 11443, 315, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3230, 1207, 22327, 389, 279, 2853, 315, 30466, 11, 902, 374, 264, 9200, 3158, 315, 6492, 369, 8830, 1268, 13254, 9659, 374, 40028, 555, 5938, 7194, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891990>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1253, 3217, 4868, 4819, 11, 3508, 4245, 311, 9548, 477, 55465, 1493, 477, 8811, 90377, 685, 11, 1887, 6103, 11, 477, 52227, 304, 1057, 477, 1023, 9875, 529, 6067, 13, 6104, 584, 1253, 539, 8417, 1063, 315, 1521, 4819, 311, 387, 3769, 520, 279, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 13336, 315, 4868, 4819, 40986, 505, 5370, 8336, 11, 2737, 9548, 6103, 323, 1887, 52227, 13, 1102, 66159, 279, 17250, 304, 25607, 323, 7763, 7922, 1521, 4819, 11, 31799, 1124, 311, 27927, 10742, 922, 5897, 323, 43839, 1697, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54cca0>, 'json_data': {'input': [[18902, 79483, 25, 7294, 46713, 14455, 7016, 11, 1778, 439, 279, 549, 815, 13, 19620, 4563, 6722, 64813, 3298, 11, 323, 1023, 2254, 7016, 79466, 3738, 14507, 311, 3109, 7510, 11, 27655, 315, 902, 1436, 1121, 304, 8431, 323, 9337, 31086, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 8907, 15635, 5552, 311, 7294, 46713, 14455, 7016, 11, 11951, 45391, 279, 549, 815, 13, 19620, 4563, 6722, 64813, 3298, 13, 1102, 11621, 2500, 6324, 315, 23965, 311, 279, 5897, 18921, 63897, 34512, 988, 37545, 11, 82003, 279, 1205, 369, 71628, 311, 5370, 14640, 311, 5766, 5199, 31086, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54c040>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 3308, 362, 323, 3308, 356, 13551, 2109, 73350, 323, 28520, 22311, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 264, 2007, 430, 94594, 279, 3649, 315, 3308, 362, 323, 3308, 356, 13551, 2109, 73350, 555, 63897, 11, 8405, 47616, 828, 311, 1862, 279, 19775, 389, 4430, 2109, 13173, 7640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54c0d0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 312, 2058, 988, 279, 3917, 330, 2149, 18992, 4953, 1210, 311, 10519, 5357, 389, 279, 5502, 1694, 14407, 6957, 279, 2246, 11, 23391, 32373, 389, 279, 1934, 596, 41961, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54d000>, 'json_data': {'input': [[18902, 79483, 25, 15771, 11, 902, 15871, 2997, 30466, 505, 5195, 7199, 505, 279, 6763, 315, 10721, 323, 304, 20624, 24393, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 961, 315, 264, 11944, 16540, 315, 279, 13254, 8336, 369, 63897, 4953, 2637, 11951, 21760, 389, 279, 13254, 8066, 505, 15771, 1093, 5195, 7199, 13, 1102, 22020, 279, 26431, 315, 917, 6763, 323, 304, 20624, 24393, 2949, 279, 27927, 2317, 315, 5195, 596, 15493, 323, 5452, 3600, 13254, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54d090>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 2262, 369, 66251, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54d120>, 'json_data': {'input': [[18902, 79483, 25, 48005, 660, 1488, 261, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 330, 44988, 261, 660, 1488, 261, 1, 24790, 11, 902, 374, 2500, 5699, 1511, 369, 13122, 8907, 13, 4452, 11, 433, 374, 539, 8581, 311, 63897, 11, 439, 433, 374, 2736, 11054, 439, 264, 3544, 49858, 1488, 261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54d1b0>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 17, 13, 5421, 46787, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 25891, 330, 12236, 220, 17, 13, 5421, 46787, 1359, 902, 11383, 50729, 279, 1972, 12675, 323, 13077, 13234, 477, 82280, 555, 279, 2883, 13, 1102, 7437, 279, 6566, 369, 279, 17876, 3649, 9002, 279, 2883, 596, 7106, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54d240>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 17482, 439, 279, 2007, 315, 8970, 369, 279, 2246, 11, 10695, 13016, 21546, 1555, 279, 5370, 14491, 323, 6821, 5343, 304, 279, 9974, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54d2d0>, 'json_data': {'input': [[18902, 79483, 25, 59090, 323, 77956, 8825, 51198, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 33018, 279, 3857, 389, 25589, 323, 20207, 3424, 8349, 11, 43080, 264, 9320, 311, 25394, 2500, 3158, 315, 5897, 14675, 369, 63897, 11, 902, 374, 9959, 369, 8830, 279, 2883, 596, 16195, 5897, 18921, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54d360>, 'json_data': {'input': [[18902, 79483, 25, 76615, 8070, 13426, 8881, 279, 4272, 6372, 315, 13643, 12062, 1990, 279, 15691, 15055, 315, 12032, 323, 58165, 369, 6020, 13122, 10096, 323, 279, 15055, 1511, 369, 8070, 3827, 10096, 13, 90462, 6956, 315, 1057, 27334, 3827, 12032, 323, 58165, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7434, 315, 27334, 8070, 13426, 11, 8405, 26793, 1139, 279, 6956, 315, 27334, 3827, 12032, 323, 58165, 13, 1102, 374, 7718, 369, 8830, 279, 2883, 596, 8244, 3827, 2361, 323, 279, 5536, 389, 3938, 8515, 28555, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54d3f0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 4441, 374, 264, 4342, 19392, 279, 2883, 836, 11, 63897, 4953, 13, 1102, 64664, 279, 9764, 315, 279, 23702, 519, 369, 279, 22370, 26559, 323, 15151, 430, 279, 1934, 18713, 1771, 311, 420, 3230, 5502, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54d480>, 'json_data': {'input': [[18902, 79483, 25, 14930, 907, 374, 459, 4974, 3430, 11, 14393, 279, 3392, 430, 1053, 387, 4036, 311, 4662, 459, 9513, 477, 7318, 311, 8481, 264, 24305, 304, 459, 85869, 7901, 1990, 3157, 13324, 13, 1666, 1778, 11, 6762, 907, 374, 264, 3157, 6108, 19179, 430, 374, 11075, 3196, 389, 32946, 430, 3157, 13324, 1053, 1005, 304, 21913, 459, 9513, 477, 264, 24305, 13, 41738, 323, 58165, 12715, 520, 6762, 907, 527, 17303, 323, 21771, 304, 18859, 449, 264, 2380, 58355, 6762, 907, 30022, 3196, 389, 279, 9466, 2968, 315, 279, 11374, 2561, 304, 279, 3157, 1511, 311, 6767, 6762, 907, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 19170, 6762, 907, 304, 279, 2317, 315, 6020, 13122, 11, 82003, 1202, 41961, 439, 264, 3157, 6108, 19179, 13, 1102, 374, 961, 315, 279, 27927, 10430, 389, 6762, 907, 22323, 11, 8405, 89328, 8830, 1603, 43515, 1139, 279, 49449, 315, 279, 19179, 30022, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54d510>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1101, 1440, 9873, 315, 682, 12562, 2212, 279, 1917, 17631, 389, 5195, 43283, 311, 1505, 6444, 323, 3139, 872, 9873, 2001, 323, 584, 1304, 430, 1524, 8831, 449, 15592, 13, 3161, 21304, 7639, 11, 50270, 5042, 3371, 603, 872, 4901, 9021, 323, 4430, 872, 11782, 12032, 11, 323, 15592, 690, 9651, 8356, 323, 1629, 264, 7701, 7524, 1008, 4901, 4028, 682, 315, 5195, 753, 6012, 11, 311, 3449, 872, 8199, 13, 5761, 19074, 12716, 279, 7720, 315, 15592, 311, 9873, 315, 682, 12562, 11, 10695, 1124, 6847, 1893, 42329, 2442, 607, 3093, 41545, 16850, 872, 3956, 2001, 369, 1949, 13, 23212, 11, 584, 527, 60257, 449, 7694, 323, 30064, 14058, 430, 527, 6089, 18751, 1139, 279, 15592, 41503, 16694, 323, 7669, 1697, 3941, 304, 7694, 2672, 1413, 21460, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 3560, 315, 15592, 304, 74142, 5195, 43283, 369, 9873, 13, 1102, 16964, 1268, 15592, 7526, 1093, 21304, 7639, 323, 5761, 19074, 40821, 13172, 11618, 11, 21583, 433, 311, 279, 8244, 7057, 315, 77582, 5557, 369, 2626, 6650, 323, 47594, 1217, 11704, 2949, 279, 13172, 10706, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54d5a0>, 'json_data': {'input': [[18902, 79483, 25, 59090, 323, 77956, 8825, 51198, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 33018, 279, 3857, 389, 25589, 323, 20207, 3424, 8349, 11, 43080, 264, 9320, 311, 25394, 2500, 3158, 315, 5897, 14675, 369, 63897, 11, 902, 374, 9959, 369, 8830, 279, 2883, 596, 16195, 5897, 18921, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54d630>, 'json_data': {'input': [[18902, 79483, 25, 15592, 12, 99968, 45587, 25, 5825, 1825, 11, 15062, 11, 323, 69311, 12849, 11, 29130, 11, 323, 5942, 311, 7431, 6444, 311, 1629, 990, 33785, 12660, 2001, 389, 1057, 15161, 11, 520, 279, 6964, 11, 477, 304, 872, 828, 19169, 13, 1102, 649, 387, 1511, 311, 45666, 323, 6617, 553, 8871, 6067, 323, 311, 5542, 323, 8854, 5370, 4595, 315, 15592, 4211, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 49449, 389, 832, 315, 279, 1401, 17357, 315, 5195, 15161, 25, 15592, 12, 99968, 45587, 13, 1102, 15100, 1268, 420, 14054, 11815, 5370, 25213, 3966, 11, 47594, 279, 8830, 315, 5195, 15161, 753, 33935, 323, 1202, 3560, 304, 6617, 4954, 8871, 6067, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54d6c0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2536, 30004, 36164, 25452, 34919, 527, 22538, 304, 38171, 5762, 5220, 2085, 31368, 6449, 481, 3157, 2819, 13, 578, 15691, 907, 315, 1057, 2536, 30004, 36164, 25452, 34919, 374, 24257, 311, 6762, 907, 5304, 40635, 14463, 369, 20086, 477, 4528, 22538, 315, 279, 1890, 55935, 477, 53317, 13, 11842, 30004, 36164, 25452, 34919, 430, 617, 1027, 1323, 68, 40412, 2391, 279, 4261, 3196, 389, 40635, 14463, 527, 21771, 2949, 9580, 220, 17, 477, 9580, 220, 18, 304, 279, 6762, 907, 30022, 1606, 584, 16430, 279, 907, 3196, 389, 51262, 5528, 11, 2737, 3072, 21913, 4211, 11, 3157, 30139, 5603, 11, 323, 4279, 5708, 13890, 1749, 11, 902, 1253, 2997, 264, 10824, 315, 279, 40635, 7901, 3430, 520, 279, 7901, 2457, 323, 1023, 653, 34595, 11374, 2737, 53838, 11, 3685, 892, 311, 4974, 11, 5326, 1949, 4478, 11, 323, 279, 3268, 11, 323, 30255, 315, 279, 34919, 584, 3412, 13, 4314, 11374, 12207, 13592, 3196, 389, 9341, 955, 13, 578, 6762, 907, 315, 2536, 30004, 36164, 25452, 34919, 430, 617, 1027, 1323, 68, 40412, 4245, 311, 53317, 527, 21771, 2949, 9580, 220, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 7138, 315, 2536, 30004, 36164, 25452, 34919, 5762, 555, 63897, 4953, 13, 1102, 16964, 1268, 872, 15691, 907, 374, 24257, 3196, 389, 40635, 14463, 323, 5825, 20616, 1139, 279, 51262, 12823, 1511, 11, 47594, 8830, 315, 279, 2883, 596, 9341, 304, 879, 5220, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54d750>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 54515, 315, 279, 23702, 519, 753, 836, 11, 330, 2149, 18992, 4953, 13, 1359, 1578, 82003, 279, 2883, 753, 9764, 304, 279, 2317, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54d7e0>, 'json_data': {'input': [[18902, 79483, 25, 578, 11380, 3430, 315, 1057, 5708, 706, 520, 3115, 10534, 5199, 53838, 323, 1253, 3136, 311, 387, 17509, 13, 763, 5369, 311, 279, 9547, 14407, 304, 420, 1934, 11, 279, 11380, 7729, 315, 1057, 3308, 362, 5708, 323, 3308, 356, 5708, 617, 39388, 13148, 11, 323, 1253, 3136, 311, 39388, 6426, 13882, 11, 304, 2077, 311, 5370, 9547, 11, 1690, 315, 902, 527, 7953, 1057, 2585, 11, 2737, 11, 4315, 3885, 11, 279, 7640, 315, 1057, 26081, 323, 4442, 304, 27927, 7100, 323, 5054, 4787, 2212, 279, 1917, 13, 4314, 7353, 3157, 323, 5064, 9547, 1436, 11682, 279, 3157, 3430, 315, 1057, 3308, 362, 5708, 323, 1057, 3308, 356, 5708, 11, 15851, 315, 1057, 5150, 10565, 5178, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 53838, 315, 3308, 362, 323, 3308, 356, 5708, 7729, 11, 35983, 1113, 5708, 5178, 449, 9434, 9547, 1778, 439, 3157, 18845, 323, 7100, 4787, 13, 1115, 7437, 279, 6566, 369, 25394, 279, 4754, 15635, 315, 26012, 304, 1521, 23301, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54d870>, 'json_data': {'input': [[18902, 79483, 25, 64141, 323, 92523, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 34692, 311, 25394, 279, 8244, 6020, 6070, 315, 63897, 4953, 2637, 11951, 21760, 389, 330, 15289, 82, 323, 92523, 1359, 902, 7437, 279, 6566, 369, 264, 11944, 31085, 315, 279, 2883, 596, 53869, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54d900>, 'json_data': {'input': [[18902, 79483, 25, 15055, 7318, 311, 1057, 8141, 8717, 889, 1304, 2561, 1057, 2778, 2680, 3585, 323, 3600, 13, 5751, 8141, 8717, 2997, 7074, 12850, 11, 6505, 35991, 11, 4113, 7241, 17032, 11, 323, 3241, 13707, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 4595, 315, 8141, 8717, 6532, 304, 24038, 13172, 13254, 13, 1102, 22020, 279, 12135, 63897, 706, 449, 5370, 8717, 11, 902, 374, 7718, 369, 8830, 1202, 13254, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54d990>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54da20>, 'json_data': {'input': [[18902, 79483, 25, 1666, 264, 40838, 27767, 11, 584, 527, 1101, 3917, 311, 3738, 40838, 7294, 2442, 731, 2017, 19705, 13, 9636, 40838, 2383, 11, 264, 27767, 1253, 539, 16988, 304, 264, 2626, 10824, 449, 904, 12102, 315, 220, 868, 4, 477, 810, 315, 1202, 19310, 16043, 5708, 7389, 279, 12102, 706, 5762, 279, 5708, 369, 2380, 1667, 477, 11, 4315, 1023, 2574, 11, 279, 8925, 315, 46085, 706, 12054, 279, 7901, 13, 5751, 8925, 315, 46085, 1436, 17631, 389, 40838, 2383, 311, 5471, 477, 7781, 459, 24279, 315, 603, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 40838, 596, 7294, 2442, 731, 2017, 7016, 11, 902, 33330, 5217, 17294, 389, 18970, 388, 449, 5199, 5708, 17075, 13, 1115, 2317, 57924, 279, 8830, 315, 279, 5897, 4676, 304, 902, 63897, 27149, 11, 4726, 69226, 1113, 64310, 26350, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54dab0>, 'json_data': {'input': [[18902, 79483, 25, 11761, 41455, 11, 902, 15871, 2997, 30466, 505, 13674, 3600, 11, 1778, 439, 13674, 6007, 11, 13674, 10948, 323, 26745, 11, 323, 12873, 7418, 29497, 11, 439, 1664, 439, 5195, 3861, 280, 2014, 940, 1534, 73094, 25, 1115, 3857, 25985, 988, 389, 11761, 41455, 439, 264, 7982, 13254, 2592, 11, 45293, 3230, 3600, 1093, 13674, 6007, 323, 5195, 3861, 13, 1102, 72890, 63897, 596, 8446, 311, 9407, 1202, 13254, 2385, 7953, 13172, 11, 47594, 279, 8830, 315, 1202, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54db40>, 'json_data': {'input': [[18902, 79483, 25, 32088, 9386, 1392, 323, 7089, 19735, 940, 56875, 343, 811, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 7782, 42356, 323, 76543, 30255, 11, 19392, 264, 5357, 389, 279, 2883, 596, 3938, 6020, 42356, 323, 25605, 9293, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:45 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:12:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54dbd0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 63897, 1047, 220, 10828, 11, 17824, 8420, 13, 1226, 617, 990, 61783, 323, 45530, 9548, 13340, 30255, 304, 3738, 5961, 11, 323, 584, 527, 11411, 311, 12899, 2682, 9511, 3268, 11, 20958, 459, 1825, 7829, 11, 323, 14624, 311, 682, 8420, 13, 75096, 9498, 323, 1825, 21976, 374, 8792, 311, 1268, 584, 990, 11, 323, 584, 19570, 2038, 922, 279, 2883, 1555, 5361, 5419, 12006, 311, 1057, 8420, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 5825, 264, 16694, 315, 63897, 596, 32027, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 2737, 9548, 1797, 323, 279, 2883, 596, 15507, 311, 9548, 3268, 323, 1825, 21976, 13, 1102, 22020, 279, 12939, 315, 10758, 2949, 279, 13166, 7829, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:46 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:12:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54e680>, 'json_data': {'input': [[18902, 79483, 25, 1398, 7548, 2536, 1824, 1003, 328, 5002, 315, 400, 16739, 3610, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 430, 279, 3285, 685, 10405, 22429, 264, 5199, 3392, 5552, 311, 5708, 6108, 20448, 11, 8405, 4726, 7872, 389, 1268, 279, 8244, 3285, 685, 7216, 374, 16997, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54f0a0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 311, 3493, 2317, 369, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54dc60>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 5502, 11, 63897, 4953, 2637, 8405, 264, 2867, 66251, 5905, 369, 279, 6020, 2038, 430, 11263, 11, 23391, 13016, 3619, 279, 2592, 315, 279, 828, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54f130>, 'json_data': {'input': [[18902, 79483, 25, 20448, 20900, 5552, 311, 1057, 828, 19169, 323, 1023, 7677, 1778, 439, 2262, 3477, 323, 6130, 323, 2027, 1862, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 10507, 315, 7194, 5552, 311, 7677, 11, 82003, 279, 18512, 5938, 449, 828, 19169, 323, 6130, 1862, 13, 1115, 11621, 8149, 311, 279, 8830, 315, 25605, 7194, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54f1c0>, 'json_data': {'input': [[18902, 79483, 25, 65184, 33025, 11, 21579, 11, 18134, 1968, 11, 323, 5761, 1968, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 264, 3857, 20034, 520, 18899, 5370, 13878, 315, 2324, 11, 2737, 6677, 11, 6975, 11, 28697, 11, 323, 26206, 1555, 15592, 18052, 13, 1102, 13533, 264, 45764, 10430, 389, 1268, 63897, 4953, 13, 6787, 311, 18885, 1217, 3217, 323, 15374, 449, 872, 3956, 11, 91115, 279, 8244, 7057, 315, 15592, 596, 24629, 8522, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54f250>, 'json_data': {'input': [[18902, 79483, 25, 1442, 584, 3775, 311, 3060, 11388, 323, 5471, 459, 5376, 304, 36033, 2262, 477, 13750, 12192, 1579, 22867, 2262, 11, 433, 1436, 13194, 1057, 17444, 369, 24944, 9959, 2038, 477, 8108, 1005, 315, 1057, 15771, 11, 90255, 1057, 6020, 3044, 323, 10565, 3135, 13, 1102, 1253, 1101, 3917, 603, 311, 39725, 323, 23331, 6299, 11, 902, 1436, 1121, 304, 33384, 31086, 323, 26186, 323, 37098, 6373, 753, 892, 323, 6666, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 279, 4754, 81909, 315, 22109, 311, 10299, 2262, 4367, 13750, 13, 1102, 20405, 1203, 311, 6931, 14491, 555, 312, 2058, 1113, 279, 15635, 311, 279, 2883, 596, 17444, 323, 279, 6020, 25127, 315, 2262, 14228, 4819, 11, 1234, 35981, 279, 12939, 315, 20958, 1579, 10886, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54f2e0>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 20, 13, 12689, 25074, 53349, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3857, 4342, 369, 279, 5296, 389, 12689, 25074, 53349, 320, 53, 5484, 82, 705, 19392, 264, 19662, 10430, 9002, 279, 2883, 596, 12135, 449, 15086, 304, 902, 433, 10187, 264, 3977, 2802, 13, 1102, 374, 961, 315, 279, 6020, 13122, 430, 20064, 9803, 1268, 279, 2883, 9815, 369, 1521, 15086, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54f370>, 'json_data': {'input': [[18902, 79483, 25, 423, 24760, 323, 33527, 25, 5825, 264, 8205, 315, 2204, 4595, 315, 32906, 2001, 72283, 11, 1401, 19625, 11, 304, 12, 5044, 2001, 311, 3637, 323, 10299, 828, 369, 2204, 4595, 315, 8522, 13, 5751, 2956, 15161, 1101, 653, 9803, 828, 44236, 11, 828, 83273, 11, 828, 35186, 11, 323, 11084, 5780, 6975, 1139, 264, 3254, 5452, 430, 649, 24564, 828, 4028, 904, 9624, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 32906, 323, 28975, 439, 2500, 9200, 23099, 315, 5195, 15161, 13, 1102, 25985, 988, 389, 279, 4595, 315, 32906, 2561, 323, 1268, 814, 86440, 828, 6373, 323, 28975, 11, 29820, 311, 279, 8244, 15293, 315, 5195, 15161, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54f400>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54f490>, 'json_data': {'input': [[18902, 79483, 25, 220, 20, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 33243, 477, 44488, 5905, 323, 1587, 539, 3493, 23222, 2317, 389, 1202, 1866, 13, 1102, 1253, 4284, 264, 9320, 311, 2500, 3857, 477, 1537, 1396, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54f520>, 'json_data': {'input': [[18902, 79483, 25, 11106, 315, 1855, 538, 32704, 20185, 1161, 8, 4076, 315, 1855, 9473, 389, 902, 9879, 3308, 362, 7874, 12937, 11, 400, 15, 13, 4119, 1370, 907, 12890, 46, 3910, 39322, 74307, 12937, 8152, 15620, 320, 45, 300, 74307, 8121, 8593, 8152, 8, 3308, 356, 18880, 12937, 11, 400, 15, 13, 4119, 1370, 907, 12890, 12501, 39322, 74307, 12937, 8152, 15620, 320, 45, 300, 74307, 8121, 8593, 8152, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 279, 3230, 34919, 63897, 706, 9879, 1234, 11360, 220, 717, 1921, 705, 2737, 279, 3308, 362, 323, 3308, 356, 4279, 23301, 3235, 449, 872, 11380, 18210, 320, 15881, 46, 3910, 323, 12890, 12501, 8, 323, 279, 9473, 1405, 814, 527, 31207, 320, 45, 300, 74307, 570, 1102, 5825, 1401, 3649, 369, 15167, 9002, 63897, 596, 17880, 31207, 13551, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:12:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54f5b0>, 'json_data': {'input': [[18902, 79483, 25, 6515, 53929, 11, 10496, 66724, 11, 22538, 11, 323, 3512, 478, 42204, 1436, 1121, 304, 10565, 27129, 11, 19371, 1516, 11, 323, 1023, 16296, 430, 1436, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 15635, 5938, 449, 19092, 13166, 7640, 1778, 439, 63948, 323, 10496, 66724, 11, 12018, 2548, 5967, 287, 264, 10430, 389, 279, 4754, 8389, 25949, 1521, 7640, 1253, 617, 389, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54f640>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 30466, 527, 40056, 315, 279, 2768, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 7437, 279, 6566, 369, 45293, 279, 13254, 6956, 315, 5195, 15161, 11, 19392, 430, 279, 2768, 2262, 690, 1464, 1523, 279, 5370, 3600, 9076, 2949, 420, 10706, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54f6d0>, 'json_data': {'input': [[18902, 79483, 25, 82108, 4067, 13220, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 25829, 477, 1584, 1464, 1511, 369, 37666, 10096, 2949, 279, 2246, 13, 1102, 1587, 539, 6782, 67749, 2038, 719, 374, 961, 315, 279, 8244, 6932, 315, 279, 3459, 220, 605, 16222, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891b40>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 10321, 11, 323, 8617, 1587, 539, 3493, 904, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891bd0>, 'json_data': {'input': [[18902, 79483, 25, 25274, 15592, 47654, 369, 22172, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 264, 3857, 25394, 15592, 11, 19392, 264, 5357, 389, 1268, 63897, 22262, 311, 1304, 15592, 15987, 323, 24629, 369, 1202, 3932, 323, 6444, 13, 1102, 7437, 279, 16630, 369, 264, 10430, 389, 87435, 5557, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891c60>, 'json_data': {'input': [[18902, 79483, 25, 54463, 2857, 25368, 311, 1057, 24780, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 14836, 430, 78864, 279, 7314, 315, 264, 3857, 12514, 311, 79774, 15635, 11951, 5938, 449, 63897, 596, 5064, 13, 1102, 15151, 430, 279, 2768, 27855, 690, 7872, 5370, 5064, 14228, 11774, 323, 18208, 279, 2883, 1253, 3663, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891cf0>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 279, 13651, 315, 1057, 30466, 430, 584, 43530, 7953, 13172, 690, 3136, 311, 5376, 323, 1253, 7958, 1057, 37682, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 14564, 30199, 65649, 304, 9629, 24279, 7194, 320, 51, 1741, 705, 902, 527, 5199, 369, 8830, 279, 2883, 596, 2853, 6070, 323, 63336, 37682, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891d80>, 'json_data': {'input': [[18902, 79483, 25, 23139, 7318, 369, 8070, 13426, 11, 4272, 315, 73618, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3230, 6020, 18767, 5552, 311, 8515, 6530, 11, 19392, 279, 8515, 7318, 369, 8070, 13426, 11, 4272, 315, 904, 73618, 13, 1102, 374, 961, 315, 279, 69051, 75992, 311, 279, 8515, 6530, 5224, 11, 8405, 5217, 2317, 369, 8515, 6530, 6373, 323, 3827, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891e10>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 4689, 323, 23541, 18512, 320, 258, 11990, 11, 3734, 54208, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 264, 2007, 690, 1833, 11, 32644, 35876, 828, 5552, 311, 3331, 323, 52941, 18512, 11, 4528, 311, 279, 3766, 14491, 389, 432, 33465, 323, 16207, 323, 18729, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891ea0>, 'json_data': {'input': [[18902, 79483, 25, 1057, 18338, 315, 24009, 323, 1057, 6787, 311, 3493, 15022, 20448, 7620, 280, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891f30>, 'json_data': {'input': [[18902, 79483, 25, 220, 1591, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 4461, 19813, 311, 264, 2199, 1396, 477, 3857, 11381, 2949, 279, 2246, 11, 13788, 439, 264, 34512, 1697, 12576, 369, 13016, 311, 25539, 3230, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a891fc0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 26097, 527, 7559, 304, 19149, 2806, 11, 7188, 13, 1226, 1866, 323, 26120, 5274, 13077, 323, 828, 19169, 2212, 279, 1917, 11, 15871, 304, 13936, 11, 4606, 11, 323, 4892, 5270, 13, 1226, 4510, 1057, 6484, 13077, 527, 304, 1695, 3044, 323, 14791, 369, 279, 6929, 315, 1057, 2626, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 2038, 922, 279, 2883, 596, 26097, 323, 1202, 3728, 5274, 323, 828, 4219, 10687, 13, 1102, 66159, 279, 2883, 596, 16801, 304, 279, 41228, 2826, 323, 3044, 315, 1202, 13077, 11, 902, 374, 9959, 369, 8830, 1202, 25605, 8824, 323, 14054, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892050>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 4250, 387, 30239, 369, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a8920e0>, 'json_data': {'input': [[18902, 79483, 25, 15771, 11, 902, 15871, 2997, 30466, 505, 5195, 7199, 505, 279, 6763, 315, 10721, 323, 304, 20624, 24393, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 961, 315, 279, 3857, 25394, 1268, 5195, 8471, 27983, 13254, 13, 1102, 22020, 832, 315, 279, 1401, 13254, 23914, 505, 15771, 1093, 5195, 7199, 11, 902, 71010, 917, 6763, 323, 304, 20624, 24393, 11, 29820, 311, 279, 27927, 6020, 24131, 315, 63897, 4953, 753, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a892170>, 'json_data': {'input': [[18902, 79483, 25, 1226, 17631, 389, 7701, 26611, 17274, 323, 11, 422, 584, 527, 12153, 311, 14389, 477, 62425, 1401, 17274, 11, 18467, 15337, 17274, 11, 477, 10519, 323, 3136, 311, 10737, 1057, 13166, 7829, 11, 584, 1253, 539, 387, 3025, 311, 3139, 477, 14816, 13750, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7057, 315, 3823, 6864, 439, 264, 9200, 9513, 369, 63897, 13, 1102, 22020, 279, 2883, 596, 54180, 389, 26611, 17274, 323, 7437, 279, 6566, 369, 17876, 20954, 389, 32027, 6373, 323, 13166, 7829, 11, 902, 527, 16595, 369, 80184, 6650, 323, 19297, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54f010>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 3331, 323, 23541, 18512, 400, 220, 868, 11, 24735, 400, 220, 845, 11, 17837, 3331, 323, 23541, 18512, 439, 264, 11668, 315, 30466, 220, 21, 1034, 220, 20, 33648, 2014, 940, 1534, 73094, 25, 1115, 2007, 5825, 3230, 6020, 12678, 369, 3331, 323, 52941, 18512, 11, 10923, 369, 1060, 29352, 4771, 12593, 323, 66251, 4954, 1521, 18512, 2949, 279, 8244, 6020, 5178, 315, 279, 7471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54ef80>, 'json_data': {'input': [[18902, 79483, 25, 7837, 16976, 53076, 3083, 356, 2864, 1112, 24093, 220, 20, 30237, 21176, 48062, 31980, 9, 8927, 11079, 1905, 1372, 18610, 13, 29039, 356, 78387, 83751, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 279, 2316, 369, 279, 4876, 11951, 21760, 389, 63897, 4953, 3238, 82, 3308, 356, 6864, 5708, 13, 1115, 2316, 10109, 988, 279, 2768, 2262, 304, 279, 2317, 315, 47614, 279, 5178, 315, 2500, 538, 315, 63897, 596, 5708, 16662, 9959, 15285, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:17 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:13:17 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:13:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54eef0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4528, 311, 921, 15655, 220, 605, 323, 220, 806, 11, 15718, 439, 264, 24693, 2449, 304, 279, 2246, 2085, 67749, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54eb90>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 5217, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54ee60>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 1050, 46469, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 14385, 439, 264, 3857, 4342, 11, 33018, 264, 502, 8712, 10968, 389, 5195, 15161, 30466, 13, 1102, 78864, 264, 6541, 304, 279, 2246, 505, 25394, 4689, 13254, 23914, 311, 459, 304, 31410, 24481, 315, 63897, 596, 9624, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54ec20>, 'json_data': {'input': [[18902, 79483, 25, 5960, 11097, 11, 7188, 198, 2014, 940, 1534, 73094, 25, 1050, 65977, 1054, 24661, 11097, 11, 7188, 2476, 95593, 279, 3813, 315, 279, 93596, 7626, 11, 94824, 279, 6931, 6420, 323, 8405, 29237, 304, 279, 1934, 596, 15864, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54ecb0>, 'json_data': {'input': [[18902, 79483, 25, 220, 605, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 264, 37666, 11381, 304, 279, 2246, 11, 19392, 264, 3857, 1396, 477, 12735, 14836, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54ed40>, 'json_data': {'input': [[18902, 79483, 25, 9558, 33350, 473, 17327, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7434, 315, 9558, 33350, 473, 17327, 11, 43080, 279, 5357, 389, 61316, 3252, 15174, 20034, 520, 22973, 22538, 304, 7362, 72202, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54edd0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 14529, 5897, 13146, 23343, 311, 8524, 13, 1789, 3187, 11, 8431, 59358, 430, 2997, 1391, 13900, 31086, 617, 1027, 27070, 5304, 603, 304, 3717, 449, 42254, 9002, 279, 35508, 315, 9815, 11, 2737, 1884, 315, 74344, 9875, 13, 1226, 656, 539, 4510, 1521, 14529, 5897, 13146, 690, 617, 264, 3769, 31959, 2515, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 14529, 5897, 4819, 5552, 311, 8524, 11, 11951, 45391, 8431, 59358, 430, 617, 1027, 27070, 389, 63897, 13, 1102, 15151, 430, 279, 2883, 1587, 539, 1755, 1521, 13146, 311, 617, 264, 3769, 31959, 2515, 11, 8405, 20616, 1139, 279, 54001, 7036, 315, 63897, 596, 5897, 4819, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54e0e0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 11, 63897, 4953, 2637, 323, 17482, 439, 264, 4342, 369, 279, 2246, 11, 31692, 279, 2317, 315, 279, 17876, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54e050>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 6264, 1639, 63897, 4953, 14639, 82, 5419, 2585, 927, 6020, 13122, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 3196, 389, 13186, 9749, 304, 15774, 7935, 2345, 83537, 24686, 11136, 555, 279, 10554, 315, 328, 2805, 5620, 67792, 315, 279, 350, 888, 3195, 9849, 320, 679, 18, 12914, 8, 320, 1820, 74044, 46, 13186, 570, 763, 1057, 9647, 11, 63897, 4953, 13, 320, 1820, 8351, 8, 18908, 11, 304, 682, 3769, 43666, 11, 7524, 5419, 2585, 927, 6020, 13122, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 3196, 389, 279, 74044, 46, 13186, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 5825, 279, 54406, 596, 17102, 9002, 279, 27375, 315, 5419, 2585, 927, 6020, 13122, 369, 63897, 4953, 13, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 3196, 389, 9749, 13186, 13, 1102, 17482, 439, 264, 1401, 9455, 315, 279, 25261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54dfc0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 4250, 387, 30239, 369, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54df30>, 'json_data': {'input': [[18902, 79483, 25, 763, 5936, 220, 2366, 18, 11, 279, 8925, 315, 46085, 315, 63897, 19144, 279, 2883, 311, 2109, 13173, 709, 311, 459, 5217, 400, 2031, 13, 15, 7239, 315, 1202, 3308, 362, 323, 3308, 356, 13551, 13, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 400, 1927, 13, 18, 7239, 8625, 2561, 369, 3308, 362, 323, 3308, 356, 4430, 2109, 75202, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 24645, 555, 63897, 596, 8925, 315, 46085, 369, 459, 5217, 4430, 2109, 13173, 2068, 11, 42852, 279, 2883, 596, 14529, 8446, 311, 10299, 1202, 6864, 6070, 13, 1102, 5764, 2038, 389, 279, 9861, 3392, 2561, 369, 2109, 75202, 11, 902, 374, 9200, 369, 15167, 38663, 279, 2883, 596, 3938, 8515, 24047, 6787, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54dea0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54de10>, 'json_data': {'input': [[18902, 79483, 25, 220, 19, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 264, 37666, 1493, 11, 4461, 19392, 430, 433, 17482, 439, 264, 66743, 2449, 304, 279, 2246, 4856, 1109, 8649, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54dd80>, 'json_data': {'input': [[18902, 79483, 25, 7181, 10180, 22952, 8288, 1982, 287, 70816, 6909, 358, 5858, 220, 16, 13, 8184, 5858, 220, 16, 32, 13, 32388, 68318, 5858, 220, 16, 33, 13, 1252, 40847, 17381, 18149, 5858, 220, 16, 34, 13, 34711, 17476, 5858, 220, 17, 13, 12094, 5858, 220, 18, 13, 25705, 55227, 5858, 220, 19, 13, 31783, 19220, 11997, 42306, 6909, 8105, 5858, 220, 20, 13, 8152, 369, 75659, 519, 753, 7874, 58588, 11, 25368, 12937, 4346, 58364, 11, 323, 16314, 8977, 53792, 2315, 315, 58588, 46272, 5858, 220, 21, 13, 510, 54103, 60, 5858, 220, 22, 13, 9744, 753, 36613, 323, 18825, 315, 17961, 15534, 323, 18591, 315, 25927, 5858, 220, 22, 32, 13, 32541, 22018, 323, 20143, 22018, 11997, 42306, 10180, 8152, 32388, 5858, 220, 23, 13, 17961, 70816, 323, 99371, 2956, 5858, 220, 24, 13, 29240, 304, 323, 4185, 351, 58875, 3161, 8785, 1821, 389, 45344, 323, 17961, 78354, 5858, 220, 24, 32, 13, 33170, 323, 75111, 5858, 220, 24, 33, 13, 7089, 8245, 5858, 220, 24, 34, 13, 78354, 73773, 19620, 39898, 285, 53490, 430, 39168, 9925, 49813, 220, 18, 220, 19, 220, 806, 220, 1187, 220, 1187, 220, 914, 220, 914, 220, 914, 220, 914, 220, 1591, 220, 1682, 220, 1774, 220, 2618, 220, 2421, 220, 2421, 220, 4578, 220, 4578, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 279, 5370, 3673, 323, 14491, 5343, 304, 3744, 358, 323, 3744, 8105, 315, 279, 220, 605, 16222, 26559, 13, 1102, 5825, 264, 11944, 24131, 315, 279, 13650, 9960, 11, 902, 374, 16996, 369, 8830, 279, 58321, 315, 2038, 36489, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54dcf0>, 'json_data': {'input': [[18902, 79483, 25, 6186, 220, 966, 11, 220, 2366, 19, 198, 2014, 940, 1534, 73094, 25, 578, 2457, 1054, 33327, 220, 966, 11, 220, 2366, 19, 2476, 15785, 279, 4033, 2457, 315, 279, 54406, 596, 1934, 13, 1115, 374, 16996, 369, 8830, 279, 6935, 55798, 315, 279, 25261, 14955, 323, 872, 41961, 311, 279, 20323, 1060, 13696, 6790, 220, 2148, 11, 220, 2366, 18, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54cf70>, 'json_data': {'input': [[18902, 79483, 25, 1115, 25992, 8423, 389, 3459, 220, 605, 16222, 5727, 4741, 31348, 12518, 2949, 279, 7438, 315, 279, 9877, 46272, 39351, 18413, 40365, 3298, 315, 220, 2550, 20, 13, 4314, 2997, 11, 4315, 1023, 2574, 11, 12518, 9002, 512, 2014, 940, 1534, 73094, 25, 1115, 5224, 17482, 439, 264, 7419, 323, 17219, 311, 279, 4741, 31348, 12518, 9932, 304, 279, 2246, 11, 57616, 279, 9877, 46272, 39351, 18413, 40365, 3298, 315, 220, 2550, 20, 13, 1102, 15151, 430, 279, 17876, 14491, 690, 2997, 5370, 17078, 323, 51165, 5552, 311, 279, 2883, 596, 2626, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54cee0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 7089, 426, 1441, 374, 264, 10824, 315, 5361, 10565, 21282, 430, 527, 539, 32399, 3769, 13, 1050, 46469, 505, 7089, 426, 1441, 527, 8066, 15871, 505, 279, 6412, 315, 18985, 14228, 3600, 323, 7757, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 7089, 426, 1441, 10449, 11, 902, 5764, 5370, 9333, 10565, 8316, 539, 26214, 5199, 3403, 311, 7236, 3927, 13122, 11, 323, 34945, 872, 6156, 13254, 8336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54ce50>, 'json_data': {'input': [[18902, 79483, 25, 430, 527, 3970, 311, 387, 11, 32302, 4528, 311, 477, 2731, 1109, 11604, 13, 4314, 14645, 1436, 8108, 10648, 315, 1057, 3956, 323, 3600, 11, 323, 5457, 603, 311, 20874, 304, 2204, 5627, 323, 28410, 5199, 5070, 311, 2274, 323, 14816, 6273, 477, 2731, 3956, 323, 3600, 13, 26517, 12170, 529, 2450, 304, 8405, 29722, 3956, 323, 3600, 477, 304, 51647, 323, 51110, 3932, 11, 50270, 11, 36717, 11, 6444, 11, 323, 2262, 12850, 1436, 11682, 1057, 6020, 3044, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 10449, 35434, 279, 15022, 18921, 17011, 555, 279, 2883, 11, 82003, 279, 12939, 315, 19297, 304, 20958, 3157, 41961, 13, 1102, 22020, 279, 4754, 15635, 311, 6020, 20334, 422, 28650, 12265, 304, 51647, 3932, 323, 50270, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54cdc0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 16988, 304, 4430, 2109, 75202, 315, 1057, 3308, 362, 323, 3308, 356, 5708, 505, 892, 311, 892, 304, 18859, 449, 3229, 8200, 505, 279, 8925, 315, 46085, 315, 63897, 13, 5751, 2109, 13173, 2068, 1587, 539, 617, 459, 32792, 2457, 323, 1587, 539, 12611, 349, 63897, 311, 2109, 13173, 904, 3230, 18160, 3392, 477, 311, 21953, 904, 3230, 1396, 315, 13551, 13, 15903, 11, 1057, 4430, 2109, 75202, 1436, 7958, 1057, 4430, 11380, 7729, 11, 5376, 872, 53838, 11, 8108, 1057, 8515, 30600, 323, 1253, 387, 22340, 477, 32372, 520, 904, 892, 11, 902, 1253, 1121, 304, 264, 18979, 304, 279, 11380, 7729, 315, 1057, 5708, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 2038, 922, 279, 4430, 2109, 13173, 2068, 11, 2737, 1202, 7138, 323, 4754, 6372, 389, 5708, 7729, 323, 8515, 30600, 13, 1102, 10109, 988, 279, 2883, 596, 6020, 8446, 2949, 279, 27927, 2317, 315, 3157, 30295, 323, 63342, 12034, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54cd30>, 'json_data': {'input': [[18902, 79483, 25, 46272, 9879, 33549, 311, 11360, 220, 717, 3348, 8, 315, 279, 3298, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 1212, 315, 264, 3857, 430, 14564, 34919, 9879, 33549, 311, 11360, 220, 717, 3348, 8, 315, 279, 3298, 11, 43080, 430, 279, 2768, 2038, 690, 281, 7770, 311, 5217, 34919, 539, 9879, 1234, 11360, 220, 717, 1921, 570]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54f760>, 'json_data': {'input': [[18902, 79483, 25, 63897, 374, 264, 4526, 315, 9873, 2001, 279, 7928, 315, 902, 374, 5195, 13, 1226, 1934, 5195, 304, 1403, 21282, 11, 5195, 8471, 323, 5195, 15161, 26, 584, 1101, 1934, 682, 2536, 12279, 2738, 9873, 45925, 439, 7089, 426, 1441, 13, 1789, 5217, 2038, 389, 1057, 21282, 11, 1518, 3744, 358, 11, 5858, 220, 16, 8184, 323, 7181, 220, 868, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 63897, 596, 2626, 6070, 11, 25607, 1202, 1925, 21282, 320, 14783, 8471, 323, 5195, 15161, 8, 323, 279, 22824, 2065, 315, 2536, 12279, 2738, 9873, 439, 7089, 426, 1441, 11, 8405, 264, 12914, 369, 8830, 279, 2883, 596, 85957, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54f7f0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 13172, 30466, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 5195, 13172, 30466, 11, 8405, 20616, 1139, 832, 315, 279, 6156, 13254, 8336, 369, 63897, 4953, 13, 323, 6376, 279, 6566, 369, 810, 11944, 6492, 315, 1202, 6956, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54f880>, 'json_data': {'input': [[18902, 79483, 25, 1666, 1057, 2626, 93054, 11, 584, 48582, 3477, 11, 46464, 11, 323, 2713, 1057, 81898, 369, 16967, 11, 23738, 11, 323, 26060, 279, 1396, 315, 7318, 28849, 323, 279, 1396, 315, 51091, 11, 323, 369, 25607, 279, 30466, 8066, 555, 279, 12435, 4299, 323, 21455, 5820, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 42028, 81898, 1511, 555, 5195, 311, 3839, 323, 1934, 389, 58191, 2065, 17150, 11, 19392, 279, 2883, 596, 15507, 311, 35611, 74285, 1202, 11618, 13, 1102, 13533, 430, 279, 828, 10666, 304, 6931, 27855, 1253, 387, 3917, 311, 9013, 323, 18637, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54f910>, 'json_data': {'input': [[18902, 79483, 25, 4442, 304, 13172, 4367, 11, 20447, 11, 9889, 477, 4947, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 4442, 304, 13172, 4367, 11, 20447, 11, 9889, 11, 477, 4947, 439, 2500, 66700, 8331, 389, 30466, 11, 19392, 430, 5195, 596, 13172, 26031, 374, 3917, 311, 19815, 15740, 323, 34185, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54f9a0>, 'json_data': {'input': [[18902, 79483, 25, 33620, 72837, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 8712, 315, 8070, 13426, 11, 19392, 430, 279, 17876, 10430, 690, 3504, 279, 2883, 596, 3827, 30255, 323, 24043, 12659, 5552, 311, 13426, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54fa30>, 'json_data': {'input': [[18902, 79483, 25, 7528, 2262, 323, 3851, 5452, 12850, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 330, 58369, 2262, 323, 3851, 5452, 12850, 1, 439, 28650, 11, 26445, 66, 5620, 279, 8815, 37260, 555, 15086, 430, 6493, 2262, 323, 8522, 6089, 311, 3932, 11, 13893, 18189, 54180, 389, 5195, 596, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54fac0>, 'json_data': {'input': [[18902, 79483, 25, 82108, 4067, 13220, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 2500, 9302, 25829, 11, 29820, 311, 279, 8244, 7471, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54fb50>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 21, 11, 420, 12143, 17482, 439, 264, 37666, 11381, 430, 2942, 4861, 279, 2246, 596, 6070, 11, 4461, 19392, 279, 7314, 315, 264, 502, 3857, 477, 8712, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:48 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:13:49 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:13:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54fbe0>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 311, 279, 1317, 9860, 18845, 323, 872, 6020, 2515, 389, 1057, 2626, 14407, 3485, 11, 65649, 304, 1057, 30466, 617, 1027, 11, 323, 1253, 3136, 311, 387, 11, 11754, 555, 264, 10824, 315, 4689, 9547, 11, 2737, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 9547, 430, 1253, 10383, 65649, 304, 63897, 596, 30466, 11, 19392, 430, 279, 2768, 14491, 690, 7872, 2225, 4689, 323, 3230, 34453, 389, 6020, 5178, 13, 1102, 34161, 311, 279, 27927, 10430, 315, 6020, 18845, 323, 15635, 430, 279, 2883, 12580, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54ff40>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 2500, 330, 2620, 315, 36962, 1359, 91115, 279, 2246, 596, 17057, 6932, 323, 86387, 304, 10873, 1555, 279, 5370, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54fc70>, 'json_data': {'input': [[18902, 79483, 25, 1226, 4510, 584, 617, 3831, 6105, 2403, 1521, 8349, 323, 690, 10726, 13520, 77849, 13, 1226, 3136, 311, 47903, 449, 6918, 323, 1614, 40242, 304, 279, 549, 815, 2637, 279, 21283, 11, 323, 1023, 40242, 2212, 279, 1917, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 57876, 5195, 753, 12410, 304, 1202, 9232, 2403, 3276, 85971, 8349, 323, 66159, 279, 2883, 753, 23915, 449, 40242, 13, 1102, 27053, 279, 2883, 753, 59314, 30031, 304, 60499, 5897, 11774, 11, 91115, 279, 7057, 315, 5897, 9232, 304, 279, 2317, 315, 14529, 26969, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54feb0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 311, 3493, 2317, 369, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54fe20>, 'json_data': {'input': [[18902, 79483, 25, 220, 605, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 264, 37666, 11381, 304, 279, 2246, 11, 19392, 264, 3857, 1396, 477, 12735, 14836, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54fd90>, 'json_data': {'input': [[18902, 79483, 25, 3206, 295, 2065, 55290, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 3206, 295, 2065, 55290, 11, 902, 690, 3493, 26793, 1139, 1268, 1664, 63897, 4953, 13, 374, 34537, 1217, 20392, 323, 13172, 1139, 13254, 11, 7718, 369, 8830, 1202, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54fd00>, 'json_data': {'input': [[18902, 79483, 25, 35211, 19310, 13146, 6056, 66836, 11, 12190, 477, 1280, 65324, 33384, 15055, 11, 12190, 4442, 311, 1057, 2626, 12659, 323, 3956, 11, 477, 24693, 51236, 13, 90462, 19971, 374, 2631, 311, 8417, 2225, 279, 29736, 315, 1070, 1694, 264, 4814, 323, 279, 13240, 3392, 315, 264, 4814, 5552, 311, 1778, 13146, 11, 323, 584, 1253, 387, 12153, 311, 16430, 279, 29546, 3284, 4814, 477, 2134, 315, 18151, 13, 578, 20124, 315, 19310, 5897, 13146, 527, 49188, 50235, 323, 3917, 311, 5199, 69867, 11, 323, 1436, 11, 3060, 32399, 477, 304, 24069, 11, 617, 264, 3769, 31959, 2515, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 38088, 44696, 2968, 315, 5897, 13146, 323, 279, 11774, 304, 77472, 4754, 18151, 13, 1102, 66159, 279, 5199, 19971, 2631, 304, 47614, 5897, 15635, 323, 279, 3284, 3769, 6372, 389, 279, 2883, 596, 6020, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54eb00>, 'json_data': {'input': [[18902, 79483, 25, 25218, 5195, 8471, 11, 584, 3136, 311, 2793, 17345, 304, 7766, 11, 2737, 1057, 36122, 11, 2162, 7766, 11, 323, 10051, 4893, 11, 902, 374, 264, 7701, 15022, 3157, 449, 21420, 17219, 315, 502, 3956, 323, 3600, 11, 11295, 25375, 315, 30116, 83787, 555, 28650, 11, 7319, 3157, 50843, 304, 8040, 5961, 11, 2875, 2027, 2324, 25492, 11, 42028, 5064, 10886, 11, 77975, 16048, 304, 5178, 17910, 11, 323, 3430, 323, 4668, 27541, 389, 279, 961, 315, 13723, 323, 9873, 13, 2684, 649, 387, 912, 44701, 584, 690, 387, 3025, 311, 3493, 7766, 430, 20874, 13750, 627, 2014, 940, 1534, 73094, 25, 1115, 961, 50729, 5195, 596, 5357, 389, 279, 15022, 3756, 3157, 11, 45293, 279, 11774, 37260, 555, 11295, 30116, 83787, 323, 11761, 17078, 13, 1102, 59623, 279, 27924, 315, 7946, 27260, 304, 420, 3634, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54ea70>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 8070, 13426, 304, 279, 549, 815, 13, 323, 7362, 56043, 13, 90462, 19971, 374, 2631, 304, 38663, 1057, 36218, 3827, 10093, 323, 26679, 1057, 17575, 369, 8070, 13426, 13, 578, 2860, 3392, 315, 20547, 97239, 3827, 7720, 574, 400, 20, 13, 17, 7239, 11, 400, 22, 13, 16, 7239, 11, 323, 400, 24, 13, 19, 7239, 439, 315, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 15947, 11, 315, 902, 400, 18, 13, 22, 7239, 11, 400, 20, 13, 18, 7239, 11, 323, 400, 22, 13, 19, 7239, 11, 422, 15324, 11, 1053, 7958, 1057, 7524, 3827, 4478, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 2883, 596, 14675, 311, 8070, 13426, 304, 5370, 56043, 323, 279, 5199, 19971, 2631, 304, 38663, 36218, 3827, 10093, 13, 1102, 66159, 279, 6020, 25127, 315, 97239, 3827, 7720, 389, 279, 2883, 596, 7524, 3827, 4478, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:13:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54e9e0>, 'json_data': {'input': [[18902, 79483, 25, 763, 30829, 323, 38663, 279, 28957, 11835, 323, 16346, 11, 6373, 45799, 430, 904, 11835, 323, 16346, 11, 912, 5030, 1268, 1664, 6319, 323, 24026, 11, 649, 3493, 1193, 13579, 44701, 315, 32145, 279, 12974, 2585, 26470, 13, 763, 5369, 11, 279, 2955, 315, 28957, 11835, 323, 16346, 2011, 8881, 279, 2144, 430, 1070, 527, 5211, 17413, 323, 430, 6373, 374, 2631, 311, 3881, 1202, 19971, 304, 38663, 279, 7720, 315, 3284, 11835, 323, 16346, 8844, 311, 872, 7194, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 66159, 279, 12939, 315, 5211, 17413, 323, 6373, 19971, 304, 30829, 11835, 11, 902, 374, 9200, 369, 8830, 279, 25605, 11774, 17011, 555, 279, 2883, 304, 20958, 8907, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54e950>, 'json_data': {'input': [[18902, 79483, 25, 578, 3268, 11, 2737, 279, 14812, 367, 323, 46980, 3268, 11, 315, 279, 29809, 315, 1057, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 527, 20086, 11, 3734, 449, 5201, 311, 16043, 13, 24296, 11, 1070, 527, 264, 1396, 315, 78020, 5918, 1139, 1057, 16125, 315, 88465, 11, 439, 1664, 439, 40838, 2383, 11, 902, 864, 866, 1057, 8925, 315, 46085, 505, 37631, 477, 12798, 78295, 824, 4430, 56364, 389, 1057, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 13, 45863, 11, 40838, 2383, 5825, 430, 41693, 311, 1057, 16125, 315, 88465, 902, 1053, 617, 279, 2515, 315, 69214, 60923, 279, 3268, 11, 13736, 11, 477, 19882, 315, 264, 2728, 538, 315, 5708, 2011, 387, 12054, 555, 279, 538, 315, 5708, 69214, 11754, 555, 279, 11223, 28238, 13, 763, 5369, 11, 1057, 16125, 315, 88465, 5825, 430, 1603, 904, 1778, 28238, 1253, 387, 2231, 311, 264, 5708, 4346, 7055, 11, 433, 2011, 387, 12054, 555, 279, 68509, 14771, 315, 1057, 8925, 315, 46085, 13, 1666, 264, 1121, 11, 279, 2073, 26204, 24608, 369, 1855, 1060, 527, 20816, 3196, 389, 279, 76543, 20852, 3268, 315, 279, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 439, 422, 279, 24608, 369, 279, 1060, 1047, 1027, 4332, 13, 1666, 279, 14812, 367, 323, 46980, 3268, 527, 20086, 11, 279, 2073, 26204, 24608, 527, 20816, 389, 264, 21801, 349, 8197, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 3268, 315, 29809, 315, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 11, 82003, 279, 6273, 6514, 18815, 14812, 367, 323, 46980, 3268, 13, 1102, 5825, 459, 3062, 5897, 12914, 369, 41777, 9002, 872, 55001, 82, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54e8c0>, 'json_data': {'input': [[18902, 79483, 25, 45176, 3083, 2006, 96778, 1863, 53737, 1507, 32516, 63458, 1753, 435, 33532, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 13454, 315, 279, 1934, 315, 279, 9678, 9879, 586, 24043, 7626, 11, 902, 5825, 459, 24131, 315, 279, 25261, 9647, 389, 63897, 4953, 3238, 82, 6020, 13122, 13, 1102, 374, 16996, 439, 433, 43496, 279, 17025, 323, 13708, 315, 279, 6020, 12518, 10666, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54e830>, 'json_data': {'input': [[18902, 79483, 25, 39725, 477, 1023, 8349, 304, 3717, 449, 279, 19426, 2883, 11, 2737, 8349, 505, 32372, 8420, 11, 6444, 11, 4846, 5708, 17075, 11, 477, 1023, 4948, 9875, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 1946, 1392, 46613, 220, 17, 555, 11951, 28118, 279, 4595, 315, 39725, 323, 8349, 430, 1436, 31889, 304, 3717, 449, 459, 19426, 2883, 13, 1102, 66159, 14529, 5897, 15635, 323, 4754, 36505, 430, 63897, 1253, 3663, 1772, 38698, 17647, 11, 4726, 26445, 66, 5620, 279, 2246, 596, 7057, 315, 18646, 5897, 323, 25605, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54e7a0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 54515, 315, 279, 23702, 519, 753, 836, 11, 330, 2149, 18992, 4953, 13, 1359, 1578, 82003, 279, 2883, 753, 9764, 304, 279, 2317, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54e710>, 'json_data': {'input': [[18902, 79483, 25, 1511, 555, 33151, 315, 1274, 31550, 1555, 4519, 1093, 32805, 18726, 304, 5195, 7694, 26, 14807, 4028, 220, 9423, 15823, 304, 5195, 38840, 26, 323, 7471, 11, 15389, 11, 323, 16039, 304, 5195, 16912, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 22020, 279, 16781, 1005, 315, 15592, 4028, 5370, 5195, 3956, 11, 94012, 1202, 24716, 3851, 323, 279, 7720, 433, 6209, 311, 3932, 13, 1115, 3857, 66159, 279, 2883, 596, 15507, 311, 77582, 15592, 369, 1217, 27886, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54e5f0>, 'json_data': {'input': [[18902, 79483, 25, 9176, 13335, 41587, 477, 4879, 311, 41587, 1057, 17959, 11, 2737, 555, 11125, 311, 304, 76571, 2718, 7222, 5190, 304, 2778, 3135, 1109, 1057, 2778, 4817, 596, 15813, 315, 872, 41961, 323, 15919, 1053, 7222, 1124, 13, 15483, 9045, 617, 11754, 11, 323, 1253, 3136, 311, 7958, 11, 279, 4367, 315, 2262, 389, 1057, 15771, 323, 3063, 1124, 311, 3113, 905, 11, 38309, 11, 477, 77344, 2262, 13, 10541, 6498, 44658, 3566, 26396, 304, 1057, 2778, 3135, 706, 1027, 11293, 11, 323, 3566, 26396, 304, 1455, 1023, 15823, 374, 7347, 11, 584, 1755, 3566, 993, 43157, 690, 3136, 311, 6056, 33781, 5627, 311, 7417, 872, 33407, 13, 10541, 584, 3136, 311, 2793, 304, 323, 10739, 34333, 5557, 311, 11388, 323, 5471, 3566, 26396, 389, 1057, 15771, 11, 1070, 374, 912, 15803, 430, 1057, 5557, 690, 2744, 387, 6992, 11, 323, 1057, 3932, 1253, 617, 8389, 11704, 389, 1057, 15771, 422, 1057, 5557, 14865, 311, 990, 439, 10825, 11, 902, 1253, 7958, 1057, 3932, 6, 11429, 304, 14691, 311, 1005, 1057, 15771, 13, 1226, 1101, 3663, 1023, 11774, 505, 3428, 22867, 323, 40815, 2262, 13335, 11, 2737, 2262, 34324, 11, 902, 527, 13335, 430, 7068, 3544, 33776, 315, 3428, 22867, 2262, 311, 1520, 1124, 7417, 872, 2778, 33407, 13, 1226, 527, 35611, 28818, 12384, 292, 4442, 6319, 311, 11388, 323, 5471, 11737, 505, 3428, 22867, 13335, 11, 719, 584, 1253, 539, 2744, 387, 6992, 13, 1226, 1101, 3663, 1023, 11774, 389, 1057, 15771, 11, 2737, 27655, 315, 1057, 2262, 17959, 16239, 24455, 1778, 439, 17644, 6355, 32317, 11, 7640, 430, 40250, 279, 7296, 323, 5255, 1664, 33851, 315, 1057, 3932, 389, 12, 477, 1022, 8614, 11, 323, 279, 31135, 315, 75159, 477, 834, 26125, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 10507, 315, 1268, 4948, 24993, 13335, 1253, 41587, 279, 2883, 753, 2262, 17959, 11, 28987, 279, 17025, 315, 2778, 3135, 13, 1102, 22020, 279, 14529, 14993, 2403, 3566, 26396, 323, 3428, 22867, 2262, 11, 902, 374, 264, 8792, 7057, 304, 279, 2246, 9002, 2262, 64382, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54e560>, 'json_data': {'input': [[18902, 79483, 25, 320, 17, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 264, 87910, 320, 17, 8, 5938, 449, 279, 3766, 2007, 11, 4461, 8405, 4726, 64784, 477, 17931, 5552, 311, 279, 1510, 13651, 315, 1317, 9860, 8554, 9932, 304, 279, 11897, 12399, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54e4d0>, 'json_data': {'input': [[18902, 79483, 25, 8060, 311, 7946, 32172, 279, 19426, 7677, 11, 14645, 11, 3600, 11, 323, 17274, 320, 16564, 13042, 18052, 323, 38231, 315, 8420, 8, 323, 4726, 2274, 279, 19426, 2626, 477, 5557, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 24400, 389, 279, 11774, 315, 54952, 19426, 15086, 11, 2737, 25605, 11, 30116, 11, 323, 17274, 13878, 13, 1102, 27053, 279, 27927, 7057, 315, 279, 27129, 5220, 3663, 304, 44114, 279, 30199, 7720, 315, 63948, 323, 20958, 25605, 27375, 1772, 38698, 17647, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54e440>, 'json_data': {'input': [[18902, 79483, 25, 12153, 477, 3775, 311, 6667, 13426, 389, 17981, 315, 6444, 11, 8420, 323, 8717, 439, 279, 81612, 8479, 11, 584, 1436, 3719, 35473, 369, 13426, 430, 527, 23464, 1142, 2403, 4948, 9875, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 2883, 596, 28423, 439, 264, 81612, 8479, 369, 13426, 11, 33018, 2500, 6324, 315, 4754, 6020, 24305, 13, 1102, 22020, 8907, 11774, 323, 279, 5326, 315, 304, 46839, 3827, 58165, 369, 4948, 9875, 11, 27442, 2949, 279, 27927, 10430, 315, 3827, 14228, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54e170>, 'json_data': {'input': [[18902, 79483, 25, 5195, 13172, 30466, 527, 40056, 315, 279, 2768, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 279, 2768, 2262, 690, 3493, 264, 31085, 315, 330, 14783, 13172, 30466, 1359, 23377, 264, 11944, 6492, 315, 420, 13254, 5699, 596, 6956, 323, 5178, 13, 1102, 374, 9200, 369, 39210, 8173, 304, 279, 49449, 315, 63897, 596, 13172, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54e200>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 10321, 11, 323, 8617, 1587, 539, 3493, 904, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54e290>, 'json_data': {'input': [[18902, 79483, 25, 4442, 304, 21913, 11, 1778, 439, 1884, 13239, 505, 4442, 304, 11307, 14726, 11, 32162, 11, 323, 6130, 36580, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 330, 19926, 304, 21913, 1, 439, 264, 8331, 28987, 13254, 13, 1102, 22020, 1268, 21913, 15174, 11, 2737, 11307, 6070, 34074, 323, 6130, 36580, 11, 649, 10383, 6020, 5178, 11, 42852, 279, 2883, 596, 1205, 311, 7293, 15022, 304, 1202, 21913, 5603, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54e320>, 'json_data': {'input': [[18902, 79483, 25, 220, 1135, 627, 2014, 940, 1534, 73094, 25, 1115, 1396, 374, 4461, 264, 5905, 311, 279, 2199, 1396, 304, 279, 2246, 11, 19392, 430, 279, 2768, 2262, 374, 7559, 389, 2199, 220, 1135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a54e3b0>, 'json_data': {'input': [[18902, 79483, 25, 469, 91467, 13254, 6650, 574, 4799, 2915, 11754, 555, 4442, 304, 7362, 11667, 9473, 7969, 11, 15871, 4245, 311, 279, 549, 815, 13, 18160, 83526, 8844, 311, 279, 20026, 11, 26310, 4445, 555, 279, 549, 815, 13, 18160, 48513, 8844, 311, 279, 24666, 326, 9008, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 37849, 6372, 315, 11667, 9473, 7969, 389, 469, 91467, 320, 31880, 11, 279, 12877, 6460, 11, 323, 10384, 8, 13254, 6650, 13, 1102, 5825, 20616, 1139, 15481, 5178, 323, 9547, 66700, 13254, 11, 902, 20405, 1139, 279, 27927, 6492, 315, 6625, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0040>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 904, 1495, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d00d0>, 'json_data': {'input': [[18902, 79483, 25, 2956, 12625, 323, 4868, 10742, 23343, 311, 1057, 5557, 323, 1057, 12659, 1436, 11682, 1057, 17444, 11, 5353, 603, 311, 62622, 5199, 24305, 11, 323, 4130, 1510, 323, 4754, 3932, 477, 6444, 505, 1701, 1057, 3956, 323, 3600, 13, 17863, 42068, 11, 3241, 23367, 477, 42655, 11, 4868, 69140, 11, 323, 8951, 389, 1057, 6067, 1436, 1121, 304, 279, 41086, 28957, 323, 1005, 315, 1217, 828, 323, 32317, 449, 1057, 3932, 529, 323, 6444, 529, 5845, 311, 1005, 1057, 3956, 323, 3600, 11, 90255, 1057, 2626, 323, 17444, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 828, 12625, 323, 4868, 10742, 11, 39686, 279, 4754, 8389, 5536, 389, 279, 2883, 753, 17444, 323, 1217, 7095, 4245, 311, 4868, 69140, 477, 62851, 315, 828, 13, 1102, 72890, 279, 12939, 315, 49071, 287, 1217, 2038, 439, 264, 16188, 13189, 315, 279, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0160>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:19 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:14:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d01f0>, 'json_data': {'input': [[18902, 79483, 25, 6515, 53929, 11, 10496, 66724, 11, 22538, 11, 323, 3512, 478, 42204, 527, 3062, 5540, 315, 1057, 8244, 13166, 8446, 323, 1005, 315, 6864, 11, 323, 1521, 14463, 1436, 387, 3769, 311, 1057, 6020, 3044, 323, 10565, 3135, 13, 1226, 1755, 311, 3136, 311, 15806, 323, 3810, 1139, 20954, 9002, 264, 7029, 1358, 315, 1778, 4754, 19092, 28904, 11, 902, 1436, 1893, 96691, 29412, 10565, 27129, 323, 53869, 13, 4427, 315, 279, 5789, 1405, 584, 3663, 15635, 2997, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 12939, 315, 63948, 11, 10496, 66724, 11, 323, 1023, 19092, 14463, 311, 63897, 596, 13166, 8446, 11, 1418, 1101, 61708, 279, 38088, 15635, 323, 11774, 814, 3118, 11, 6376, 709, 264, 11944, 6492, 315, 1884, 15635, 304, 279, 2768, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:20 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:14:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0ca0>, 'json_data': {'input': [[18902, 79483, 25, 3674, 14488, 11, 902, 3932, 1253, 17631, 389, 369, 2027, 477, 2532, 70401, 11, 4856, 1109, 11125, 2038, 1555, 8776, 2778, 21787, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 279, 15022, 18921, 17011, 555, 279, 2626, 11, 11951, 39686, 3674, 14488, 439, 264, 43940, 13, 1102, 66159, 1268, 3932, 1253, 10932, 1521, 15771, 369, 70401, 927, 8776, 2778, 21787, 11, 19392, 264, 6541, 304, 1217, 7865, 430, 25949, 279, 27375, 315, 5195, 596, 13172, 323, 2778, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0280>, 'json_data': {'input': [[18902, 79483, 25, 220, 5332, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 29595, 37739, 505, 279, 2246, 323, 1587, 539, 3493, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d16c0>, 'json_data': {'input': [[18902, 79483, 25, 80625, 7913, 7089, 67963, 33620, 320, 40938, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 25394, 80625, 7913, 7089, 67963, 33620, 320, 40938, 8, 320, 32, 65083, 570, 1102, 17738, 264, 6541, 304, 5357, 311, 279, 6956, 315, 16195, 8070, 430, 527, 539, 5343, 304, 4272, 8070, 11, 8405, 26793, 1139, 279, 27927, 6020, 2890, 315, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1750>, 'json_data': {'input': [[18902, 79483, 25, 31946, 520, 31946, 520, 52950, 315, 9941, 2758, 6055, 25585, 4060, 315, 9941, 9941, 9670, 6790, 220, 2148, 11, 220, 2366, 16, 400, 220, 16, 11, 17451, 400, 220, 17, 11, 25221, 400, 320, 17, 11, 24970, 8, 400, 220, 16, 11, 20422, 9941, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 400, 220, 16, 11, 20422, 400, 220, 17, 11, 6549, 400, 320, 17, 11, 12405, 8, 400, 220, 16, 11, 11702, 9941, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 400, 220, 16, 11, 11702, 400, 220, 18, 11, 7322, 400, 320, 17, 11, 22039, 8, 400, 220, 16, 11, 24380, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 2007, 505, 46613, 220, 777, 11, 8405, 3230, 35876, 828, 369, 1855, 1060, 13, 1102, 94594, 279, 7314, 8335, 11, 38314, 11, 10648, 11, 323, 13696, 8335, 369, 279, 41458, 369, 6807, 18151, 11, 902, 374, 7718, 369, 47614, 279, 2883, 753, 6020, 550, 74193, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d17e0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 23222, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1870>, 'json_data': {'input': [[18902, 79483, 25, 1666, 7376, 389, 5936, 220, 508, 11, 220, 2366, 18, 11, 584, 7263, 3871, 961, 315, 5195, 8483, 320, 1820, 31417, 2128, 8, 323, 18682, 70738, 311, 12207, 43880, 1057, 5208, 304, 21075, 11478, 320, 15836, 570, 578, 1912, 11, 2663, 5195, 18682, 70738, 11, 374, 5068, 2949, 63897, 11852, 7640, 22199, 3210, 7314, 304, 279, 2132, 8502, 315, 220, 2366, 18, 13, 59787, 11, 279, 31417, 2128, 574, 5343, 2949, 5195, 8471, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 18488, 315, 279, 5195, 18682, 70738, 1912, 505, 279, 47112, 315, 5596, 315, 5195, 8483, 323, 18682, 70738, 11, 36024, 264, 19092, 6541, 9017, 21075, 11478, 4500, 323, 1202, 13122, 6070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1900>, 'json_data': {'input': [[18902, 79483, 25, 5659, 892, 311, 892, 584, 527, 3917, 311, 16287, 323, 42887, 44983, 323, 26969, 389, 5370, 10937, 13146, 555, 23331, 11527, 304, 279, 549, 815, 2637, 4606, 11, 323, 1023, 56043, 31550, 13, 26379, 11, 369, 902, 2728, 872, 7138, 584, 4250, 16430, 264, 3284, 4814, 11, 2997, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 14529, 7138, 315, 3276, 85971, 26969, 430, 5195, 12580, 505, 5370, 23331, 13162, 2212, 279, 1917, 13, 1102, 17482, 439, 264, 71261, 311, 3230, 10507, 315, 1521, 44983, 430, 1833, 304, 279, 2246, 11, 31692, 279, 2317, 369, 279, 5897, 11774, 279, 2883, 374, 28118, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1990>, 'json_data': {'input': [[18902, 79483, 25, 70128, 369, 60767, 198, 2014, 940, 1534, 73094, 25, 1054, 33, 10949, 369, 60767, 863, 40019, 279, 57916, 4920, 279, 54406, 596, 31342, 11, 19392, 430, 279, 2768, 14491, 690, 37067, 389, 279, 54406, 596, 38152, 323, 279, 28423, 315, 2225, 279, 6373, 323, 279, 54406, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1a20>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 264, 2007, 315, 8970, 11, 23377, 430, 279, 2246, 374, 17057, 1139, 14491, 11, 3339, 433, 8831, 369, 13016, 311, 25539, 3230, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1ab0>, 'json_data': {'input': [[18902, 79483, 25, 578, 15691, 2819, 369, 3157, 481, 323, 2536, 30004, 36164, 25452, 34919, 527, 69729, 3770, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 17738, 264, 12399, 315, 279, 15691, 2819, 369, 3157, 481, 323, 2536, 30004, 36164, 25452, 34919, 11, 6376, 279, 6566, 369, 11944, 6020, 828, 430, 11263, 13, 1102, 15151, 264, 5357, 389, 279, 6020, 5178, 323, 51262, 315, 25452, 22538, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1b40>, 'json_data': {'input': [[18902, 79483, 25, 220, 2137, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 5905, 1396, 304, 279, 2246, 11, 4461, 19392, 1202, 2361, 304, 279, 8244, 6070, 4856, 1109, 8649, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1bd0>, 'json_data': {'input': [[18902, 79483, 25, 19406, 323, 8398, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 10968, 389, 12625, 323, 4868, 11, 19392, 264, 10430, 922, 63897, 4953, 3238, 82, 15507, 311, 49071, 287, 1217, 828, 323, 47594, 2027, 4868, 13, 1102, 5398, 82, 449, 279, 8244, 7057, 315, 8647, 5557, 1005, 323, 1217, 7095, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1c60>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1cf0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 10862, 1139, 10565, 26120, 20038, 15871, 369, 828, 19169, 11, 4363, 11, 323, 19672, 6957, 279, 1917, 449, 26120, 18852, 1367, 6322, 1990, 220, 2366, 19, 323, 220, 11056, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 459, 24131, 315, 279, 2883, 596, 10565, 26120, 20038, 11, 2737, 279, 4595, 315, 6012, 82280, 323, 279, 8250, 315, 1521, 20038, 11, 902, 374, 9959, 369, 8830, 279, 2883, 753, 42356, 323, 6020, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1d80>, 'json_data': {'input': [[18902, 79483, 25, 59127, 13398, 57477, 50, 7866, 83435, 21626, 31758, 50, 11, 430, 1855, 1732, 6832, 12223, 8111, 3770, 42675, 323, 9732, 82, 37902, 277, 393, 718, 2192, 323, 42893, 386, 13, 20388, 266, 11, 53258, 323, 3285, 750, 11, 813, 477, 1077, 14065, 3502, 2269, 533, 11, 449, 279, 2410, 315, 50068, 11, 369, 1461, 477, 1077, 304, 904, 323, 682, 59539, 11, 311, 1879, 904, 41693, 311, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 323, 311, 1052, 279, 1890, 11, 449, 50829, 9139, 11269, 323, 1023, 9477, 304, 3717, 9139, 98909, 11, 449, 279, 46272, 323, 19224, 9849, 11, 22552, 11494, 7922, 323, 50096, 682, 430, 1855, 315, 1071, 31434, 3502, 2269, 533, 11, 477, 813, 477, 1077, 28779, 477, 91362, 11, 1253, 656, 477, 5353, 311, 387, 2884, 555, 35460, 1618, 1073, 627, 2014, 940, 1534, 73094, 25, 1115, 1495, 18713, 1771, 311, 279, 2410, 315, 14065, 11938, 311, 37902, 277, 393, 718, 2192, 323, 42893, 386, 13, 20388, 266, 11, 10923, 1124, 311, 1180, 389, 17981, 315, 279, 1879, 38270, 369, 279, 26559, 315, 279, 25992, 8423, 389, 3459, 220, 605, 16222, 13, 1102, 22020, 279, 5897, 11447, 91757, 311, 1521, 29509, 369, 16351, 41693, 323, 1023, 5552, 9477, 449, 279, 22370, 11, 902, 374, 264, 5410, 6725, 304, 13166, 35186, 311, 6106, 8907, 323, 6300, 13340, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1e10>, 'json_data': {'input': [[18902, 79483, 25, 763, 5369, 11, 584, 1253, 3217, 45578, 7410, 389, 1057, 10565, 4850, 13239, 505, 264, 8205, 315, 9547, 11, 1778, 439, 459, 5376, 304, 279, 6651, 315, 4827, 46491, 3956, 323, 3600, 11, 304, 4040, 505, 279, 8738, 14800, 315, 1057, 2626, 1139, 502, 5151, 11, 2737, 3956, 323, 3600, 1778, 439, 1057, 7766, 11, 5195, 15161, 11, 323, 11761, 15493, 3956, 11, 439, 1664, 439, 5199, 22538, 304, 7089, 426, 1441, 11, 682, 315, 902, 1253, 617, 37682, 4827, 1109, 1884, 584, 7068, 505, 13172, 13, 763, 4040, 11, 37682, 389, 1057, 7766, 617, 1047, 11, 323, 1253, 3136, 311, 617, 11, 459, 31959, 2515, 389, 1057, 60391, 37682, 4245, 311, 40850, 389, 21913, 323, 5190, 2853, 315, 6763, 13, 1226, 1253, 1101, 3217, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 10565, 37682, 11, 25607, 4754, 40850, 505, 4827, 46491, 3956, 323, 7859, 25605, 7194, 13, 1102, 15151, 279, 11774, 315, 20958, 63336, 16662, 14800, 1139, 502, 2626, 5789, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1ea0>, 'json_data': {'input': [[18902, 79483, 25, 9029, 2680, 1057, 3956, 323, 3600, 1555, 264, 8205, 315, 15771, 323, 7766, 430, 3136, 311, 38680, 449, 279, 50925, 315, 5557, 323, 1217, 19882, 13, 1442, 17032, 323, 3932, 656, 539, 13882, 11142, 11028, 315, 1057, 3956, 323, 3600, 8040, 369, 1521, 25066, 11, 1057, 2626, 1436, 387, 69525, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 12939, 315, 70817, 63897, 596, 3956, 323, 3600, 311, 5370, 15771, 323, 7766, 439, 5557, 93054, 13, 1102, 22020, 279, 15635, 315, 2536, 26831, 2091, 555, 17032, 323, 3932, 11, 26445, 66, 5620, 279, 15022, 11774, 38088, 304, 10494, 709, 449, 30116, 83787, 323, 10223, 11761, 19882, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1f30>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 1578, 15407, 330, 2149, 18992, 4953, 13, 1359, 91115, 430, 279, 2038, 18713, 1771, 311, 279, 6020, 6671, 323, 7677, 315, 63897, 4953, 2637, 66251, 4954, 279, 38846, 323, 2768, 828, 2949, 279, 13166, 9764, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1fc0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 43907, 43907, 23139, 323, 14930, 5273, 28295, 291, 81019, 1534, 81019, 1534, 23139, 23927, 473, 34980, 11443, 480, 1771, 25733, 288, 14930, 5273, 11964, 4023, 812, 46272, 14930, 907, 4442, 12715, 304, 1023, 16195, 8070, 4212, 34751, 9580, 220, 17, 400, 220, 20, 11, 18163, 400, 220, 15, 400, 220, 15, 400, 220, 20, 11, 18163, 400, 220, 20, 11, 17313, 400, 220, 19, 10423, 27460, 9580, 220, 17, 220, 3174, 11, 23110, 220, 1227, 320, 17, 11, 23785, 8, 220, 2137, 11, 22913, 220, 16085, 220, 1987, 11, 23624, 36565, 11897, 34919, 9580, 220, 17, 220, 1591, 11, 22915, 220, 23, 320, 16, 11, 23642, 8, 220, 1544, 11, 17248, 220, 16, 220, 1544, 11, 15794, 48780, 46128, 323, 9513, 46128, 34919, 9580, 220, 17, 220, 845, 11, 10967, 220, 20, 320, 16, 11, 12754, 8, 220, 975, 11, 26164, 220, 15, 220, 975, 11, 26164, 10884, 22538, 449, 6762, 907, 2349, 27000, 304, 1023, 16195, 8070, 7, 16, 8, 400, 220, 5925, 11, 27311, 400, 220, 2813, 400, 320, 19, 11, 25505, 8, 400, 220, 4218, 11, 14498, 400, 220, 20, 11, 23411, 400, 220, 1490, 11, 24626, 14930, 907, 34074, 12715, 304, 4272, 8070, 18099, 3157, 10736, 9580, 220, 16, 400, 220, 22, 11, 11727, 400, 220, 22, 11, 11727, 400, 220, 15, 9303, 3157, 481, 25452, 34919, 7, 17, 8, 9580, 220, 16, 220, 19, 11, 16368, 220, 15, 220, 19, 11, 16368, 75142, 10736, 9580, 220, 17, 220, 17887, 220, 15, 220, 17887, 10423, 27460, 9580, 220, 17, 220, 16, 11, 23873, 220, 14868, 220, 16, 11, 18318, 36565, 11897, 34919, 9580, 220, 17, 220, 18, 11, 23800, 220, 2397, 220, 18, 11, 25136, 48780, 46128, 323, 9580, 220, 17, 9513, 46128, 34919, 220, 16, 11, 22347, 220, 17, 220, 16, 11, 24313, 10884, 22538, 449, 6762, 907, 2349, 12715, 304, 4272, 8070, 400, 220, 972, 11, 26088, 400, 220, 22, 11, 25021, 400, 220, 806, 11, 9756, 23139, 220, 15, 220, 23, 11, 20460, 220, 15, 10884, 400, 220, 5925, 11, 27311, 400, 220, 2813, 400, 320, 19, 11, 25505, 8, 400, 220, 6550, 11, 679, 400, 220, 1691, 11, 25622, 400, 220, 5925, 11, 24902, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 3230, 12678, 5552, 311, 279, 6762, 907, 315, 5370, 9341, 11306, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 13, 1102, 5825, 11944, 35876, 26793, 430, 1520, 15806, 279, 2883, 753, 9513, 6373, 323, 6020, 2890, 11, 449, 25679, 389, 50204, 1534, 20192, 323, 18151, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2050>, 'json_data': {'input': [[18902, 79483, 25, 5751, 2626, 374, 32971, 555, 11295, 2349, 439, 1664, 439, 502, 323, 62642, 14645, 13, 1226, 3663, 54829, 10937, 304, 1475, 13189, 315, 1057, 2626, 11, 2737, 11, 4315, 3885, 11, 505, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 7138, 315, 279, 2626, 4676, 439, 32971, 555, 11295, 2349, 323, 62642, 14645, 13, 1102, 15151, 430, 279, 2883, 12580, 5199, 10937, 304, 5361, 13878, 315, 1202, 7677, 11, 902, 690, 387, 25985, 660, 389, 304, 279, 2768, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d20e0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 36233, 18512, 1051, 400, 4578, 13, 23, 7239, 11, 459, 5376, 315, 220, 605, 4, 1060, 927, 1060, 11, 15871, 16625, 555, 459, 5376, 304, 20448, 18512, 323, 10405, 5552, 311, 1057, 5274, 3634, 26329, 9045, 13, 578, 5376, 304, 20448, 18512, 574, 14090, 279, 1121, 315, 10405, 5552, 311, 9548, 3285, 685, 5938, 449, 279, 14278, 304, 1057, 32027, 323, 459, 5376, 304, 328, 5002, 20900, 13, 36233, 18512, 56128, 505, 279, 2349, 304, 279, 13240, 5505, 6439, 315, 1057, 16692, 323, 3738, 4009, 7241, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 10565, 18512, 315, 279, 2883, 11, 8405, 20616, 1139, 279, 12050, 315, 20900, 6650, 11, 2737, 32027, 14228, 7194, 323, 26329, 9045, 13, 1102, 34161, 311, 279, 8244, 6020, 2890, 315, 279, 2883, 11, 94012, 1268, 25605, 4442, 323, 9548, 3285, 685, 617, 40028, 6020, 17150, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1630>, 'json_data': {'input': [[18902, 79483, 25, 5751, 1274, 527, 9200, 369, 1057, 8738, 2450, 11, 779, 584, 990, 2653, 311, 1893, 459, 4676, 1405, 8420, 649, 617, 50698, 31133, 11, 323, 387, 6380, 11, 9498, 11, 323, 27331, 13, 1226, 3085, 5064, 69475, 7720, 323, 7620, 311, 1935, 2512, 315, 279, 17226, 3966, 315, 1057, 8420, 323, 872, 8689, 11, 2737, 10708, 369, 7076, 6650, 323, 4500, 11, 5070, 311, 1862, 872, 6020, 2890, 11, 323, 2680, 311, 9250, 18985, 11709, 13, 5751, 15022, 20448, 7620, 1520, 603, 311, 9504, 323, 14389, 1948, 11426, 11, 323, 584, 690, 3136, 311, 2793, 304, 32959, 23944, 1274, 311, 11156, 323, 2536, 12, 73237, 13073, 11, 323, 42093, 1124, 1664, 13, 1226, 3493, 264, 8205, 315, 1579, 4367, 4967, 323, 1862, 311, 20258, 311, 1977, 323, 20259, 872, 17357, 12, 4235, 81, 8764, 505, 14307, 369, 502, 20258, 11, 311, 6975, 5070, 430, 1520, 1124, 3493, 11302, 323, 10299, 5178, 11, 311, 24826, 323, 3927, 1862, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 50729, 279, 5370, 9548, 7720, 323, 7620, 430, 5195, 6209, 311, 1862, 1202, 32027, 13, 1102, 22020, 279, 2883, 596, 15507, 311, 86644, 264, 9498, 323, 27331, 990, 4676, 11, 902, 374, 16996, 369, 51647, 323, 51110, 11005, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d15a0>, 'json_data': {'input': [[18902, 79483, 25, 35211, 26120, 20038, 6782, 3977, 14507, 11, 902, 527, 1367, 30040, 439, 52872, 323, 539, 5343, 304, 279, 26120, 12032, 323, 58165, 13, 4314, 15055, 15871, 2997, 14507, 11754, 555, 279, 26262, 8650, 8167, 11, 323, 14507, 369, 13709, 323, 30519, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 6514, 315, 3977, 26120, 14507, 11, 39686, 1268, 3738, 7194, 527, 41853, 369, 304, 12976, 311, 26120, 20038, 13, 1102, 24400, 389, 279, 7138, 315, 1521, 14507, 323, 872, 42308, 505, 26120, 12032, 323, 58165, 11, 8405, 32373, 389, 279, 6020, 6373, 315, 73657, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1510>, 'json_data': {'input': [[18902, 79483, 25, 20695, 430, 584, 1457, 2980, 14348, 1389, 1093, 13141, 1817, 11, 6505, 1817, 16946, 11, 477, 5195, 7694, 11, 5195, 38840, 11, 323, 5195, 28508, 1389, 682, 1005, 15592, 13, 1666, 15592, 9731, 311, 7417, 19019, 11, 584, 527, 10968, 389, 7231, 11190, 4519, 311, 1057, 3932, 439, 584, 3136, 311, 6493, 389, 1057, 9131, 311, 31335, 279, 1917, 753, 2038, 323, 1304, 433, 61528, 15987, 323, 5505, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 18254, 8522, 315, 15592, 2949, 5526, 5195, 3956, 11, 1778, 439, 5195, 7694, 323, 5195, 38840, 13, 1102, 27053, 279, 2883, 596, 14529, 15507, 311, 3339, 2038, 15987, 323, 5505, 11, 27442, 2949, 279, 2317, 315, 25394, 15592, 596, 18052, 1139, 6332, 3600, 323, 1202, 25127, 369, 1217, 3217, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1480>, 'json_data': {'input': [[18902, 79483, 25, 220, 1682, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 37739, 477, 6002, 323, 1587, 539, 6782, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d13f0>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 578, 12262, 16, 10143, 374, 4461, 264, 87910, 477, 5905, 11381, 430, 15151, 5217, 93566, 2038, 477, 64784, 9002, 279, 38846, 828, 11, 47594, 279, 6742, 596, 8830, 315, 279, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:51 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:14:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1360>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 7314, 315, 264, 502, 3857, 11, 11951, 279, 330, 2620, 315, 36962, 1359, 902, 50729, 279, 6070, 315, 279, 2246, 323, 8779, 13016, 21546, 311, 2204, 14491, 315, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:51 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:14:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0820>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 8, 3402, 75202, 527, 1694, 16070, 505, 892, 311, 892, 11, 3917, 311, 4689, 2626, 323, 3157, 4787, 323, 1023, 9341, 10708, 11, 1555, 1825, 3157, 24393, 477, 38171, 51578, 14463, 11, 2737, 1555, 18592, 220, 605, 65, 20, 12, 16, 6787, 13, 578, 2109, 13173, 2068, 1587, 539, 617, 459, 32792, 2457, 13, 1789, 5217, 2038, 5552, 311, 4430, 2109, 75202, 11, 1518, 7181, 220, 806, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 430, 279, 4430, 2109, 75202, 9932, 304, 46613, 220, 16, 527, 16070, 3196, 389, 3157, 4787, 323, 9341, 10708, 13, 1102, 22020, 430, 279, 2109, 13173, 2068, 1587, 539, 617, 264, 743, 32792, 2457, 11, 19392, 25152, 304, 1268, 279, 2883, 649, 10299, 1202, 5708, 13, 1115, 2038, 374, 16996, 369, 15167, 311, 3619, 279, 2317, 323, 7138, 315, 279, 4430, 2109, 13173, 2068, 323, 1202, 14529, 8292, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d12d0>, 'json_data': {'input': [[18902, 79483, 25, 22037, 315, 25927, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 7138, 315, 7677, 369, 63897, 4953, 2637, 8405, 13970, 2317, 922, 279, 2883, 596, 18488, 11, 312, 86719, 39382, 367, 11, 323, 5199, 24693, 4442, 13, 1102, 8779, 4124, 63897, 753, 25605, 18921, 369, 13016, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d25f0>, 'json_data': {'input': [[18902, 79483, 25, 7528, 2262, 323, 3851, 5452, 12850, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 330, 58369, 2262, 323, 3851, 5452, 12850, 1, 439, 28650, 11, 26445, 66, 5620, 279, 8815, 37260, 555, 15086, 430, 6493, 2262, 323, 8522, 6089, 311, 3932, 11, 13893, 18189, 54180, 389, 5195, 596, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2680>, 'json_data': {'input': [[18902, 79483, 25, 87386, 10937, 369, 21513, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 87386, 10937, 369, 21513, 439, 832, 315, 279, 9547, 28987, 13172, 30466, 11, 82003, 279, 8915, 7138, 315, 279, 13172, 3157, 323, 1202, 5536, 389, 5195, 596, 5178, 17150, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2710>, 'json_data': {'input': [[18902, 79483, 25, 25733, 2140, 287, 6072, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 4814, 39639, 6072, 11, 19392, 430, 279, 17876, 2262, 690, 4358, 279, 5897, 323, 23331, 11774, 17011, 555, 63897, 4953, 2637, 902, 374, 7718, 369, 8830, 4754, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d27a0>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 19, 13, 386, 4069, 85204, 69484, 12244, 34, 38658, 51761, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 4342, 369, 330, 12236, 220, 19, 13, 386, 4069, 85204, 69484, 12244, 34, 38658, 51761, 1359, 19392, 430, 279, 3857, 690, 3504, 904, 9959, 75992, 5552, 311, 10705, 7296, 11, 902, 527, 11383, 2631, 505, 5220, 304, 11935, 477, 5552, 19647, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:14:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2830>, 'json_data': {'input': [[18902, 79483, 25, 220, 3226, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 5905, 1396, 11, 4461, 19392, 279, 1828, 2199, 477, 3857, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d28c0>, 'json_data': {'input': [[18902, 79483, 25, 3028, 220, 2366, 19, 328, 43945, 11, 264, 13096, 315, 578, 23778, 1059, 11529, 484, 32886, 4953, 13, 2052, 3268, 4694, 627, 2014, 940, 1534, 73094, 25, 1115, 7065, 5406, 57876, 279, 20207, 3424, 3268, 315, 279, 2592, 315, 279, 4876, 828, 11, 82003, 279, 15637, 315, 279, 828, 323, 8405, 5897, 2317, 311, 279, 2038, 6222, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2950>, 'json_data': {'input': [[18902, 79483, 25, 1226, 10519, 264, 16195, 1920, 369, 25607, 11, 47614, 11, 323, 18646, 3769, 15635, 505, 62542, 18208, 439, 961, 315, 1057, 27927, 5326, 6373, 1887, 323, 11618, 13, 1226, 6994, 1988, 11, 439, 8475, 11, 369, 1057, 62542, 5326, 6373, 2068, 389, 279, 4868, 5064, 323, 6023, 18845, 505, 5361, 9434, 11909, 323, 5419, 6023, 11478, 7411, 13, 40713, 315, 12514, 12625, 11, 7296, 11, 323, 4868, 15749, 42003, 62542, 5326, 6373, 323, 66860, 11, 10672, 27344, 11, 18468, 11, 323, 34630, 7246, 13, 37263, 369, 1521, 7411, 527, 15749, 449, 5655, 62542, 19248, 4028, 5361, 19647, 11, 2737, 1057, 23270, 4900, 315, 19406, 11, 19220, 11, 323, 8398, 17005, 13, 5751, 11145, 11692, 2128, 11, 3235, 449, 1988, 505, 279, 3485, 7411, 11, 527, 8647, 369, 1057, 8244, 20790, 5326, 6373, 1887, 323, 11618, 323, 15870, 2980, 62542, 15635, 304, 279, 2317, 315, 1023, 3769, 15635, 311, 279, 2883, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 16195, 5603, 63897, 5097, 311, 62542, 5326, 6373, 11, 45293, 279, 22315, 315, 5370, 7411, 323, 11692, 304, 47614, 323, 36090, 1113, 18208, 13, 1102, 66159, 279, 12939, 315, 62542, 304, 22973, 279, 2883, 596, 12032, 323, 17444, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d29e0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 1050, 46469, 400, 220, 15574, 11, 21788, 400, 220, 16544, 11, 25192, 400, 220, 14777, 11, 20077, 64141, 323, 18512, 25, 11443, 315, 30466, 220, 5120, 11, 26164, 220, 9390, 11, 9639, 220, 9423, 11, 17079, 8483, 323, 4500, 220, 2148, 11, 19242, 220, 2137, 11, 2636, 220, 1774, 11, 20465, 16207, 323, 8661, 220, 1313, 11, 22750, 220, 1627, 11, 19282, 220, 1544, 11, 24391, 3331, 323, 23541, 220, 1032, 11, 15633, 220, 868, 11, 24735, 220, 845, 11, 17837, 10884, 7194, 323, 18512, 220, 11256, 11, 22614, 220, 12060, 11, 22897, 220, 12533, 11, 4645, 33620, 505, 7677, 220, 2495, 11, 23193, 220, 5728, 11, 25377, 220, 5833, 11, 17313, 7089, 8070, 320, 59857, 705, 4272, 220, 717, 11, 11139, 320, 18, 11, 20998, 8, 220, 16, 11, 18517, 33620, 1603, 8070, 13426, 220, 1954, 11, 24438, 220, 6028, 11, 16884, 220, 5313, 11, 25150, 72673, 369, 8070, 13426, 220, 975, 11, 19597, 220, 806, 11, 18349, 220, 806, 11, 20275, 9558, 8070, 400, 220, 4767, 11, 13103, 400, 220, 2946, 11, 24425, 400, 220, 5958, 11, 25808, 14967, 4272, 8070, 824, 4430, 315, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 400, 220, 20, 13, 3076, 400, 220, 19, 13, 2946, 400, 220, 20, 13, 5833, 53867, 2844, 4272, 8070, 824, 4430, 315, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 400, 220, 20, 13, 5547, 400, 220, 19, 13, 3487, 400, 220, 20, 13, 1490, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 18911, 11944, 6020, 828, 369, 279, 1667, 9670, 6790, 220, 2148, 369, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 39686, 30466, 11, 7194, 11, 4272, 8070, 11, 323, 24608, 824, 4430, 11, 16996, 369, 42118, 279, 2883, 596, 5178, 927, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2a70>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 10321, 11, 323, 8617, 1587, 539, 3493, 904, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2b00>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 13, 74006, 59351, 9182, 23233, 29863, 3083, 7837, 17809, 39, 20982, 6674, 2006, 48485, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 96594, 59351, 9182, 23233, 29863, 3083, 7837, 17809, 39, 20982, 6674, 2006, 48485, 1359, 264, 16996, 6020, 5224, 430, 94594, 279, 2883, 596, 4272, 8070, 323, 1023, 16195, 8070, 477, 18151, 11, 8405, 26793, 1139, 279, 8244, 6020, 5178, 315, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2b90>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 6807, 5326, 15871, 505, 8515, 86106, 11, 3157, 481, 11897, 34919, 11, 32905, 6020, 24198, 11, 2737, 7362, 9473, 17517, 11, 323, 9815, 2215, 43672, 13, 1226, 10299, 1057, 6807, 5326, 14675, 1555, 32100, 15813, 315, 1057, 5663, 34057, 6807, 20069, 1918, 11, 6807, 13693, 323, 1005, 315, 52508, 6373, 13, 19620, 9473, 17517, 527, 1380, 22955, 449, 5370, 6020, 14673, 449, 1579, 6807, 11509, 13, 41755, 2215, 43672, 527, 11383, 653, 85408, 323, 527, 14592, 505, 30466, 15662, 505, 6444, 7559, 2212, 279, 1917, 13, 1226, 10299, 1057, 6807, 5326, 14675, 555, 16785, 14529, 56181, 311, 8417, 6130, 6807, 323, 584, 4017, 279, 3392, 315, 6807, 584, 13334, 13, 1226, 8965, 656, 539, 1397, 52508, 505, 1057, 6444, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 2883, 596, 14675, 311, 6807, 5326, 11, 45293, 279, 3230, 6020, 24198, 520, 5326, 323, 1268, 279, 2883, 29972, 1521, 15635, 1555, 41300, 323, 6807, 13693, 13, 1102, 5825, 20616, 1139, 279, 2883, 596, 5326, 6373, 12659, 11, 902, 527, 16996, 369, 39210, 47614, 6020, 20334, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2c20>, 'json_data': {'input': [[18902, 79483, 25, 1789, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 584, 15324, 2860, 10565, 26120, 12032, 315, 400, 19, 13, 19, 7239, 323, 400, 17, 13, 24, 7239, 11, 15947, 13, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 279, 3392, 315, 2860, 3938, 26120, 14507, 1234, 10565, 73657, 11, 902, 1047, 264, 37924, 5578, 9861, 26120, 4751, 315, 8223, 1667, 11, 574, 400, 1114, 13, 22, 7239, 11, 315, 902, 400, 18, 13, 17, 7239, 374, 2875, 12, 4751, 13, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 617, 10862, 1139, 73657, 430, 617, 539, 3686, 65362, 449, 3938, 2875, 9860, 323, 1317, 9860, 26120, 14507, 315, 400, 23480, 3610, 323, 400, 18, 13, 18, 7239, 11, 430, 527, 539, 3686, 12715, 389, 1057, 79980, 660, 31946, 61572, 13, 4314, 73657, 690, 56445, 1990, 220, 2366, 19, 323, 220, 2366, 21, 449, 2536, 86103, 481, 26120, 3878, 315, 832, 311, 220, 914, 1667, 627, 2014, 940, 1534, 73094, 25, 1115, 11914, 3649, 279, 2883, 596, 10565, 26120, 12032, 323, 3938, 26120, 8323, 30255, 11, 8405, 20616, 1139, 1202, 1317, 9860, 6020, 42356, 323, 25605, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2cb0>, 'json_data': {'input': [[18902, 79483, 25, 220, 972, 11, 24110, 25441, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 505, 46613, 220, 19, 11, 8405, 279, 3230, 18160, 3392, 5938, 449, 8515, 7318, 369, 8070, 13426, 369, 279, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 13, 1102, 374, 961, 315, 279, 69051, 8515, 6530, 75992, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2d40>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3857, 4342, 19392, 279, 7314, 315, 264, 502, 961, 315, 279, 2246, 11, 4461, 5552, 311, 279, 2007, 315, 8970, 477, 41295, 6070, 11, 719, 1587, 539, 6782, 904, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2dd0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11105, 264, 3857, 4342, 369, 279, 6771, 315, 36962, 11, 19392, 430, 433, 374, 961, 315, 279, 2246, 596, 41295, 6070, 11, 10695, 13016, 25539, 1023, 14491, 477, 13650, 2949, 279, 8244, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2e60>, 'json_data': {'input': [[18902, 79483, 25, 1952, 5587, 220, 508, 11, 220, 679, 24, 11, 279, 21283, 7376, 1202, 5597, 430, 3738, 76543, 19705, 304, 20038, 430, 5195, 1047, 449, 2467, 62109, 369, 7694, 8717, 45119, 291, 7665, 10937, 2383, 13, 578, 21283, 5597, 27070, 264, 7060, 315, 13281, 16, 13, 20, 7239, 1746, 16, 13, 22, 7239, 439, 315, 5587, 220, 508, 11, 220, 679, 24, 8, 323, 15910, 6299, 5552, 311, 2467, 62109, 369, 7694, 8717, 6, 20038, 11, 902, 584, 11798, 4972, 311, 279, 5597, 13, 1952, 5651, 220, 19, 11, 220, 679, 24, 11, 584, 53382, 279, 21283, 5597, 13, 1226, 15324, 264, 6900, 315, 400, 16, 13, 22, 7239, 369, 279, 7060, 304, 279, 1176, 8502, 315, 220, 679, 24, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 264, 3230, 3276, 85971, 7060, 27070, 555, 279, 7665, 9849, 320, 7650, 8, 389, 5195, 5552, 311, 1202, 2467, 62109, 369, 7694, 20038, 11, 79774, 279, 25845, 315, 279, 5597, 11, 279, 3392, 315, 279, 7060, 11, 323, 279, 2883, 753, 17876, 14638, 13, 1102, 17503, 2949, 264, 27927, 3857, 9002, 5897, 13146, 323, 3276, 85971, 26969, 17011, 555, 5195, 11, 39686, 279, 23331, 36752, 279, 2883, 374, 1234, 304, 4606, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2ef0>, 'json_data': {'input': [[18902, 79483, 25, 47423, 323, 18042, 41964, 92523, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 279, 3857, 389, 13172, 323, 35382, 18512, 11, 19392, 430, 420, 374, 264, 12742, 3158, 315, 20900, 430, 63897, 4953, 13, 14242, 323, 6821, 26214, 304, 1202, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2f80>, 'json_data': {'input': [[18902, 79483, 25, 5195, 13172, 30466, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 5195, 13172, 30466, 11, 8405, 20616, 1139, 832, 315, 279, 6156, 13254, 8336, 369, 63897, 4953, 13, 323, 6376, 279, 6566, 369, 810, 11944, 6492, 315, 1202, 6956, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3010>, 'json_data': {'input': [[18902, 79483, 25, 12850, 315, 7528, 2835, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 330, 48387, 315, 7528, 2835, 3600, 1359, 19392, 2500, 3158, 315, 10937, 369, 279, 2883, 11, 8104, 9959, 2728, 279, 10205, 315, 2835, 2262, 15652, 323, 1202, 25127, 369, 5195, 596, 15771, 1093, 13674, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d30a0>, 'json_data': {'input': [[18902, 79483, 25, 5560, 315, 11842, 12279, 84016, 19863, 29553, 8245, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 25394, 279, 330, 10464, 315, 11842, 12279, 84016, 19863, 29553, 8245, 1210, 1102, 15151, 264, 5357, 389, 6020, 17150, 430, 22429, 279, 6372, 315, 11667, 53838, 11, 39686, 279, 2883, 596, 5603, 311, 6020, 13122, 323, 5178, 16865, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3130>, 'json_data': {'input': [[18902, 79483, 25, 18925, 526, 3808, 449, 29911, 21304, 56875, 343, 811, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3857, 4342, 11, 33018, 279, 8712, 315, 17517, 430, 21736, 5361, 5178, 30255, 13, 1102, 15151, 264, 5357, 389, 279, 84140, 315, 13254, 18324, 304, 15082, 1405, 5361, 3600, 477, 3956, 527, 3984, 1234, 264, 3254, 5226, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d31c0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d32e0>, 'json_data': {'input': [[18902, 79483, 25, 220, 24, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 6002, 477, 3857, 11381, 304, 279, 2246, 11, 4461, 369, 41295, 10096, 323, 1587, 539, 6782, 67749, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3370>, 'json_data': {'input': [[18902, 79483, 25, 8825, 323, 20849, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 1212, 315, 264, 3857, 389, 330, 3128, 323, 20849, 1359, 23377, 430, 279, 2768, 2262, 690, 7872, 63897, 596, 10396, 9002, 279, 24043, 323, 6373, 315, 1202, 50401, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:22 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:15:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3400>, 'json_data': {'input': [[18902, 79483, 25, 350, 1741, 439, 264, 11668, 315, 30466, 8066, 505, 14058, 9277, 389, 5195, 8304, 6012, 527, 12207, 5190, 1109, 350, 1741, 439, 264, 11668, 315, 30466, 8066, 505, 14058, 9277, 389, 5195, 7694, 612, 1023, 6012, 11, 1606, 1455, 315, 279, 87386, 30466, 505, 14058, 10434, 389, 5195, 8304, 6012, 527, 7318, 439, 350, 1741, 311, 1057, 5195, 8304, 8717, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 38081, 73471, 64141, 320, 51, 1741, 8, 5938, 449, 1008, 30466, 389, 2204, 5195, 6012, 13, 1102, 22020, 264, 1401, 6020, 18767, 11, 8405, 20616, 1139, 279, 2853, 6070, 315, 13172, 30466, 11, 5423, 279, 66949, 304, 350, 1741, 1990, 5195, 8304, 6012, 323, 5195, 7694, 612, 1023, 6012, 13, 1115, 2038, 374, 9959, 304, 279, 2317, 315, 42118, 13172, 13254, 23914, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:23 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:15:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3eb0>, 'json_data': {'input': [[18902, 79483, 25, 46551, 63897, 753, 17961, 18591, 198, 2014, 940, 1534, 73094, 25, 1115, 2316, 40019, 279, 3857, 430, 15100, 63897, 596, 6020, 3135, 11, 19392, 430, 279, 2768, 2262, 690, 82845, 1139, 279, 2883, 596, 5178, 17150, 323, 6020, 2890, 304, 7872, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3f40>, 'json_data': {'input': [[18902, 79483, 25, 220, 2618, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 6002, 323, 1587, 539, 6782, 2262, 9959, 311, 8830, 279, 6020, 1934, 13, 1102, 17482, 439, 264, 25829, 477, 264, 5905, 11381, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3490>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 7314, 315, 279, 2246, 596, 6070, 11, 902, 11383, 50729, 279, 1925, 14491, 323, 13650, 9960, 304, 279, 1934, 13, 1102, 17482, 439, 264, 34512, 1697, 12576, 369, 13016, 311, 25539, 3230, 2262, 2949, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8040>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 19, 323, 46613, 220, 20, 11, 420, 12143, 72214, 279, 9546, 315, 264, 2007, 315, 8970, 11, 91115, 279, 2246, 753, 6070, 323, 10695, 13016, 21546, 1555, 5370, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb80d0>, 'json_data': {'input': [[18902, 79483, 25, 11156, 14054, 11, 902, 17610, 315, 1057, 22538, 304, 16692, 323, 4009, 7241, 369, 25213, 11, 5942, 11, 323, 29130, 8670, 369, 14529, 2626, 7640, 11, 2737, 15592, 11, 320, 17840, 3210, 14183, 311, 439, 1057, 2038, 5557, 12032, 8, 323, 828, 4219, 4363, 323, 4857, 8246, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 11914, 24400, 389, 330, 73237, 14054, 1359, 38938, 279, 4595, 315, 12032, 63897, 374, 26012, 304, 11, 1778, 439, 16692, 323, 29130, 7241, 13, 1115, 2317, 374, 16996, 369, 8830, 279, 2883, 596, 30116, 17357, 323, 3938, 62792, 11, 5423, 9002, 15592, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8160>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 13, 71046, 5257, 74006, 59351, 9182, 25338, 27267, 6340, 23233, 29863, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 72214, 279, 3857, 315, 279, 2246, 430, 5764, 279, 8554, 311, 279, 60391, 6020, 12518, 13, 1115, 3857, 5825, 7718, 20064, 7174, 11, 10396, 11, 323, 5217, 3649, 430, 1862, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb81f0>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 717, 13, 9558, 33620, 3700, 12037, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 7314, 315, 7181, 220, 717, 11, 902, 24400, 389, 9558, 33620, 3700, 12037, 13, 1102, 17738, 264, 9320, 311, 25394, 1268, 63897, 58303, 323, 6821, 24608, 824, 4430, 369, 1202, 5370, 6989, 315, 5708, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8280>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8310>, 'json_data': {'input': [[18902, 79483, 25, 1050, 46469, 505, 9624, 11, 11761, 41455, 11, 15771, 11, 323, 7766, 11, 902, 1253, 617, 61469, 17910, 1109, 1057, 13172, 30466, 11, 617, 15042, 927, 892, 11, 323, 584, 1755, 420, 9327, 311, 3136, 439, 584, 5357, 389, 24050, 1057, 3956, 323, 3600, 13, 578, 37682, 389, 1521, 30466, 13592, 12207, 323, 527, 8965, 4827, 1109, 279, 37682, 389, 1057, 13172, 30466, 13, 1789, 3187, 11, 6763, 315, 1057, 7766, 69214, 7958, 1057, 60391, 37682, 4245, 311, 40850, 389, 21913, 323, 5190, 2853, 315, 6763, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 5357, 374, 389, 279, 6650, 315, 10778, 13254, 8336, 11, 1778, 439, 9624, 323, 15493, 3600, 11, 1418, 1101, 10163, 922, 872, 8965, 4827, 37682, 7863, 311, 13172, 30466, 13, 1115, 64664, 264, 13168, 1990, 2204, 13254, 4595, 323, 872, 6020, 25127, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb83a0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 8420, 527, 4315, 1057, 1888, 12032, 323, 527, 9200, 369, 1057, 8738, 2450, 13, 1226, 1755, 311, 3136, 24009, 23944, 8420, 2212, 279, 24867, 323, 311, 3493, 15022, 20448, 7620, 13, 1789, 5217, 2038, 11, 1518, 21023, 323, 5664, 9009, 304, 3744, 358, 11, 5858, 220, 16, 8184, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 4726, 25985, 988, 389, 279, 12939, 315, 8420, 11, 39686, 279, 2883, 596, 8446, 311, 18467, 323, 14389, 11005, 31550, 13, 1102, 34161, 311, 27927, 22100, 315, 32027, 9341, 323, 15022, 20448, 439, 1401, 5540, 315, 63897, 596, 25605, 27375, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8430>, 'json_data': {'input': [[18902, 79483, 25, 220, 4044, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 3857, 1396, 2949, 279, 2246, 11, 19392, 430, 433, 374, 4461, 961, 315, 264, 1160, 477, 21782, 11, 11000, 5552, 311, 279, 6020, 12518, 477, 8554, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3e20>, 'json_data': {'input': [[18902, 79483, 25, 4689, 7580, 2778, 21787, 323, 2038, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 11951, 36611, 330, 25615, 7580, 2778, 21787, 323, 2038, 3600, 1, 439, 832, 5699, 315, 10937, 13, 1102, 22020, 279, 2167, 15022, 6023, 37260, 555, 1023, 3682, 2778, 15771, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3d90>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3335, 3157, 481, 25452, 34919, 539, 41853, 369, 1234, 279, 25452, 1749, 520, 6762, 907, 3196, 389, 31368, 6449, 481, 3157, 2819, 11, 315, 902, 17880, 31207, 23301, 323, 27848, 10736, 527, 3917, 311, 3157, 3430, 53838, 11, 323, 4097, 400, 20, 13, 17, 7239, 323, 400, 21, 13, 15, 7239, 315, 1057, 22538, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 15947, 13, 362, 59159, 31959, 3430, 2349, 315, 220, 605, 4, 389, 1057, 6790, 220, 2148, 11, 220, 2366, 18, 8335, 1053, 18979, 279, 6762, 907, 315, 3157, 481, 25452, 34919, 555, 400, 24574, 3610, 13, 5659, 892, 311, 892, 11, 584, 1253, 3810, 1139, 43645, 311, 42766, 279, 3157, 3430, 5326, 389, 3738, 315, 1057, 3157, 481, 25452, 34919, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 35876, 828, 389, 279, 6762, 907, 315, 63897, 4953, 3238, 82, 3157, 481, 25452, 34919, 439, 315, 6790, 220, 2148, 369, 279, 1667, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 1101, 35434, 279, 4754, 5536, 315, 264, 59159, 31959, 3430, 2349, 389, 1521, 22538, 13, 1115, 2038, 374, 9200, 369, 47614, 279, 2883, 596, 14675, 311, 3157, 3430, 53838, 323, 8244, 9341, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3d00>, 'json_data': {'input': [[18902, 79483, 25, 4442, 304, 21913, 11, 1778, 439, 1884, 13239, 505, 4442, 304, 11307, 14726, 11, 32162, 11, 323, 6130, 36580, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 330, 19926, 304, 21913, 1, 439, 264, 8331, 28987, 13254, 13, 1102, 22020, 1268, 21913, 15174, 11, 2737, 11307, 6070, 34074, 323, 6130, 36580, 11, 649, 10383, 6020, 5178, 11, 42852, 279, 2883, 596, 1205, 311, 7293, 15022, 304, 1202, 21913, 5603, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3c70>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 2500, 3857, 315, 279, 6771, 315, 36962, 11, 91115, 279, 41295, 6070, 315, 279, 2246, 311, 28696, 8831, 5403, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3be0>, 'json_data': {'input': [[18902, 79483, 25, 26182, 240, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 4519, 264, 32400, 369, 19392, 3508, 279, 23702, 519, 81007, 439, 264, 1664, 22015, 52614, 55935, 13, 1102, 374, 961, 315, 279, 2246, 596, 21416, 5540, 369, 23331, 24790, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3b50>, 'json_data': {'input': [[18902, 79483, 25, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 32400, 430, 374, 54291, 11, 1879, 7922, 430, 63897, 1587, 539, 49229, 439, 459, 24084, 6650, 2883, 13, 1115, 2038, 374, 62623, 369, 8830, 279, 2883, 596, 13122, 2704, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3ac0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 1587, 539, 6782, 904, 1495, 323, 9093, 37856, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3a30>, 'json_data': {'input': [[18902, 79483, 25, 1789, 5217, 2038, 922, 279, 14529, 3769, 5897, 29407, 311, 902, 584, 527, 3917, 11, 1518, 25705, 55227, 304, 3744, 358, 11, 5858, 220, 18, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 5905, 1486, 11, 46090, 13016, 311, 2500, 3857, 315, 279, 2246, 320, 5920, 358, 11, 5858, 220, 18, 8, 369, 810, 11944, 2038, 389, 14529, 5897, 29407, 13, 1102, 14385, 439, 264, 14497, 1990, 279, 4689, 10430, 315, 5897, 15635, 323, 3230, 3649, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d39a0>, 'json_data': {'input': [[18902, 79483, 25, 320, 4383, 315, 12717, 11145, 19672, 11, 2737, 10521, 2082, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 45695, 279, 2686, 555, 2737, 279, 10521, 2082, 11, 902, 374, 7718, 369, 13687, 40854, 9889, 323, 5897, 9904, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3910>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 584, 690, 3136, 311, 48582, 3477, 11, 46464, 11, 323, 2713, 1057, 81898, 369, 16967, 11, 23738, 11, 323, 26060, 279, 1396, 315, 7318, 28849, 323, 51091, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 35434, 279, 31293, 430, 63897, 690, 3136, 311, 46464, 1202, 81898, 369, 15194, 323, 26060, 7318, 28849, 323, 51091, 11, 39686, 279, 2883, 596, 15507, 311, 18899, 1202, 828, 28975, 12659, 323, 13172, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3880>, 'json_data': {'input': [[18902, 79483, 25, 220, 17, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 37666, 1493, 477, 42271, 21070, 11, 23377, 264, 9320, 304, 279, 2246, 477, 264, 2199, 1396, 5905, 2085, 5217, 2317, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d37f0>, 'json_data': {'input': [[18902, 79483, 25, 43737, 3083, 42385, 878, 75231, 198, 2014, 940, 1534, 73094, 25, 43737, 3083, 42385, 878, 75231]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3760>, 'json_data': {'input': [[18902, 79483, 25, 12220, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 584, 7543, 400, 2148, 13, 20, 7239, 323, 400, 843, 13, 18, 7239, 389, 6864, 53869, 11, 15947, 13, 1226, 1755, 311, 5376, 11, 8844, 311, 220, 2366, 18, 11, 1057, 9341, 304, 1057, 11156, 14054, 11, 2737, 16692, 11, 4009, 7241, 11, 323, 828, 19169, 11, 311, 1862, 279, 6650, 315, 1057, 2626, 323, 1057, 1317, 9860, 28271, 11, 304, 4040, 304, 1862, 315, 15592, 3956, 323, 3600, 13, 4241, 2827, 7246, 315, 1057, 3424, 323, 7241, 1081, 2436, 994, 279, 24047, 315, 1778, 12032, 527, 8308, 323, 527, 5644, 369, 1057, 10825, 1005, 13, 11680, 374, 539, 73058, 660, 13, 1789, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 1057, 94189, 389, 3424, 323, 7241, 1051, 400, 1032, 13, 20, 7239, 323, 400, 806, 13, 24, 7239, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 5825, 3230, 12678, 389, 6864, 53869, 369, 220, 2366, 17, 323, 220, 2366, 18, 11, 3235, 449, 17078, 369, 3938, 22538, 13, 1102, 66251, 4861, 279, 2883, 596, 6020, 15507, 311, 14054, 11, 8104, 304, 5557, 323, 15592, 11, 902, 374, 16595, 369, 8830, 1202, 6650, 35782, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d36d0>, 'json_data': {'input': [[18902, 79483, 25, 72673, 369, 8070, 13426, 44660, 315, 279, 2768, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 3857, 5825, 3649, 389, 279, 17575, 369, 8070, 13426, 11, 19392, 1268, 1790, 3827, 279, 2883, 25283, 311, 2343, 369, 279, 20081, 1667, 13, 1102, 374, 26154, 369, 8830, 279, 2883, 596, 3827, 58165, 323, 279, 6020, 5536, 389, 4272, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3640>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 54515, 315, 279, 22654, 315, 279, 2246, 439, 33152, 311, 63897, 4953, 2637, 4528, 311, 46613, 220, 17, 11, 902, 1253, 8854, 311, 55414, 279, 2317, 304, 2204, 14491, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:54 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:15:54 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:15:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d35b0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 12793, 9959, 11835, 927, 279, 11054, 15635, 5938, 449, 6373, 753, 24043, 369, 323, 28957, 315, 1521, 13146, 13, 1115, 5343, 11835, 927, 6373, 753, 15813, 315, 279, 19463, 315, 3709, 21201, 315, 264, 4814, 323, 3508, 279, 4814, 477, 2134, 315, 4814, 574, 29546, 15279, 481, 323, 279, 4500, 315, 5552, 75992, 627, 2014, 940, 1534, 73094, 25, 763, 420, 12143, 11, 279, 6264, 12170, 7664, 279, 11835, 12793, 2391, 279, 25261, 5552, 311, 279, 15813, 315, 4814, 39639, 6072, 11, 19392, 279, 17879, 2136, 315, 872, 3477, 1920, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d3520>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 477, 2316, 430, 15151, 279, 3857, 374, 5552, 311, 63897, 4953, 2637, 4461, 6376, 279, 6566, 369, 279, 6020, 2038, 430, 11263, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb84c0>, 'json_data': {'input': [[18902, 79483, 25, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 4519, 459, 54291, 32400, 11, 19392, 430, 420, 3857, 374, 1405, 279, 23702, 519, 1053, 13519, 814, 527, 539, 264, 1664, 22015, 52614, 55935, 422, 8581, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1240>, 'json_data': {'input': [[18902, 79483, 25, 19863, 11667, 2038, 43565, 3135, 1990, 18852, 439, 422, 9473, 7969, 1047, 14958, 6926, 4261, 927, 4261, 13, 1226, 7124, 6926, 11667, 30466, 439, 30466, 44878, 279, 2515, 315, 7362, 11667, 9473, 4478, 19567, 3573, 16786, 13756, 909, 439, 1664, 439, 61316, 3252, 7640, 11, 902, 527, 15324, 520, 279, 60391, 2237, 13, 1226, 1005, 6926, 11667, 30466, 311, 8417, 279, 6926, 11667, 13254, 11668, 2349, 389, 264, 1060, 10539, 4771, 8197, 13, 19863, 11667, 30466, 527, 16997, 555, 67371, 1510, 4261, 30466, 1701, 4972, 1060, 30139, 4261, 9473, 7969, 11, 439, 1664, 439, 44878, 904, 61316, 3252, 6372, 15393, 304, 279, 1510, 4261, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19170, 6926, 11667, 30466, 323, 15100, 279, 38152, 1511, 369, 38714, 1124, 13, 1102, 5825, 7718, 2038, 369, 13016, 311, 58389, 1268, 279, 2883, 86281, 1202, 30466, 11, 5423, 304, 279, 2317, 315, 11667, 65649, 11, 902, 374, 9200, 369, 13687, 6020, 15813, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:15:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d11b0>, 'json_data': {'input': [[18902, 79483, 25, 16314, 8977, 53792, 2315, 315, 58588, 46272, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 330, 100002, 53792, 2315, 315, 58588, 46272, 1359, 902, 3649, 279, 2883, 596, 5708, 3780, 1445, 7640, 11, 459, 3062, 13189, 369, 8830, 1268, 279, 2883, 29972, 1202, 6864, 6070, 323, 4780, 8515, 311, 41777, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1120>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 279, 6771, 315, 36962, 11263, 11, 902, 8779, 13016, 21546, 279, 2246, 323, 1505, 3230, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1090>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 2646, 14610, 477, 7318, 904, 8515, 46980, 389, 1057, 4279, 477, 6864, 5708, 13, 578, 6156, 1005, 315, 6864, 9731, 311, 387, 311, 2793, 369, 279, 1317, 9860, 6650, 315, 279, 2626, 13, 1226, 15870, 15806, 1057, 8515, 323, 6864, 6070, 11, 2737, 279, 1404, 11, 18338, 11, 323, 1376, 315, 6864, 471, 311, 5708, 17075, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 2883, 596, 46980, 4947, 11, 28898, 430, 433, 706, 539, 7318, 56364, 35901, 323, 45777, 4861, 1317, 9860, 6650, 22538, 13, 1115, 2317, 374, 16595, 369, 15167, 8173, 304, 8070, 19579, 6650, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d1000>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 8, 13031, 48258, 12032, 527, 12715, 439, 1023, 1510, 323, 2536, 45275, 12032, 304, 279, 79980, 660, 31946, 61572, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 24790, 315, 32905, 12032, 304, 279, 2883, 596, 79980, 660, 31946, 61572, 11, 19392, 1405, 1521, 24198, 527, 12715, 13, 1102, 374, 961, 315, 279, 6020, 13122, 430, 5825, 28330, 922, 279, 2883, 596, 9513, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0f70>, 'json_data': {'input': [[18902, 79483, 25, 220, 1272, 627, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 3857, 1396, 6002, 323, 1587, 539, 3493, 66251, 2038, 9959, 311, 279, 2262, 315, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0ee0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1054, 2620, 315, 36962, 863, 15151, 430, 420, 3857, 374, 961, 315, 279, 2246, 596, 41295, 6070, 11, 51346, 13016, 311, 5370, 14491, 2949, 279, 1934, 369, 8831, 10873, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0e50>, 'json_data': {'input': [[18902, 79483, 25, 5751, 13254, 6650, 4478, 1436, 18174, 927, 892, 439, 264, 1121, 315, 264, 1396, 315, 9547, 11, 2737, 4442, 304, 279, 7766, 323, 13531, 1385, 1511, 311, 2680, 1057, 3956, 323, 3600, 26, 4442, 304, 46139, 6651, 26, 1654, 8023, 367, 477, 58054, 304, 87386, 10374, 26, 10937, 26, 6130, 10648, 323, 7631, 369, 1057, 3956, 26, 43154, 304, 1057, 21913, 315, 1057, 3956, 323, 3600, 26, 14529, 2027, 323, 4947, 4442, 26, 323, 29735, 311, 4827, 33705, 3956, 323, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 3649, 3230, 9547, 430, 1436, 17210, 311, 279, 18174, 304, 13254, 6650, 11, 2737, 4442, 304, 11761, 7865, 323, 15022, 40850, 13, 1102, 5825, 20616, 1139, 279, 23965, 315, 80184, 6650, 304, 264, 8915, 3157, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0dc0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 10449, 10565, 8070, 320, 9563, 8, 320, 258, 11990, 4390, 2014, 940, 1534, 73094, 25, 1115, 12143, 17738, 430, 264, 2007, 690, 1833, 11, 32644, 6020, 828, 5552, 311, 10449, 10565, 8070, 477, 4814, 11, 902, 374, 7718, 369, 8830, 279, 63336, 315, 2204, 2626, 8316, 2949, 279, 2883, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0d30>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 87910, 5905, 11, 4461, 8405, 5217, 2317, 477, 64784, 9002, 279, 828, 10666, 304, 279, 6020, 12399, 11, 902, 374, 7718, 369, 17879, 6020, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0c10>, 'json_data': {'input': [[18902, 79483, 25, 8825, 323, 7241, 11, 4272, 11, 44660, 315, 279, 2768, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 31085, 315, 3424, 323, 7241, 11, 4272, 11, 2737, 6956, 323, 872, 20081, 2819, 13, 1115, 6020, 828, 374, 7718, 369, 38663, 279, 2883, 753, 9513, 2385, 323, 9341, 304, 14054, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0b80>, 'json_data': {'input': [[18902, 79483, 25, 1789, 3738, 60391, 650, 5484, 82, 11, 872, 12032, 527, 539, 2561, 311, 603, 323, 872, 66599, 656, 539, 617, 93370, 311, 603, 13, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 11, 12032, 430, 649, 1193, 387, 1511, 311, 25760, 30255, 315, 1521, 650, 5484, 82, 1051, 400, 19, 13, 16, 7239, 323, 400, 19, 13, 24, 7239, 11, 15947, 11, 323, 279, 58165, 369, 902, 66599, 1193, 617, 93370, 311, 279, 650, 5484, 82, 1051, 400, 17, 13, 21, 7239, 323, 400, 17, 13, 20, 7239, 11, 15947, 13, 1226, 1253, 3136, 311, 3887, 14529, 7677, 315, 3738, 650, 5484, 82, 430, 527, 5343, 2949, 7089, 426, 1441, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7138, 315, 3738, 60391, 650, 5484, 82, 11, 11951, 27401, 430, 872, 12032, 527, 539, 2561, 311, 279, 2883, 311, 25760, 30255, 13, 1102, 5825, 20616, 1139, 6020, 5326, 323, 279, 6070, 315, 58165, 5938, 449, 1521, 15086, 11, 902, 374, 16996, 369, 38663, 279, 2883, 596, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0af0>, 'json_data': {'input': [[18902, 79483, 25, 23139, 7318, 369, 8070, 13426, 11, 4272, 315, 73618, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3230, 6020, 18767, 5552, 311, 8515, 6530, 11, 19392, 279, 8515, 7318, 369, 8070, 13426, 11, 4272, 315, 904, 73618, 13, 1102, 374, 961, 315, 279, 69051, 75992, 311, 279, 8515, 6530, 5224, 11, 8405, 5217, 2317, 369, 8515, 6530, 6373, 323, 3827, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0a60>, 'json_data': {'input': [[18902, 79483, 25, 5751, 22538, 304, 3157, 481, 25452, 34919, 527, 17303, 520, 6762, 907, 449, 279, 5552, 20192, 323, 18151, 11, 2737, 50204, 1534, 11, 15324, 304, 507, 40, 69248, 13, 1226, 49229, 1057, 3157, 481, 25452, 34919, 3917, 311, 1317, 9860, 5409, 5352, 17294, 7953, 220, 717, 4038, 439, 1023, 2536, 45275, 12032, 389, 279, 79980, 660, 31946, 61572, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 6514, 315, 3157, 481, 25452, 34919, 11, 26073, 1268, 814, 527, 17303, 520, 6762, 907, 323, 279, 5536, 315, 50204, 1534, 20192, 323, 18151, 389, 279, 6020, 12518, 13, 1102, 374, 9959, 369, 8830, 279, 2883, 596, 25452, 22538, 323, 872, 19035, 311, 8244, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d09d0>, 'json_data': {'input': [[18902, 79483, 25, 19078, 67792, 323, 47717, 311, 55947, 349, 389, 5195, 15161, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3857, 4342, 19392, 264, 5357, 389, 66388, 11351, 323, 13707, 1555, 5195, 15161, 13, 1102, 13533, 264, 11944, 10430, 922, 279, 7526, 323, 3600, 2561, 2949, 5195, 15161, 311, 28696, 19297, 323, 6650, 11, 5398, 287, 449, 279, 8244, 7057, 315, 77582, 5557, 369, 18475, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0940>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d08b0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3566, 3914, 4669, 1057, 30693, 4398, 3997, 1057, 24608, 6880, 323, 3738, 4455, 584, 16136, 304, 477, 3552, 449, 3697, 315, 279, 9341, 4029, 13, 5751, 30693, 4398, 3997, 1101, 5825, 22736, 315, 3754, 477, 45976, 9002, 1057, 6020, 5178, 323, 1023, 3673, 430, 1253, 387, 3769, 477, 315, 2802, 311, 1057, 15167, 11, 2737, 22370, 68248, 11, 30693, 4455, 11, 3577, 323, 24608, 19786, 11, 323, 26743, 13, 1226, 1101, 4430, 5195, 3754, 323, 2027, 9013, 389, 5195, 596, 50070, 5117, 520, 3788, 1129, 2185, 31168, 5831, 35645, 902, 1253, 387, 315, 2802, 477, 3769, 311, 1057, 15167, 13, 15903, 11, 13166, 35186, 2038, 11, 2737, 1057, 16125, 315, 88465, 11, 555, 68637, 11, 35186, 17959, 11, 4580, 13093, 9676, 388, 11, 323, 2082, 315, 6929, 11, 374, 1101, 2561, 389, 1057, 30693, 4398, 3997, 1234, 279, 14836, 330, 78706, 685, 1210, 578, 2262, 315, 1057, 13335, 527, 539, 32762, 555, 5905, 1139, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 477, 304, 904, 1023, 1934, 477, 2246, 584, 1052, 449, 279, 22370, 11, 323, 904, 15407, 311, 1057, 13335, 527, 10825, 311, 387, 32899, 63633, 15407, 1193, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 50729, 279, 5370, 5070, 2561, 389, 279, 30693, 4398, 3997, 11, 2737, 24608, 6880, 11, 6020, 5178, 22736, 11, 323, 13166, 35186, 2038, 13, 1102, 66159, 279, 2883, 596, 15507, 311, 28330, 323, 10758, 449, 1202, 15167, 323, 39210, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8550>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 2038, 449, 5201, 311, 63897, 596, 2109, 75202, 315, 3308, 362, 323, 3308, 356, 5708, 2391, 279, 8502, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 18911, 264, 2007, 29385, 4954, 63897, 596, 2109, 13173, 7640, 369, 1202, 3308, 362, 323, 3308, 356, 5708, 11, 8405, 47616, 828, 430, 374, 16996, 369, 15167, 47614, 279, 2883, 596, 6864, 24691, 15174, 323, 3157, 7640, 2391, 264, 3230, 8502, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb85e0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3956, 323, 3600, 6904, 389, 279, 5845, 315, 1057, 3932, 311, 2680, 279, 8191, 11, 323, 3738, 315, 1057, 3956, 1397, 5199, 34494, 311, 990, 13750, 13, 25122, 11, 420, 2680, 374, 3984, 555, 5220, 430, 617, 5199, 3157, 2410, 304, 279, 41925, 323, 7757, 2680, 30633, 11, 2737, 51382, 21186, 5220, 11, 14994, 5220, 11, 6505, 17320, 5220, 11, 323, 3109, 29799, 2532, 12850, 13, 4427, 315, 1521, 12850, 617, 4529, 11, 477, 617, 11224, 430, 814, 1253, 1935, 11, 11193, 430, 1436, 96630, 11, 24927, 11, 477, 5376, 279, 2853, 315, 1217, 2680, 311, 3738, 315, 1057, 3956, 555, 65951, 477, 79466, 279, 1005, 315, 872, 14054, 311, 1862, 477, 28696, 1057, 33935, 11, 555, 23468, 7319, 12718, 311, 603, 477, 1057, 3932, 311, 3493, 1057, 33935, 11, 477, 555, 8405, 1057, 28650, 10932, 2335, 2680, 13, 4427, 56043, 617, 18306, 14640, 79466, 3738, 7739, 315, 21934, 555, 7757, 2680, 12850, 26, 4869, 11, 12190, 27924, 6866, 304, 279, 549, 815, 13, 323, 18403, 9002, 1778, 37424, 13, 1789, 3187, 11, 304, 220, 679, 23, 279, 549, 815, 13, 12411, 26545, 9849, 87014, 4272, 52864, 5718, 11, 902, 1436, 11810, 7757, 2680, 12850, 311, 9067, 11, 2565, 11, 96630, 11, 477, 6900, 369, 2680, 311, 3738, 315, 1057, 3956, 323, 3600, 13, 763, 5369, 11, 304, 1063, 56043, 11, 1057, 3956, 323, 3600, 617, 1027, 3917, 311, 3109, 55873, 10234, 17294, 477, 2565, 1154, 13, 4314, 1436, 11682, 6484, 1401, 12135, 11, 2737, 449, 1057, 3932, 11, 6444, 11, 50270, 11, 323, 5255, 2262, 12850, 11, 323, 38974, 1057, 5845, 311, 9504, 502, 6305, 26, 11682, 1057, 17444, 26, 323, 5376, 7194, 11, 28592, 48291, 28987, 1057, 2626, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 22100, 11784, 304, 46613, 220, 717, 555, 45293, 279, 4754, 15635, 5938, 449, 7757, 2680, 2585, 323, 279, 25127, 315, 23331, 4442, 304, 420, 3634, 13, 1115, 2317, 374, 7718, 369, 8830, 1268, 9434, 9547, 649, 5536, 1217, 2680, 323, 25605, 7194, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8670>, 'json_data': {'input': [[18902, 79483, 25, 3580, 24442, 8554, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15407, 24442, 8554, 11, 902, 527, 4461, 311, 6782, 4726, 41941, 477, 3649, 5552, 311, 279, 6020, 12518, 13, 1102, 15151, 430, 5217, 2038, 374, 3984, 18403, 304, 279, 2246, 311, 38263, 477, 37067, 389, 279, 8515, 6530, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8700>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3932, 527, 32888, 1057, 3956, 323, 3600, 4669, 17226, 7766, 323, 13531, 1385, 11, 1778, 439, 36122, 11, 10051, 4893, 11, 8599, 60866, 11, 323, 7941, 2162, 7766, 11, 323, 1390, 311, 387, 3025, 311, 387, 8599, 912, 5030, 1405, 814, 527, 477, 1148, 814, 527, 3815, 13, 1226, 527, 10968, 389, 24050, 1057, 3956, 323, 3600, 311, 4822, 304, 4156, 315, 1521, 18845, 304, 2015, 311, 10519, 323, 3139, 1057, 2626, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 4726, 16964, 279, 12939, 315, 70817, 311, 10223, 1217, 28198, 323, 19882, 4028, 5370, 7766, 11, 82003, 63897, 596, 15507, 311, 42028, 1202, 2027, 33935, 311, 14201, 323, 9407, 1202, 3157, 9546, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8790>, 'json_data': {'input': [[18902, 79483, 25, 11761, 41455, 11, 902, 15871, 2997, 30466, 505, 13674, 3600, 11, 1778, 13674, 6007, 11, 13674, 10948, 323, 26745, 11, 323, 12873, 7418, 29497, 11, 439, 1664, 439, 5195, 3861, 280, 2014, 940, 1534, 73094, 25, 1115, 17889, 1486, 3649, 3230, 13254, 8336, 505, 11761, 41455, 11, 39686, 21102, 3600, 1093, 13674, 6007, 323, 5195, 3861, 13, 1102, 46480, 279, 6650, 315, 15493, 6108, 13254, 2949, 63897, 596, 17226, 33935, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8820>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1057, 10565, 73657, 1047, 264, 37924, 5578, 9861, 26120, 4751, 315, 220, 23, 13, 16, 1667, 323, 264, 37924, 5578, 11336, 4478, 315, 220, 18, 13, 16, 14697, 12781, 26120, 14507, 1234, 10565, 73657, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 20616, 1139, 279, 2883, 596, 10565, 26120, 42356, 439, 315, 279, 842, 315, 220, 2366, 18, 11, 902, 374, 961, 315, 279, 27927, 6020, 75992, 9002, 279, 2883, 596, 30255, 323, 58165, 5552, 311, 82280, 6012, 13, 1102, 22020, 1401, 17150, 1778, 439, 279, 5578, 9861, 26120, 4751, 323, 11336, 4478, 11, 6376, 279, 6566, 369, 8830, 3938, 6020, 42356, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:25 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:16:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb92d0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 3723, 4273, 400, 220, 8546, 11, 25515, 220, 2790, 1034, 400, 220, 9565, 11, 25498, 220, 2166, 1034, 400, 220, 10465, 11, 17361, 220, 2618, 1034, 469, 91467, 7, 16, 8, 220, 4643, 11, 7699, 220, 2148, 220, 6086, 11, 19222, 220, 1682, 220, 5925, 11, 24462, 220, 966, 10314, 1741, 7, 16, 8, 220, 2790, 11, 4513, 220, 972, 220, 2618, 11, 19592, 220, 845, 220, 3971, 11, 20998, 220, 1114, 7089, 52248, 7, 16, 8, 220, 975, 11, 7507, 220, 20, 220, 845, 11, 25208, 220, 21, 220, 972, 11, 9588, 220, 21, 75263, 3252, 20192, 320, 9563, 288, 8, 220, 10161, 220, 15, 220, 16, 11, 16415, 220, 16, 220, 14087, 220, 15, 10884, 30466, 400, 220, 15574, 11, 21788, 220, 1041, 1034, 400, 220, 16544, 11, 25192, 220, 1041, 1034, 400, 220, 14777, 11, 20077, 220, 1041, 33648, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 279, 13254, 12678, 18792, 94140, 555, 54242, 369, 279, 5300, 1667, 13, 1102, 5825, 7718, 20616, 1139, 279, 46139, 8141, 315, 63897, 4953, 3238, 82, 13254, 11, 39686, 5789, 315, 6650, 323, 3157, 9546, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:25 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:16:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9240>, 'json_data': {'input': [[18902, 79483, 25, 12937, 35695, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 3649, 922, 279, 2883, 596, 5708, 6787, 11, 11951, 279, 63897, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 11, 19392, 279, 4595, 315, 5708, 6108, 23146, 9076, 311, 8420, 13, 1102, 7437, 279, 6566, 369, 8830, 279, 2883, 596, 5603, 311, 9548, 36580, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8940>, 'json_data': {'input': [[18902, 79483, 25, 578, 20192, 320, 9563, 288, 8, 389, 43645, 304, 8515, 6530, 61316, 3252, 323, 4272, 9341, 61316, 3252, 12135, 15324, 304, 1023, 16195, 8070, 320, 65083, 8, 527, 69729, 3770, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 94594, 279, 20192, 323, 18151, 505, 43645, 15324, 304, 1023, 16195, 8070, 320, 65083, 570, 1102, 374, 961, 315, 264, 27927, 10430, 389, 1268, 32905, 6020, 24198, 7958, 279, 2883, 596, 6020, 12518, 323, 5178, 17150, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0790>, 'json_data': {'input': [[18902, 79483, 25, 1057, 6787, 311, 3136, 311, 2793, 304, 502, 9873, 11, 3956, 11, 3600, 323, 14645, 11, 323, 6067, 11, 439, 1664, 439, 311, 3136, 311, 2793, 304, 63948, 323, 19092, 22538, 280, 2014, 940, 1534, 73094, 25, 2876, 3984, 26, 9093, 11, 912, 2317, 649, 387, 9076, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0700>, 'json_data': {'input': [[18902, 79483, 25, 11842, 30004, 36164, 25452, 34919, 40944, 4272, 8895, 320, 9563, 8, 374, 40056, 315, 400, 845, 13, 23, 7239, 20192, 323, 400, 19, 13, 20, 7239, 18151, 320, 16564, 38974, 1392, 8, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 400, 972, 13, 16, 7239, 20192, 323, 400, 21, 13, 24, 7239, 18151, 320, 16564, 38974, 1392, 8, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 40944, 4272, 20192, 323, 18151, 369, 2536, 30004, 36164, 25452, 34919, 11, 8405, 11944, 12678, 369, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 11815, 279, 6931, 20954, 315, 25452, 22538, 323, 22020, 279, 5178, 315, 1521, 34919, 927, 892, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0670>, 'json_data': {'input': [[18902, 79483, 25, 7436, 7089, 2853, 315, 30466, 5764, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 5217, 6956, 430, 1304, 709, 279, 2853, 315, 30466, 11, 19392, 430, 1070, 527, 5361, 11306, 311, 2980, 11, 902, 690, 387, 11944, 4726, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d05e0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 5217, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0550>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 2366, 18, 7665, 9849, 35018, 7, 16, 8, 400, 220, 24, 11, 7461, 400, 220, 24, 11, 18415, 11683, 2739, 291, 24393, 315, 3424, 323, 7241, 220, 18, 11, 18089, 220, 19, 11, 25136, 11683, 2739, 291, 6130, 58165, 220, 18, 11, 23388, 220, 19, 11, 6860, 9303, 10565, 26120, 58165, 220, 17, 11, 21144, 220, 17, 11, 26234, 33620, 13426, 45691, 11, 4272, 220, 16, 11, 20775, 220, 17, 11, 20338, 7089, 99216, 18512, 323, 1510, 58165, 220, 972, 11, 16368, 220, 1313, 11, 15935, 11683, 2739, 291, 18512, 323, 1023, 1510, 58165, 400, 220, 1806, 11, 22455, 400, 220, 2790, 11, 8953, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 3230, 3673, 71974, 439, 99216, 18512, 323, 1023, 1510, 58165, 439, 315, 6790, 220, 2148, 369, 220, 2366, 17, 323, 220, 2366, 18, 13, 1102, 5764, 12678, 369, 5370, 58165, 11, 1778, 439, 7665, 9849, 35018, 323, 99216, 24393, 11, 8405, 264, 16694, 315, 279, 2883, 753, 2875, 9860, 6020, 42356, 323, 4754, 5897, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d04c0>, 'json_data': {'input': [[18902, 79483, 25, 9742, 323, 12053, 369, 22172, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 264, 7057, 21760, 389, 40800, 323, 5557, 11, 23377, 430, 279, 2768, 2262, 690, 4358, 279, 2883, 596, 9131, 311, 18885, 3728, 2680, 311, 2038, 323, 5557, 11, 82003, 1202, 3560, 439, 459, 6273, 3213, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0430>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 16, 13, 27693, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 279, 2316, 315, 5858, 220, 16, 11, 902, 24400, 389, 279, 2626, 7677, 315, 63897, 4953, 13, 1102, 690, 3493, 459, 24131, 315, 279, 2883, 596, 6070, 11, 1202, 6156, 21282, 11, 323, 1401, 25605, 15174, 11, 10209, 20616, 1139, 1268, 279, 2883, 10093, 5196, 304, 279, 30633, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d03a0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 36611, 279, 2883, 11, 63897, 4953, 2637, 323, 17482, 439, 264, 4342, 369, 279, 2246, 11, 31692, 279, 2317, 315, 279, 17876, 14491, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d0310>, 'json_data': {'input': [[18902, 79483, 25, 5195, 8304, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 5195, 8304, 13254, 5699, 11, 19392, 264, 5357, 389, 279, 5178, 315, 30466, 8066, 505, 8427, 6732, 323, 14488, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2170>, 'json_data': {'input': [[18902, 79483, 25, 17961, 58513, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 17961, 58513, 11, 902, 50729, 5370, 4595, 315, 6020, 24198, 430, 63897, 4953, 13, 60880, 13, 1102, 17482, 439, 264, 4342, 369, 279, 2768, 11944, 41941, 9002, 3230, 11306, 315, 6020, 24198, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2200>, 'json_data': {'input': [[18902, 79483, 25, 220, 5547, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 33243, 477, 40815, 5905, 323, 1587, 539, 3493, 5217, 2317, 369, 8830, 279, 6020, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2290>, 'json_data': {'input': [[18902, 79483, 25, 220, 1806, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 3857, 11381, 477, 2199, 1396, 323, 1587, 539, 3493, 66251, 2038, 369, 8830, 279, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2320>, 'json_data': {'input': [[18902, 79483, 25, 1057, 31293, 430, 1057, 3135, 690, 387, 11754, 555, 1057, 5178, 304, 6625, 11987, 439, 3932, 304, 11469, 37671, 15098, 2586, 2930, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 36716, 311, 279, 2883, 596, 17078, 9002, 1202, 5178, 304, 6625, 11987, 11, 8104, 304, 11469, 37671, 13, 1102, 22020, 279, 12939, 315, 3728, 3157, 30295, 304, 46620, 279, 2883, 596, 13254, 323, 1217, 20392, 15174, 323, 374, 961, 315, 264, 27927, 10430, 389, 279, 9547, 66700, 279, 2883, 596, 6650, 27949, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d23b0>, 'json_data': {'input': [[18902, 79483, 25, 3580, 7181, 220, 18, 369, 279, 24043, 4947, 47031, 311, 32905, 6020, 24198, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 7181, 220, 18, 369, 279, 24043, 4947, 389, 32905, 6020, 24198, 11, 23377, 430, 1070, 374, 3230, 11944, 19351, 3984, 18403, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2440>, 'json_data': {'input': [[18902, 79483, 25, 7089, 33620, 320, 60789, 705, 9558, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 7089, 33620, 320, 60789, 705, 9558, 11, 902, 5825, 20616, 1139, 279, 6020, 7640, 4994, 315, 6332, 7677, 11, 16996, 369, 8830, 279, 8244, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d24d0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 8907, 449, 1521, 7016, 323, 14640, 1253, 387, 389, 261, 788, 323, 1436, 11, 32399, 477, 304, 279, 24069, 11, 5376, 1057, 2853, 315, 3815, 2626, 11, 1304, 1057, 3956, 323, 3600, 2753, 5505, 11, 4017, 1057, 5845, 311, 23564, 3738, 2626, 4211, 11, 5353, 603, 311, 2349, 1057, 2626, 12659, 11, 7958, 1057, 15022, 2361, 8844, 311, 1057, 26081, 11, 323, 14, 477, 6062, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 52956, 389, 279, 3766, 3857, 11, 25394, 279, 4754, 25949, 315, 8907, 449, 7016, 323, 14640, 389, 63897, 596, 7677, 323, 2626, 1646, 13, 1102, 72890, 279, 15635, 323, 11774, 37260, 555, 23331, 40850, 389, 279, 2883, 596, 17444, 323, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e5a1d2560>, 'json_data': {'input': [[18902, 79483, 25, 1057, 4754, 14675, 304, 3717, 449, 502, 323, 15639, 26969, 11, 29407, 11, 323, 1023, 39639, 6072, 11, 2737, 279, 13336, 430, 3738, 5897, 29407, 311, 902, 584, 527, 264, 4717, 1436, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 280, 2014, 940, 1534, 73094, 25, 1115, 5224, 18713, 1771, 311, 279, 2883, 596, 5897, 323, 23331, 15635, 11, 39686, 4754, 11774, 430, 1436, 31889, 505, 14529, 323, 14827, 5897, 29407, 13, 1102, 374, 961, 315, 279, 27927, 5326, 9547, 3857, 430, 8720, 288, 1268, 1778, 70530, 2643, 48291, 10383, 63897, 596, 2626, 323, 6020, 2890, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9360>, 'json_data': {'input': [[18902, 79483, 25, 3277, 279, 47616, 1323, 68, 4058, 1392, 315, 6762, 907, 13519, 459, 53317, 6866, 11, 584, 3350, 1523, 279, 9341, 311, 1202, 1510, 6762, 907, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 16964, 279, 2883, 596, 5603, 311, 14975, 38974, 1392, 369, 22538, 994, 6762, 907, 41300, 13519, 264, 18174, 13, 1102, 374, 9959, 369, 8830, 1268, 63897, 4953, 13, 29972, 1202, 9341, 20136, 323, 56030, 4754, 18151, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb88b0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3157, 481, 323, 2536, 30004, 36164, 25452, 34919, 527, 3917, 311, 264, 7029, 8205, 315, 3157, 14228, 15635, 430, 1436, 32302, 8108, 477, 5376, 279, 6762, 907, 315, 1057, 58348, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7138, 315, 25452, 9341, 15635, 430, 63897, 4953, 13, 374, 15246, 311, 11, 19392, 430, 2225, 3157, 481, 323, 2536, 30004, 36164, 25452, 34919, 649, 3217, 5199, 65649, 304, 907, 13, 1115, 2038, 374, 3062, 369, 15167, 323, 31499, 439, 433, 50729, 279, 4754, 53838, 304, 63897, 596, 9341, 20136, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb89d0>, 'json_data': {'input': [[18902, 79483, 25, 7436, 7089, 426, 1441, 374, 264, 10824, 315, 5361, 10565, 21282, 430, 527, 539, 32399, 3769, 13, 1050, 46469, 505, 7089, 426, 1441, 527, 8066, 15871, 505, 279, 6412, 315, 18985, 14228, 3600, 323, 7757, 3600, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15100, 279, 7089, 426, 1441, 10449, 11, 902, 5764, 5370, 9333, 10565, 8316, 539, 26214, 5199, 3403, 311, 7236, 3927, 13122, 11, 323, 34945, 872, 6156, 13254, 8336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8a60>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 10565, 8070, 315, 400, 16, 13, 22, 7239, 369, 220, 2366, 18, 7863, 311, 459, 10565, 4814, 315, 400, 16, 13, 24, 7239, 369, 220, 2366, 17, 11105, 459, 5376, 315, 400, 18, 13, 21, 7239, 13, 578, 5376, 304, 10565, 8070, 574, 15871, 16625, 555, 459, 5376, 304, 30466, 11, 26310, 4445, 555, 459, 5376, 304, 20448, 18512, 14090, 16625, 555, 2010, 1868, 6650, 13, 23212, 11, 10565, 8070, 56128, 505, 264, 14278, 304, 7194, 16625, 555, 279, 2349, 304, 279, 13240, 5505, 6439, 315, 1057, 16692, 323, 3738, 4009, 7241, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 279, 6020, 67610, 315, 5195, 15161, 11, 9204, 264, 3351, 505, 459, 10565, 4814, 311, 63336, 13, 1102, 50729, 279, 13254, 6650, 323, 2853, 30295, 11, 902, 527, 16996, 369, 38663, 279, 10449, 596, 5178, 323, 19035, 311, 63897, 596, 8244, 3135, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8af0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 8925, 315, 46085, 706, 19144, 2380, 6989, 315, 5708, 11, 3308, 362, 323, 3308, 426, 4279, 5708, 11, 323, 3308, 356, 6864, 5708, 13, 578, 3268, 315, 279, 29809, 315, 1855, 538, 315, 1057, 4279, 323, 6864, 5708, 527, 20086, 11, 3734, 449, 5201, 311, 16043, 13, 9062, 4430, 315, 3308, 362, 4279, 5708, 374, 20458, 311, 832, 7055, 824, 4430, 13, 9062, 4430, 315, 3308, 426, 4279, 5708, 374, 20458, 311, 220, 605, 12973, 824, 4430, 13, 3308, 356, 6864, 5708, 706, 912, 16043, 3268, 11, 3734, 439, 2631, 555, 8581, 2383, 13, 45285, 315, 3308, 426, 4279, 5708, 1253, 387, 16489, 520, 904, 892, 520, 279, 3072, 315, 279, 5708, 4346, 323, 9651, 5625, 5304, 6412, 477, 8481, 311, 3308, 362, 4279, 5708, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 3268, 5938, 449, 1855, 538, 315, 5708, 11, 82003, 279, 12062, 304, 16043, 2410, 4315, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 13551, 13, 1115, 2038, 374, 16996, 369, 8830, 63342, 30295, 323, 35186, 2949, 63897, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8b80>, 'json_data': {'input': [[18902, 79483, 25, 6969, 71894, 2006, 3651, 12244, 1929, 793, 16837, 50, 4874, 63458, 38225, 6328, 63458, 1753, 3651, 25338, 27267, 6340, 12244, 34, 38658, 4622, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 28118, 330, 11569, 304, 323, 4185, 351, 58875, 449, 8785, 1821, 389, 45344, 323, 17961, 78354, 1210, 1115, 3857, 374, 9959, 369, 15167, 323, 39210, 439, 433, 35434, 904, 5199, 4819, 23926, 449, 24043, 12659, 477, 9434, 6264, 12170, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:56 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:16:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8c10>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 6771, 315, 36962, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:57 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:16:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb97e0>, 'json_data': {'input': [[18902, 79483, 25, 33620, 505, 14691, 7677, 1603, 8070, 13426, 44660, 315, 279, 2768, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 12399, 315, 8070, 505, 14691, 7677, 1603, 8070, 13426, 369, 63897, 4953, 13, 927, 2380, 1667, 13, 1102, 7437, 279, 6566, 369, 8830, 279, 2883, 596, 6020, 5178, 323, 3827, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:16:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8ca0>, 'json_data': {'input': [[18902, 79483, 25, 5843, 9469, 4289, 58654, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3857, 4342, 369, 279, 1317, 9860, 11897, 10430, 11, 19392, 430, 279, 2768, 2262, 690, 7872, 279, 2883, 596, 1317, 9860, 6020, 42356, 323, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9900>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3810, 1139, 7491, 4272, 1303, 28904, 323, 52508, 4868, 28904, 311, 8108, 6807, 5326, 13, 23139, 52508, 4036, 5552, 311, 32905, 24198, 1234, 1057, 52508, 4868, 28904, 527, 5343, 304, 1023, 1510, 12032, 449, 264, 12435, 24305, 13, 23139, 323, 2536, 1824, 1003, 52508, 43347, 5552, 311, 32905, 24198, 1234, 1057, 52508, 4868, 28904, 527, 5343, 304, 1023, 1510, 12032, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 6020, 5326, 6373, 15174, 20011, 555, 279, 2883, 11, 11951, 9002, 32905, 24198, 13, 1102, 16964, 279, 1005, 315, 7491, 4272, 1303, 28904, 323, 52508, 4868, 28904, 311, 8108, 6807, 5326, 11, 8405, 20616, 1139, 279, 2883, 596, 5603, 311, 6020, 5326, 6373, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:01 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9870>, 'json_data': {'input': [[18902, 79483, 25, 220, 16, 13, 79980, 660, 17961, 70816, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 430, 79980, 660, 17961, 70816, 527, 961, 315, 279, 26559, 11, 902, 374, 264, 16996, 3777, 430, 18911, 279, 6020, 2704, 323, 5178, 315, 279, 2883, 927, 279, 5300, 4261, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8d30>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 7437, 13544, 279, 35547, 315, 6913, 323, 80703, 4272, 8070, 824, 4430, 315, 3308, 362, 11, 3308, 426, 11, 323, 3308, 356, 5708, 320, 258, 11990, 11, 3734, 824, 4430, 15055, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 18911, 279, 35547, 315, 6913, 323, 80703, 4272, 8070, 824, 4430, 369, 63897, 4953, 13, 1115, 2038, 374, 7718, 369, 8830, 279, 2883, 596, 63336, 389, 264, 824, 60820, 8197, 11, 902, 374, 3062, 369, 15167, 323, 31499, 47614, 279, 6020, 2890, 323, 5178, 315, 279, 7471, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8dc0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 36611, 279, 2246, 439, 33152, 311, 63897, 4953, 2637, 279, 2748, 2883, 315, 5195, 13, 1102, 17738, 279, 5357, 315, 279, 1934, 389, 63897, 596, 6020, 5178, 11, 35186, 11, 323, 25605, 3649, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8e50>, 'json_data': {'input': [[18902, 79483, 25, 320, 17, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 30293, 15151, 264, 87910, 5905, 11, 23377, 430, 4726, 2317, 477, 64784, 369, 279, 5552, 2262, 6866, 18403, 304, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8ee0>, 'json_data': {'input': [[18902, 79483, 25, 21304, 12718, 8464, 311, 20448, 28904, 449, 90629, 3196, 389, 15393, 4780, 505, 3738, 22538, 13, 1226, 3335, 20448, 20900, 3196, 389, 279, 13240, 90629, 389, 459, 14529, 8197, 11, 902, 1253, 1121, 304, 20900, 15324, 1603, 9341, 4780, 527, 15393, 323, 20448, 374, 7318, 323, 1253, 1397, 279, 1005, 315, 653, 34595, 11374, 13, 21304, 12718, 527, 12715, 439, 264, 3777, 315, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 1268, 5178, 12718, 527, 12715, 323, 279, 11774, 304, 77472, 1521, 12718, 1603, 279, 4780, 527, 15393, 13, 578, 2038, 374, 9959, 369, 8830, 279, 84140, 315, 20448, 18512, 323, 872, 18912, 304, 63897, 596, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb8f70>, 'json_data': {'input': [[18902, 79483, 25, 1226, 617, 10434, 439, 279, 8351, 596, 54406, 2533, 220, 2550, 24, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 15151, 279, 1317, 56703, 5133, 1990, 74210, 612, 13566, 69065, 323, 63897, 4953, 2637, 39686, 279, 7626, 753, 3217, 323, 38769, 439, 279, 54406, 369, 279, 2883, 2533, 220, 2550, 24, 13, 1115, 2038, 374, 961, 315, 279, 54406, 596, 1934, 11, 82003, 872, 71540, 449, 279, 2883, 596, 6020, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9000>, 'json_data': {'input': [[18902, 79483, 25, 78897, 315, 279, 23702, 519, 753, 33878, 22504, 369, 279, 220, 2366, 19, 25992, 30155, 315, 12937, 17075, 527, 32762, 36881, 555, 5905, 304, 3744, 14767, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 311, 279, 13112, 11224, 36881, 13, 15483, 13594, 5224, 690, 387, 13019, 449, 279, 46272, 323, 19224, 9849, 2949, 220, 4364, 2919, 315, 279, 23702, 519, 753, 20323, 1060, 9670, 6790, 220, 2148, 11, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 430, 3738, 19885, 315, 279, 33878, 22504, 369, 279, 220, 2366, 19, 25992, 30155, 315, 12937, 17075, 527, 5343, 555, 5905, 304, 420, 220, 605, 16222, 1934, 13, 1115, 374, 9959, 369, 41777, 311, 3619, 279, 35186, 323, 16043, 13146, 5552, 311, 279, 14827, 6574, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9090>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 605, 13, 20843, 10022, 11, 63347, 1406, 6674, 18076, 1341, 4419, 11, 3651, 80483, 2390, 12890, 87470, 8606, 198, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9120>, 'json_data': {'input': [[18902, 79483, 25, 2360, 3927, 6130, 477, 5315, 315, 37506, 6444, 15609, 810, 1109, 220, 605, 4, 315, 1057, 30466, 304, 220, 2366, 16, 11, 220, 2366, 17, 11, 477, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8554, 430, 912, 3927, 6130, 15609, 264, 5199, 13651, 315, 30466, 11, 902, 72890, 279, 21797, 2461, 315, 63897, 4953, 3238, 82, 13254, 8336, 13, 1115, 2038, 374, 3062, 369, 47614, 5326, 323, 6130, 20545, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb91b0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 8417, 422, 459, 27204, 374, 264, 26120, 520, 54529, 13, 5751, 26120, 20038, 8965, 6782, 26120, 323, 2536, 12, 26120, 6956, 13, 58976, 1234, 1057, 26120, 28904, 527, 15871, 8521, 13, 11842, 12, 1655, 6956, 15871, 2997, 14507, 369, 13709, 323, 30519, 13, 1226, 16343, 8521, 14507, 369, 2536, 12, 1655, 6956, 449, 26120, 14507, 323, 2759, 369, 1124, 3871, 439, 264, 3254, 26120, 3777, 902, 12992, 279, 3392, 315, 1057, 26120, 12032, 323, 58165, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 20616, 1139, 1268, 63897, 4953, 13, 27667, 323, 22824, 4861, 26120, 28904, 11, 8104, 86055, 1990, 26120, 323, 2536, 12, 1655, 6956, 13, 1115, 374, 16996, 369, 8830, 279, 6020, 25127, 315, 71419, 389, 279, 2883, 596, 8335, 11071, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb93f0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 10321, 11, 323, 8617, 1587, 539, 3493, 904, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9480>, 'json_data': {'input': [[18902, 79483, 25, 220, 3971, 627, 2014, 940, 1534, 73094, 25, 1115, 1396, 15151, 279, 2199, 1396, 304, 279, 2246, 11, 23377, 430, 279, 2768, 2262, 374, 7559, 389, 2199, 220, 3971, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9510>, 'json_data': {'input': [[18902, 79483, 25, 477, 7720, 13, 1442, 584, 527, 539, 279, 6156, 63932, 304, 264, 650, 5484, 11, 584, 2759, 369, 279, 9341, 477, 1023, 3977, 12034, 304, 264, 650, 5484, 304, 18859, 449, 8581, 27438, 2599, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 650, 5484, 82, 11, 38938, 279, 24043, 6514, 369, 22538, 304, 1778, 15086, 994, 63897, 374, 539, 279, 6156, 63932, 13, 1102, 5825, 19351, 389, 71628, 311, 27438, 2599, 304, 1521, 15082, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb95a0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 264, 1396, 315, 12625, 14228, 7016, 323, 14640, 11, 323, 584, 5131, 527, 4717, 311, 264, 1396, 315, 12625, 26969, 323, 43986, 14529, 304, 5361, 56043, 13, 1789, 3187, 11, 1070, 527, 14529, 26969, 323, 39725, 304, 279, 549, 815, 13, 323, 279, 10013, 11, 2737, 1884, 23343, 311, 1057, 4526, 323, 1005, 315, 3813, 2038, 323, 13172, 12659, 11, 902, 1436, 1121, 304, 5199, 35018, 11, 59358, 11, 323, 2027, 4442, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 14529, 12625, 14228, 26969, 323, 43986, 430, 63897, 374, 6532, 304, 11, 8104, 21760, 389, 872, 4526, 323, 1005, 315, 828, 13, 1102, 22020, 279, 4754, 16296, 1521, 26969, 1253, 617, 389, 279, 2883, 596, 7677, 11, 59049, 279, 27927, 2317, 315, 8907, 323, 5897, 15635, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9630>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15407, 279, 6771, 315, 36962, 11, 23377, 430, 279, 2768, 14491, 690, 21782, 279, 6070, 323, 3682, 6956, 315, 279, 2246, 13, 1102, 17482, 439, 264, 34512, 1697, 12576, 369, 13016, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb96c0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1495, 12143, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9750>, 'json_data': {'input': [[18902, 79483, 25, 5751, 3157, 481, 323, 2536, 30004, 36164, 25452, 34919, 527, 3917, 311, 264, 7029, 8205, 315, 3157, 14228, 15635, 430, 1436, 32302, 8108, 477, 5376, 279, 6762, 907, 315, 1057, 58348, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7138, 315, 25452, 9341, 15635, 430, 63897, 4953, 13, 374, 15246, 311, 11, 19392, 430, 2225, 3157, 481, 323, 2536, 30004, 36164, 25452, 34919, 649, 3217, 5199, 65649, 304, 907, 13, 1115, 2038, 374, 3062, 369, 15167, 323, 31499, 439, 433, 50729, 279, 4754, 53838, 304, 63897, 596, 9341, 20136, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9990>, 'json_data': {'input': [[18902, 79483, 25, 29140, 315, 22765, 36639, 3142, 45344, 38725, 320, 4977, 19268, 33, 3110, 25, 220, 2983, 8, 17961, 70816, 25, 79980, 660, 31946, 61572, 79980, 660, 70816, 315, 33620, 79980, 660, 70816, 315, 67963, 33620, 79980, 660, 70816, 315, 12937, 17075, 529, 58588, 79980, 660, 70816, 315, 23139, 3061, 4336, 18559, 311, 79980, 660, 17961, 70816, 5874, 220, 2166, 220, 3971, 220, 4103, 220, 4331, 220, 4370, 220, 2131, 220, 3487, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 11725, 279, 6821, 315, 279, 9678, 9879, 586, 24043, 7626, 323, 279, 6020, 12518, 5343, 304, 279, 2246, 13, 1102, 17482, 439, 264, 12399, 315, 279, 25261, 323, 6020, 13122, 6956, 11, 902, 527, 7718, 369, 69963, 279, 13708, 323, 31638, 315, 279, 6020, 2038, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9a20>, 'json_data': {'input': [[18902, 79483, 25, 58113, 50, 18610, 878, 53525, 9182, 7866, 39129, 19324, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 9477, 32762, 555, 5905, 304, 279, 220, 605, 16222, 26559, 13, 1102, 15151, 430, 3738, 9477, 690, 387, 25819, 6957, 279, 1934, 11, 902, 374, 3062, 369, 80414, 323, 8907, 449, 22370, 14640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9ab0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 12387, 549, 815, 13, 323, 7362, 7016, 323, 14640, 18702, 264, 7029, 8205, 315, 15223, 11, 323, 1057, 17219, 315, 502, 9873, 11, 3956, 11, 3600, 11, 323, 14645, 690, 4461, 3136, 311, 3917, 603, 311, 5217, 7016, 323, 14640, 13, 763, 3293, 1667, 11, 17047, 2212, 279, 1917, 617, 11223, 323, 18306, 264, 3544, 1396, 315, 502, 7016, 323, 14640, 9959, 311, 279, 7528, 8752, 11, 8104, 304, 279, 5789, 315, 828, 12625, 323, 4868, 11, 10937, 11, 12434, 11, 3674, 323, 35186, 320, 1600, 38, 8, 8670, 11, 15592, 11, 323, 2930, 2262, 13, 578, 7194, 315, 8907, 449, 1521, 11193, 527, 1579, 323, 527, 4461, 311, 5376, 304, 279, 3938, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 5370, 7016, 323, 14640, 28987, 279, 2883, 11, 82003, 279, 23965, 323, 58321, 315, 8907, 8670, 13, 1102, 66251, 4861, 279, 3230, 11774, 279, 2883, 12580, 304, 70817, 311, 264, 19019, 10223, 5897, 4676, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9b40>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 12387, 549, 815, 13, 323, 7362, 7016, 323, 14640, 18702, 264, 7029, 8205, 315, 15223, 11, 323, 1057, 17219, 315, 502, 9873, 11, 3956, 11, 3600, 11, 323, 14645, 690, 4461, 3136, 311, 3917, 603, 311, 5217, 7016, 323, 14640, 13, 763, 3293, 1667, 11, 17047, 2212, 279, 1917, 617, 11223, 323, 18306, 264, 3544, 1396, 315, 502, 7016, 323, 14640, 9959, 311, 279, 7528, 8752, 11, 8104, 304, 279, 5789, 315, 828, 12625, 323, 4868, 11, 10937, 11, 12434, 11, 3674, 323, 35186, 320, 1600, 38, 8, 8670, 11, 15592, 11, 323, 2930, 2262, 13, 578, 7194, 315, 8907, 449, 1521, 11193, 527, 1579, 323, 527, 4461, 311, 5376, 304, 279, 3938, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 5370, 7016, 323, 14640, 28987, 279, 2883, 11, 82003, 279, 23965, 323, 58321, 315, 8907, 8670, 13, 1102, 66251, 4861, 279, 3230, 11774, 279, 2883, 12580, 304, 70817, 311, 264, 19019, 10223, 5897, 4676, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9bd0>, 'json_data': {'input': [[18902, 79483, 25, 17781, 28734, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7434, 315, 330, 68369, 28734, 1359, 22797, 311, 32855, 11, 1579, 46570, 7224, 430, 1436, 7692, 5199, 21845, 13, 1102, 13533, 264, 4741, 31348, 13356, 389, 19297, 323, 9341, 304, 87435, 14645, 11, 5398, 287, 449, 279, 8244, 7057, 315, 1317, 9860, 11376, 323, 19092, 5326, 80671, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:28 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:17:28 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:17:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9c60>, 'json_data': {'input': [[18902, 79483, 25, 5751, 6156, 5829, 315, 8515, 505, 10565, 7640, 2997, 14507, 311, 8141, 323, 5195, 8304, 8717, 11, 311, 8420, 369, 20448, 11, 323, 311, 2262, 12850, 13, 7089, 5829, 315, 8515, 505, 10565, 7640, 2997, 14507, 311, 20972, 369, 7766, 11, 311, 3827, 11527, 369, 8070, 13426, 11, 323, 1023, 4689, 13166, 53869, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 6156, 5829, 315, 8515, 505, 10565, 7640, 11, 45293, 1405, 279, 2883, 5691, 988, 1202, 8515, 5070, 13, 1102, 5825, 20616, 1139, 25605, 18512, 323, 42356, 7718, 369, 20958, 2626, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fba200>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1070, 1051, 13489, 220, 22, 11, 13364, 323, 220, 16, 11, 23776, 5708, 17075, 315, 3335, 315, 1057, 3308, 362, 5708, 323, 3308, 356, 5708, 11, 15947, 13, 9393, 1690, 315, 1057, 13551, 315, 3308, 362, 5708, 323, 3308, 356, 5708, 527, 5762, 555, 46436, 323, 1023, 14673, 389, 17981, 315, 5708, 17075, 11, 584, 527, 12153, 311, 16430, 279, 2860, 1396, 315, 5708, 17075, 15609, 555, 1521, 3335, 29809, 13, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1070, 1051, 13489, 220, 2946, 5708, 17075, 315, 3335, 315, 1057, 3308, 426, 5708, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 25031, 828, 389, 279, 1396, 315, 5708, 17075, 315, 3335, 369, 2204, 6989, 315, 279, 2883, 753, 5708, 439, 315, 264, 3738, 2457, 13, 1115, 2038, 374, 9959, 369, 47614, 279, 63342, 2385, 323, 279, 4754, 10383, 315, 2204, 5708, 17075, 389, 13166, 35186, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9cf0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1047, 400, 605, 13, 15, 7239, 315, 87126, 6807, 13077, 11, 315, 902, 400, 19, 13, 15, 7239, 29002, 304, 5936, 220, 2366, 19, 323, 400, 21, 13, 15, 7239, 29002, 304, 5936, 220, 2366, 23, 13, 578, 2802, 7969, 369, 682, 6807, 13077, 527, 11075, 3196, 389, 264, 15150, 1701, 3738, 3157, 7969, 11, 439, 1664, 439, 1057, 5208, 9017, 279, 26501, 315, 3738, 41329, 9021, 13, 2360, 15055, 1051, 19310, 1234, 279, 6807, 13077, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 323, 220, 2366, 18, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3230, 3649, 922, 279, 6807, 13077, 2561, 311, 63897, 4953, 2637, 2737, 15055, 11, 32792, 13003, 11, 323, 2802, 4478, 26314, 13, 1115, 2038, 374, 9959, 369, 47614, 279, 2883, 753, 53113, 323, 6020, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fba170>, 'json_data': {'input': [[18902, 79483, 25, 3277, 279, 47616, 1323, 68, 4058, 1392, 315, 6762, 907, 13519, 459, 53317, 6866, 11, 584, 3350, 1523, 279, 9341, 311, 1202, 1510, 6762, 907, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 16964, 279, 2883, 596, 5603, 311, 14975, 38974, 1392, 369, 22538, 994, 6762, 907, 41300, 13519, 264, 18174, 13, 1102, 374, 9959, 369, 8830, 1268, 63897, 4953, 13, 29972, 1202, 9341, 20136, 323, 56030, 4754, 18151, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fba0e0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 1057, 6918, 11, 1614, 11, 323, 7362, 4272, 10565, 4814, 6920, 2000, 4102, 369, 8070, 3827, 10096, 1051, 13489, 400, 22, 13, 16, 7239, 11, 400, 972, 13, 21, 7239, 11, 323, 400, 16, 13, 23, 7239, 15947, 13, 1442, 539, 34716, 11, 279, 6918, 4272, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 4272, 10565, 4814, 6920, 2000, 4102, 369, 6918, 11, 1614, 11, 323, 7362, 3827, 10096, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 13, 1102, 22020, 279, 2883, 596, 4754, 3827, 7720, 505, 18151, 11953, 4741, 311, 4445, 3938, 59453, 8070, 11, 902, 374, 16595, 369, 8830, 872, 3827, 9293, 15174, 323, 3938, 58165, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fba050>, 'json_data': {'input': [[18902, 79483, 25, 578, 15691, 907, 315, 25452, 34919, 374, 17303, 439, 279, 2860, 2926, 2853, 5636, 279, 40944, 4272, 8895, 320, 9563, 570, 480, 1771, 323, 18151, 11, 2737, 38974, 1392, 11, 527, 5343, 439, 264, 3777, 315, 507, 40, 69248, 304, 279, 79980, 660, 70816, 315, 33620, 13, 3580, 7181, 220, 22, 369, 4726, 3649, 389, 507, 40, 69248, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 279, 19179, 315, 279, 15691, 907, 315, 25452, 34919, 11, 26073, 1268, 279, 2926, 2853, 323, 40944, 20192, 477, 18151, 527, 41853, 369, 13, 1102, 374, 961, 315, 279, 25452, 22538, 3857, 323, 5825, 2317, 369, 279, 51262, 5528, 1511, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9fc0>, 'json_data': {'input': [[18902, 79483, 25, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 17, 9941, 77171, 6790, 220, 2148, 11, 220, 2366, 18, 45285, 26868, 45285, 26868, 3308, 362, 4430, 2109, 75202, 220, 5547, 400, 220, 21, 11, 24758, 220, 2495, 400, 220, 24, 11, 15340, 3308, 356, 4430, 2109, 75202, 220, 21330, 220, 4103, 11, 23411, 220, 10617, 220, 4103, 11, 25862, 10884, 4430, 2109, 75202, 7, 16, 8, 220, 17252, 400, 220, 2946, 11, 17408, 220, 21458, 400, 220, 5538, 11, 10336, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 264, 11944, 31085, 315, 279, 13551, 2109, 73350, 2391, 279, 1667, 9670, 6790, 220, 2148, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 2737, 15055, 7543, 389, 3308, 362, 323, 3308, 356, 13551, 13, 1115, 11944, 2038, 374, 15525, 369, 39210, 3411, 311, 24564, 18845, 304, 279, 2883, 596, 6864, 471, 12659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9f30>, 'json_data': {'input': [[18902, 79483, 25, 1226, 8066, 810, 1109, 220, 2075, 4, 315, 2860, 30466, 505, 2930, 13172, 304, 220, 2366, 18, 13, 9176, 315, 1057, 50270, 11, 5220, 430, 16822, 1057, 3956, 323, 3600, 11, 7528, 36717, 11, 323, 2262, 12850, 649, 30754, 872, 17517, 449, 603, 520, 904, 892, 13, 4314, 8717, 1253, 539, 3136, 311, 656, 2626, 449, 603, 422, 584, 656, 539, 1893, 810, 907, 320, 21470, 439, 7319, 5219, 315, 3932, 477, 6444, 11, 502, 6763, 11767, 11, 7319, 6883, 17985, 11, 477, 810, 7524, 58191, 2065, 8, 1109, 872, 2561, 27548, 13, 29240, 311, 1057, 13172, 10396, 323, 828, 12625, 12659, 11, 1778, 439, 1057, 28271, 311, 10474, 704, 4948, 24993, 8443, 11, 439, 1664, 439, 4442, 311, 1023, 5220, 529, 13172, 323, 5255, 828, 12625, 12659, 617, 304, 279, 3347, 11, 323, 1253, 304, 279, 3938, 11, 7958, 279, 13172, 430, 584, 527, 3025, 311, 3493, 13, 763, 5369, 11, 14645, 617, 1027, 8040, 430, 1304, 32789, 14058, 810, 5107, 11, 477, 430, 2565, 279, 3113, 315, 14058, 31155, 11, 323, 1063, 12850, 315, 2930, 3600, 617, 18751, 1521, 14645, 430, 1436, 13893, 38974, 279, 18539, 323, 15293, 315, 4948, 24993, 7528, 13172, 13, 435, 14612, 311, 3493, 16757, 907, 477, 6493, 43749, 13750, 323, 52304, 3210, 1436, 11682, 1057, 2626, 11, 17444, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 5810, 11, 279, 2246, 9731, 311, 82845, 1139, 279, 15635, 5552, 311, 13172, 11, 2737, 279, 4814, 315, 8717, 323, 279, 5536, 315, 30116, 4442, 389, 1008, 49141, 323, 9889, 13, 1115, 12143, 72890, 279, 15022, 18921, 323, 7100, 9547, 28987, 13172, 13254, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9ea0>, 'json_data': {'input': [[18902, 79483, 25, 220, 5313, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 264, 2199, 1396, 477, 3857, 11381, 2949, 279, 2246, 11, 23377, 430, 433, 374, 961, 315, 279, 10873, 6070, 369, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9e10>, 'json_data': {'input': [[18902, 79483, 25, 1789, 5217, 2038, 11, 2737, 1268, 584, 2759, 369, 1057, 22538, 323, 9547, 430, 649, 6678, 65649, 304, 279, 907, 315, 1057, 22538, 11, 1518, 7181, 220, 16, 323, 7181, 220, 18, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 3744, 8105, 11, 5858, 220, 23, 439, 1664, 439, 5858, 220, 22, 32, 32541, 22018, 323, 20143, 22018, 11997, 42306, 10180, 8152, 32388, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15407, 5217, 8554, 304, 279, 6020, 12518, 430, 3493, 810, 11944, 41941, 922, 279, 24043, 12659, 369, 22538, 323, 5552, 15635, 11, 3062, 369, 264, 16195, 8830, 315, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fb9d80>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1005, 7362, 11667, 4741, 323, 3072, 17517, 11, 2737, 4631, 1590, 320, 276, 3072, 8446, 40056, 315, 264, 10824, 315, 15075, 323, 5439, 2671, 8, 311, 6144, 18057, 291, 549, 815, 13, 18160, 63359, 12031, 24608, 505, 4442, 304, 7362, 11667, 9473, 7969, 13, 3277, 279, 549, 815, 13, 18160, 96931, 11, 20192, 505, 7362, 11667, 4741, 323, 3072, 19015, 8108, 279, 7362, 11667, 18151, 5552, 311, 1057, 24608, 13, 3277, 279, 549, 815, 13, 18160, 7621, 729, 11, 18151, 505, 7362, 11667, 4741, 323, 3072, 17517, 4445, 279, 7362, 11667, 20192, 5552, 311, 1057, 24608, 13, 4314, 61316, 3252, 17517, 8108, 11, 719, 656, 539, 11622, 22472, 11, 279, 2515, 315, 7362, 11667, 9473, 4478, 19567, 13, 1226, 75224, 1521, 17517, 439, 8515, 6530, 305, 17327, 369, 24043, 10096, 13, 1226, 8881, 279, 20192, 477, 18151, 315, 7362, 11667, 7858, 4478, 4442, 439, 264, 3777, 315, 41165, 1023, 16195, 8070, 320, 32, 65083, 8, 323, 28520, 312, 95390, 1124, 1139, 30466, 311, 4445, 279, 61316, 3640, 70530, 439, 814, 12446, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 5217, 61316, 3252, 15174, 11, 2737, 279, 1005, 315, 4631, 1590, 11, 323, 1268, 1521, 15174, 527, 24073, 439, 8515, 6530, 305, 17327, 11, 902, 20405, 1203, 311, 13122, 12659, 323, 279, 6373, 315, 24608, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbac20>, 'json_data': {'input': [[18902, 79483, 25, 3331, 54463, 2857, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 502, 3857, 30929, 330, 15777, 54463, 2857, 1359, 19392, 264, 6541, 304, 5357, 311, 27927, 5326, 9547, 74055, 63897, 596, 2626, 323, 6020, 36721, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbacb0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 3136, 311, 1304, 5199, 3495, 323, 4500, 22538, 304, 5789, 315, 19092, 5357, 439, 584, 6056, 311, 2274, 502, 11, 18699, 33935, 11, 7417, 1057, 6484, 33935, 11, 323, 19019, 323, 87388, 10739, 15592, 4028, 1057, 9873, 13, 1226, 1101, 1755, 311, 5376, 11, 8844, 311, 220, 2366, 18, 11, 1057, 9341, 304, 1057, 11156, 14054, 11, 2737, 16692, 11, 4009, 7241, 11, 323, 828, 19169, 11, 311, 1862, 279, 6650, 315, 1057, 2626, 323, 1057, 1317, 9860, 28271, 11, 304, 4040, 304, 1862, 315, 15592, 3956, 323, 3600, 13, 763, 5369, 11, 63948, 323, 19092, 22538, 17210, 311, 279, 58321, 323, 8149, 315, 1057, 33935, 11, 9407, 1057, 19248, 304, 15009, 323, 1023, 16003, 5789, 11, 323, 1977, 3831, 40705, 2212, 19092, 28271, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7138, 315, 63897, 596, 22538, 304, 3495, 323, 4500, 11, 11156, 14054, 11, 323, 19092, 40705, 13, 1102, 72890, 279, 12939, 315, 19297, 323, 14054, 304, 12899, 1317, 9860, 6650, 11, 8104, 449, 264, 5357, 389, 15592, 14645, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbad40>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 66251, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbadd0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1755, 350, 1741, 7318, 311, 1057, 8141, 8717, 323, 5195, 8304, 8717, 311, 5376, 439, 1057, 30466, 3139, 323, 350, 1741, 439, 264, 11668, 315, 1057, 13172, 30466, 3573, 51, 1741, 4478, 909, 311, 387, 11754, 555, 4442, 304, 3756, 6651, 26, 46139, 6651, 26, 8427, 9306, 3878, 26, 8427, 6651, 26, 279, 11668, 315, 20126, 523, 20991, 839, 1555, 7318, 2680, 3585, 26, 2027, 6651, 26, 279, 8844, 13254, 6650, 7969, 315, 13172, 30466, 505, 2204, 12006, 26, 323, 13254, 4430, 3878, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 7434, 315, 38081, 73471, 11443, 320, 51, 1741, 8, 323, 1202, 3685, 5376, 439, 63897, 753, 30466, 3139, 13, 1102, 40019, 5370, 9547, 430, 10383, 350, 1741, 11, 902, 374, 16996, 369, 8830, 279, 2883, 596, 2853, 6070, 5552, 311, 13172, 13254, 11, 323, 7902, 311, 27927, 18845, 304, 13254, 9659, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbae60>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 312, 2058, 988, 279, 836, 315, 279, 2883, 11, 63897, 4953, 2637, 323, 4461, 17482, 439, 264, 4342, 369, 279, 17876, 14491, 477, 2262, 430, 11263, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbaef0>, 'json_data': {'input': [[18902, 79483, 25, 77956, 8825, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 8712, 315, 20207, 3424, 11, 902, 374, 9200, 369, 63897, 4953, 13, 439, 433, 1234, 75658, 872, 34333, 14645, 323, 6883, 13, 1102, 11767, 1139, 264, 11944, 10430, 389, 1268, 279, 2883, 36236, 1202, 20207, 3424, 3268, 323, 279, 25127, 369, 1202, 15022, 2361, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbaf80>, 'json_data': {'input': [[18902, 79483, 25, 25074, 20359, 32388, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 7314, 315, 264, 10430, 389, 2802, 4478, 5326, 11, 19392, 264, 6541, 304, 5357, 505, 11667, 15635, 311, 279, 15635, 5938, 449, 65649, 304, 2802, 7969, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbb010>, 'json_data': {'input': [[18902, 79483, 25, 21023, 323, 5664, 9009, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 502, 3857, 389, 330, 26896, 323, 5664, 9009, 1359, 43080, 264, 6541, 304, 5357, 505, 41329, 311, 279, 5419, 4676, 315, 279, 2883, 11, 39686, 279, 12939, 315, 32027, 30295, 323, 13166, 7829, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbb0a0>, 'json_data': {'input': [[18902, 79483, 25, 220, 717, 627, 2014, 940, 1534, 73094, 25, 1115, 8111, 311, 387, 264, 3666, 32277, 1493, 477, 264, 90660, 1396, 2085, 904, 2317, 477, 2262, 311, 24564, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbb130>, 'json_data': {'input': [[18902, 79483, 25, 480, 1771, 320, 40938, 288, 8, 4158, 448, 1908, 505, 362, 65083, 311, 279, 79980, 660, 70816, 315, 33620, 9941, 77171, 6790, 220, 2148, 11, 362, 65083, 35185, 10067, 220, 2366, 16, 220, 2366, 17, 220, 2366, 18, 81019, 1534, 20192, 320, 9563, 288, 8, 389, 2561, 15548, 58637, 22538, 7089, 8070, 320, 59857, 705, 4272, 400, 220, 6086, 400, 320, 16, 11, 17335, 8, 400, 320, 16, 11, 22640, 8, 67450, 320, 782, 13311, 8, 369, 8070, 13426, 320, 972, 8, 220, 17058, 220, 18196, 9558, 315, 8070, 3827, 220, 1227, 320, 16, 11, 11194, 8, 320, 16, 11, 8953, 8, 81019, 1534, 20192, 320, 9563, 288, 8, 389, 8515, 6530, 305, 17327, 19620, 9473, 17517, 38493, 220, 10680, 220, 17, 11, 24222, 220, 11702, 25074, 4478, 17517, 7089, 8070, 320, 59857, 705, 4272, 220, 21, 220, 21, 220, 21, 67450, 320, 782, 13311, 8, 369, 8070, 13426, 320, 1114, 8, 320, 18061, 8, 320, 20, 8, 9558, 315, 8070, 3827, 220, 10559, 220, 16, 11, 22457, 220, 11584, 10884, 3392, 312, 65974, 11, 4272, 315, 8070, 3827, 400, 220, 13302, 400, 220, 23459, 400, 320, 25741, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 3649, 3230, 20192, 323, 18151, 430, 1051, 312, 65974, 505, 362, 65083, 311, 279, 79980, 660, 70816, 315, 33620, 369, 279, 1667, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 5825, 264, 47616, 1684, 315, 1268, 4442, 304, 22538, 323, 305, 17327, 10383, 279, 2883, 596, 8070, 5224, 11, 902, 374, 3062, 369, 38663, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbb1c0>, 'json_data': {'input': [[18902, 79483, 25, 721, 2345, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 459, 11741, 18133, 2449, 477, 264, 6002, 304, 279, 2246, 323, 1587, 539, 3493, 23222, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:56 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbb250>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 2883, 836, 320, 2149, 18992, 4953, 25390, 31692, 279, 2317, 369, 279, 4553, 2246, 11, 902, 17610, 315, 279, 6020, 12518, 323, 5552, 75992, 369, 420, 3230, 5502, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbb2e0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 10565, 3135, 1253, 39388, 6426, 11, 902, 3727, 1057, 3135, 5107, 311, 7168, 323, 1436, 5353, 1057, 3135, 311, 4498, 2875, 315, 17078, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 38088, 44696, 2968, 315, 63897, 596, 10565, 3135, 11, 23377, 430, 65649, 1436, 3063, 311, 20124, 430, 656, 539, 3449, 3157, 17078, 11, 28592, 28987, 30693, 27065, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbb370>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 1317, 9860, 18845, 617, 20162, 311, 279, 3135, 315, 1057, 60391, 7677, 11, 323, 584, 48248, 430, 814, 690, 3136, 311, 7958, 1057, 3938, 3135, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 430, 279, 2768, 3585, 690, 7872, 3230, 1317, 9860, 18845, 430, 617, 35901, 40028, 63897, 596, 7677, 323, 527, 3685, 311, 3136, 3815, 779, 11, 8405, 264, 69917, 369, 279, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:17:59 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:17:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbb400>, 'json_data': {'input': [[18902, 79483, 25, 32088, 9386, 1392, 323, 7089, 19735, 940, 56875, 343, 811, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 7782, 42356, 323, 76543, 30255, 11, 19392, 264, 5357, 389, 279, 2883, 596, 3938, 6020, 42356, 323, 25605, 9293, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:00 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:18:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbbeb0>, 'json_data': {'input': [[18902, 79483, 25, 12037, 3402, 13173, 6826, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 12037, 3402, 13173, 6826, 315, 63897, 4953, 2637, 264, 5199, 13189, 315, 279, 2883, 596, 6864, 24691, 8446, 13, 1102, 17738, 279, 2883, 596, 5603, 311, 18646, 1202, 25452, 323, 13758, 907, 311, 41777, 11, 902, 374, 3062, 369, 15167, 16967, 13166, 35186, 323, 6020, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbb490>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b349d0>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 17, 13, 5421, 46787, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 25891, 330, 12236, 220, 17, 13, 5421, 46787, 1359, 902, 11383, 50729, 279, 1972, 12675, 323, 13077, 13234, 477, 82280, 555, 279, 2883, 13, 1102, 7437, 279, 6566, 369, 279, 17876, 3649, 9002, 279, 2883, 596, 7106, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34a60>, 'json_data': {'input': [[18902, 79483, 25, 77990, 2206, 40412, 520, 14930, 5273, 389, 264, 11842, 265, 46839, 70128, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3857, 25394, 22538, 17303, 520, 6762, 907, 389, 264, 2536, 265, 46839, 8197, 13, 1102, 17738, 264, 6541, 304, 5357, 2949, 279, 2246, 311, 264, 3230, 5699, 315, 22538, 430, 656, 539, 617, 31368, 6449, 481, 3157, 2819, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34af0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 617, 10862, 1139, 73657, 430, 617, 539, 3686, 65362, 449, 2875, 9860, 323, 1317, 12, 4751, 3938, 26120, 14507, 315, 400, 23480, 3610, 323, 400, 18, 13, 18, 7239, 430, 527, 539, 3686, 12715, 389, 1057, 79980, 660, 31946, 61572, 13, 4314, 73657, 690, 56445, 1990, 220, 2366, 19, 323, 220, 2366, 21, 449, 2536, 86103, 481, 26120, 3878, 1990, 832, 323, 220, 914, 1667, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 35434, 73657, 430, 527, 539, 3686, 65362, 719, 617, 1027, 7378, 5304, 11, 19392, 3938, 6020, 30255, 430, 527, 539, 3686, 27000, 389, 279, 8335, 11071, 13, 1102, 20405, 1139, 279, 8244, 3857, 389, 73657, 11, 82003, 279, 2883, 596, 59314, 9293, 369, 3938, 3634, 3966, 323, 4754, 6020, 25127, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34b80>, 'json_data': {'input': [[18902, 79483, 25, 6515, 53929, 11, 10496, 66724, 11, 22538, 11, 323, 3512, 478, 42204, 527, 3062, 5540, 315, 1057, 8244, 13166, 8446, 323, 1005, 315, 6864, 11, 323, 1521, 14463, 1436, 387, 3769, 311, 1057, 6020, 3044, 323, 10565, 3135, 13, 1226, 1755, 311, 3136, 311, 15806, 323, 3810, 1139, 20954, 9002, 264, 7029, 1358, 315, 1778, 4754, 19092, 28904, 11, 902, 1436, 1893, 96691, 29412, 10565, 27129, 323, 53869, 13, 4427, 315, 279, 5789, 1405, 584, 3663, 15635, 2997, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 12939, 315, 63948, 11, 10496, 66724, 11, 323, 1023, 19092, 14463, 311, 63897, 596, 13166, 8446, 11, 1418, 1101, 61708, 279, 38088, 15635, 323, 11774, 814, 3118, 11, 6376, 709, 264, 11944, 6492, 315, 1884, 15635, 304, 279, 2768, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34c10>, 'json_data': {'input': [[18902, 79483, 25, 8483, 323, 11050, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 8712, 315, 8483, 323, 11050, 320, 49, 33465, 8, 2949, 279, 27927, 2317, 315, 63897, 4953, 3238, 82, 6020, 5178, 13, 1102, 22020, 279, 2883, 596, 9341, 304, 432, 33465, 439, 264, 1401, 13189, 315, 1202, 25605, 18512, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34ca0>, 'json_data': {'input': [[18902, 79483, 25, 20448, 18512, 369, 15009, 323, 11156, 8420, 8647, 369, 432, 33465, 5552, 311, 1057, 6484, 323, 502, 3956, 323, 3600, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 20448, 18512, 369, 432, 33465, 8420, 13, 1102, 6209, 20616, 1139, 832, 315, 279, 1925, 6956, 315, 432, 33465, 18512, 11, 82003, 279, 2853, 5938, 449, 3823, 5070, 10968, 389, 2027, 323, 2532, 4500, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:10 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34d30>, 'json_data': {'input': [[18902, 79483, 25, 220, 2287, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 5042, 264, 1396, 5905, 11, 4461, 19392, 264, 2199, 477, 3857, 1396, 304, 279, 2246, 13, 1102, 1587, 539, 3493, 904, 67749, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34dc0>, 'json_data': {'input': [[18902, 79483, 25, 220, 22, 627, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 369, 420, 12143, 26, 433, 1253, 387, 264, 6002, 477, 10321, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34e50>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 2262, 369, 66251, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34ee0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 63897, 4953, 13, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:15 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34f70>, 'json_data': {'input': [[18902, 79483, 25, 220, 2813, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 8111, 311, 387, 264, 2199, 1396, 21070, 477, 6002, 11, 4461, 5552, 311, 279, 38846, 5897, 13146, 10430, 13, 1102, 1587, 539, 6782, 67749, 2038, 9959, 311, 8830, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b35000>, 'json_data': {'input': [[18902, 79483, 25, 23139, 7318, 369, 8070, 13426, 11, 4272, 315, 73618, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 3230, 6020, 18767, 5552, 311, 8515, 6530, 11, 19392, 279, 8515, 7318, 369, 8070, 13426, 11, 4272, 315, 904, 73618, 13, 1102, 374, 961, 315, 279, 69051, 75992, 311, 279, 8515, 6530, 5224, 11, 8405, 5217, 2317, 369, 8515, 6530, 6373, 323, 3827, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b35090>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 76267, 4653, 1634, 279, 330, 2620, 315, 36962, 1359, 4726, 82003, 279, 2246, 753, 17057, 6070, 323, 10695, 13016, 25539, 3230, 14491, 477, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b35120>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 311, 3493, 2317, 369, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:20 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b351b0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 961, 315, 279, 6771, 315, 36962, 11, 13788, 439, 264, 34512, 1697, 12576, 4856, 1109, 8405, 39319, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbbf40>, 'json_data': {'input': [[18902, 79483, 25, 26182, 238, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 32400, 430, 374, 54291, 11, 19392, 430, 63897, 1587, 539, 49229, 439, 264, 9333, 13122, 2883, 13, 1115, 7872, 374, 9959, 369, 23331, 8907, 323, 13122, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbbe20>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4382, 5905, 311, 279, 2007, 315, 8970, 11, 902, 2942, 4861, 279, 2246, 753, 6070, 323, 6276, 13016, 311, 21546, 1555, 5370, 14491, 6847, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbbd90>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 374, 279, 4342, 19392, 430, 279, 2246, 18713, 1771, 311, 63897, 4953, 2637, 279, 2748, 2883, 315, 5195, 11, 323, 7437, 279, 2317, 369, 279, 6020, 2038, 10666, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:25 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbbd00>, 'json_data': {'input': [[18902, 79483, 25, 220, 2148, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 2199, 1396, 21070, 323, 1587, 539, 6782, 904, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbbc70>, 'json_data': {'input': [[18902, 79483, 25, 46272, 9879, 33549, 311, 11360, 220, 717, 3348, 8, 315, 279, 3298, 512, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 1212, 315, 264, 3857, 430, 14564, 34919, 9879, 33549, 311, 11360, 220, 717, 3348, 8, 315, 279, 3298, 11, 43080, 430, 279, 2768, 2038, 690, 281, 7770, 311, 5217, 34919, 539, 9879, 1234, 11360, 220, 717, 1921, 570]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbbbe0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:29 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbbb50>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 5224, 27053, 279, 2883, 596, 5357, 389, 24009, 12659, 323, 6968, 15022, 20448, 7620, 13, 1102, 374, 961, 315, 264, 8294, 10430, 389, 41295, 6373, 323, 3823, 5070, 15174, 430, 1862, 279, 2883, 596, 6650, 323, 25605, 27375, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbbac0>, 'json_data': {'input': [[18902, 79483, 25, 9580, 220, 16, 482, 11480, 11374, 430, 8881, 24116, 7729, 320, 359, 88897, 8, 369, 20086, 12032, 477, 58165, 304, 4642, 11987, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 9580, 220, 16, 315, 279, 6762, 907, 30022, 11, 902, 17610, 315, 40635, 11374, 505, 4642, 11987, 13, 1115, 24790, 374, 7718, 369, 39210, 311, 3619, 1268, 63897, 67349, 9513, 323, 24305, 1062, 38170, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:30 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:18:31 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:18:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbba30>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 1032, 13, 63457, 6979, 32612, 3579, 8758, 27034, 3651, 85447, 41447, 7934, 37868, 11, 3651, 20843, 878, 2006, 96778, 10360, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 17219, 315, 279, 3857, 5552, 311, 35211, 69668, 323, 25368, 56385, 11, 902, 6118, 49095, 904, 2626, 67029, 1990, 279, 2883, 323, 1202, 29509, 477, 4580, 3697, 13, 46551, 1521, 12135, 374, 16996, 369, 47614, 4754, 26885, 315, 2802, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fba710>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 19, 13, 2009, 2315, 198, 2014, 940, 1534, 73094, 25, 330, 9290, 220, 19, 13, 2009, 2315, 1, 15151, 279, 7314, 315, 264, 502, 3857, 10968, 389, 279, 2883, 596, 71419, 28904, 11, 31720, 2500, 13189, 315, 279, 2883, 753, 6020, 13122, 5552, 311, 10565, 73657, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:34 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbb9a0>, 'json_data': {'input': [[18902, 79483, 25, 311, 7068, 13, 1442, 279, 15691, 907, 315, 279, 12032, 477, 9513, 1912, 374, 539, 11993, 481, 11, 279, 53317, 15324, 374, 17303, 439, 279, 3392, 555, 902, 279, 15691, 907, 36375, 1202, 6762, 907, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 53317, 315, 1317, 62954, 12032, 11, 45293, 279, 18324, 315, 53317, 18151, 13, 1115, 2038, 374, 9200, 369, 39210, 311, 3619, 1268, 279, 2883, 29972, 323, 6821, 279, 907, 315, 1202, 1317, 9860, 12032, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fba7a0>, 'json_data': {'input': [[18902, 79483, 25, 22395, 63897, 4953, 2637, 279, 328, 43945, 220, 2636, 8167, 11, 279, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 961, 315, 264, 5708, 5178, 4876, 430, 43565, 63897, 4953, 3238, 82, 5178, 2403, 5370, 5708, 15285, 13, 1102, 15151, 430, 279, 17876, 828, 690, 41468, 279, 40944, 4780, 315, 63897, 596, 3308, 362, 5708, 16662, 279, 328, 43945, 220, 2636, 8167, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fba830>, 'json_data': {'input': [[18902, 79483, 25, 81019, 1534, 8895, 320, 9563, 8, 389, 2536, 30004, 36164, 25452, 34919, 41853, 369, 1234, 279, 19179, 10778, 374, 40056, 315, 400, 605, 13, 15, 7239, 11, 400, 18, 13, 18, 7239, 11, 323, 400, 16, 13, 23, 7239, 315, 40872, 34074, 439, 315, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 15947, 11, 323, 400, 8259, 3610, 11, 400, 18, 13, 15, 7239, 11, 323, 400, 17, 13, 24, 7239, 315, 45578, 34074, 320, 16564, 38974, 1392, 8, 439, 315, 6790, 220, 2148, 11, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 11, 15947, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 50204, 1534, 20192, 323, 18151, 389, 2536, 30004, 36164, 25452, 34919, 41853, 369, 1234, 264, 3230, 19179, 10778, 11, 8405, 11944, 12678, 369, 220, 2366, 16, 11, 220, 2366, 17, 11, 323, 220, 2366, 18, 13, 1102, 11621, 8149, 311, 279, 10430, 315, 25452, 22538, 323, 872, 51262, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:38 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fba8c0>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 605, 13, 9386, 1392, 323, 2140, 287, 6072, 198, 2014, 940, 1534, 73094, 25, 1115, 15785, 279, 7314, 315, 7181, 220, 605, 11, 902, 35434, 42356, 323, 39639, 6072, 13, 1102, 15151, 264, 3857, 12514, 311, 8830, 279, 2883, 596, 6020, 30255, 323, 4754, 58165, 430, 1436, 5536, 1202, 6020, 2361, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fba950>, 'json_data': {'input': [[18902, 79483, 25, 7766, 11, 902, 15871, 2997, 6763, 315, 279, 28569, 3070, 315, 7766, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 9731, 279, 10430, 389, 13254, 9659, 2949, 5195, 8471, 11, 11951, 21760, 389, 279, 6763, 315, 7766, 11, 1778, 439, 279, 28569, 3070, 13, 1102, 66159, 279, 21797, 2461, 315, 8070, 8336, 7953, 8776, 13172, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fba9e0>, 'json_data': {'input': [[18902, 79483, 25, 21304, 59678, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7434, 315, 5178, 12718, 11, 43080, 264, 6541, 311, 25394, 20448, 28904, 17791, 311, 9341, 4780, 13, 1102, 17482, 439, 264, 4342, 369, 279, 17876, 16540, 315, 1268, 1521, 12718, 527, 41853, 369, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbaa70>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 374, 279, 6771, 315, 36962, 315, 279, 2246, 11, 902, 50729, 279, 6070, 323, 7471, 315, 279, 1934, 13, 1102, 5825, 459, 24131, 315, 279, 2204, 14491, 323, 13650, 9960, 11, 10695, 13016, 21546, 279, 2246, 13750, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:43 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbab00>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 330, 2620, 315, 36962, 1359, 902, 50729, 279, 6070, 315, 279, 2246, 323, 11725, 279, 5370, 14491, 323, 13650, 9960, 11, 10695, 13016, 21546, 279, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b343a0>, 'json_data': {'input': [[18902, 79483, 25, 5195, 7694, 612, 1023, 30466, 7319, 400, 717, 13, 21, 7239, 505, 220, 2366, 17, 311, 220, 2366, 18, 13, 578, 8244, 6650, 574, 16625, 555, 958, 9920, 9547, 2737, 12992, 304, 2778, 20126, 13239, 505, 6650, 304, 1217, 25375, 323, 10648, 389, 6505, 7766, 26, 6650, 304, 87386, 10374, 26, 323, 18637, 584, 617, 1903, 304, 1008, 20447, 323, 9889, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 16964, 279, 9547, 10043, 279, 6650, 315, 30466, 304, 279, 5195, 7694, 612, 1023, 5699, 505, 220, 2366, 17, 311, 220, 2366, 18, 13, 1102, 5825, 2317, 369, 8830, 279, 30295, 315, 1217, 20392, 323, 87386, 10374, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34430>, 'json_data': {'input': [[18902, 79483, 25, 1226, 2759, 369, 8070, 13426, 1701, 279, 9513, 323, 24305, 1749, 11, 1234, 902, 584, 15641, 279, 3392, 315, 13426, 45691, 477, 21639, 481, 369, 279, 1510, 1060, 323, 27334, 3827, 12032, 323, 58165, 369, 279, 3938, 3827, 16296, 315, 4455, 430, 617, 1027, 15324, 304, 1057, 6020, 12518, 477, 3827, 4780, 13, 1226, 6767, 1510, 323, 27334, 3827, 12032, 323, 58165, 3196, 389, 19705, 315, 44977, 3827, 2383, 13, 1226, 15806, 279, 29736, 315, 3938, 49803, 315, 1057, 27334, 3827, 12032, 3196, 389, 682, 2561, 6029, 323, 5813, 264, 51262, 41458, 311, 8108, 27334, 3827, 12032, 994, 433, 374, 810, 4461, 1109, 539, 430, 814, 690, 539, 387, 15393, 477, 4984, 264, 51262, 41458, 311, 5376, 27334, 3827, 12032, 994, 433, 374, 810, 4461, 1109, 539, 430, 814, 690, 387, 15393, 13, 1226, 617, 16689, 311, 2759, 369, 279, 3827, 6372, 315, 279, 3728, 528, 61186, 3428, 3827, 33620, 17575, 439, 264, 1510, 4261, 20900, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 50729, 279, 1749, 20011, 555, 63897, 4953, 13, 369, 24043, 369, 8070, 13426, 11, 82003, 279, 9513, 323, 24305, 5603, 13, 1115, 374, 3062, 369, 8830, 1268, 3827, 30255, 527, 27000, 304, 279, 2883, 596, 6020, 12518, 323, 872, 4754, 5536, 389, 4272, 8070, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b344c0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 374, 264, 4342, 19392, 279, 3917, 315, 279, 2246, 11, 11951, 5552, 311, 63897, 4953, 2637, 902, 64252, 279, 6742, 922, 279, 8244, 2262, 323, 5357, 315, 279, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:48 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34550>, 'json_data': {'input': [[18902, 79483, 25, 37543, 304, 279, 4500, 323, 1005, 315, 15592, 1253, 1121, 304, 43839, 1697, 11682, 323, 7319, 24305, 14675, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 7057, 315, 43839, 1697, 323, 24305, 15635, 5938, 449, 279, 4500, 323, 1005, 315, 15592, 14645, 11, 6376, 279, 6566, 369, 264, 19662, 27501, 315, 1521, 4819, 304, 17876, 27855, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b345e0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 76267, 4653, 1634, 279, 330, 2620, 315, 36962, 1359, 4726, 82003, 279, 2246, 753, 17057, 6070, 323, 10695, 13016, 25539, 3230, 14491, 477, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34670>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 21, 13, 510, 54103, 933, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 264, 4694, 3857, 304, 279, 2246, 11, 23377, 430, 912, 2262, 374, 3984, 304, 420, 961, 315, 279, 1934, 11, 902, 1436, 387, 369, 3938, 1005, 477, 439, 264, 6002, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:52 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34700>, 'json_data': {'input': [[18902, 79483, 25, 3580, 24442, 8554, 627, 2014, 940, 1534, 73094, 25, 1115, 5224, 70074, 279, 6742, 311, 8464, 311, 24442, 8554, 369, 5217, 3649, 477, 41941, 9002, 279, 39954, 5068, 304, 279, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34790>, 'json_data': {'input': [[18902, 79483, 25, 1226, 9395, 311, 1977, 279, 1455, 11084, 11, 6220, 11, 323, 8647, 15592, 449, 4211, 430, 527, 8040, 11, 16572, 11, 323, 78477, 7162, 12793, 520, 5569, 23134, 555, 1057, 8738, 9341, 304, 15592, 11156, 14054, 13, 763, 6790, 220, 2366, 18, 11, 584, 11887, 86811, 11, 1057, 1455, 13171, 323, 4689, 1646, 13, 1102, 574, 5918, 505, 279, 5015, 709, 311, 387, 80149, 58697, 11, 902, 3445, 433, 649, 93640, 323, 61440, 3619, 11, 14816, 4028, 11, 323, 16343, 2204, 4595, 315, 2038, 11, 2737, 1495, 11, 2082, 11, 7855, 11, 5448, 11, 323, 2835, 13, 5751, 7411, 4028, 63897, 690, 33164, 86811, 11, 439, 1664, 439, 1023, 15592, 4211, 584, 617, 8767, 8040, 323, 7376, 11, 4028, 1057, 2626, 311, 6493, 279, 1888, 2027, 323, 2532, 11704, 369, 1057, 3932, 11, 50270, 11, 8717, 11, 6444, 11, 323, 13707, 627, 2014, 940, 1534, 73094, 25, 763, 420, 12143, 11, 279, 2246, 35434, 279, 7195, 315, 86811, 11, 264, 5199, 15592, 1646, 8040, 555, 63897, 11, 25985, 1113, 389, 1202, 17357, 323, 4754, 8522, 13, 1115, 22020, 279, 2883, 596, 14529, 19297, 304, 15592, 5557, 323, 1202, 19092, 12939, 369, 3938, 7677, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34820>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 9086, 46613, 220, 17, 11, 420, 12143, 312, 2058, 988, 330, 2149, 18992, 4953, 1210, 439, 279, 14836, 315, 279, 2246, 11, 82003, 279, 9764, 315, 279, 2883, 323, 279, 1934, 596, 4033, 7138, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b348b0>, 'json_data': {'input': [[18902, 79483, 25, 1666, 8767, 36489, 11, 5195, 15620, 11, 264, 41164, 315, 63897, 11, 13019, 22736, 449, 279, 8690, 12411, 8398, 5475, 33549, 311, 8690, 26542, 2585, 8670, 11, 902, 2011, 387, 84864, 449, 4972, 311, 279, 1179, 315, 9960, 3673, 13, 578, 2038, 3984, 33549, 311, 11360, 220, 1032, 2666, 8, 315, 279, 19224, 3298, 304, 3744, 8105, 11, 5858, 220, 20, 315, 1057, 75483, 8423, 389, 3459, 220, 605, 29342, 369, 279, 8502, 9670, 6250, 220, 966, 11, 220, 2366, 18, 374, 32762, 36881, 555, 5905, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 961, 315, 279, 6771, 315, 36962, 11, 902, 8779, 13016, 21546, 279, 2246, 13, 1102, 17482, 439, 264, 69917, 369, 9455, 3230, 14491, 2949, 279, 9974, 1934, 11, 47594, 2246, 76160, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34310>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b341f0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 2038, 922, 1057, 21282, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 690, 3118, 6020, 828, 922, 63897, 4953, 3238, 82, 21282, 11, 43080, 264, 9320, 311, 47616, 6492, 315, 279, 2883, 596, 2626, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:18:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34160>, 'json_data': {'input': [[18902, 79483, 25, 24478, 3430, 7318, 824, 4430, 5764, 7194, 5938, 449, 279, 2109, 75202, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 430, 279, 5578, 3430, 7318, 824, 4430, 304, 279, 5708, 2109, 13173, 7640, 5764, 5938, 7194, 13, 1115, 7872, 374, 3062, 369, 15167, 439, 433, 5825, 264, 810, 13687, 8830, 315, 279, 837, 2853, 315, 2109, 75202, 7953, 1120, 279, 4430, 3430, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b340d0>, 'json_data': {'input': [[18902, 79483, 25, 2290, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5415, 330, 4155, 1359, 19392, 430, 1070, 1051, 912, 4442, 477, 91972, 5068, 304, 279, 3766, 3857, 9002, 24043, 75992, 11, 902, 1253, 3493, 44701, 311, 39210, 922, 279, 20334, 315, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b34040>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2822, 2262, 3984, 369, 6492, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:02 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:19:02 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:19:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b352d0>, 'json_data': {'input': [[18902, 79483, 25, 8060, 311, 7946, 32172, 279, 19426, 7677, 11, 14645, 11, 3600, 11, 323, 17274, 320, 16564, 13042, 18052, 323, 38231, 315, 8420, 8, 323, 4726, 2274, 279, 19426, 2626, 477, 5557, 280, 2014, 940, 1534, 73094, 25, 1115, 12143, 24400, 389, 279, 11774, 315, 54952, 19426, 15086, 11, 2737, 25605, 11, 30116, 11, 323, 17274, 13878, 13, 1102, 27053, 279, 27927, 7057, 315, 279, 27129, 5220, 3663, 304, 44114, 279, 30199, 7720, 315, 63948, 323, 20958, 25605, 27375, 1772, 38698, 17647, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b36710>, 'json_data': {'input': [[18902, 79483, 25, 12937, 35695, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 3649, 922, 279, 2883, 596, 5708, 6787, 11, 11951, 279, 63897, 3383, 2954, 323, 9240, 660, 220, 2366, 16, 12937, 9878, 11, 19392, 279, 4595, 315, 5708, 6108, 23146, 9076, 311, 8420, 13, 1102, 7437, 279, 6566, 369, 8830, 279, 2883, 596, 5603, 311, 9548, 36580, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:05 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b36680>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 4461, 15151, 279, 2316, 315, 279, 2246, 11, 330, 2149, 18992, 4953, 13, 1359, 31692, 279, 2317, 430, 279, 2038, 18713, 1771, 311, 420, 3230, 27767, 323, 1202, 6020, 12518, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:07 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b365f0>, 'json_data': {'input': [[18902, 79483, 25, 220, 6281, 627, 2014, 940, 1534, 73094, 25, 220, 6281, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:08 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b36560>, 'json_data': {'input': [[18902, 79483, 25, 2650, 1226, 7557, 18099, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 2883, 596, 13254, 9659, 15174, 11, 19392, 264, 6541, 304, 5357, 7119, 6020, 7677, 13, 1102, 7437, 279, 6566, 369, 264, 11944, 16540, 315, 1268, 63897, 3727, 3300, 11, 8104, 1555, 1202, 13172, 323, 3600, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:09 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b364d0>, 'json_data': {'input': [[18902, 79483, 25, 220, 845, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 6002, 323, 1587, 539, 6782, 9959, 2262, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:11 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b36440>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 2246, 18713, 1771, 311, 63897, 4953, 2637, 31692, 279, 3917, 315, 279, 6020, 3135, 323, 25605, 5178, 14407, 6957, 279, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:12 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b363b0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 374, 7554, 369, 420, 12143, 26, 433, 1253, 387, 264, 6002, 477, 10321, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:13 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b36320>, 'json_data': {'input': [[18902, 79483, 25, 1789, 5217, 2038, 11, 1518, 7181, 220, 806, 315, 279, 18559, 311, 79980, 660, 17961, 70816, 5343, 304, 5858, 220, 23, 315, 420, 25992, 8423, 389, 3459, 220, 605, 16222, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 5217, 2038, 304, 7181, 220, 806, 315, 279, 18559, 311, 279, 79980, 660, 17961, 70816, 11, 51346, 13016, 311, 1427, 369, 810, 11944, 75992, 5552, 311, 279, 4430, 2109, 13173, 2068, 11, 902, 374, 9959, 369, 16195, 6020, 6492, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:14 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b36290>, 'json_data': {'input': [[18902, 79483, 25, 320, 16, 340, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 264, 5905, 5296, 320, 16, 705, 902, 4461, 34310, 311, 5217, 2038, 477, 4579, 18790, 5552, 311, 279, 6020, 828, 10666, 304, 3766, 27855, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:16 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b36200>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 26, 9093, 11, 2317, 4250, 387, 11075, 13, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:17 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbab90>, 'json_data': {'input': [[18902, 79483, 25, 54463, 2857, 29362, 311, 1057, 8351, 198, 2014, 940, 1534, 73094, 25, 1115, 3857, 40019, 279, 1176, 5699, 315, 15635, 3230, 311, 63897, 4953, 2637, 39686, 279, 2883, 596, 8987, 54180, 389, 13172, 13254, 13, 1102, 12018, 2548, 21738, 264, 10430, 922, 279, 25127, 315, 11293, 13172, 10374, 477, 29735, 304, 87386, 7865, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:18 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fba680>, 'json_data': {'input': [[18902, 79483, 25, 15903, 11, 584, 527, 3917, 311, 42028, 7016, 323, 14640, 430, 62974, 3508, 11, 1268, 11, 323, 1234, 1148, 13463, 584, 649, 8481, 11, 1920, 323, 5255, 5371, 4443, 828, 11, 439, 1664, 439, 14529, 13627, 6299, 505, 15945, 87003, 11527, 5552, 311, 5425, 28117, 31711, 315, 4443, 828, 13, 578, 32939, 315, 5370, 828, 8481, 24717, 584, 5131, 17631, 5304, 8625, 3917, 311, 5897, 11, 23331, 11, 323, 5054, 26006, 304, 2225, 4606, 323, 279, 549, 815, 2637, 902, 1253, 1397, 603, 311, 10737, 1057, 6484, 28904, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 14564, 279, 84140, 323, 5897, 11774, 5938, 449, 828, 8481, 323, 8863, 14640, 11, 8104, 304, 3177, 315, 42028, 7016, 304, 4606, 323, 279, 549, 815, 13, 1102, 22020, 279, 4754, 1205, 369, 279, 2883, 311, 10737, 1202, 828, 11850, 12659, 11, 19392, 279, 27927, 7057, 315, 23331, 8907, 323, 1202, 25127, 369, 279, 2883, 596, 7677, 323, 2626, 1646, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:19 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fba5f0>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 2500, 6002, 19392, 279, 9546, 315, 264, 2007, 315, 8970, 11, 902, 8779, 13016, 21546, 279, 2246, 30820, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:21 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fba560>, 'json_data': {'input': [[18902, 79483, 25, 430, 527, 3970, 311, 387, 11, 32302, 4528, 311, 477, 2731, 1109, 11604, 13, 4314, 14645, 1436, 8108, 10648, 315, 1057, 3956, 323, 3600, 11, 323, 5457, 603, 311, 20874, 304, 2204, 5627, 323, 28410, 5199, 5070, 311, 2274, 323, 14816, 6273, 477, 2731, 3956, 323, 3600, 13, 26517, 12170, 529, 2450, 304, 8405, 29722, 3956, 323, 3600, 477, 304, 51647, 323, 51110, 3932, 11, 50270, 11, 36717, 11, 6444, 11, 323, 2262, 12850, 1436, 11682, 1057, 6020, 3044, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 10449, 35434, 279, 15022, 18921, 17011, 555, 279, 2883, 11, 82003, 279, 12939, 315, 19297, 304, 20958, 3157, 41961, 13, 1102, 22020, 279, 4754, 15635, 311, 6020, 20334, 422, 28650, 12265, 304, 51647, 3932, 323, 50270, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:22 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fba4d0>, 'json_data': {'input': [[18902, 79483, 25, 1226, 10519, 459, 41458, 369, 6807, 18151, 369, 9815, 2215, 43672, 11, 902, 374, 12715, 439, 459, 4445, 311, 9815, 2215, 43672, 11, 323, 4442, 304, 1778, 527, 21771, 439, 4689, 323, 23541, 20900, 304, 279, 79980, 660, 70816, 315, 33620, 13, 1226, 8720, 6667, 3225, 555, 34988, 9815, 2215, 43672, 389, 264, 22498, 8197, 1405, 4528, 17910, 3073, 323, 389, 459, 3927, 8197, 994, 584, 10765, 3230, 6444, 449, 3967, 42254, 477, 6667, 3225, 4819, 13, 763, 26679, 279, 3392, 315, 279, 41458, 369, 6807, 18151, 11, 584, 2980, 13970, 6667, 3225, 3196, 389, 3347, 4245, 2704, 323, 1304, 59358, 922, 279, 6807, 20069, 1918, 315, 6444, 3196, 389, 14529, 6807, 56181, 13, 1226, 1101, 2980, 6130, 19440, 2038, 11, 1510, 3157, 4787, 11, 323, 13579, 323, 1862, 481, 51165, 315, 3938, 7100, 4787, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 41458, 369, 6807, 18151, 5552, 311, 9815, 2215, 43672, 323, 279, 5528, 1511, 311, 8720, 6667, 3225, 13, 1102, 374, 31183, 304, 279, 6020, 10396, 9002, 2215, 344, 4893, 323, 5326, 6373, 11, 8405, 26793, 1139, 1268, 63897, 4953, 13, 36090, 988, 279, 5326, 315, 653, 17840, 1260, 9815, 323, 7576, 18512, 28178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:23 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fba440>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 311, 3493, 2317, 369, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:24 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fba3b0>, 'json_data': {'input': [[18902, 79483, 25, 41755, 61396, 43672, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 389, 41755, 61396, 43672, 11, 19392, 264, 5357, 389, 279, 2883, 753, 6373, 323, 24043, 315, 2215, 344, 4893, 11, 902, 374, 9200, 369, 8830, 1202, 13254, 4526, 11618, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:26 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fba320>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:27 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fba290>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 1032, 13, 63457, 6979, 32612, 3579, 8758, 27034, 3651, 85447, 41447, 7934, 37868, 11, 3651, 20843, 878, 2006, 96778, 10360, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 17219, 315, 279, 3857, 5552, 311, 35211, 69668, 323, 25368, 56385, 11, 902, 6118, 49095, 904, 2626, 67029, 1990, 279, 2883, 323, 1202, 29509, 477, 4580, 3697, 13, 46551, 1521, 12135, 374, 16996, 369, 47614, 4754, 26885, 315, 2802, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:28 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbb520>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 279, 24069, 3938, 12717, 14507, 369, 1317, 9860, 11897, 11, 2737, 17452, 26120, 58165, 11, 369, 1855, 315, 279, 1828, 4330, 1667, 323, 46095, 1051, 439, 11263, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 3938, 8323, 30255, 369, 279, 2883, 596, 1317, 9860, 11897, 11, 45293, 279, 15055, 4245, 304, 279, 14827, 1667, 13, 1115, 2038, 374, 16996, 369, 47614, 279, 2883, 753, 8515, 6530, 8670, 323, 6020, 9293, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:30 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbb5b0>, 'json_data': {'input': [[18902, 79483, 25, 578, 2768, 2007, 18911, 30466, 18792, 94140, 555, 955, 320, 258, 11990, 997, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 264, 2007, 430, 50729, 30466, 555, 955, 369, 5300, 1667, 13, 1115, 18792, 35542, 374, 9200, 369, 8830, 279, 13254, 18528, 315, 63897, 4953, 2637, 10923, 39210, 311, 1518, 18845, 323, 19564, 505, 2204, 21282, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:31 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbb640>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 3917, 311, 6807, 5326, 15871, 505, 8515, 86106, 11, 3157, 481, 11897, 34919, 11, 32905, 6020, 24198, 11, 2737, 7362, 9473, 17517, 11, 323, 9815, 2215, 43672, 13, 1226, 10299, 1057, 6807, 5326, 14675, 1555, 32100, 15813, 315, 1057, 5663, 34057, 6807, 20069, 1918, 11, 6807, 13693, 323, 1005, 315, 52508, 6373, 13, 19620, 9473, 17517, 527, 1380, 22955, 449, 5370, 6020, 14673, 449, 1579, 6807, 11509, 13, 41755, 2215, 43672, 527, 11383, 653, 85408, 323, 527, 14592, 505, 30466, 15662, 505, 6444, 7559, 2212, 279, 1917, 13, 1226, 10299, 1057, 6807, 5326, 14675, 555, 16785, 14529, 56181, 311, 8417, 6130, 6807, 323, 584, 4017, 279, 3392, 315, 6807, 584, 13334, 13, 1226, 8965, 656, 539, 1397, 52508, 505, 1057, 6444, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 25985, 988, 389, 279, 2883, 596, 14675, 311, 6807, 5326, 11, 45293, 279, 3230, 6020, 24198, 520, 5326, 323, 1268, 279, 2883, 29972, 1521, 15635, 1555, 41300, 323, 6807, 13693, 13, 1102, 5825, 20616, 1139, 279, 2883, 596, 5326, 6373, 12659, 11, 902, 527, 16996, 369, 39210, 47614, 6020, 20334, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:32 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbb6d0>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 24, 32, 13, 16511, 97983, 3651, 25362, 1507, 51761, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 7314, 315, 5858, 220, 24, 32, 11, 25891, 330, 14893, 323, 75111, 1359, 902, 35434, 279, 5419, 11835, 323, 16346, 5552, 311, 279, 2883, 596, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:33 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:19:33 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbb760>, 'json_data': {'input': [[18902, 79483, 25, 1252, 7164, 291, 94960, 12937, 36281, 16923, 291, 12, 24478, 5742, 315, 45285, 24668, 12, 1956, 14930, 5273, 1252, 7164, 291, 439, 315, 6790, 220, 2148, 11, 220, 2366, 17, 220, 16723, 400, 220, 7699, 13, 3264, 73943, 220, 15666, 400, 220, 3534, 13, 2946, 650, 10185, 320, 13460, 8, 400, 220, 1041, 13, 1927, 1789, 1897, 1639, 2971, 39492, 320, 843, 8, 400, 220, 7461, 13, 3487, 1252, 7164, 291, 439, 315, 6790, 220, 2148, 11, 220, 2366, 18, 220, 18633, 400, 220, 6849, 13, 6365, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 5727, 3230, 12678, 505, 279, 24107, 52, 7640, 2007, 11, 45293, 279, 1396, 315, 13551, 430, 1051, 653, 7164, 291, 11, 11938, 11, 79051, 11, 323, 50032, 1639, 2971, 39492, 2391, 279, 1060, 13, 1102, 5825, 1401, 26793, 1139, 279, 2883, 596, 5708, 6108, 20448, 12659, 323, 9548, 38231, 15174, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:34 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:19:35 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59fbb7f0>, 'json_data': {'input': [[18902, 79483, 25, 5751, 14529, 9341, 304, 502, 9873, 11, 3956, 11, 3600, 11, 323, 14645, 374, 49188, 41273, 11, 323, 1436, 37098, 6373, 6666, 323, 11682, 1057, 2626, 11, 6020, 3044, 11, 323, 10565, 3135, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 14564, 279, 38088, 15635, 5938, 449, 279, 2883, 753, 14529, 22538, 304, 502, 3956, 323, 14645, 13, 1102, 49140, 430, 1521, 66724, 1436, 37098, 6373, 596, 5357, 323, 48291, 5536, 8244, 2626, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:36 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b35510>, 'json_data': {'input': [[18902, 79483, 25, 5195, 15161, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 3857, 12514, 311, 5195, 15161, 13, 1102, 15151, 264, 9320, 311, 25394, 2500, 3062, 13254, 10449, 11, 82003, 279, 7982, 26431, 315, 9624, 3600, 304, 63897, 4953, 3238, 82, 20136, 323, 6020, 5178, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:37 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b36b90>, 'json_data': {'input': [[18902, 79483, 25, 1226, 1436, 387, 3917, 311, 4442, 304, 3827, 7969, 11, 279, 25375, 315, 502, 549, 815, 13, 477, 6625, 3827, 13543, 11, 477, 14675, 311, 5217, 3827, 58165, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 22020, 279, 2883, 596, 14675, 311, 3827, 14228, 15635, 11, 2737, 4442, 304, 3827, 13543, 323, 7969, 13, 1102, 17482, 439, 459, 17219, 311, 264, 10430, 389, 6020, 14640, 323, 872, 4754, 5536, 389, 279, 2883, 596, 63336, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:39 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b36c20>, 'json_data': {'input': [[18902, 79483, 25, 1789, 13122, 10096, 5195, 41095, 1403, 21282, 25, 5195, 8471, 323, 5195, 15161, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 20064, 9803, 279, 6070, 315, 5195, 596, 13122, 11, 19392, 430, 433, 41095, 1403, 1925, 21282, 25, 5195, 8471, 323, 5195, 15161, 13, 1115, 2317, 374, 3062, 369, 8830, 1268, 279, 2883, 2942, 4861, 1202, 2626, 7677, 369, 6020, 13122, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:40 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b36cb0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 220]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:41 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b36d40>, 'json_data': {'input': [[18902, 79483, 25, 1226, 527, 264, 2883, 315, 22999, 11, 23944, 11, 323, 25429, 1274, 13, 1226, 27830, 20632, 323, 28697, 11, 323, 15253, 279, 20140, 315, 6848, 311, 2686, 6485, 11774, 304, 5557, 323, 8396, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 25985, 988, 389, 5195, 596, 41295, 7829, 11, 82003, 279, 29600, 315, 1202, 32027, 2345, 2407, 33279, 11, 11005, 11, 323, 11939, 13, 1102, 15151, 279, 2883, 596, 5357, 389, 20632, 323, 28697, 11, 902, 527, 7718, 369, 28118, 6485, 30116, 323, 59529, 11774, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:42 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b36dd0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 279, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:44 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b36e60>, 'json_data': {'input': [[18902, 79483, 25, 220, 4331, 627, 2014, 940, 1534, 73094, 25, 22196, 311, 46613, 220, 16, 11, 420, 12143, 15785, 279, 7314, 315, 264, 502, 3857, 477, 2199, 11, 4461, 19392, 264, 9320, 311, 2500, 13189, 315, 279, 6020, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:45 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b36ef0>, 'json_data': {'input': [[18902, 79483, 25, 37032, 220, 16, 33, 13, 6781, 7157, 1971, 22449, 4015, 49145, 95842, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 7314, 315, 264, 502, 3857, 304, 279, 2246, 11, 19392, 430, 433, 690, 2686, 81261, 5687, 6170, 11, 8051, 912, 3230, 3649, 527, 3984, 13, 1102, 17482, 439, 264, 6002, 369, 8907, 477, 23331, 38864, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:46 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b36f80>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5042, 5415, 330, 2149, 18992, 4953, 1210, 323, 17482, 439, 264, 4342, 477, 62469, 5905, 311, 279, 2883, 11, 31692, 279, 2317, 369, 279, 4553, 2246, 439, 459, 9974, 1934, 10968, 389, 63897, 4953, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:47 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b37010>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 366, 2196, 940, 2038, 539, 3984, 304, 701, 1715, 29]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:49 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b370a0>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 3493, 904, 5217, 2038, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:50 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b37130>, 'json_data': {'input': [[18902, 79483, 25, 6909, 17244, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 72214, 279, 1212, 315, 3744, 17244, 315, 279, 2246, 11, 902, 6118, 5727, 5370, 80506, 2038, 11, 2737, 6020, 12518, 323, 11944, 75992, 2631, 555, 14640, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:51 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b371c0>, 'json_data': {'input': [[18902, 79483, 25, 3280, 2786, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 19813, 311, 330, 17217, 2786, 1, 439, 264, 8331, 28987, 13254, 11, 19392, 430, 3738, 3115, 315, 279, 1060, 1253, 7692, 2204, 6020, 3135, 13, 1115, 7434, 374, 3062, 369, 8830, 279, 18912, 315, 13254, 25492, 2949, 279, 2626, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:53 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b37250>, 'json_data': {'input': [[18902, 79483, 25, 1666, 315, 6790, 220, 2148, 11, 220, 2366, 18, 11, 584, 1047, 220, 10828, 11, 17824, 8420, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 5825, 2038, 389, 279, 2860, 1396, 315, 8420, 520, 63897, 4953, 13, 439, 315, 279, 842, 315, 220, 2366, 18, 13, 1102, 10109, 988, 279, 2883, 753, 32027, 1404, 2949, 279, 27927, 2317, 315, 1202, 25605, 8824, 323, 6650, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:54 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b372e0>, 'json_data': {'input': [[18902, 79483, 25, 65184, 33025, 11, 21579, 11, 18134, 1968, 11, 323, 5761, 1968, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 4342, 369, 264, 3857, 20034, 520, 18899, 5370, 13878, 315, 2324, 11, 2737, 6677, 11, 6975, 11, 28697, 11, 323, 26206, 1555, 15592, 18052, 13, 1102, 13533, 264, 45764, 10430, 389, 1268, 63897, 4953, 13, 6787, 311, 18885, 1217, 3217, 323, 15374, 449, 872, 3956, 11, 91115, 279, 8244, 7057, 315, 15592, 596, 24629, 8522, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:55 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b37370>, 'json_data': {'input': [[18902, 79483, 25, 720, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 4384, 323, 1587, 539, 6782, 904, 2038, 311, 3493, 2317, 369, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:57 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b37400>, 'json_data': {'input': [[18902, 79483, 25, 220, 18, 13, 40374, 1220, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15785, 279, 7314, 315, 279, 330, 849, 5923, 1220, 1, 3857, 11, 902, 11383, 5764, 5217, 9904, 477, 3649, 430, 1862, 279, 6156, 2262, 315, 279, 1934, 13, 1115, 3857, 374, 16996, 369, 8405, 16195, 2038, 9959, 311, 279, 2883, 596, 68248, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:58 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b37490>, 'json_data': {'input': [[18902, 79483, 25, 1789, 3187, 11, 304, 6790, 220, 2366, 18, 11, 264, 7188, 21928, 12886, 264, 36543, 304, 40467, 11871, 348, 13, 5195, 9455, 430, 5195, 34521, 3276, 85971, 7016, 5552, 311, 5195, 7199, 596, 34631, 12659, 13, 578, 1685, 6714, 11913, 690, 8417, 51236, 304, 220, 2366, 19, 323, 279, 2134, 315, 4754, 51236, 13592, 13882, 13, 1226, 3197, 311, 14638, 13, 763, 5369, 11, 279, 549, 815, 13, 6011, 315, 12007, 11, 5370, 549, 815, 13, 5415, 11, 323, 1023, 51664, 617, 13019, 3892, 3276, 85971, 43986, 922, 5370, 13878, 315, 1057, 2626, 11, 2737, 1057, 13172, 14645, 323, 12659, 11, 279, 5784, 323, 8141, 315, 5195, 7694, 11, 323, 279, 5784, 323, 8141, 315, 279, 8682, 10565, 1887, 323, 7199, 9307, 13, 7089, 23331, 13607, 304, 279, 549, 815, 13, 323, 2212, 279, 1917, 11, 2737, 10937, 665, 10676, 388, 11, 11761, 9313, 13607, 11, 323, 828, 9313, 11527, 11, 617, 29991, 323, 1253, 3136, 311, 8815, 1057, 2626, 12659, 323, 8907, 449, 7016, 323, 14640, 13, 1226, 527, 82589, 449, 1521, 26969, 323, 29269, 39725, 477, 33352, 11429, 1405, 8475, 627, 2014, 940, 1534, 73094, 25, 1115, 3857, 5825, 264, 3230, 3187, 315, 264, 5897, 8815, 63897, 4953, 13, 17011, 11, 45293, 459, 3276, 85971, 36543, 2403, 279, 2883, 304, 6790, 220, 2366, 18, 11, 3235, 449, 14529, 39725, 505, 279, 6011, 315, 12007, 323, 1023, 15086, 13, 1102, 22020, 279, 4754, 25127, 315, 1521, 5897, 25572, 389, 279, 2883, 596, 7677, 323, 8446, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:19:59 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b37520>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 9546, 315, 279, 2007, 315, 8970, 304, 279, 2246, 13, 1102, 17482, 439, 264, 34512, 1697, 12576, 369, 13016, 311, 25539, 5370, 14491, 323, 13650, 9960, 2949, 279, 9974, 1934, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:20:00 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b375b0>, 'json_data': {'input': [[18902, 79483, 25, 7181, 220, 21, 13, 58654, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 17482, 439, 264, 3857, 4342, 369, 279, 5296, 389, 58654, 11, 19392, 430, 279, 17876, 2262, 690, 5357, 389, 279, 2883, 753, 11897, 6070, 11, 2737, 2225, 2875, 9860, 323, 1317, 9860, 30255, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:20:02 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b37640>, 'json_data': {'input': [[18902, 79483, 25, 32088, 9386, 1392, 323, 7089, 19735, 940, 56875, 343, 811, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 40019, 279, 8712, 315, 7782, 42356, 323, 76543, 30255, 11, 19392, 264, 5357, 389, 279, 2883, 596, 3938, 6020, 42356, 323, 25605, 9293, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:20:03 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b376d0>, 'json_data': {'input': [[18902, 79483, 25, 63897, 4953, 627, 2014, 940, 1534, 73094, 25, 1115, 12143, 374, 264, 4342, 19392, 430, 279, 2246, 18713, 1771, 311, 63897, 4953, 2637, 279, 2748, 2883, 315, 5195, 11, 323, 17482, 439, 459, 62469, 11381, 369, 279, 17876, 2262, 5552, 311, 279, 27767, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:20:04 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b37760>, 'json_data': {'input': [[18902, 79483, 25, 6771, 315, 36962, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 15151, 279, 7314, 315, 279, 6771, 315, 36962, 369, 279, 2246, 11, 23377, 430, 279, 2768, 14491, 690, 21782, 279, 6070, 315, 279, 4553, 2246, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
2024-12-01 00:20:05 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files/1x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j?fields=id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size&supportsAllDrives=true&alt=json
2024-12-01 00:20:05 - DEBUG - URL being requested: GET https://www.googleapis.com/drive/v3/files?q=%271x3IhULE-PWgcDoZHrZbj4tYeEXXfYQ3j%27+in+parents+and+trashed%3Dfalse&pageSize=10&supportsAllDrives=true&includeItemsFromAllDrives=true&fields=nextPageToken%2C+files%28id%2C+name%2C+mimeType%2C+parents%2C+modifiedTime%2C+thumbnailLink%2C+lastModifyingUser%2C+trashed%2C+size%29&alt=json
2024-12-01 00:20:06 - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function AsyncEmbeddings.create.<locals>.parser at 0x7f3e59b377f0>, 'json_data': {'input': [[18902, 79483, 25, 13674, 14058, 11, 902, 5764, 30466, 8066, 389, 13674, 6012, 26, 323, 198, 2014, 940, 1534, 73094, 25, 1115, 12143, 30202, 279, 13254, 8066, 505, 13674, 43749, 11, 39686, 1202, 12939, 439, 264, 12742, 13254, 2592, 2949, 5195, 596, 8244, 13172, 26031, 13, 1102, 374, 961, 315, 264, 27927, 10430, 389, 2204, 21282, 315, 5195, 596, 13172, 30466, 13]], 'model': 'text-embedding-3-small', 'encoding_format': 'base64'}}
